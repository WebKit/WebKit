---
test/annexB/language/comments/single-line-html-close-first-line-1.js:
  raw: Expected uncaught exception with name 'Test262Error' but given exception class is not defined
test/annexB/language/comments/single-line-html-close-first-line-2.js:
  raw: Expected uncaught exception with name 'Test262Error' but given exception class is not defined
test/annexB/language/comments/single-line-html-close-first-line-3.js:
  raw: Expected uncaught exception with name 'Test262Error' but given exception class is not defined
test/annexB/language/eval-code/direct/script-decl-lex-no-collision.js:
  default: "SyntaxError: Can't create duplicate variable: 'test262Fn'"
test/annexB/language/function-code/block-decl-func-skip-arguments.js:
  default: 'Test262Error: Expected SameValue(«function arguments() {}», «[object Arguments]») to be true'
test/built-ins/ArrayBuffer/options-maxbytelength-compared-before-object-creation.js:
  default: 'Test262Error: Expected a RangeError but got a Test262Error'
  strict mode: 'Test262Error: Expected a RangeError but got a Test262Error'
test/built-ins/AsyncFromSyncIteratorPrototype/next/for-await-iterator-next-rejected-promise-close.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/next/for-await-next-rejected-promise-close.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/next/iterator-result-poisoned-wrapper.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/next/next-result-poisoned-wrapper.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/next/yield-iterator-next-rejected-promise-close.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/next/yield-next-rejected-promise-close.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/iterator-result-rejected-promise-close.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-null.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError but got a Object'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError but got a Object'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-result-poisoned-wrapper.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-undefined-get-return-undefined.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Thrown value was not an object!'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Thrown value was not an object!'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-undefined-poisoned-return.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Thrown value was not an object!'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Thrown value was not an object!'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-undefined-return-not-object.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Thrown value was not an object!'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Thrown value was not an object!'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-undefined-return-object.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Thrown value was not an object!'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Thrown value was not an object!'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-undefined.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Thrown value was not an object!'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Thrown value was not an object!'
test/built-ins/Function/internals/Construct/derived-return-val-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Function/internals/Construct/derived-this-uninitialized-realm.js:
  default: 'Test262Error: Expected a ReferenceError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a ReferenceError but got a different error constructor with the same name'
test/built-ins/Function/prototype/toString/built-in-function-object.js:
  default: 'Test262Error: Conforms to NativeFunction Syntax: "function get $*() {\n    [native code]\n}" (%RegExp%.$*)'
  strict mode: 'Test262Error: Conforms to NativeFunction Syntax: "function get $*() {\n    [native code]\n}" (%RegExp%.$*)'
test/built-ins/Object/entries/order-after-define-property-with-function.js:
  default: 'Test262Error: Expected [a, name] and [name, a] to have the same contents. '
  strict mode: 'Test262Error: Expected [a, name] and [name, a] to have the same contents. '
test/built-ins/Object/keys/order-after-define-property-with-function.js:
  default: 'Test262Error: Expected [a, length] and [length, a] to have the same contents. '
  strict mode: 'Test262Error: Expected [a, length] and [length, a] to have the same contents. '
test/built-ins/Proxy/apply/arguments-realm.js:
  default: 'Test262Error: Expected SameValue(«function Array() {'
  strict mode: 'Test262Error: Expected SameValue(«function Array() {'
test/built-ins/Proxy/apply/null-handler-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/apply/trap-is-not-callable-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/arguments-realm.js:
  default: 'Test262Error: Expected SameValue(«function Array() {'
  strict mode: 'Test262Error: Expected SameValue(«function Array() {'
test/built-ins/Proxy/construct/null-handler-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-boolean-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-null-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-number-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-string-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-symbol-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-undefined-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/trap-is-not-callable-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/RegExp/prototype/Symbol.match/flags-tostring-error.js:
  default: 'Test262Error: Expected a CustomError but got a Test262Error'
  strict mode: 'Test262Error: Expected a CustomError but got a Test262Error'
test/built-ins/RegExp/prototype/Symbol.match/get-flags-err.js:
  default: 'Test262Error: Expected a CustomError but got a Test262Error'
  strict mode: 'Test262Error: Expected a CustomError but got a Test262Error'
test/built-ins/RegExp/prototype/Symbol.match/get-unicode-error.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/built-ins/RegExp/prototype/Symbol.replace/flags-tostring-error.js:
  default: 'Test262Error: Expected a CustomError but got a Test262Error'
  strict mode: 'Test262Error: Expected a CustomError but got a Test262Error'
test/built-ins/RegExp/prototype/Symbol.replace/get-flags-err.js:
  default: 'Test262Error: Expected a CustomError but got a Test262Error'
  strict mode: 'Test262Error: Expected a CustomError but got a Test262Error'
test/built-ins/RegExp/prototype/Symbol.replace/get-unicode-error.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/built-ins/RegExp/quantifier-integer-limit.js:
  default: 'SyntaxError: Invalid regular expression: number too large in {} quantifier'
  strict mode: 'SyntaxError: Invalid regular expression: number too large in {} quantifier'
test/built-ins/SharedArrayBuffer/options-maxbytelength-compared-before-object-creation.js:
  default: 'Test262Error: Expected a RangeError but got a Test262Error'
  strict mode: 'Test262Error: Expected a RangeError but got a Test262Error'
test/built-ins/Temporal/Duration/compare/argument-duration-out-of-range.js:
  default: 'Test262Error: string with days > max is out of range (first argument) Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: string with days > max is out of range (first argument) Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/compare/exhaustive.js:
  default: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/compare/instances-identical.js:
  default: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/compare/relativeto-propertybag-ambiguous-wall-clock-time.js:
  default: 'Test262Error: Expected [] and [has calendar.dateAdd, has calendar.dateFromFields, has calendar.dateUntil, has calendar.day, has calendar.dayOfWeek, has calendar.dayOfYear, has calendar.daysInMonth, has calendar.daysInWeek, has calendar.daysInYear, has calendar.fields, has calendar.id, has calendar.inLeapYear, has calendar.mergeFields, has calendar.month, has calendar.monthCode, has calendar.monthDayFromFields, has calendar.monthsInYear, has calendar.weekOfYear, has calendar.year, has calendar.yearMonthFromFields, has calendar.yearOfWeek, get calendar.dateFromFields, get calendar.fields, call calendar.fields, call calendar.dateFromFields, has timeZone.getOffsetNanosecondsFor, has timeZone.getPossibleInstantsFor, has timeZone.id, get timeZone.getOffsetNanosecondsFor, get timeZone.getPossibleInstantsFor, call timeZone.getPossibleInstantsFor, call timeZone.getOffsetNanosecondsFor, call timeZone.getOffsetNanosecondsFor, call timeZone.getPossibleInstantsFor] to have the same contents. order of operations converting property bag at skipped wall-clock time'
  strict mode: 'Test262Error: Expected [] and [has calendar.dateAdd, has calendar.dateFromFields, has calendar.dateUntil, has calendar.day, has calendar.dayOfWeek, has calendar.dayOfYear, has calendar.daysInMonth, has calendar.daysInWeek, has calendar.daysInYear, has calendar.fields, has calendar.id, has calendar.inLeapYear, has calendar.mergeFields, has calendar.month, has calendar.monthCode, has calendar.monthDayFromFields, has calendar.monthsInYear, has calendar.weekOfYear, has calendar.year, has calendar.yearMonthFromFields, has calendar.yearOfWeek, get calendar.dateFromFields, get calendar.fields, call calendar.fields, call calendar.dateFromFields, has timeZone.getOffsetNanosecondsFor, has timeZone.getPossibleInstantsFor, has timeZone.id, get timeZone.getOffsetNanosecondsFor, get timeZone.getPossibleInstantsFor, call timeZone.getPossibleInstantsFor, call timeZone.getOffsetNanosecondsFor, call timeZone.getOffsetNanosecondsFor, call timeZone.getPossibleInstantsFor] to have the same contents. order of operations converting property bag at skipped wall-clock time'
test/built-ins/Temporal/Duration/compare/relativeto-propertybag-builtin-calendar-no-array-iteration.js:
  default: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/compare/relativeto-propertybag-getpossibleinstantsfor-called-with-iso8601-calendar.js:
  default: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/compare/relativeto-propertybag-invalid-offset-string.js:
  default: 'Test262Error: "1000 is not a valid offset string Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: "1000 is not a valid offset string Expected a TypeError but got a RangeError'
test/built-ins/Temporal/Duration/compare/relativeto-propertybag-timezone-string.js:
  default: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/from/argument-duration-max.js:
  default: 'Test262Error: operation succeeds with property bag with max minutes Expected SameValue(«9007199254740994», «9007199254740992») to be true'
  strict mode: 'Test262Error: operation succeeds with property bag with max minutes Expected SameValue(«9007199254740994», «9007199254740992») to be true'
test/built-ins/Temporal/Duration/from/argument-duration-out-of-range.js:
  default: 'Test262Error: string with days > max is out of range Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: string with days > max is out of range Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/from/argument-duration-precision-exact-numerical-values.js:
  default: 'Test262Error: case where floating point inaccuracy brings total below limit, positive Expected SameValue(«PT9007199254740992.000424S», «PT9007199254740991.975424S») to be true'
  strict mode: 'Test262Error: case where floating point inaccuracy brings total below limit, positive Expected SameValue(«PT9007199254740992.000424S», «PT9007199254740991.975424S») to be true'
test/built-ins/Temporal/Duration/out-of-range.js:
  default: 'Test262Error: years > max Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: years > max Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/add/argument-duration-max.js:
  default: 'Test262Error: operation succeeds with property bag with max minutes Expected SameValue(«9007199254740994», «9007199254740992») to be true'
  strict mode: 'Test262Error: operation succeeds with property bag with max minutes Expected SameValue(«9007199254740994», «9007199254740992») to be true'
test/built-ins/Temporal/Duration/prototype/add/argument-duration-out-of-range.js:
  default: 'Test262Error: string with days > max is out of range Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: string with days > max is out of range Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/add/argument-duration-precision-exact-numerical-values.js:
  default: 'Test262Error: case where floating point inaccuracy brings total below limit, positive: ℝ(𝔽(x)) operation after balancing brings total over limit Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: case where floating point inaccuracy brings total below limit, positive: ℝ(𝔽(x)) operation after balancing brings total over limit Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/add/differencezoneddatetime-inconsistent-custom-calendar.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, tz)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, tz)')"
test/built-ins/Temporal/Duration/prototype/add/intermediate-instant-too-large-with-zoneddatetime.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
test/built-ins/Temporal/Duration/prototype/add/precision-exact-mathematical-values.js:
  default: 'Test262Error: duration1.add(duration2): nanoseconds result Expected SameValue(«24», «0») to be true'
  strict mode: 'Test262Error: duration1.add(duration2): nanoseconds result Expected SameValue(«24», «0») to be true'
test/built-ins/Temporal/Duration/prototype/add/precision-no-floating-point-loss.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
test/built-ins/Temporal/Duration/prototype/add/relativeto-propertybag-ambiguous-wall-clock-time.js:
  default: 'RangeError: Cannot add a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot add a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/add/relativeto-propertybag-builtin-calendar-no-array-iteration.js:
  default: 'RangeError: Cannot add a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot add a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/add/relativeto-propertybag-calendar-string.js:
  default: 'RangeError: Cannot add a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot add a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/add/relativeto-propertybag-getpossibleinstantsfor-called-with-iso8601-calendar.js:
  default: 'RangeError: Cannot add a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot add a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/add/relativeto-propertybag-invalid-offset-string.js:
  default: 'Test262Error: "0 is not a valid offset string Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: "0 is not a valid offset string Expected a TypeError but got a RangeError'
test/built-ins/Temporal/Duration/prototype/add/result-out-of-range-1.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
test/built-ins/Temporal/Duration/prototype/add/result-out-of-range-2.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/round/constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError but got a Error'
  strict mode: 'Test262Error: Expected a RangeError but got a Error'
test/built-ins/Temporal/Duration/prototype/round/date-and-time-durations-opposite-signs.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", calendar)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", calendar)')"
test/built-ins/Temporal/Duration/prototype/round/dst-rounding-result.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
test/built-ins/Temporal/Duration/prototype/round/duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError but got a Error'
  strict mode: 'Test262Error: Expected a RangeError but got a Error'
test/built-ins/Temporal/Duration/prototype/round/largestunit-correct-rebalancing.js:
  default: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
  strict mode: "ReferenceError: Can't find variable: unit"
test/built-ins/Temporal/Duration/prototype/round/normalized-time-duration-to-days-loop-arbitrarily.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
test/built-ins/Temporal/Duration/prototype/round/out-of-range-when-adjusting-rounded-days.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
test/built-ins/Temporal/Duration/prototype/round/out-of-range-when-converting-from-normalized-duration.js:
  default: 'Test262Error: nanoseconds component after balancing as a float64-representable integer is out of range Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: nanoseconds component after balancing as a float64-representable integer is out of range Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/round/precision-exact-in-balance-time-duration.js:
  default: 'Test262Error: BalanceTimeDuration should implement floating-point calculation correctly for largestUnit milliseconds: microseconds result: Expected SameValue(«472», «0») to be true'
  strict mode: 'Test262Error: BalanceTimeDuration should implement floating-point calculation correctly for largestUnit milliseconds: microseconds result: Expected SameValue(«472», «0») to be true'
test/built-ins/Temporal/Duration/prototype/round/precision-exact-in-round-duration.js:
  default: 'Test262Error: hours result: Expected SameValue(«100000», «100001») to be true'
  strict mode: 'Test262Error: hours result: Expected SameValue(«100000», «100001») to be true'
test/built-ins/Temporal/Duration/prototype/round/proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError but got a Error'
  strict mode: 'Test262Error: Expected a RangeError but got a Error'
test/built-ins/Temporal/Duration/prototype/round/relativeto-propertybag-ambiguous-wall-clock-time.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/relativeto-propertybag-builtin-calendar-no-array-iteration.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/relativeto-propertybag-calendar-string.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/relativeto-propertybag-getpossibleinstantsfor-called-with-iso8601-calendar.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/relativeto-propertybag-out-of-range-backward-offset-shift.js:
  default: 'Test262Error: RangeError should be thrown Expected a RangeError but got a Error'
  strict mode: 'Test262Error: RangeError should be thrown Expected a RangeError but got a Error'
test/built-ins/Temporal/Duration/prototype/round/relativeto-propertybag-out-of-range-forward-offset-shift.js:
  default: 'Test262Error: RangeError should be thrown Expected a RangeError but got a Error'
  strict mode: 'Test262Error: RangeError should be thrown Expected a RangeError but got a Error'
test/built-ins/Temporal/Duration/prototype/round/relativeto-zoneddatetime-normalized-time-duration-to-days-range-errors.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
test/built-ins/Temporal/Duration/prototype/round/result-out-of-range.js:
  default: 'Test262Error: result is out of range Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: result is out of range Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/round/round-cross-unit-boundary.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/rounding-is-noop.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone, calendar)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone, calendar)')"
test/built-ins/Temporal/Duration/prototype/round/zero-day-length.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, tz, \"iso8601\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, tz, \"iso8601\")')"
test/built-ins/Temporal/Duration/prototype/round/zero-year-month-week-length.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", cal)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", cal)')"
test/built-ins/Temporal/Duration/prototype/subtract/argument-duration-max.js:
  default: 'Test262Error: operation succeeds with property bag with max minutes Expected SameValue(«-9007199254740994», «-9007199254740992») to be true'
  strict mode: 'Test262Error: operation succeeds with property bag with max minutes Expected SameValue(«-9007199254740994», «-9007199254740992») to be true'
test/built-ins/Temporal/Duration/prototype/subtract/argument-duration-out-of-range.js:
  default: 'Test262Error: string with days > max is out of range Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: string with days > max is out of range Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/subtract/argument-duration-precision-exact-numerical-values.js:
  default: 'Test262Error: case where floating point inaccuracy brings total below limit, positive: ℝ(𝔽(x)) operation after balancing brings total over limit Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: case where floating point inaccuracy brings total below limit, positive: ℝ(𝔽(x)) operation after balancing brings total over limit Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/subtract/differencezoneddatetime-inconsistent-custom-calendar.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, tz)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, tz)')"
test/built-ins/Temporal/Duration/prototype/subtract/intermediate-instant-too-large-with-zoneddatetime.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
test/built-ins/Temporal/Duration/prototype/subtract/precision-exact-mathematical-values.js:
  default: 'Test262Error: duration1.subtract(duration2): nanoseconds result Expected SameValue(«24», «0») to be true'
  strict mode: 'Test262Error: duration1.subtract(duration2): nanoseconds result Expected SameValue(«24», «0») to be true'
test/built-ins/Temporal/Duration/prototype/subtract/precision-no-floating-point-loss.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
test/built-ins/Temporal/Duration/prototype/subtract/relativeto-propertybag-ambiguous-wall-clock-time.js:
  default: 'RangeError: Cannot subtract a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot subtract a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/subtract/relativeto-propertybag-builtin-calendar-no-array-iteration.js:
  default: 'RangeError: Cannot subtract a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot subtract a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/subtract/relativeto-propertybag-calendar-string.js:
  default: 'RangeError: Cannot subtract a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot subtract a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/subtract/relativeto-propertybag-getpossibleinstantsfor-called-with-iso8601-calendar.js:
  default: 'RangeError: Cannot subtract a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot subtract a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/subtract/relativeto-propertybag-invalid-offset-string.js:
  default: 'Test262Error: "0 is not a valid offset string Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: "0 is not a valid offset string Expected a TypeError but got a RangeError'
test/built-ins/Temporal/Duration/prototype/subtract/result-out-of-range-1.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
test/built-ins/Temporal/Duration/prototype/subtract/result-out-of-range-2.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/toString/max-value.js:
  default: 'Test262Error: values do not lose precision intermediately Expected SameValue(«PT9007199254740.992S», «PT9007199254740.993S») to be true'
  strict mode: 'Test262Error: values do not lose precision intermediately Expected SameValue(«PT9007199254740.992S», «PT9007199254740.993S») to be true'
test/built-ins/Temporal/Duration/prototype/toString/order-of-operations.js:
  default: 'Test262Error: Expected [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and [get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and [get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
test/built-ins/Temporal/Duration/prototype/toString/round-cross-unit-boundary.js:
  default: 'Test262Error: 1:59:60 balances to 2 hours Expected SameValue(«PT1H59M60S», «PT2H0S») to be true'
  strict mode: 'Test262Error: 1:59:60 balances to 2 hours Expected SameValue(«PT1H59M60S», «PT2H0S») to be true'
test/built-ins/Temporal/Duration/prototype/toString/throws-when-rounded-duration-is-invalid.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/total/balance-subseconds.js:
  default: 'Test262Error: Expected SameValue(«2.9989989990000003», «2.998998999») to be true'
  strict mode: 'Test262Error: Expected SameValue(«2.9989989990000003», «2.998998999») to be true'
test/built-ins/Temporal/Duration/prototype/total/dst-rounding-result.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
test/built-ins/Temporal/Duration/prototype/total/normalized-time-duration-to-days-loop-arbitrarily.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
test/built-ins/Temporal/Duration/prototype/total/precision-exact-mathematical-values-1.js:
  default: 'Test262Error: return value of total() Expected SameValue(«4000», «4000.0000000000005») to be true'
  strict mode: 'Test262Error: return value of total() Expected SameValue(«4000», «4000.0000000000005») to be true'
test/built-ins/Temporal/Duration/prototype/total/precision-exact-mathematical-values-2.js:
  default: 'Test262Error: Expected SameValue(«4001», «4000.9999999999995») to be true'
  strict mode: 'Test262Error: Expected SameValue(«4001», «4000.9999999999995») to be true'
test/built-ins/Temporal/Duration/prototype/total/precision-exact-mathematical-values-3.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(-86400_0000_0000_000_000_000n, tz, cal)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(-86400_0000_0000_000_000_000n, tz, cal)')"
test/built-ins/Temporal/Duration/prototype/total/precision-exact-mathematical-values-4.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(-86400_0000_0000_000_000_000n, createTimeZone(), createCalendar())')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(-86400_0000_0000_000_000_000n, createTimeZone(), createCalendar())')"
test/built-ins/Temporal/Duration/prototype/total/precision-exact-mathematical-values-5.js:
  default: 'Test262Error: BalanceTimeDuration should implement floating-point calculation correctly for largestUnit nanoseconds Expected SameValue(«8.69228866946552e+24», «8.692288669465521e+24») to be true'
  strict mode: 'Test262Error: BalanceTimeDuration should implement floating-point calculation correctly for largestUnit nanoseconds Expected SameValue(«8.69228866946552e+24», «8.692288669465521e+24») to be true'
test/built-ins/Temporal/Duration/prototype/total/precision-exact-mathematical-values-6.js:
  default: 'Test262Error: hours=816, nanoseconds=2049187497660 Expected SameValue(«816.5692187493501», «816.56921874935») to be true'
  strict mode: 'Test262Error: hours=816, nanoseconds=2049187497660 Expected SameValue(«816.5692187493501», «816.56921874935») to be true'
test/built-ins/Temporal/Duration/prototype/total/precision-exact-mathematical-values-7.js:
  default: 'Test262Error: seconds=0, milliseconds=950 Expected SameValue(«0.9500000000000001», «0.95») to be true'
  strict mode: 'Test262Error: seconds=0, milliseconds=950 Expected SameValue(«0.9500000000000001», «0.95») to be true'
test/built-ins/Temporal/Duration/prototype/total/relativeto-propertybag-ambiguous-wall-clock-time.js:
  default: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/total/relativeto-propertybag-builtin-calendar-no-array-iteration.js:
  default: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/total/relativeto-propertybag-calendar-string.js:
  default: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/total/relativeto-propertybag-getpossibleinstantsfor-called-with-iso8601-calendar.js:
  default: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/total/relativeto-propertybag-invalid-offset-string.js:
  default: 'Test262Error: "0 is not a valid offset string Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: "0 is not a valid offset string Expected a TypeError but got a RangeError'
test/built-ins/Temporal/Duration/prototype/total/relativeto-zoneddatetime-normalized-time-duration-to-days-range-errors.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
test/built-ins/Temporal/Duration/prototype/total/zero-day-length.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, tz, \"iso8601\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, tz, \"iso8601\")')"
test/built-ins/Temporal/Duration/prototype/total/zero-year-month-week-length.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", cal)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", cal)')"
test/built-ins/Temporal/Instant/compare/argument-string-date-with-utc-offset.js:
  default: "RangeError: '1970-01-01T00Z[!UTC]' is not a valid Temporal.Instant string"
  strict mode: "RangeError: '1970-01-01T00Z[!UTC]' is not a valid Temporal.Instant string"
test/built-ins/Temporal/Instant/from/argument-string-date-with-utc-offset.js:
  default: "RangeError: '1970-01-01T00Z[!UTC]' is not a valid Temporal.Instant string"
  strict mode: "RangeError: '1970-01-01T00Z[!UTC]' is not a valid Temporal.Instant string"
test/built-ins/Temporal/Instant/from/instant-string-sub-minute-offset.js:
  default: 'Test262Error: ISO strings cannot have sub-minute offsets in time zone annotations: 2021-08-19T17:30-07:00:01[-07:00:01] Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: ISO strings cannot have sub-minute offsets in time zone annotations: 2021-08-19T17:30-07:00:01[-07:00:01] Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Instant/prototype/epochMicroseconds/basic.js:
  default: 'Test262Error: epochMicroseconds pre epoch Expected SameValue(«-217175010876543», «-217175010876544») to be true'
  strict mode: 'Test262Error: epochMicroseconds pre epoch Expected SameValue(«-217175010876543», «-217175010876544») to be true'
test/built-ins/Temporal/Instant/prototype/epochMilliseconds/basic.js:
  default: 'Test262Error: epochMilliseconds pre epoch Expected SameValue(«-217175010876», «-217175010877») to be true'
  strict mode: 'Test262Error: epochMilliseconds pre epoch Expected SameValue(«-217175010876», «-217175010877») to be true'
test/built-ins/Temporal/Instant/prototype/epochSeconds/basic.js:
  default: 'Test262Error: epochSeconds pre epoch Expected SameValue(«-217175010», «-217175011») to be true'
  strict mode: 'Test262Error: epochSeconds pre epoch Expected SameValue(«-217175010», «-217175011») to be true'
test/built-ins/Temporal/Instant/prototype/equals/argument-string-date-with-utc-offset.js:
  default: "RangeError: '1970-01-01T00Z[!UTC]' is not a valid Temporal.Instant string"
  strict mode: "RangeError: '1970-01-01T00Z[!UTC]' is not a valid Temporal.Instant string"
test/built-ins/Temporal/Instant/prototype/equals/instant-string-sub-minute-offset.js:
  default: 'Test262Error: ISO strings cannot have sub-minute offsets in time zone annotations: 2021-08-19T17:30-07:00:01[-07:00:01] Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: ISO strings cannot have sub-minute offsets in time zone annotations: 2021-08-19T17:30-07:00:01[-07:00:01] Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Instant/prototype/since/argument-string-date-with-utc-offset.js:
  default: "RangeError: '1970-01-01T00Z[!UTC]' is not a valid Temporal.Instant string"
  strict mode: "RangeError: '1970-01-01T00Z[!UTC]' is not a valid Temporal.Instant string"
test/built-ins/Temporal/Instant/prototype/since/instant-string-sub-minute-offset.js:
  default: 'Test262Error: ISO strings cannot have sub-minute offsets in time zone annotations: 2021-08-19T17:30-07:00:01[-07:00:01] Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: ISO strings cannot have sub-minute offsets in time zone annotations: 2021-08-19T17:30-07:00:01[-07:00:01] Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Instant/prototype/since/largestunit.js:
  default: 'Test262Error: does not include higher units than necessary (largest unit unspecified): nanoseconds result Expected SameValue(«40», «101») to be true'
  strict mode: 'Test262Error: does not include higher units than necessary (largest unit unspecified): nanoseconds result Expected SameValue(«40», «101») to be true'
test/built-ins/Temporal/Instant/prototype/since/order-of-operations.js:
  default: 'Test262Error: Expected [get other.toString, call other.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and [get other.toString, call other.toString, ownKeys options, getOwnPropertyDescriptor options.roundingIncrement, get options.roundingIncrement, getOwnPropertyDescriptor options.roundingMode, get options.roundingMode, getOwnPropertyDescriptor options.largestUnit, get options.largestUnit, getOwnPropertyDescriptor options.smallestUnit, get options.smallestUnit, getOwnPropertyDescriptor options.additional, get options.additional, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get other.toString, call other.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and [get other.toString, call other.toString, ownKeys options, getOwnPropertyDescriptor options.roundingIncrement, get options.roundingIncrement, getOwnPropertyDescriptor options.roundingMode, get options.roundingMode, getOwnPropertyDescriptor options.largestUnit, get options.largestUnit, getOwnPropertyDescriptor options.smallestUnit, get options.smallestUnit, getOwnPropertyDescriptor options.additional, get options.additional, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
test/built-ins/Temporal/Instant/prototype/since/round-cross-unit-boundary.js:
  default: 'Test262Error: -1:59 balances to -2 hours: hours result: Expected SameValue(«-1», «-2») to be true'
  strict mode: 'Test262Error: -1:59 balances to -2 hours: hours result: Expected SameValue(«-1», «-2») to be true'
test/built-ins/Temporal/Instant/prototype/since/roundingmode-ceil.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = ceil, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = ceil, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/since/roundingmode-expand.js:
  default: 'Test262Error: rounds to hours (rounding mode = expand, negative case): hours result: Expected SameValue(«-376435», «-376436») to be true'
  strict mode: 'Test262Error: rounds to hours (rounding mode = expand, negative case): hours result: Expected SameValue(«-376435», «-376436») to be true'
test/built-ins/Temporal/Instant/prototype/since/roundingmode-floor.js:
  default: 'Test262Error: rounds to milliseconds (rounding mode = floor, negative case): nanoseconds result Expected SameValue(«-936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (rounding mode = floor, negative case): nanoseconds result Expected SameValue(«-936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/since/roundingmode-halfCeil.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = halfCeil, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = halfCeil, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/since/roundingmode-halfEven.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = halfEven, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = halfEven, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/since/roundingmode-halfExpand.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = halfExpand, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = halfExpand, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/since/roundingmode-halfFloor.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = halfFloor, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = halfFloor, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/since/roundingmode-halfTrunc.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = halfTrunc, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = halfTrunc, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/since/roundingmode-trunc.js:
  default: 'Test262Error: rounds to hours (rounding mode = trunc, negative case): hours result: Expected SameValue(«-376436», «-376435») to be true'
  strict mode: 'Test262Error: rounds to hours (rounding mode = trunc, negative case): hours result: Expected SameValue(«-376436», «-376435») to be true'
test/built-ins/Temporal/Instant/prototype/toString/order-of-operations.js:
  default: 'Error: FIXME: Temporal.Instant.toString({timeZone}) not implemented yet'
  strict mode: 'Error: FIXME: Temporal.Instant.toString({timeZone}) not implemented yet'
test/built-ins/Temporal/Instant/prototype/toString/timezone-wrong-type.js:
  default: 'Test262Error: null does not convert to a valid ISO string Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: null does not convert to a valid ISO string Expected a TypeError but got a RangeError'
test/built-ins/Temporal/Instant/prototype/until/argument-string-date-with-utc-offset.js:
  default: "RangeError: '1970-01-01T00Z[!UTC]' is not a valid Temporal.Instant string"
  strict mode: "RangeError: '1970-01-01T00Z[!UTC]' is not a valid Temporal.Instant string"
test/built-ins/Temporal/Instant/prototype/until/instant-string-sub-minute-offset.js:
  default: 'Test262Error: ISO strings cannot have sub-minute offsets in time zone annotations: 2021-08-19T17:30-07:00:01[-07:00:01] Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: ISO strings cannot have sub-minute offsets in time zone annotations: 2021-08-19T17:30-07:00:01[-07:00:01] Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Instant/prototype/until/order-of-operations.js:
  default: 'Test262Error: Expected [get other.toString, call other.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and [get other.toString, call other.toString, ownKeys options, getOwnPropertyDescriptor options.roundingIncrement, get options.roundingIncrement, getOwnPropertyDescriptor options.roundingMode, get options.roundingMode, getOwnPropertyDescriptor options.largestUnit, get options.largestUnit, getOwnPropertyDescriptor options.smallestUnit, get options.smallestUnit, getOwnPropertyDescriptor options.additional, get options.additional, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get other.toString, call other.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and [get other.toString, call other.toString, ownKeys options, getOwnPropertyDescriptor options.roundingIncrement, get options.roundingIncrement, getOwnPropertyDescriptor options.roundingMode, get options.roundingMode, getOwnPropertyDescriptor options.largestUnit, get options.largestUnit, getOwnPropertyDescriptor options.smallestUnit, get options.smallestUnit, getOwnPropertyDescriptor options.additional, get options.additional, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
test/built-ins/Temporal/Instant/prototype/until/roundingmode-ceil.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = ceil, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = ceil, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/until/roundingmode-expand.js:
  default: 'Test262Error: rounds to hours (rounding mode = expand, negative case): hours result: Expected SameValue(«-376435», «-376436») to be true'
  strict mode: 'Test262Error: rounds to hours (rounding mode = expand, negative case): hours result: Expected SameValue(«-376435», «-376436») to be true'
test/built-ins/Temporal/Instant/prototype/until/roundingmode-floor.js:
  default: 'Test262Error: rounds to milliseconds (rounding mode = floor, negative case): nanoseconds result Expected SameValue(«-936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (rounding mode = floor, negative case): nanoseconds result Expected SameValue(«-936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/until/roundingmode-halfCeil.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = halfCeil, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = halfCeil, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/until/roundingmode-halfEven.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = halfEven, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = halfEven, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/until/roundingmode-halfExpand.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = halfExpand, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = halfExpand, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/until/roundingmode-halfFloor.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = halfFloor, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = halfFloor, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/until/roundingmode-halfTrunc.js:
  default: 'Test262Error: rounds to milliseconds (roundingMode = halfTrunc, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
  strict mode: 'Test262Error: rounds to milliseconds (roundingMode = halfTrunc, positive case): nanoseconds result Expected SameValue(«936», «0») to be true'
test/built-ins/Temporal/Instant/prototype/until/roundingmode-trunc.js:
  default: 'Test262Error: rounds to hours (rounding mode = trunc, negative case): hours result: Expected SameValue(«-376436», «-376435») to be true'
  strict mode: 'Test262Error: rounds to hours (rounding mode = trunc, negative case): hours result: Expected SameValue(«-376436», «-376435») to be true'
test/built-ins/Temporal/PlainDate/calendar-case-insensitive.js:
  default: 'Test262Error: Calendar is case-insensitive Expected SameValue(«undefined», «iso8601») to be true'
  strict mode: 'Test262Error: Calendar is case-insensitive Expected SameValue(«undefined», «iso8601») to be true'
test/built-ins/Temporal/PlainDate/calendar-string.js:
  default: 'Test262Error: Calendar created from string "iso8601" Expected SameValue(«iso8601», «iso8601») to be true'
  strict mode: 'Test262Error: Calendar created from string "iso8601" Expected SameValue(«iso8601», «iso8601») to be true'
test/built-ins/Temporal/PlainDate/calendar-undefined.js:
  default: 'Test262Error: calendar slot should store string Expected SameValue(«iso8601», «iso8601») to be true'
  strict mode: 'Test262Error: calendar slot should store string Expected SameValue(«iso8601», «iso8601») to be true'
test/built-ins/Temporal/PlainDate/compare/argument-constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/compare/argument-duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/compare/argument-propertybag-calendar-case-insensitive.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/compare/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/compare/argument-proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/compare/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid date string'
  strict mode: 'RangeError: invalid date string'
test/built-ins/Temporal/PlainDate/from/argument-constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/from/argument-duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/from/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/from/argument-propertybag-calendar-string.js:
  default: 'Test262Error: calendar slot stores a string Expected SameValue(«iso8601», «iso8601») to be true'
  strict mode: 'Test262Error: calendar slot stores a string Expected SameValue(«iso8601», «iso8601») to be true'
test/built-ins/Temporal/PlainDate/from/argument-proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/from/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid date string'
  strict mode: 'RangeError: invalid date string'
test/built-ins/Temporal/PlainDate/from/observable-get-overflow-argument-primitive.js:
  default: 'Test262Error: Expected [get options.overflow, get options.overflow.toString, call options.overflow.toString] and [ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. Successful call'
  strict mode: 'Test262Error: Expected [get options.overflow, get options.overflow.toString, call options.overflow.toString] and [ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. Successful call'
test/built-ins/Temporal/PlainDate/from/observable-get-overflow-argument-string-invalid.js:
  default: 'Test262Error: Expected [get options.overflow, get options.overflow.toString, call options.overflow.toString] and [ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow] to have the same contents. '
  strict mode: 'Test262Error: Expected [get options.overflow, get options.overflow.toString, call options.overflow.toString] and [ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow] to have the same contents. '
test/built-ins/Temporal/PlainDate/from/order-of-operations.js:
  default: 'RangeError: unimplemented: from non-ISO8601 calendar'
  strict mode: 'RangeError: unimplemented: from non-ISO8601 calendar'
test/built-ins/Temporal/PlainDate/prototype/add/argument-duration-max.js:
  default: 'RangeError: date time is out of range of ECMAScript representation'
  strict mode: 'RangeError: date time is out of range of ECMAScript representation'
test/built-ins/Temporal/PlainDate/prototype/add/order-of-operations.js:
  default: 'Test262Error: Expected [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get this.calendar.dateAdd, call this.calendar.dateAdd, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get this.calendar.dateAdd, call this.calendar.dateAdd, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. order of operations'
test/built-ins/Temporal/PlainDate/prototype/calendarId/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDate.prototype, \"calendarId\").get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDate.prototype, \"calendarId\").get')"
test/built-ins/Temporal/PlainDate/prototype/calendarId/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
test/built-ins/Temporal/PlainDate/prototype/day/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/dayOfWeek/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/dayOfYear/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/daysInMonth/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/daysInWeek/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/daysInYear/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/equals/argument-constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/equals/argument-duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/equals/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/prototype/equals/argument-proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/equals/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid date string'
  strict mode: 'RangeError: invalid date string'
test/built-ins/Temporal/PlainDate/prototype/getCalendar/branding.js:
  default: 'Test262Error: Expected SameValue(«undefined», «function») to be true'
  strict mode: 'Test262Error: Expected SameValue(«undefined», «function») to be true'
test/built-ins/Temporal/PlainDate/prototype/getCalendar/builtin.js:
  default: 'Test262Error: Built-in objects must be extensible. Expected SameValue(«false», «true») to be true'
  strict mode: 'Test262Error: Built-in objects must be extensible. Expected SameValue(«false», «true») to be true'
test/built-ins/Temporal/PlainDate/prototype/getCalendar/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/built-ins/Temporal/PlainDate/prototype/getCalendar/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/built-ins/Temporal/PlainDate/prototype/getCalendar/not-a-constructor.js:
  default: 'Test262Error: isConstructor invoked with a non-function value'
  strict mode: 'Test262Error: isConstructor invoked with a non-function value'
test/built-ins/Temporal/PlainDate/prototype/getCalendar/prop-desc.js:
  default: 'Test262Error: `typeof PlainDate.prototype.getCalendar` is `function` Expected SameValue(«undefined», «function») to be true'
  strict mode: 'Test262Error: `typeof PlainDate.prototype.getCalendar` is `function` Expected SameValue(«undefined», «function») to be true'
test/built-ins/Temporal/PlainDate/prototype/getISOFields/field-names.js:
  default: 'Test262Error: calendar result Expected SameValue(«iso8601», «iso8601») to be true'
  strict mode: 'Test262Error: calendar result Expected SameValue(«iso8601», «iso8601») to be true'
test/built-ins/Temporal/PlainDate/prototype/inLeapYear/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/month/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/monthCode/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/monthsInYear/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/since/argument-constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/since/argument-duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/since/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/prototype/since/argument-proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/since/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid date string'
  strict mode: 'RangeError: invalid date string'
test/built-ins/Temporal/PlainDate/prototype/since/round-cross-unit-boundary.js:
  default: 'RangeError: unimplemented: depends on Duration relativeTo'
  strict mode: 'RangeError: unimplemented: depends on Duration relativeTo'
test/built-ins/Temporal/PlainDate/prototype/since/wrapping-at-end-of-month.js:
  default: 'Test262Error: Jan 29th to Feb 28th is 30 days, not one month: months result: Expected SameValue(«-1», «0») to be true'
  strict mode: 'Test262Error: Jan 29th to Feb 28th is 30 days, not one month: months result: Expected SameValue(«-1», «0») to be true'
test/built-ins/Temporal/PlainDate/prototype/subtract/argument-duration-max.js:
  default: 'RangeError: date time is out of range of ECMAScript representation'
  strict mode: 'RangeError: date time is out of range of ECMAScript representation'
test/built-ins/Temporal/PlainDate/prototype/subtract/order-of-operations.js:
  default: 'Test262Error: Expected [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get this.calendar.dateAdd, call this.calendar.dateAdd, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get this.calendar.dateAdd, call this.calendar.dateAdd, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. order of operations'
test/built-ins/Temporal/PlainDate/prototype/toPlainDateTime/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid time string'
  strict mode: 'RangeError: invalid time string'
test/built-ins/Temporal/PlainDate/prototype/toString/order-of-operations.js:
  default: 'Test262Error: Expected [] and [get options.calendarName, get options.calendarName.toString, call options.calendarName.toString, get this.calendar.id] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [] and [get options.calendarName, get options.calendarName.toString, call options.calendarName.toString, get this.calendar.id] to have the same contents. order of operations'
test/built-ins/Temporal/PlainDate/prototype/until/argument-constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/until/argument-duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/until/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/prototype/until/argument-proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/until/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid date string'
  strict mode: 'RangeError: invalid date string'
test/built-ins/Temporal/PlainDate/prototype/until/round-cross-unit-boundary.js:
  default: 'RangeError: unimplemented: depends on Duration relativeTo'
  strict mode: 'RangeError: unimplemented: depends on Duration relativeTo'
test/built-ins/Temporal/PlainDate/prototype/until/wrapping-at-end-of-month.js:
  default: 'Test262Error: Jan 29th to Feb 28th is 30 days, not one month: months result: Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: Jan 29th to Feb 28th is 30 days, not one month: months result: Expected SameValue(«1», «0») to be true'
test/built-ins/Temporal/PlainDate/prototype/weekOfYear/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/weekOfYear/custom-calendar-weekofyear.js:
  default: 'Test262Error: Expected SameValue(«1», «undefined») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «undefined») to be true'
test/built-ins/Temporal/PlainDate/prototype/with/constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/with/duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/with/order-of-operations.js:
  default: 'Test262Error: Expected [get fields.calendar, get fields.timeZone, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.calendar, get fields.timeZone, ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow, getOwnPropertyDescriptor options.extra, get options.extra, get this.calendar.dateFromFields, get this.calendar.fields, get this.calendar.mergeFields, call this.calendar.fields, get this.calendar.day, call this.calendar.day, get this.calendar.month, call this.calendar.month, get this.calendar.monthCode, call this.calendar.monthCode, get this.calendar.year, call this.calendar.year, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf, call this.calendar.mergeFields, call this.calendar.dateFromFields, get options.overflow.toString, call options.overflow.toString] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get fields.calendar, get fields.timeZone, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.calendar, get fields.timeZone, ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow, getOwnPropertyDescriptor options.extra, get options.extra, get this.calendar.dateFromFields, get this.calendar.fields, get this.calendar.mergeFields, call this.calendar.fields, get this.calendar.day, call this.calendar.day, get this.calendar.month, call this.calendar.month, get this.calendar.monthCode, call this.calendar.monthCode, get this.calendar.year, call this.calendar.year, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf, call this.calendar.mergeFields, call this.calendar.dateFromFields, get options.overflow.toString, call options.overflow.toString] to have the same contents. order of operations'
test/built-ins/Temporal/PlainDate/prototype/with/proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/prototype/year/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/yearOfWeek/basic.js:
  default: 'Test262Error: 1975-12-29 should be in yearOfWeek 1976 Expected SameValue(«undefined», «1976») to be true'
  strict mode: 'Test262Error: 1975-12-29 should be in yearOfWeek 1976 Expected SameValue(«undefined», «1976») to be true'
test/built-ins/Temporal/PlainDate/prototype/yearOfWeek/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDate.prototype, \"yearOfWeek\").get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDate.prototype, \"yearOfWeek\").get')"
test/built-ins/Temporal/PlainDate/prototype/yearOfWeek/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDate/prototype/yearOfWeek/custom.js:
  default: 'Test262Error: result Expected SameValue(«undefined», «7») to be true'
  strict mode: 'Test262Error: result Expected SameValue(«undefined», «7») to be true'
test/built-ins/Temporal/PlainDate/prototype/yearOfWeek/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
test/built-ins/Temporal/PlainDate/prototype/yearOfWeek/validate-calendar-value.js:
  default: 'Test262Error: number Infinity not converted to integer Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: number Infinity not converted to integer Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/calendar-case-insensitive.js:
  default: 'Test262Error: Calendar is case-insensitive Expected SameValue(«undefined», «iso8601») to be true'
  strict mode: 'Test262Error: Calendar is case-insensitive Expected SameValue(«undefined», «iso8601») to be true'
test/built-ins/Temporal/PlainDateTime/calendar-string.js:
  default: 'Test262Error: Calendar created from string "iso8601" Expected SameValue(«iso8601», «iso8601») to be true'
  strict mode: 'Test262Error: Calendar created from string "iso8601" Expected SameValue(«iso8601», «iso8601») to be true'
test/built-ins/Temporal/PlainDateTime/calendar-undefined.js:
  default: 'Test262Error: Expected SameValue(«undefined», «iso8601») to be true'
  strict mode: 'Test262Error: Expected SameValue(«undefined», «iso8601») to be true'
test/built-ins/Temporal/PlainDateTime/compare/argument-propertybag-calendar-case-insensitive.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDateTime/compare/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDateTime/compare/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid date string'
  strict mode: 'RangeError: invalid date string'
test/built-ins/Temporal/PlainDateTime/compare/constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/compare/duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/compare/proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/from/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDateTime/from/argument-propertybag-calendar-string.js:
  default: 'Test262Error: calendar slot stores a string Expected SameValue(«iso8601», «iso8601») to be true'
  strict mode: 'Test262Error: calendar slot stores a string Expected SameValue(«iso8601», «iso8601») to be true'
test/built-ins/Temporal/PlainDateTime/from/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid date string'
  strict mode: 'RangeError: invalid date string'
test/built-ins/Temporal/PlainDateTime/from/constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/from/duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/from/observable-get-overflow-argument-primitive.js:
  default: 'Test262Error: Expected [get options.overflow, get options.overflow.toString, call options.overflow.toString] and [ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. Successful call'
  strict mode: 'Test262Error: Expected [get options.overflow, get options.overflow.toString, call options.overflow.toString] and [ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. Successful call'
test/built-ins/Temporal/PlainDateTime/from/observable-get-overflow-argument-string-invalid.js:
  default: 'Test262Error: Expected [get options.overflow, get options.overflow.toString, call options.overflow.toString] and [ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow] to have the same contents. '
  strict mode: 'Test262Error: Expected [get options.overflow, get options.overflow.toString, call options.overflow.toString] and [ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow] to have the same contents. '
test/built-ins/Temporal/PlainDateTime/from/order-of-operations.js:
  default: 'RangeError: unimplemented: from non-ISO8601 calendar'
  strict mode: 'RangeError: unimplemented: from non-ISO8601 calendar'
test/built-ins/Temporal/PlainDateTime/from/proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/prototype/add/order-of-operations.js:
  default: 'Test262Error: Expected [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get this.calendar.dateAdd, call this.calendar.dateAdd, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get this.calendar.dateAdd, call this.calendar.dateAdd, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. order of operations'
test/built-ins/Temporal/PlainDateTime/prototype/calendarId/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDateTime.prototype, \"calendarId\").get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDateTime.prototype, \"calendarId\").get')"
test/built-ins/Temporal/PlainDateTime/prototype/calendarId/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
test/built-ins/Temporal/PlainDateTime/prototype/day/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/dayOfWeek/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/dayOfYear/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/daysInMonth/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/daysInWeek/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/daysInYear/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/equals/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDateTime/prototype/equals/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid date string'
  strict mode: 'RangeError: invalid date string'
test/built-ins/Temporal/PlainDateTime/prototype/equals/constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/prototype/equals/duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/prototype/equals/proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/prototype/getCalendar/branding.js:
  default: 'Test262Error: Expected SameValue(«undefined», «function») to be true'
  strict mode: 'Test262Error: Expected SameValue(«undefined», «function») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/getCalendar/builtin.js:
  default: 'Test262Error: Built-in objects must be extensible. Expected SameValue(«false», «true») to be true'
  strict mode: 'Test262Error: Built-in objects must be extensible. Expected SameValue(«false», «true») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/getCalendar/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/built-ins/Temporal/PlainDateTime/prototype/getCalendar/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/built-ins/Temporal/PlainDateTime/prototype/getCalendar/not-a-constructor.js:
  default: 'Test262Error: isConstructor invoked with a non-function value'
  strict mode: 'Test262Error: isConstructor invoked with a non-function value'
test/built-ins/Temporal/PlainDateTime/prototype/getCalendar/prop-desc.js:
  default: 'Test262Error: `typeof PlainDateTime.prototype.getCalendar` is `function` Expected SameValue(«undefined», «function») to be true'
  strict mode: 'Test262Error: `typeof PlainDateTime.prototype.getCalendar` is `function` Expected SameValue(«undefined», «function») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/getISOFields/field-names.js:
  default: 'Test262Error: calendar result Expected SameValue(«iso8601», «iso8601») to be true'
  strict mode: 'Test262Error: calendar result Expected SameValue(«iso8601», «iso8601») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/inLeapYear/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/month/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/monthCode/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/monthsInYear/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/order-of-operations.js:
  default: 'Test262Error: Expected [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get this.calendar.dateAdd, call this.calendar.dateAdd, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.days, get fields.days.valueOf, call fields.days.valueOf, get fields.hours, get fields.hours.valueOf, call fields.hours.valueOf, get fields.microseconds, get fields.microseconds.valueOf, call fields.microseconds.valueOf, get fields.milliseconds, get fields.milliseconds.valueOf, call fields.milliseconds.valueOf, get fields.minutes, get fields.minutes.valueOf, call fields.minutes.valueOf, get fields.months, get fields.months.valueOf, call fields.months.valueOf, get fields.nanoseconds, get fields.nanoseconds.valueOf, call fields.nanoseconds.valueOf, get fields.seconds, get fields.seconds.valueOf, call fields.seconds.valueOf, get fields.weeks, get fields.weeks.valueOf, call fields.weeks.valueOf, get fields.years, get fields.years.valueOf, call fields.years.valueOf, get this.calendar.dateAdd, call this.calendar.dateAdd, get options.overflow, get options.overflow.toString, call options.overflow.toString] to have the same contents. order of operations'
test/built-ins/Temporal/PlainDateTime/prototype/toString/order-of-operations.js:
  default: 'Test262Error: Expected [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and [get options.calendarName, get options.calendarName.toString, call options.calendarName.toString, get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get this.calendar.id] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and [get options.calendarName, get options.calendarName.toString, call options.calendarName.toString, get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get this.calendar.id] to have the same contents. order of operations'
test/built-ins/Temporal/PlainDateTime/prototype/weekOfYear/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/weekOfYear/custom-calendar-weekofyear.js:
  default: 'Test262Error: Expected SameValue(«1», «undefined») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «undefined») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/with/constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/prototype/with/duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/prototype/with/order-of-operations.js:
  default: 'Test262Error: Expected [get fields.calendar, get fields.timeZone, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] and [get fields.calendar, get fields.timeZone, ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow, getOwnPropertyDescriptor options.extra, get options.extra, get this.calendar.dateFromFields, get this.calendar.fields, get this.calendar.mergeFields, call this.calendar.fields, get this.calendar.day, call this.calendar.day, get this.calendar.month, call this.calendar.month, get this.calendar.monthCode, call this.calendar.monthCode, get this.calendar.year, call this.calendar.year, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get fields.year, get fields.year.valueOf, call fields.year.valueOf, call this.calendar.mergeFields, get options.overflow.toString, call options.overflow.toString, call this.calendar.dateFromFields] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get fields.calendar, get fields.timeZone, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] and [get fields.calendar, get fields.timeZone, ownKeys options, getOwnPropertyDescriptor options.overflow, get options.overflow, getOwnPropertyDescriptor options.extra, get options.extra, get this.calendar.dateFromFields, get this.calendar.fields, get this.calendar.mergeFields, call this.calendar.fields, get this.calendar.day, call this.calendar.day, get this.calendar.month, call this.calendar.month, get this.calendar.monthCode, call this.calendar.monthCode, get this.calendar.year, call this.calendar.year, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get fields.year, get fields.year.valueOf, call fields.year.valueOf, call this.calendar.mergeFields, get options.overflow.toString, call options.overflow.toString, call this.calendar.dateFromFields] to have the same contents. order of operations'
test/built-ins/Temporal/PlainDateTime/prototype/with/proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainDate/argument-constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainDate/argument-duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainDate/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainDate/argument-proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainDate/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid date string'
  strict mode: 'RangeError: invalid date string'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainTime/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid time string'
  strict mode: 'RangeError: invalid time string'
test/built-ins/Temporal/PlainDateTime/prototype/year/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/yearOfWeek/basic.js:
  default: 'Test262Error: check yearOfWeek information Expected SameValue(«undefined», «1976») to be true'
  strict mode: 'Test262Error: check yearOfWeek information Expected SameValue(«undefined», «1976») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/yearOfWeek/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDateTime.prototype, \"yearOfWeek\").get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDateTime.prototype, \"yearOfWeek\").get')"
test/built-ins/Temporal/PlainDateTime/prototype/yearOfWeek/builtin-calendar-no-observable-calls.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Temporal/PlainDateTime/prototype/yearOfWeek/custom.js:
  default: 'Test262Error: result Expected SameValue(«undefined», «7») to be true'
  strict mode: 'Test262Error: result Expected SameValue(«undefined», «7») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/yearOfWeek/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
test/built-ins/Temporal/PlainDateTime/prototype/yearOfWeek/validate-calendar-value.js:
  default: 'Test262Error: number Infinity not converted to integer Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: number Infinity not converted to integer Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainTime/compare/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid time string'
  strict mode: 'RangeError: invalid time string'
test/built-ins/Temporal/PlainTime/from/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid time string'
  strict mode: 'RangeError: invalid time string'
test/built-ins/Temporal/PlainTime/from/order-of-operations.js:
  default: 'Test262Error: Expected [get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.calendar, get fields.calendar.toString, call fields.calendar.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] and [get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.calendar, get fields.calendar.toString, call fields.calendar.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] and [get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] to have the same contents. order of operations'
test/built-ins/Temporal/PlainTime/prototype/add/argument-duration-out-of-range.js:
  default: 'Test262Error: string with years > max is out of range Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: string with years > max is out of range Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainTime/prototype/add/precision-exact-mathematical-values-1.js:
  default: 'Test262Error: microsecond result: Expected SameValue(«992», «993») to be true'
  strict mode: 'Test262Error: microsecond result: Expected SameValue(«992», «993») to be true'
test/built-ins/Temporal/PlainTime/prototype/equals/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid time string'
  strict mode: 'RangeError: invalid time string'
test/built-ins/Temporal/PlainTime/prototype/getISOFields/field-traversal-order.js:
  default: 'Test262Error: Expected [calendar, isoHour, isoMicrosecond, isoMillisecond, isoMinute, isoNanosecond, isoSecond] and [isoHour, isoMicrosecond, isoMillisecond, isoMinute, isoNanosecond, isoSecond] to have the same contents. '
  strict mode: 'Test262Error: Expected [calendar, isoHour, isoMicrosecond, isoMillisecond, isoMinute, isoNanosecond, isoSecond] and [isoHour, isoMicrosecond, isoMillisecond, isoMinute, isoNanosecond, isoSecond] to have the same contents. '
test/built-ins/Temporal/PlainTime/prototype/since/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid time string'
  strict mode: 'RangeError: invalid time string'
test/built-ins/Temporal/PlainTime/prototype/since/order-of-operations.js:
  default: 'Test262Error: Expected [get other.calendar, get other.calendar.toString, call other.calendar.toString, get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and [get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, ownKeys options, getOwnPropertyDescriptor options.roundingIncrement, get options.roundingIncrement, getOwnPropertyDescriptor options.roundingMode, get options.roundingMode, getOwnPropertyDescriptor options.largestUnit, get options.largestUnit, getOwnPropertyDescriptor options.smallestUnit, get options.smallestUnit, getOwnPropertyDescriptor options.additional, get options.additional, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get other.calendar, get other.calendar.toString, call other.calendar.toString, get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and [get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, ownKeys options, getOwnPropertyDescriptor options.roundingIncrement, get options.roundingIncrement, getOwnPropertyDescriptor options.roundingMode, get options.roundingMode, getOwnPropertyDescriptor options.largestUnit, get options.largestUnit, getOwnPropertyDescriptor options.smallestUnit, get options.smallestUnit, getOwnPropertyDescriptor options.additional, get options.additional, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
test/built-ins/Temporal/PlainTime/prototype/subtract/argument-duration-out-of-range.js:
  default: 'Test262Error: string with years > max is out of range Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: string with years > max is out of range Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainTime/prototype/subtract/precision-exact-mathematical-values-1.js:
  default: 'Test262Error: microsecond result: Expected SameValue(«992», «993») to be true'
  strict mode: 'Test262Error: microsecond result: Expected SameValue(«992», «993») to be true'
test/built-ins/Temporal/PlainTime/prototype/toPlainDateTime/argument-constructor-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainTime/prototype/toPlainDateTime/argument-duplicate-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainTime/prototype/toPlainDateTime/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainTime/prototype/toPlainDateTime/argument-proto-in-calendar-fields.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainTime/prototype/toPlainDateTime/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid date string'
  strict mode: 'RangeError: invalid date string'
test/built-ins/Temporal/PlainTime/prototype/toString/order-of-operations.js:
  default: 'Test262Error: Expected [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and [get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and [get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
test/built-ins/Temporal/PlainTime/prototype/until/argument-string-date-with-utc-offset.js:
  default: 'RangeError: invalid time string'
  strict mode: 'RangeError: invalid time string'
test/built-ins/Temporal/PlainTime/prototype/until/order-of-operations.js:
  default: 'Test262Error: Expected [get other.calendar, get other.calendar.toString, call other.calendar.toString, get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and [get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, ownKeys options, getOwnPropertyDescriptor options.roundingIncrement, get options.roundingIncrement, getOwnPropertyDescriptor options.roundingMode, get options.roundingMode, getOwnPropertyDescriptor options.largestUnit, get options.largestUnit, getOwnPropertyDescriptor options.smallestUnit, get options.smallestUnit, getOwnPropertyDescriptor options.additional, get options.additional, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get other.calendar, get other.calendar.toString, call other.calendar.toString, get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and [get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, ownKeys options, getOwnPropertyDescriptor options.roundingIncrement, get options.roundingIncrement, getOwnPropertyDescriptor options.roundingMode, get options.roundingMode, getOwnPropertyDescriptor options.largestUnit, get options.largestUnit, getOwnPropertyDescriptor options.smallestUnit, get options.smallestUnit, getOwnPropertyDescriptor options.additional, get options.additional, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit.toString, call options.smallestUnit.toString] to have the same contents. order of operations'
test/built-ins/Temporal/PlainTime/prototype/with/order-of-operations.js:
  default: 'Test262Error: Expected [get fields.calendar, get fields.timeZone, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.calendar, get fields.timeZone, get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] to have the same contents. order of operations'
  strict mode: 'Test262Error: Expected [get fields.calendar, get fields.timeZone, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] and [get fields.calendar, get fields.timeZone, get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] to have the same contents. order of operations'
test/built-ins/Temporal/getOwnPropertyNames.js:
  default: 'Test262Error: ZonedDateTime'
  strict mode: 'Test262Error: ZonedDateTime'
test/built-ins/TypedArray/prototype/includes/index-compared-against-initial-length-out-of-bounds.js:
  default: 'Test262Error: Expected SameValue(«true», «false») to be true'
  strict mode: 'Test262Error: Expected SameValue(«true», «false») to be true'
test/built-ins/TypedArray/prototype/includes/index-compared-against-initial-length.js:
  default: 'Test262Error: Expected SameValue(«true», «false») to be true'
  strict mode: 'Test262Error: Expected SameValue(«true», «false») to be true'
test/built-ins/TypedArrayConstructors/ctors/object-arg/iterated-array-changed-by-tonumber.js:
  default: 'Test262Error: Expected SameValue(«NaN», «2») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected SameValue(«NaN», «2») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/object-arg/iterated-array-with-modified-array-iterator.js:
  default: 'Test262Error: Expected SameValue(«1», «4») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected SameValue(«1», «4») to be true (Testing with Float64Array.)'
test/harness/temporalHelpers-sample-time-zones.js:
  default: "TypeError: realTz.getOffsetNanosecondsFor is not a function. (In 'realTz.getOffsetNanosecondsFor(shiftInstant)', 'realTz.getOffsetNanosecondsFor' is undefined)"
  strict mode: "TypeError: realTz.getOffsetNanosecondsFor is not a function. (In 'realTz.getOffsetNanosecondsFor(shiftInstant)', 'realTz.getOffsetNanosecondsFor' is undefined)"
test/intl402/Collator/ignore-invalid-unicode-ext-values.js:
  default: 'Test262Error: Locale ja is affected by key co; value standard. Expected SameValue(«ja», «ja-JP») to be true'
  strict mode: 'Test262Error: Locale ja is affected by key co; value standard. Expected SameValue(«ja», «ja-JP») to be true'
test/intl402/DateTimeFormat/prototype/format/temporal-zoneddatetime-not-supported.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
test/intl402/DateTimeFormat/prototype/formatRange/temporal-zoneddatetime-not-supported.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
test/intl402/DateTimeFormat/prototype/formatRangeToParts/temporal-zoneddatetime-not-supported.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
test/intl402/DateTimeFormat/prototype/formatToParts/temporal-zoneddatetime-not-supported.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
test/intl402/DateTimeFormat/prototype/resolvedOptions/order-dayPeriod.js:
  default: 'Test262Error: "hour12" precedes "dayPeriod"'
  strict mode: 'Test262Error: "hour12" precedes "dayPeriod"'
test/intl402/DateTimeFormat/timezone-case-insensitive.js:
  default: 'Test262Error: Time zone created from string "America/Argentina/Buenos_Aires" Expected SameValue(«America/Buenos_Aires», «America/Argentina/Buenos_Aires») to be true'
  strict mode: 'Test262Error: Time zone created from string "America/Argentina/Buenos_Aires" Expected SameValue(«America/Buenos_Aires», «America/Argentina/Buenos_Aires») to be true'
test/intl402/DateTimeFormat/timezone-legacy-non-iana.js:
  default: 'Test262Error: Time zone: ACT Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Time zone: ACT Expected a RangeError to be thrown but no exception was thrown at all'
test/intl402/DateTimeFormat/timezone-not-canonicalized.js:
  default: 'Test262Error: Expected SameValue(«Asia/Calcutta», «Asia/Kolkata») to be true'
  strict mode: 'Test262Error: Expected SameValue(«Asia/Calcutta», «Asia/Kolkata») to be true'
test/intl402/DurationFormat/constructor-options-fractionalDigits-valid.js:
  default: 'Test262Error: undefined is supported by DurationFormat Expected SameValue(«0», «undefined») to be true'
  strict mode: 'Test262Error: undefined is supported by DurationFormat Expected SameValue(«0», «undefined») to be true'
test/intl402/DurationFormat/prototype/format/fractions-of-subsecond-units-en.js:
  default: 'Test262Error: DurationFormat output when nanoseconds first "numeric" unit Expected SameValue(«3 sec, 444 ms, 55 μs», «3 sec, 444 ms, & 55.006 μs») to be true'
  strict mode: 'Test262Error: DurationFormat output when nanoseconds first "numeric" unit Expected SameValue(«3 sec, 444 ms, 55 μs», «3 sec, 444 ms, & 55.006 μs») to be true'
test/intl402/DurationFormat/prototype/format/mixed-short-and-numeric.js:
  default: 'Test262Error: Expected SameValue(«5 days, 1 hr, 2:03», «5 days, 1 hr, & 2:03») to be true'
  strict mode: 'Test262Error: Expected SameValue(«5 days, 1 hr, 2:03», «5 days, 1 hr, & 2:03») to be true'
test/intl402/DurationFormat/prototype/format/negative-durationstyle-digital-en.js:
  default: 'Test262Error: DurationFormat format output using digital style option Expected SameValue(«-1 yr, -2 mths, -3 wks, -3 days, -4:-05:-06», «-1 yr, -2 mths, -3 wks, -3 days, -4:-05:-06.007008009») to be true'
  strict mode: 'Test262Error: DurationFormat format output using digital style option Expected SameValue(«-1 yr, -2 mths, -3 wks, -3 days, -4:-05:-06», «-1 yr, -2 mths, -3 wks, -3 days, -4:-05:-06.007008009») to be true'
test/intl402/DurationFormat/prototype/format/numeric-hour-with-zero-minutes-and-non-zero-seconds.js:
  default: 'Test262Error: Minutes always displayed when between displayed hours and seconds, even if minutes is 0 Expected SameValue(«1, 03», «1:00:03») to be true'
  strict mode: 'Test262Error: Minutes always displayed when between displayed hours and seconds, even if minutes is 0 Expected SameValue(«1, 03», «1:00:03») to be true'
test/intl402/DurationFormat/prototype/format/precision-exact-mathematical-values.js:
  default: 'Test262Error: Duration is {"seconds":10000000,"nanoseconds":1} Expected SameValue(«0:00:10,000,000», «0:00:10,000,000.000000001») to be true'
  strict mode: 'Test262Error: Duration is {"seconds":10000000,"nanoseconds":1} Expected SameValue(«0:00:10,000,000», «0:00:10,000,000.000000001») to be true'
test/intl402/DurationFormat/prototype/format/style-digital-en.js:
  default: 'Test262Error: Assert DurationFormat format output using digital style option Expected SameValue(«1 yr, 2 mths, 3 wks, 3 days, 4:05:06», «1 yr, 2 mths, 3 wks, 3 days, 4:05:06.007008009») to be true'
  strict mode: 'Test262Error: Assert DurationFormat format output using digital style option Expected SameValue(«1 yr, 2 mths, 3 wks, 3 days, 4:05:06», «1 yr, 2 mths, 3 wks, 3 days, 4:05:06.007008009») to be true'
test/intl402/DurationFormat/prototype/format/style-digital-fractionalDigits-undefined-en.js:
  default: 'Test262Error: format output with nanosecond digits and fractionalDigits: undefined using digital style option Expected SameValue(«1:22:33», «1:22:33.111222333») to be true'
  strict mode: 'Test262Error: format output with nanosecond digits and fractionalDigits: undefined using digital style option Expected SameValue(«1:22:33», «1:22:33.111222333») to be true'
test/intl402/DurationFormat/prototype/formatToParts/formatToParts-style-digital-en.js:
  default: 'Test262Error: Using style : digital: length Expected SameValue(«5», «7») to be true'
  strict mode: 'Test262Error: Using style : digital: length Expected SameValue(«5», «7») to be true'
test/intl402/DurationFormat/prototype/formatToParts/negative-duration-formatToParts-style-digital-en.js:
  default: 'Test262Error: Using style : digital: length Expected SameValue(«28», «30») to be true'
  strict mode: 'Test262Error: Using style : digital: length Expected SameValue(«28», «30») to be true'
test/intl402/Intl/getCanonicalLocales/non-iana-canon.js:
  default: 'Test262Error: The value of Intl.getCanonicalLocales(tag)[0] equals the value of `canonical` Expected SameValue(«en-US-u-va-posix», «posix») to be true'
  strict mode: 'Test262Error: The value of Intl.getCanonicalLocales(tag)[0] equals the value of `canonical` Expected SameValue(«en-US-u-va-posix», «posix») to be true'
test/intl402/Locale/constructor-options-firstDayOfWeek-invalid.js:
  default: 'Test262Error: new Intl.Locale("en", {firstDayOfWeek: ""}) throws RangeError Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: new Intl.Locale("en", {firstDayOfWeek: ""}) throws RangeError Expected a RangeError to be thrown but no exception was thrown at all'
test/intl402/Locale/constructor-options-firstDayOfWeek-valid.js:
  default: 'Test262Error: new Intl.Locale("en", { firstDayOfWeek: mon }).toString() returns "en-u-fw-mon" Expected SameValue(«en», «en-u-fw-mon») to be true'
  strict mode: 'Test262Error: new Intl.Locale("en", { firstDayOfWeek: mon }).toString() returns "en-u-fw-mon" Expected SameValue(«en», «en-u-fw-mon») to be true'
test/intl402/Locale/extensions-grandfathered.js:
  default: 'Test262Error: Expected SameValue(«fr-Cyrl-FR-gaulish-u-nu-latn», «fr-Cyrl-FR-u-nu-latn») to be true'
  strict mode: 'Test262Error: Expected SameValue(«fr-Cyrl-FR-gaulish-u-nu-latn», «fr-Cyrl-FR-u-nu-latn») to be true'
test/intl402/Locale/prototype/firstDayOfWeek/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Intl.Locale.prototype, \"firstDayOfWeek\").get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Intl.Locale.prototype, \"firstDayOfWeek\").get')"
test/intl402/Locale/prototype/firstDayOfWeek/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'propdesc.set')"
  strict mode: "TypeError: undefined is not an object (evaluating 'propdesc.set')"
test/intl402/Locale/prototype/firstDayOfWeek/valid-id.js:
  default: 'Test262Error: new Intl.Locale(en-u-fw-mon).firstDayOfWeek returns "1" Expected SameValue(«undefined», «1») to be true'
  strict mode: 'Test262Error: new Intl.Locale(en-u-fw-mon).firstDayOfWeek returns "1" Expected SameValue(«undefined», «1») to be true'
test/intl402/Locale/prototype/firstDayOfWeek/valid-options.js:
  default: 'Test262Error: new Intl.Locale("en", { firstDayOfWeek: mon }).firstDayOfWeek returns "1" Expected SameValue(«undefined», «1») to be true'
  strict mode: 'Test262Error: new Intl.Locale("en", { firstDayOfWeek: mon }).firstDayOfWeek returns "1" Expected SameValue(«undefined», «1») to be true'
test/intl402/Locale/prototype/getWeekInfo/firstDay-by-id.js:
  default: 'Test262Error: new Intl.Locale(en-u-fw-mon).getWeekInfo().firstDay returns "1" Expected SameValue(«7», «1») to be true'
  strict mode: 'Test262Error: new Intl.Locale(en-u-fw-mon).getWeekInfo().firstDay returns "1" Expected SameValue(«7», «1») to be true'
test/intl402/Locale/prototype/getWeekInfo/firstDay-by-option.js:
  default: 'Test262Error: new Intl.Locale("en", { firstDayOfWeek: mon }).getWeekInfo().firstDay returns "1" Expected SameValue(«7», «1») to be true'
  strict mode: 'Test262Error: new Intl.Locale("en", { firstDayOfWeek: mon }).getWeekInfo().firstDay returns "1" Expected SameValue(«7», «1») to be true'
test/intl402/Locale/prototype/minimize/removing-likely-subtags-first-adds-likely-subtags.js:
  default: 'Test262Error: "und".minimize() should be "en" Expected SameValue(«en-u-va-posix», «en») to be true'
  strict mode: 'Test262Error: "und".minimize() should be "en" Expected SameValue(«en-u-va-posix», «en») to be true'
test/intl402/NumberFormat/prototype/format/useGrouping-extended-en-IN.js:
  default: 'Test262Error: notation: "compact" Expected SameValue(«1K», «1T») to be true'
  strict mode: 'Test262Error: notation: "compact" Expected SameValue(«1K», «1T») to be true'
test/intl402/Temporal/Duration/compare/relativeto-sub-minute-offset.js:
  default: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
test/intl402/Temporal/Duration/prototype/add/relativeto-sub-minute-offset.js:
  default: 'RangeError: Cannot add a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot add a duration of years, months, or weeks without a relativeTo option'
test/intl402/Temporal/Duration/prototype/round/relativeto-sub-minute-offset.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/intl402/Temporal/Duration/prototype/subtract/relativeto-sub-minute-offset.js:
  default: 'RangeError: Cannot subtract a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot subtract a duration of years, months, or weeks without a relativeTo option'
test/intl402/Temporal/Duration/prototype/total/relativeto-sub-minute-offset.js:
  default: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-func-decl-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«param», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-func-decl-arrow-func-declare-arguments-assign.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«param», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-lex-bind-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«param», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-lex-bind-arrow-func-declare-arguments-assign.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«param», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-var-bind-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«param», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-var-bind-arrow-func-declare-arguments-assign.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«param», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-no-pre-existing-arguments-bindings-are-present-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«param», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-no-pre-existing-arguments-bindings-are-present-arrow-func-declare-arguments-assign.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«param», «undefined») to be true'
test/language/expressions/assignment/destructuring/iterator-destructuring-property-reference-target-evaluation-order.js:
  default: 'Test262Error: Expected [source, iterator, iterator-step, iterator-done, target, target-key, target-key-tostring, set] and [source, iterator, target, target-key, target-key-tostring, iterator-step, iterator-done, set] to have the same contents. '
  strict mode: 'Test262Error: Expected [source, iterator, iterator-step, iterator-done, target, target-key, target-key-tostring, set] and [source, iterator, target, target-key, target-key-tostring, iterator-step, iterator-done, set] to have the same contents. '
test/language/expressions/assignment/destructuring/keyed-destructuring-property-reference-target-evaluation-order.js:
  default: 'Test262Error: Expected [source, source-key, source-key-tostring, get, target, target-key, target-key-tostring, set] and [source, source-key, source-key-tostring, target, target-key, target-key-tostring, get, set] to have the same contents. '
  strict mode: 'Test262Error: Expected [source, source-key, source-key-tostring, get, target, target-key, target-key-tostring, set] and [source, source-key, source-key-tostring, target, target-key, target-key-tostring, get, set] to have the same contents. '
test/language/expressions/assignment/destructuring/obj-prop-__proto__dup.js:
  default: 'SyntaxError: Attempted to redefine __proto__ property.'
  strict mode: 'SyntaxError: Attempted to redefine __proto__ property.'
test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close-err.js:
  default: "TypeError: undefined is not a function (near '...[ {}[ yield ] ]...')"
  strict mode: "TypeError: undefined is not a function (near '...[ {}[ yield ] ]...')"
test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/expressions/assignment/dstr/array-elem-iter-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262Error: Expected SameValue(«0», «1») to be true'
test/language/expressions/assignment/dstr/array-elem-iter-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «0») to be true'
test/language/expressions/assignment/dstr/array-elem-iter-thrw-close.js:
  default: 'Test262Error: Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «0») to be true'
test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close-err.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262Error: Expected SameValue(«0», «1») to be true'
test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «0») to be true'
test/language/expressions/assignment/dstr/array-elem-trlg-iter-list-thrw-close.js:
  default: 'Test262Error: Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «0») to be true'
test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close-err.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(«11», «1») to be true'
  strict mode: 'Test262Error: Expected SameValue(«11», «1») to be true'
test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(«11», «1») to be true'
  strict mode: 'Test262Error: Expected SameValue(«11», «1») to be true'
test/language/expressions/assignment/dstr/array-elem-trlg-iter-rest-thrw-close.js:
  default: 'Test262Error: Expected SameValue(«11», «1») to be true'
  strict mode: 'Test262Error: Expected SameValue(«11», «1») to be true'
test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close-err.js:
  default: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
  strict mode: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close-null.js:
  default: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
  strict mode: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
test/language/expressions/assignment/dstr/array-rest-iter-rtrn-close.js:
  default: 'Test262Error: '
  strict mode: 'Test262Error: '
test/language/expressions/assignment/dstr/array-rest-iter-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(«11», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«11», «0») to be true'
test/language/expressions/assignment/dstr/array-rest-iter-thrw-close.js:
  default: 'Test262Error: Expected SameValue(«11», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«11», «0») to be true'
test/language/expressions/assignment/dstr/array-rest-lref-err.js:
  default: 'Test262Error: Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «0») to be true'
test/language/expressions/assignment/fn-name-lhs-cover.js:
  default: 'Test262Error: descriptor value should be ; object value should be '
  strict mode: 'Test262Error: descriptor value should be ; object value should be '
test/language/expressions/assignmenttargettype/direct-callexpression-arguments.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/expressions/assignmenttargettype/parenthesized-callexpression-arguments.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/expressions/call/tco-non-eval-function-dynamic.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/call/tco-non-eval-function.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/call/tco-non-eval-global.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/call/tco-non-eval-with.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/expressions/class/elements/arrow-body-private-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/expressions/class/elements/nested-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/expressions/class/elements/nested-private-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/expressions/dynamic-import/for-await-resolution-and-error-agen-yield.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: f Expected SameValue(«null», «foo») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: f Expected SameValue(«null», «foo») to be true'
test/language/expressions/dynamic-import/import-assertions/2nd-param-assert-enumeration-abrupt.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected promise to be rejected, but promise was fulfilled.'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected promise to be rejected, but promise was fulfilled.'
test/language/expressions/dynamic-import/import-assertions/2nd-param-assert-enumeration-enumerable.js:
  default: 'Test262Error: Expected [] and [type] to have the same contents. '
  strict mode: 'Test262Error: Expected [] and [type] to have the same contents. '
test/language/expressions/dynamic-import/import-assertions/2nd-param-assert-non-object.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise for null was not rejected.'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise for null was not rejected.'
test/language/expressions/dynamic-import/import-assertions/2nd-param-assert-value-abrupt.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected promise to be rejected, but it was fulfilled'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected promise to be rejected, but it was fulfilled'
test/language/expressions/dynamic-import/import-assertions/2nd-param-assert-value-non-string.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise for undefined was not rejected.'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise for undefined was not rejected.'
test/language/expressions/dynamic-import/import-assertions/2nd-param-get-assert-error.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected an error, but observed no error'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected an error, but observed no error'
test/language/expressions/new/non-ctor-err-realm.js:
  default: 'Test262Error: production including Arguments Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: production including Arguments Expected a TypeError but got a different error constructor with the same name'
test/language/expressions/yield/star-iterable.js:
  default: 'Test262Error: First result `done` flag Expected SameValue(«false», «undefined») to be true'
  strict mode: 'Test262Error: First result `done` flag Expected SameValue(«false», «undefined») to be true'
test/language/expressions/yield/star-rhs-iter-nrml-res-done-no-value.js:
  default: 'Test262Error: access count (first iteration) Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: access count (first iteration) Expected SameValue(«1», «0») to be true'
test/language/expressions/yield/star-rhs-iter-rtrn-res-done-no-value.js:
  default: 'Test262Error: access count (second iteration) Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: access count (second iteration) Expected SameValue(«1», «0») to be true'
test/language/expressions/yield/star-rhs-iter-thrw-res-done-no-value.js:
  default: 'Test262Error: access count (second iteration) Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: access count (second iteration) Expected SameValue(«1», «0») to be true'
test/language/global-code/script-decl-lex-var-declared-via-eval.js:
  default: "SyntaxError: Can't create duplicate variable: 'test262Var'"
test/language/identifier-resolution/assign-to-global-undefined.js:
  strict mode: Expected uncaught exception with name 'ReferenceError' but none was thrown
test/language/import/import-assertions/json-extensibility-array.js:
  module: "SyntaxError: Unexpected identifier 'assert'. Expected a ';' following a targeted import declaration."
test/language/import/import-assertions/json-extensibility-object.js:
  module: "SyntaxError: Unexpected identifier 'assert'. Expected a ';' following a targeted import declaration."
test/language/import/import-assertions/json-idempotency.js:
  module: "SyntaxError: Unexpected identifier 'assert'. Expected a ';' following a targeted import declaration."
test/language/import/import-assertions/json-value-array.js:
  module: "SyntaxError: Unexpected identifier 'assert'. Expected a ';' following a targeted import declaration."
test/language/import/import-assertions/json-value-boolean.js:
  module: "SyntaxError: Unexpected identifier 'assert'. Expected a ';' following a targeted import declaration."
test/language/import/import-assertions/json-value-null.js:
  module: "SyntaxError: Unexpected identifier 'assert'. Expected a ';' following a targeted import declaration."
test/language/import/import-assertions/json-value-number.js:
  module: "SyntaxError: Unexpected identifier 'assert'. Expected a ';' following a targeted import declaration."
test/language/import/import-assertions/json-value-object.js:
  module: "SyntaxError: Unexpected identifier 'assert'. Expected a ';' following a targeted import declaration."
test/language/import/import-assertions/json-value-string.js:
  module: "SyntaxError: Unexpected identifier 'assert'. Expected a ';' following a targeted import declaration."
test/language/import/import-assertions/json-via-namespace.js:
  module: "SyntaxError: Unexpected identifier 'assert'. Expected a ';' following a targeted import declaration."
test/language/module-code/import-assertions/eval-gtbndng-indirect-faux-assertion.js:
  raw: "SyntaxError: Unexpected token '*'. import call expects one or two arguments."
test/language/module-code/import-assertions/import-assertion-empty.js:
  module: "SyntaxError: Unexpected identifier 'assert'. Expected a ';' following a targeted import declaration."
test/language/module-code/top-level-await/async-module-does-not-block-sibling-modules.js:
  module: 'Test262Error: Expected SameValue(«true», «false») to be true'
test/language/statements/async-generator/yield-star-promise-not-unwrapped.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: yield* should not unwrap promises from manually-implemented async iterators Expected SameValue(«unwrapped value», «[object Promise]») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: yield* should not unwrap promises from manually-implemented async iterators Expected SameValue(«unwrapped value», «[object Promise]») to be true'
test/language/statements/async-generator/yield-star-return-then-getter-ticks.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected [start, tick 1, tick 2, get then, tick 3, get return, get then] and [start, tick 1, get then, tick 2, get return, get then, tick 3] to have the same contents. Ticks for return with thenable getter'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected [start, tick 1, tick 2, get then, tick 3, get return, get then] and [start, tick 1, get then, tick 2, get return, get then, tick 3] to have the same contents. Ticks for return with thenable getter'
test/language/statements/class/definition/fn-length-static-precedence-order.js:
  default: 'Test262Error: Expected [name, prototype, method, length] and [length, name, prototype, method] to have the same contents. '
  strict mode: 'Test262Error: Expected [name, prototype, method, length] and [length, name, prototype, method] to have the same contents. '
test/language/statements/class/definition/fn-name-static-precedence-order.js:
  default: 'Test262Error: Expected [length, prototype, method, name] and [length, name, prototype, method] to have the same contents. '
  strict mode: 'Test262Error: Expected [length, prototype, method, name] and [length, name, prototype, method] to have the same contents. '
test/language/statements/class/elements/arrow-body-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/statements/class/elements/arrow-body-private-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/statements/class/elements/nested-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/statements/class/elements/nested-private-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/statements/class/elements/privatefieldset-evaluation-order-1.js:
  default: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
test/language/statements/class/subclass/default-constructor-spread-override.js:
  default: 'Test262Error: @@iterator invoked'
  strict mode: 'Test262Error: @@iterator invoked'
test/language/statements/for-await-of/head-lhs-async.js:
  default: "SyntaxError: Unexpected identifier 'of'"
  strict mode: "SyntaxError: Unexpected identifier 'of'"
test/language/statements/for-in/head-lhs-let.js:
  default: "SyntaxError: Cannot use the keyword 'in' as a lexical variable name."
test/language/statements/for-in/identifier-let-allowed-as-lefthandside-expression-not-strict.js:
  default: "SyntaxError: Cannot use the keyword 'in' as a lexical variable name."
test/language/statements/for-of/dstr/array-elem-iter-rtrn-close-err.js:
  default: "TypeError: undefined is not a function (near '...[ {}[ yield ] ]...')"
  strict mode: "TypeError: undefined is not a function (near '...[ {}[ yield ] ]...')"
test/language/statements/for-of/dstr/array-elem-iter-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr/array-elem-iter-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262Error: Expected SameValue(«0», «1») to be true'
test/language/statements/for-of/dstr/array-elem-iter-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «0») to be true'
test/language/statements/for-of/dstr/array-elem-iter-thrw-close.js:
  default: 'Test262Error: Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «0») to be true'
test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close-err.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr/array-elem-trlg-iter-list-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262Error: Expected SameValue(«0», «1») to be true'
test/language/statements/for-of/dstr/array-elem-trlg-iter-list-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «0») to be true'
test/language/statements/for-of/dstr/array-elem-trlg-iter-list-thrw-close.js:
  default: 'Test262Error: Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «0») to be true'
test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close-err.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(«11», «1») to be true'
  strict mode: 'Test262Error: Expected SameValue(«11», «1») to be true'
test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(«11», «1») to be true'
  strict mode: 'Test262Error: Expected SameValue(«11», «1») to be true'
test/language/statements/for-of/dstr/array-elem-trlg-iter-rest-thrw-close.js:
  default: 'Test262Error: Expected SameValue(«11», «1») to be true'
  strict mode: 'Test262Error: Expected SameValue(«11», «1») to be true'
test/language/statements/for-of/dstr/array-rest-iter-rtrn-close-err.js:
  default: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
  strict mode: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
test/language/statements/for-of/dstr/array-rest-iter-rtrn-close-null.js:
  default: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
  strict mode: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
test/language/statements/for-of/dstr/array-rest-iter-rtrn-close.js:
  default: 'Test262Error: '
  strict mode: 'Test262Error: '
test/language/statements/for-of/dstr/array-rest-iter-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(«11», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«11», «0») to be true'
test/language/statements/for-of/dstr/array-rest-iter-thrw-close.js:
  default: 'Test262Error: Expected SameValue(«11», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«11», «0») to be true'
test/language/statements/for-of/dstr/array-rest-lref-err.js:
  default: 'Test262Error: Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: Expected SameValue(«1», «0») to be true'
test/language/statements/for/head-lhs-let.js:
  default: "SyntaxError: Unexpected token ';'. Expected a parameter pattern or a ')' in parameter list."
