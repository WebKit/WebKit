---
test/annexB/language/comments/single-line-html-close-first-line-1.js:
  raw: Expected uncaught exception with name 'Test262Error' but given exception class is not defined
test/annexB/language/comments/single-line-html-close-first-line-2.js:
  raw: Expected uncaught exception with name 'Test262Error' but given exception class is not defined
test/annexB/language/comments/single-line-html-close-first-line-3.js:
  raw: Expected uncaught exception with name 'Test262Error' but given exception class is not defined
test/annexB/language/function-code/block-decl-func-skip-arguments.js:
  default: 'Test262Error: Expected SameValue(«"function arguments() {}"», «"[object Arguments]"») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/next/for-await-iterator-next-rejected-promise-close.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/next/for-await-next-rejected-promise-close.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/next/iterator-result-poisoned-wrapper.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/next/next-result-poisoned-wrapper.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/next/yield-iterator-next-rejected-promise-close.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/next/yield-next-rejected-promise-close.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/iterator-result-rejected-promise-close.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-null.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError to be thrown asynchronously but got a Object'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError to be thrown asynchronously but got a Object'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-result-poisoned-wrapper.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: iterator closed properly Expected SameValue(«0», «1») to be true'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-undefined-get-return-undefined.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError to be thrown asynchronously but thrown value was not an object'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError to be thrown asynchronously but thrown value was not an object'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-undefined-poisoned-return.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a CatchError to be thrown asynchronously but thrown value was not an object'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a CatchError to be thrown asynchronously but thrown value was not an object'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-undefined-return-not-object.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError to be thrown asynchronously but thrown value was not an object'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError to be thrown asynchronously but thrown value was not an object'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-undefined-return-object.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError to be thrown asynchronously but thrown value was not an object'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError to be thrown asynchronously but thrown value was not an object'
test/built-ins/AsyncFromSyncIteratorPrototype/throw/throw-undefined.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError to be thrown asynchronously but thrown value was not an object'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Promise should be rejected Expected a TypeError to be thrown asynchronously but thrown value was not an object'
test/built-ins/Date/prototype/setHours/date-value-read-before-tonumber-when-date-is-invalid.js:
  default: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
  strict mode: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
test/built-ins/Date/prototype/setMilliseconds/date-value-read-before-tonumber-when-date-is-invalid.js:
  default: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
  strict mode: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
test/built-ins/Date/prototype/setMinutes/date-value-read-before-tonumber-when-date-is-invalid.js:
  default: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
  strict mode: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
test/built-ins/Date/prototype/setSeconds/date-value-read-before-tonumber-when-date-is-invalid.js:
  default: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
  strict mode: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
test/built-ins/Date/prototype/setUTCHours/date-value-read-before-tonumber-when-date-is-invalid.js:
  default: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
  strict mode: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
test/built-ins/Date/prototype/setUTCMilliseconds/date-value-read-before-tonumber-when-date-is-invalid.js:
  default: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
  strict mode: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
test/built-ins/Date/prototype/setUTCMinutes/date-value-read-before-tonumber-when-date-is-invalid.js:
  default: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
  strict mode: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
test/built-ins/Date/prototype/setUTCSeconds/date-value-read-before-tonumber-when-date-is-invalid.js:
  default: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
  strict mode: 'Test262Error: time updated in valueOf Expected SameValue(«NaN», «0») to be true'
test/built-ins/Function/internals/Construct/derived-return-val-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Function/internals/Construct/derived-this-uninitialized-realm.js:
  default: 'Test262Error: Expected a ReferenceError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a ReferenceError but got a different error constructor with the same name'
test/built-ins/Function/prototype/toString/built-in-function-object.js:
  default: 'Test262Error: Conforms to NativeFunction Syntax: "function $*() {\n    [native code]\n}" (%RegExp%.$*)'
  strict mode: 'Test262Error: Conforms to NativeFunction Syntax: "function $*() {\n    [native code]\n}" (%RegExp%.$*)'
test/built-ins/Object/entries/order-after-define-property-with-function.js:
  default: 'Test262Error: Actual [a, name] and expected [name, a] should have the same contents. '
  strict mode: 'Test262Error: Actual [a, name] and expected [name, a] should have the same contents. '
test/built-ins/Object/keys/order-after-define-property-with-function.js:
  default: 'Test262Error: Actual [a, length] and expected [length, a] should have the same contents. '
  strict mode: 'Test262Error: Actual [a, length] and expected [length, a] should have the same contents. '
test/built-ins/Proxy/apply/arguments-realm.js:
  default: 'Test262Error: Expected SameValue(«function Array() {'
  strict mode: 'Test262Error: Expected SameValue(«function Array() {'
test/built-ins/Proxy/apply/null-handler-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/apply/trap-is-not-callable-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/arguments-realm.js:
  default: 'Test262Error: Expected SameValue(«function Array() {'
  strict mode: 'Test262Error: Expected SameValue(«function Array() {'
test/built-ins/Proxy/construct/null-handler-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-boolean-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-null-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-number-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-string-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-symbol-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/return-not-object-throws-undefined-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/Proxy/construct/trap-is-not-callable-realm.js:
  default: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: Expected a TypeError but got a different error constructor with the same name'
test/built-ins/RegExp/prototype/Symbol.match/flags-tostring-error.js:
  default: 'Test262Error: Expected a CustomError but got a Test262Error'
  strict mode: 'Test262Error: Expected a CustomError but got a Test262Error'
test/built-ins/RegExp/prototype/Symbol.match/get-flags-err.js:
  default: 'Test262Error: Expected a CustomError but got a Test262Error'
  strict mode: 'Test262Error: Expected a CustomError but got a Test262Error'
test/built-ins/RegExp/prototype/Symbol.match/get-unicode-error.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/built-ins/RegExp/prototype/Symbol.replace/flags-tostring-error.js:
  default: 'Test262Error: Expected a CustomError but got a Test262Error'
  strict mode: 'Test262Error: Expected a CustomError but got a Test262Error'
test/built-ins/RegExp/prototype/Symbol.replace/get-flags-err.js:
  default: 'Test262Error: Expected a CustomError but got a Test262Error'
  strict mode: 'Test262Error: Expected a CustomError but got a Test262Error'
test/built-ins/RegExp/prototype/Symbol.replace/get-unicode-error.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/compare/exhaustive.js:
  default: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/compare/instances-identical.js:
  default: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/compare/relativeto-propertybag-invalid-offset-string.js:
  default: 'Test262Error: "1000 is not a valid offset string Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: "1000 is not a valid offset string Expected a TypeError but got a RangeError'
test/built-ins/Temporal/Duration/compare/relativeto-propertybag-timezone-string.js:
  default: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/compare/relativeto-string-limits.js:
  default: 'Test262Error: "-271821-04-19T23:00-01:00[-01:00]" is outside the representable range for a relativeTo parameter Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: "-271821-04-19T23:00-01:00[-01:00]" is outside the representable range for a relativeTo parameter Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/round/accepts-datetime-strings-for-relative-to.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/balances-days-up-to-both-years-and-months.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/balances-down-differently-depending-on-relative-to.js:
  default: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/round/balances-up-differently-depending-on-relative-to.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/balances-up-to-next-unit-after-rounding.js:
  default: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/round/days-24-hours-relative-to-zoned-date-time.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(1_000_000_000_000_000_000n, \"+04:30\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(1_000_000_000_000_000_000n, \"+04:30\")')"
test/built-ins/Temporal/Duration/prototype/round/does-not-accept-non-string-primitives-for-relative-to.js:
  default: 'Test262Error: Expected a TypeError but got a Error'
  strict mode: 'Test262Error: Expected a TypeError but got a Error'
test/built-ins/Temporal/Duration/prototype/round/does-not-balance-up-to-weeks-if-largest-unit-is-larger-than-weeks.js:
  default: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/round/end-of-month-round-up.js:
  default: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/round/half-expand-is-default.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/largestunit-correct-rebalancing.js:
  default: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/round/largestunit-smallestunit-combinations-relativeto.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(63072000_000_000_000n /* = 1972-01-01T00Z */, \"UTC\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(63072000_000_000_000n /* = 1972-01-01T00Z */, \"UTC\")')"
test/built-ins/Temporal/Duration/prototype/round/next-day-out-of-range.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(86400_0000_0000_000_000_000n, \"UTC\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(86400_0000_0000_000_000_000n, \"UTC\")')"
test/built-ins/Temporal/Duration/prototype/round/relative-to-required-for-rounding-durations-with-calendar-units.js:
  default: 'Test262Error: Expected a RangeError but got a Error'
  strict mode: 'Test262Error: Expected a RangeError but got a Error'
test/built-ins/Temporal/Duration/prototype/round/relative-to-required-to-round-calendar-units.js:
  default: 'Test262Error: Expected a RangeError but got a Error'
  strict mode: 'Test262Error: Expected a RangeError but got a Error'
test/built-ins/Temporal/Duration/prototype/round/relativeTo-ignores-incorrect-properties.js:
  default: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/round/relativeTo-required-properties.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/round/relativeto-string-limits.js:
  default: 'Test262Error: "-271821-04-19T23:00-01:00[-01:00]" is outside the representable range for a relativeTo parameter Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: "-271821-04-19T23:00-01:00[-01:00]" is outside the representable range for a relativeTo parameter Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/round/round-and-balance-calendar-units-with-increment-disallowed.js:
  default: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/round/round-cross-unit-boundary.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/rounding-increments.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/rounding-is-noop.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\", \"iso8601\")')"
test/built-ins/Temporal/Duration/prototype/round/rounding-relative-to-date.js:
  default: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot round a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/round/singular-units.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/round/throws-on-wrong-offset-for-zoned-date-time-relative-to.js:
  default: 'Test262Error: Expected a RangeError but got a Error'
  strict mode: 'Test262Error: Expected a RangeError but got a Error'
test/built-ins/Temporal/Duration/prototype/round/valid-increments.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/built-ins/Temporal/Duration/prototype/toString/order-of-operations.js:
  default: 'Test262Error: Actual [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and expected [get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and expected [get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
test/built-ins/Temporal/Duration/prototype/toString/total-of-duration-time-units-out-of-range.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/total/incorrect-properties-ignored.js:
  default: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
test/built-ins/Temporal/Duration/prototype/total/no-dst-day-length.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(1_000_000_000_000_000_000n, \"+04:30\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(1_000_000_000_000_000_000n, \"+04:30\")')"
test/built-ins/Temporal/Duration/prototype/total/precision-exact-mathematical-values-7.js:
  default: Test262Error: milliseconds=9007199254740992, microseconds=1999 Expected SameValue(«9007199254740992», «9007199254740994») to be true
  strict mode: Test262Error: milliseconds=9007199254740992, microseconds=1999 Expected SameValue(«9007199254740992», «9007199254740994») to be true
test/built-ins/Temporal/Duration/prototype/total/relativeto-propertybag-invalid-offset-string.js:
  default: 'Test262Error: "0 is not a valid offset string Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: "0 is not a valid offset string Expected a TypeError but got a RangeError'
test/built-ins/Temporal/Duration/prototype/total/relativeto-string-limits.js:
  default: 'Test262Error: "-271821-04-19T23:00-01:00[-01:00]" is outside the representable range for a relativeTo parameter Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: "-271821-04-19T23:00-01:00[-01:00]" is outside the representable range for a relativeTo parameter Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Duration/prototype/total/total-of-each-unit-relativeto.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(63072000_000_000_000n /* = 1972-01-01T00Z */, \"UTC\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(63072000_000_000_000n /* = 1972-01-01T00Z */, \"UTC\")')"
test/built-ins/Temporal/Instant/prototype/since/order-of-operations.js:
  default: 'Test262Error: Actual [get other.toString, call other.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and expected [get other.toString, call other.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [get other.toString, call other.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and expected [get other.toString, call other.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
test/built-ins/Temporal/Instant/prototype/toString/order-of-operations.js:
  default: 'Error: FIXME: Temporal.Instant.toString({timeZone}) not implemented yet'
  strict mode: 'Error: FIXME: Temporal.Instant.toString({timeZone}) not implemented yet'
test/built-ins/Temporal/Instant/prototype/toString/timezone-string-sub-minute-offset.js:
  default: 'Test262Error: -12:12:59.9 is not a valid time zone string Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: -12:12:59.9 is not a valid time zone string Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/Instant/prototype/toString/timezone-wrong-type.js:
  default: 'Test262Error: null does not convert to a valid ISO string Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: null does not convert to a valid ISO string Expected a TypeError but got a RangeError'
test/built-ins/Temporal/Instant/prototype/until/order-of-operations.js:
  default: 'Test262Error: Actual [get other.toString, call other.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and expected [get other.toString, call other.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [get other.toString, call other.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and expected [get other.toString, call other.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
test/built-ins/Temporal/PlainDate/argument-convert.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/calendar-case-insensitive.js:
  default: 'Test262Error: Calendar is case-insensitive Expected SameValue(«undefined», «"iso8601"») to be true'
  strict mode: 'Test262Error: Calendar is case-insensitive Expected SameValue(«undefined», «"iso8601"») to be true'
test/built-ins/Temporal/PlainDate/calendar-iso-string.js:
  default: 'Test262Error: An ISO string is not a valid calendar ID for constructor parameter Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: An ISO string is not a valid calendar ID for constructor parameter Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/calendar-string.js:
  default: 'Test262Error: Calendar created from string "iso8601" Expected SameValue(«undefined», «"iso8601"») to be true'
  strict mode: 'Test262Error: Calendar created from string "iso8601" Expected SameValue(«undefined», «"iso8601"») to be true'
test/built-ins/Temporal/PlainDate/calendar-undefined.js:
  default: 'Test262Error: calendar string is iso8601 Expected SameValue(«undefined», «"iso8601"») to be true'
  strict mode: 'Test262Error: calendar string is iso8601 Expected SameValue(«undefined», «"iso8601"») to be true'
test/built-ins/Temporal/PlainDate/compare/argument-propertybag-calendar-case-insensitive.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/compare/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/from/argument-leap-second.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/argument-object-invalid.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/argument-object-valid.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/from/argument-propertybag-calendar-string.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/argument-string-date-with-utc-offset.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/argument-string-time-separators.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/argument-string.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/limits.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/monthcode-invalid.js:
  default: "Test262Error: monthCode 'M19' is not valid for ISO 8601 calendar Expected a RangeError to be thrown but no exception was thrown at all"
  strict mode: "Test262Error: monthCode 'M19' is not valid for ISO 8601 calendar Expected a RangeError to be thrown but no exception was thrown at all"
test/built-ins/Temporal/PlainDate/from/observable-get-overflow-argument-primitive.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/observable-get-overflow-argument-string-invalid.js:
  default: 'Test262Error: Actual [get options.overflow, get options.overflow.toString, call options.overflow.toString] and expected [] should have the same contents. options read after ISO string parsing'
  strict mode: 'Test262Error: Actual [get options.overflow, get options.overflow.toString, call options.overflow.toString] and expected [] should have the same contents. options read after ISO string parsing'
test/built-ins/Temporal/PlainDate/from/one-of-era-erayear-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/options-object.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/options-wrong-type.js:
  default: 'Test262Error: Invalid string processed before throwing TypeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: Invalid string processed before throwing TypeError Expected a RangeError but got a TypeError'
test/built-ins/Temporal/PlainDate/from/order-of-operations.js:
  default: 'Test262Error: Actual [get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.calendar, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf] and expected [get fields.calendar, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.calendar, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf] and expected [get fields.calendar, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] should have the same contents. order of operations'
test/built-ins/Temporal/PlainDate/from/out-of-range.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDate/from/overflow-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/overflow-wrong-type.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/subclassing-ignored.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/with-year-month-day-need-constrain.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/with-year-month-day.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/with-year-monthCode-day-need-constrain.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/from/with-year-monthCode-day.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/limits.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/add-days.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/add-months-weeks.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/add-months.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/add-weeks-days.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/add-weeks.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/add-years-months-days.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/add-years-months.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/add-years-weeks.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/add-years.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/argument-duration-max.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/argument-string-negative-fractional-units.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/argument-string.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/balance-smaller-units-basic.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/basic.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/options-object.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/overflow-constrain.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/overflow-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/overflow-wrong-type.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/add/subclassing-ignored.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/calendarId/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDate.prototype, \"calendarId\").get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDate.prototype, \"calendarId\").get')"
test/built-ins/Temporal/PlainDate/prototype/calendarId/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
test/built-ins/Temporal/PlainDate/prototype/equals/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/prototype/since/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/prototype/since/calendar-id-match.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/prototype/subtract/argument-duration-max.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/subtract/argument-string-negative-fractional-units.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/subtract/argument-string.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/subtract/balance-smaller-units-basic.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/subtract/basic.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/subtract/options-object.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/subtract/overflow-constrain.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/subtract/overflow-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/subtract/overflow-wrong-type.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/subtract/subclassing-ignored.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/toPlainDateTime/argument-string-date-with-utc-offset.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/toPlainDateTime/argument-string-time-separators.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/toPlainDateTime/argument-string-with-time-designator.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/toPlainDateTime/leap-second.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/toPlainDateTime/limits.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/toPlainDateTime/plaintime-propertybag-no-time-units.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/toPlainDateTime/time-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/toString/order-of-operations.js:
  default: 'Test262Error: Actual [] and expected [get options.calendarName, get options.calendarName.toString, call options.calendarName.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [] and expected [get options.calendarName, get options.calendarName.toString, call options.calendarName.toString] should have the same contents. order of operations'
test/built-ins/Temporal/PlainDate/prototype/until/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/prototype/until/calendar-id-match.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDate/prototype/with/basic.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/with/copy-properties-not-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/with/options-object.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/with/overflow-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/with/overflow-wrong-type.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/with/subclassing-ignored.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDate/prototype/yearOfWeek/basic.js:
  default: 'Test262Error: 1975-12-29 should be in yearOfWeek 1976 Expected SameValue(«undefined», «1976») to be true'
  strict mode: 'Test262Error: 1975-12-29 should be in yearOfWeek 1976 Expected SameValue(«undefined», «1976») to be true'
test/built-ins/Temporal/PlainDate/prototype/yearOfWeek/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDate.prototype, \"yearOfWeek\").get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDate.prototype, \"yearOfWeek\").get')"
test/built-ins/Temporal/PlainDate/prototype/yearOfWeek/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
test/built-ins/Temporal/PlainDate/subclass.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/calendar-case-insensitive.js:
  default: 'Test262Error: Calendar is case-insensitive Expected SameValue(«undefined», «"iso8601"») to be true'
  strict mode: 'Test262Error: Calendar is case-insensitive Expected SameValue(«undefined», «"iso8601"») to be true'
test/built-ins/Temporal/PlainDateTime/calendar-iso-string.js:
  default: 'Test262Error: An ISO string is not a valid calendar ID for constructor parameter Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: An ISO string is not a valid calendar ID for constructor parameter Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/calendar-string.js:
  default: 'Test262Error: Calendar created from string "iso8601" Expected SameValue(«undefined», «"iso8601"») to be true'
  strict mode: 'Test262Error: Calendar created from string "iso8601" Expected SameValue(«undefined», «"iso8601"») to be true'
test/built-ins/Temporal/PlainDateTime/calendar-undefined.js:
  default: 'Test262Error: Expected SameValue(«undefined», «"iso8601"») to be true'
  strict mode: 'Test262Error: Expected SameValue(«undefined», «"iso8601"») to be true'
test/built-ins/Temporal/PlainDateTime/compare/argument-propertybag-calendar-case-insensitive.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDateTime/compare/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDateTime/from/argument-object.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDateTime/from/argument-propertybag-calendar-string.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/argument-string-comma-decimal-separator.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/argument-string-date-with-utc-offset.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/argument-string-offset.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/argument-string-optional-data.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/argument-string-subsecond.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/argument-string-time-separators.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/argument-string-timezone.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/argument-string.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/leap-second.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/limits.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/monthcode-invalid.js:
  default: "Test262Error: monthCode 'M19' is not valid for ISO 8601 calendar Expected a RangeError to be thrown but no exception was thrown at all"
  strict mode: "Test262Error: monthCode 'M19' is not valid for ISO 8601 calendar Expected a RangeError to be thrown but no exception was thrown at all"
test/built-ins/Temporal/PlainDateTime/from/observable-get-overflow-argument-primitive.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/observable-get-overflow-argument-string-invalid.js:
  default: 'Test262Error: Actual [get options.overflow, get options.overflow.toString, call options.overflow.toString] and expected [] should have the same contents. options read after string parsing'
  strict mode: 'Test262Error: Actual [get options.overflow, get options.overflow.toString, call options.overflow.toString] and expected [] should have the same contents. options read after string parsing'
test/built-ins/Temporal/PlainDateTime/from/options-object.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/options-wrong-type.js:
  default: 'Test262Error: Invalid string processed before throwing TypeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: Invalid string processed before throwing TypeError Expected a RangeError but got a TypeError'
test/built-ins/Temporal/PlainDateTime/from/order-of-operations.js:
  default: 'Test262Error: Actual [get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.calendar, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf] and expected [get fields.calendar, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.calendar, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf] and expected [get fields.calendar, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] should have the same contents. order of operations'
test/built-ins/Temporal/PlainDateTime/from/overflow-default-constrain.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/overflow-reject.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/overflow-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/parser.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/from/subclassing-ignored.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/hour-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/microsecond-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/millisecond-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/minute-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/nanosecond-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/order-of-operations.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/ambiguous-date.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/argument-duration-max.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/argument-duration.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/argument-string-fractional-units-rounding-mode.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/argument-string-negative-fractional-units.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/argument-string.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/balance-negative-time-units.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/hour-overflow.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/negative-duration.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/options-empty.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/overflow-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/overflow-wrong-type.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/add/subclassing-ignored.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/calendarId/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDateTime.prototype, \"calendarId\").get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDateTime.prototype, \"calendarId\").get')"
test/built-ins/Temporal/PlainDateTime/prototype/calendarId/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
test/built-ins/Temporal/PlainDateTime/prototype/equals/argument-propertybag-calendar-iso-string.js:
  default: 'RangeError: invalid calendar ID'
  strict mode: 'RangeError: invalid calendar ID'
test/built-ins/Temporal/PlainDateTime/prototype/round/balance.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/rounding-direction.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingincrement-non-integer.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingincrement-one-day.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingincrement-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingincrement-wrong-type.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-basic.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-ceil.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-expand.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-floor.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-halfCeil.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-halfEven.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-halfExpand.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-halfFloor.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-halfTrunc.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-halfexpand-is-default.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-trunc.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/roundingmode-wrong-type.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/smallestunit-wrong-type.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/round/subclassing-ignored.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/ambiguous-date.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/argument-duration-max.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/argument-duration.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/argument-string-fractional-units-rounding-mode.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/argument-string-negative-fractional-units.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/argument-string.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/balance-negative-time-units.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/hour-overflow.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/negative-duration.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/options-empty.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/overflow-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/overflow-wrong-type.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/subtract/subclassing-ignored.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/toPlainDate/limits.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/toString/order-of-operations.js:
  default: 'Test262Error: Actual [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and expected [get options.calendarName, get options.calendarName.toString, call options.calendarName.toString, get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and expected [get options.calendarName, get options.calendarName.toString, call options.calendarName.toString, get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
test/built-ins/Temporal/PlainDateTime/prototype/toString/rounding-edge-of-range.js:
  default: 'Test262Error: Rounding down can go out of range Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Rounding down can go out of range Expected a RangeError to be thrown but no exception was thrown at all'
test/built-ins/Temporal/PlainDateTime/prototype/with/argument-object-insufficient-data.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/with/basic.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/with/copy-properties-not-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/with/multiple-unrecognized-properties-ignored.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/with/options-empty.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/with/order-of-operations.js:
  default: 'Test262Error: Actual [get fields.calendar, get fields.timeZone, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] and expected [get fields.calendar, get fields.timeZone, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [get fields.calendar, get fields.timeZone, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] and expected [get fields.calendar, get fields.timeZone, get fields.day, get fields.day.valueOf, call fields.day.valueOf, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.month, get fields.month.valueOf, call fields.month.valueOf, get fields.monthCode, get fields.monthCode.toString, call fields.monthCode.toString, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get fields.year, get fields.year.valueOf, call fields.year.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] should have the same contents. order of operations'
test/built-ins/Temporal/PlainDateTime/prototype/with/overflow-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/with/overflow-wrong-type.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/with/subclassing-ignored.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainTime/argument-object-insufficient-data.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainTime/argument-string-date-with-utc-offset.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainTime/argument-string-time-separators.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainTime/argument-string-with-time-designator.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainTime/argument-string-without-time-designator.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainTime/argument-time.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainTime/leap-second.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainTime/no-argument-default-to-midnight.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainTime/plaintime-propertybag-no-time-units.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/withPlainTime/subclassing-ignored.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/yearOfWeek/basic.js:
  default: 'Test262Error: check yearOfWeek information Expected SameValue(«undefined», «1976») to be true'
  strict mode: 'Test262Error: check yearOfWeek information Expected SameValue(«undefined», «1976») to be true'
test/built-ins/Temporal/PlainDateTime/prototype/yearOfWeek/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDateTime.prototype, \"yearOfWeek\").get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(Temporal.PlainDateTime.prototype, \"yearOfWeek\").get')"
test/built-ins/Temporal/PlainDateTime/prototype/yearOfWeek/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
  strict mode: "TypeError: undefined is not an object (evaluating 'descriptor.get')"
test/built-ins/Temporal/PlainDateTime/second-undefined.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainDateTime/subclass.js:
  default: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
  strict mode: 'Test262Error: calendar must be string in canonicalizeCalendarEra Expected SameValue(«"undefined"», «"string"») to be true'
test/built-ins/Temporal/PlainTime/from/observable-get-overflow-argument-string-invalid.js:
  default: 'Test262Error: Actual [get overflow, get overflow.toString, call overflow.toString] and expected [] should have the same contents. options read after ISO string parsing'
  strict mode: 'Test262Error: Actual [get overflow, get overflow.toString, call overflow.toString] and expected [] should have the same contents. options read after ISO string parsing'
test/built-ins/Temporal/PlainTime/from/options-wrong-type.js:
  default: 'Test262Error: Invalid string processed before throwing TypeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: Invalid string processed before throwing TypeError Expected a RangeError but got a TypeError'
test/built-ins/Temporal/PlainTime/from/order-of-operations.js:
  default: 'Test262Error: Actual [get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.calendar, get fields.calendar.toString, call fields.calendar.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] and expected [get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [get options.overflow, get options.overflow.toString, call options.overflow.toString, get fields.calendar, get fields.calendar.toString, call fields.calendar.toString, get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf] and expected [get fields.hour, get fields.hour.valueOf, call fields.hour.valueOf, get fields.microsecond, get fields.microsecond.valueOf, call fields.microsecond.valueOf, get fields.millisecond, get fields.millisecond.valueOf, call fields.millisecond.valueOf, get fields.minute, get fields.minute.valueOf, call fields.minute.valueOf, get fields.nanosecond, get fields.nanosecond.valueOf, call fields.nanosecond.valueOf, get fields.second, get fields.second.valueOf, call fields.second.valueOf, get options.overflow, get options.overflow.toString, call options.overflow.toString] should have the same contents. order of operations'
test/built-ins/Temporal/PlainTime/prototype/add/precision-exact-mathematical-values-1.js:
  default: 'Test262Error: microsecond result: Expected SameValue(«992», «993») to be true'
  strict mode: 'Test262Error: microsecond result: Expected SameValue(«992», «993») to be true'
test/built-ins/Temporal/PlainTime/prototype/since/order-of-operations.js:
  default: 'Test262Error: Actual [get other.calendar, get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and expected [get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [get other.calendar, get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and expected [get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
test/built-ins/Temporal/PlainTime/prototype/subtract/precision-exact-mathematical-values-1.js:
  default: 'Test262Error: microsecond result: Expected SameValue(«992», «993») to be true'
  strict mode: 'Test262Error: microsecond result: Expected SameValue(«992», «993») to be true'
test/built-ins/Temporal/PlainTime/prototype/toString/order-of-operations.js:
  default: 'Test262Error: Actual [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and expected [get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString] and expected [get options.fractionalSecondDigits, get options.fractionalSecondDigits.toString, call options.fractionalSecondDigits.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
test/built-ins/Temporal/PlainTime/prototype/until/order-of-operations.js:
  default: 'Test262Error: Actual [get other.calendar, get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and expected [get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
  strict mode: 'Test262Error: Actual [get other.calendar, get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf] and expected [get other.hour, get other.hour.valueOf, call other.hour.valueOf, get other.microsecond, get other.microsecond.valueOf, call other.microsecond.valueOf, get other.millisecond, get other.millisecond.valueOf, call other.millisecond.valueOf, get other.minute, get other.minute.valueOf, call other.minute.valueOf, get other.nanosecond, get other.nanosecond.valueOf, call other.nanosecond.valueOf, get other.second, get other.second.valueOf, call other.second.valueOf, get options.largestUnit, get options.largestUnit.toString, call options.largestUnit.toString, get options.roundingIncrement, get options.roundingIncrement.valueOf, call options.roundingIncrement.valueOf, get options.roundingMode, get options.roundingMode.toString, call options.roundingMode.toString, get options.smallestUnit, get options.smallestUnit.toString, call options.smallestUnit.toString] should have the same contents. order of operations'
test/built-ins/Temporal/getOwnPropertyNames.js:
  default: 'Test262Error: ZonedDateTime'
  strict mode: 'Test262Error: ZonedDateTime'
test/built-ins/TypedArray/prototype/includes/index-compared-against-initial-length-out-of-bounds.js:
  default: 'Test262Error: Expected SameValue(«true», «false») to be true'
  strict mode: 'Test262Error: Expected SameValue(«true», «false») to be true'
test/built-ins/TypedArray/prototype/includes/index-compared-against-initial-length.js:
  default: 'Test262Error: Expected SameValue(«true», «false») to be true'
  strict mode: 'Test262Error: Expected SameValue(«true», «false») to be true'
test/built-ins/TypedArray/prototype/set/array-arg-value-conversion-resizes-array-buffer.js:
  default: 'Test262Error: Actual [shrink, shrink, shrink] and expected [shrink, shrink, shrink, grow, grow] should have the same contents. '
  strict mode: 'Test262Error: Actual [shrink, shrink, shrink] and expected [shrink, shrink, shrink, grow, grow] should have the same contents. '
test/built-ins/TypedArrayConstructors/ctors/object-arg/iterated-array-changed-by-tonumber.js:
  default: 'Test262Error: Expected SameValue(«NaN», «2») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected SameValue(«NaN», «2») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/Set/BigInt/key-is-canonical-invalid-index-prototype-chain-set.js:
  default: 'Test262Error: 1 setter should be unreachable! (Testing with BigInt64Array.)'
  strict mode: 'Test262Error: 1 setter should be unreachable! (Testing with BigInt64Array.)'
test/built-ins/TypedArrayConstructors/internals/Set/BigInt/key-is-canonical-invalid-index-reflect-set.js:
  default: 'Test262Error: value should not be coerced Expected SameValue(«32», «0») to be true'
  strict mode: 'Test262Error: value should not be coerced Expected SameValue(«32», «0») to be true'
test/built-ins/TypedArrayConstructors/internals/Set/BigInt/key-is-valid-index-prototype-chain-set.js:
  default: 'Test262Error: 0 setter should be unreachable! (Testing with BigInt64Array.)'
  strict mode: 'Test262Error: 0 setter should be unreachable! (Testing with BigInt64Array.)'
test/built-ins/TypedArrayConstructors/internals/Set/BigInt/key-is-valid-index-reflect-set.js:
  default: 'Test262Error: target[0] should remain unchanged (receiver: empty object) Expected SameValue(«2n», «0n») to be true (Testing with BigInt64Array.)'
  strict mode: 'Test262Error: target[0] should remain unchanged (receiver: empty object) Expected SameValue(«2n», «0n») to be true (Testing with BigInt64Array.)'
test/built-ins/TypedArrayConstructors/internals/Set/key-is-canonical-invalid-index-prototype-chain-set.js:
  default: 'Test262Error: 1 setter should be unreachable! (Testing with Float64Array.)'
  strict mode: 'Test262Error: 1 setter should be unreachable! (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/Set/key-is-canonical-invalid-index-reflect-set.js:
  default: 'Test262Error: value should not be coerced Expected SameValue(«160», «0») to be true'
  strict mode: 'Test262Error: value should not be coerced Expected SameValue(«160», «0») to be true'
test/built-ins/TypedArrayConstructors/internals/Set/key-is-in-bounds-receiver-is-not-typed-array.js:
  default: 'Test262Error: valueOf is not called Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: valueOf is not called Expected SameValue(«1», «0») to be true'
test/built-ins/TypedArrayConstructors/internals/Set/key-is-out-of-bounds-receiver-is-not-object.js:
  default: 'Test262Error: valueOf is not called Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: valueOf is not called Expected SameValue(«1», «0») to be true'
test/built-ins/TypedArrayConstructors/internals/Set/key-is-out-of-bounds-receiver-is-not-typed-array.js:
  default: 'Test262Error: valueOf is not called Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: valueOf is not called Expected SameValue(«1», «0») to be true'
test/built-ins/TypedArrayConstructors/internals/Set/key-is-out-of-bounds-receiver-is-proto.js:
  default: 'Test262Error: [[Set]] succeeeds'
  strict mode: 'Test262Error: [[Set]] succeeeds'
test/built-ins/TypedArrayConstructors/internals/Set/key-is-valid-index-prototype-chain-set.js:
  default: 'Test262Error: 0 setter should be unreachable! (Testing with Float64Array.)'
  strict mode: 'Test262Error: 0 setter should be unreachable! (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/Set/key-is-valid-index-reflect-set.js:
  default: 'Test262Error: target[0] should remain unchanged (receiver: empty object) Expected SameValue(«2.3», «0») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: target[0] should remain unchanged (receiver: empty object) Expected SameValue(«2.3», «0») to be true (Testing with Float64Array.)'
test/intl402/DateTimeFormat/canonicalize-calendar.js:
  default: 'Test262Error: calendar ID is canonicalized (option) Expected SameValue(«"islamicc"», «"islamic-civil"») to be true'
  strict mode: 'Test262Error: calendar ID is canonicalized (option) Expected SameValue(«"islamicc"», «"islamic-civil"») to be true'
test/intl402/DateTimeFormat/prototype/format/temporal-objects-not-overlapping-options.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.PlainYearMonth(2024, 9)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.PlainYearMonth(2024, 9)')"
test/intl402/DateTimeFormat/prototype/format/temporal-zoneddatetime-not-supported.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
test/intl402/DateTimeFormat/prototype/formatRange/temporal-objects-not-overlapping-options.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.PlainYearMonth(2024, 9)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.PlainYearMonth(2024, 9)')"
test/intl402/DateTimeFormat/prototype/formatRange/temporal-zoneddatetime-not-supported.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
test/intl402/DateTimeFormat/prototype/formatRangeToParts/temporal-objects-not-overlapping-options.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.PlainYearMonth(2024, 9)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.PlainYearMonth(2024, 9)')"
test/intl402/DateTimeFormat/prototype/formatRangeToParts/temporal-zoneddatetime-not-supported.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
test/intl402/DateTimeFormat/prototype/formatToParts/temporal-objects-not-overlapping-options.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.PlainYearMonth(2024, 9)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.PlainYearMonth(2024, 9)')"
test/intl402/DateTimeFormat/prototype/formatToParts/temporal-zoneddatetime-not-supported.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, timeZone)')"
test/intl402/DateTimeFormat/timezone-case-insensitive.js:
  default: 'Test262Error: Time zone created from string "America/Argentina/Buenos_Aires" Expected SameValue(«"America/Buenos_Aires"», «"America/Argentina/Buenos_Aires"») to be true'
  strict mode: 'Test262Error: Time zone created from string "America/Argentina/Buenos_Aires" Expected SameValue(«"America/Buenos_Aires"», «"America/Argentina/Buenos_Aires"») to be true'
test/intl402/DateTimeFormat/timezone-legacy-non-iana.js:
  default: 'Test262Error: Time zone: ACT Expected a RangeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Time zone: ACT Expected a RangeError to be thrown but no exception was thrown at all'
test/intl402/DateTimeFormat/timezone-not-canonicalized.js:
  default: 'Test262Error: Expected SameValue(«"Asia/Calcutta"», «"Asia/Kolkata"») to be true'
  strict mode: 'Test262Error: Expected SameValue(«"Asia/Calcutta"», «"Asia/Kolkata"») to be true'
test/intl402/DurationFormat/prototype/format/precision-exact-mathematical-values.js:
  default: 'Test262Error: Duration is {"seconds":10000000,"nanoseconds":1} Expected SameValue(«"0:00:10,000,000.000000001"», «"0:00:10000000.000000001"») to be true'
  strict mode: 'Test262Error: Duration is {"seconds":10000000,"nanoseconds":1} Expected SameValue(«"0:00:10,000,000.000000001"», «"0:00:10000000.000000001"») to be true'
test/intl402/DurationFormat/prototype/format/style-digital-large-hms-values.js:
  default: 'Test262Error: failed to suppress grouping separator using digital style Expected SameValue(«"1,234:1,234,567:12,345,678"», «"1234:1234567:12345678"») to be true'
  strict mode: 'Test262Error: failed to suppress grouping separator using digital style Expected SameValue(«"1,234:1,234,567:12,345,678"», «"1234:1234567:12345678"») to be true'
test/intl402/Intl/getCanonicalLocales/unicode-ext-canonicalize-timezone.js:
  default: 'Test262Error: Expected SameValue(«"und-u-tz-utcw05"», «"und-u-tz-papty"») to be true'
  strict mode: 'Test262Error: Expected SameValue(«"und-u-tz-utcw05"», «"und-u-tz-papty"») to be true'
test/intl402/Locale/extensions-grandfathered.js:
  default: 'Test262Error: Expected SameValue(«"fr-Cyrl-FR-gaulish-u-nu-latn"», «"fr-Cyrl-FR-u-nu-latn"») to be true'
  strict mode: 'Test262Error: Expected SameValue(«"fr-Cyrl-FR-gaulish-u-nu-latn"», «"fr-Cyrl-FR-u-nu-latn"») to be true'
test/intl402/NumberFormat/currency-digits-nonstandard-notation.js:
  default: "Test262Error: Didn't get correct maximumFractionDigits for JPY in compact notation. Expected SameValue(«0», «3») to be true"
  strict mode: "Test262Error: Didn't get correct maximumFractionDigits for JPY in compact notation. Expected SameValue(«0», «3») to be true"
test/intl402/NumberFormat/prototype/format/unit-ja-JP.js:
  default: 'Test262Error: Expected SameValue(«"時速-987キロメートル"», «"時速 -987 キロメートル"») to be true'
  strict mode: 'Test262Error: Expected SameValue(«"時速-987キロメートル"», «"時速 -987 キロメートル"») to be true'
test/intl402/NumberFormat/prototype/format/unit-zh-TW.js:
  default: 'Test262Error: Expected SameValue(«"-987公里/小時"», «"-987 公里/小時"») to be true'
  strict mode: 'Test262Error: Expected SameValue(«"-987公里/小時"», «"-987 公里/小時"») to be true'
test/intl402/NumberFormat/prototype/formatToParts/unit-ja-JP.js:
  default: 'Test262Error: undefined: length Expected SameValue(«4», «6») to be true'
  strict mode: 'Test262Error: undefined: length Expected SameValue(«4», «6») to be true'
test/intl402/NumberFormat/prototype/formatToParts/unit-zh-TW.js:
  default: 'Test262Error: undefined: length Expected SameValue(«3», «4») to be true'
  strict mode: 'Test262Error: undefined: length Expected SameValue(«3», «4») to be true'
test/intl402/DateTimeFormat/prototype/format/dayPeriod-long-en.js:
  default: 'Test262Error: 00:00, long format Expected SameValue(«"in the morning"», «"at night"») to be true'
  strict mode: 'Test262Error: 00:00, long format Expected SameValue(«"in the morning"», «"at night"») to be true'
test/intl402/DateTimeFormat/prototype/format/dayPeriod-narrow-en.js:
  default: 'Test262Error: 00:00, narrow format Expected SameValue(«"in the morning"», «"at night"») to be true'
  strict mode: 'Test262Error: 00:00, narrow format Expected SameValue(«"in the morning"», «"at night"») to be true'
test/intl402/DateTimeFormat/prototype/format/dayPeriod-short-en.js:
  default: 'Test262Error: 00:00, short format Expected SameValue(«"in the morning"», «"at night"») to be true'
  strict mode: 'Test262Error: 00:00, short format Expected SameValue(«"in the morning"», «"at night"») to be true'
test/intl402/DateTimeFormat/prototype/formatToParts/dayPeriod-long-en.js:
  default: 'Test262Error: expected part value. 00:00, long format Expected SameValue(«"in the morning"», «"at night"») to be true'
  strict mode: 'Test262Error: expected part value. 00:00, long format Expected SameValue(«"in the morning"», «"at night"») to be true'
test/intl402/DateTimeFormat/prototype/formatToParts/dayPeriod-narrow-en.js:
  default: 'Test262Error: expected part value. 00:00, narrow format Expected SameValue(«"in the morning"», «"at night"») to be true'
  strict mode: 'Test262Error: expected part value. 00:00, narrow format Expected SameValue(«"in the morning"», «"at night"») to be true'
test/intl402/DateTimeFormat/prototype/formatToParts/dayPeriod-short-en.js:
  default: 'Test262Error: expected part value. 00:00, short format Expected SameValue(«"in the morning"», «"at night"») to be true'
  strict mode: 'Test262Error: expected part value. 00:00, short format Expected SameValue(«"in the morning"», «"at night"») to be true'
test/intl402/Temporal/Duration/compare/relativeto-sub-minute-offset.js:
  default: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot compare a duration of years, months, or weeks without a relativeTo option'
test/intl402/Temporal/Duration/compare/twenty-five-hour-day.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(941184000_000_000_000n, \"America/Vancouver\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(941184000_000_000_000n, \"America/Vancouver\")')"
test/intl402/Temporal/Duration/prototype/round/adjust-rounded-duration-days.js:
  default: "TypeError: undefined is not an object (evaluating 'Temporal.ZonedDateTime.from')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Temporal.ZonedDateTime.from')"
test/intl402/Temporal/Duration/prototype/round/dst-balancing-result.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
test/intl402/Temporal/Duration/prototype/round/dst-rounding-result.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
test/intl402/Temporal/Duration/prototype/round/relativeto-sub-minute-offset.js:
  default: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
  strict mode: 'Error: FIXME: years, months, or weeks rounding with relativeTo not implemented yet'
test/intl402/Temporal/Duration/prototype/round/rounding-with-largestunit.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime(0n, \"UTC\")')"
test/intl402/Temporal/Duration/prototype/total/dst-balancing-result.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
test/intl402/Temporal/Duration/prototype/total/dst-day-length.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
test/intl402/Temporal/Duration/prototype/total/dst-rounding-result.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Temporal.ZonedDateTime("
test/intl402/Temporal/Duration/prototype/total/relativeto-sub-minute-offset.js:
  default: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
  strict mode: 'RangeError: Cannot total a duration of years, months, or weeks without a relativeTo option'
test/intl402/Temporal/Instant/prototype/toLocaleString/default-includes-time-not-time-zone-name.js:
  default: 'Test262Error: Instant formatted with no options 12/26/2024 should include hour'
  strict mode: 'Test262Error: Instant formatted with no options 12/26/2024 should include hour'
test/intl402/Temporal/Instant/prototype/toLocaleString/lone-options-accepted.js:
  default: 'Test262Error: Instant.toLocaleString should format lone option {"timeZoneName":"short"} Expected SameValue(«"12/26/2024, PST"», «"12/26/2024, 3:46:40 AM PST"») to be true'
  strict mode: 'Test262Error: Instant.toLocaleString should format lone option {"timeZoneName":"short"} Expected SameValue(«"12/26/2024, PST"», «"12/26/2024, 3:46:40 AM PST"») to be true'
test/language/destructuring/binding/keyed-destructuring-property-reference-target-evaluation-order-with-bindings.js:
  default: 'Test262Error: Actual [binding::source, binding::sourceKey, sourceKey, get source, binding::defaultValue, binding::varTarget] and expected [binding::source, binding::sourceKey, sourceKey, binding::varTarget, get source, binding::defaultValue] should have the same contents. '
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-func-decl-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«"param"», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-func-decl-arrow-func-declare-arguments-assign.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«"param"», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-lex-bind-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«"param"», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-lex-bind-arrow-func-declare-arguments-assign.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«"param"», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-var-bind-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«"param"», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-body-cntns-arguments-var-bind-arrow-func-declare-arguments-assign.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«"param"», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-no-pre-existing-arguments-bindings-are-present-arrow-func-declare-arguments-assign-incl-def-param-arrow-arguments.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«"param"», «undefined») to be true'
test/language/eval-code/direct/arrow-fn-no-pre-existing-arguments-bindings-are-present-arrow-func-declare-arguments-assign.js:
  default: 'Test262Error: globalThis.arguments unchanged Expected SameValue(«"param"», «undefined») to be true'
test/language/expressions/assignment/destructuring/obj-prop-__proto__dup.js:
  default: 'SyntaxError: Attempted to redefine __proto__ property.'
  strict mode: 'SyntaxError: Attempted to redefine __proto__ property.'
test/language/expressions/assignment/fn-name-lhs-cover.js:
  default: 'Test262Error: descriptor value should be ; object value should be '
  strict mode: 'Test262Error: descriptor value should be ; object value should be '
test/language/expressions/assignmenttargettype/direct-callexpression-arguments.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/expressions/assignmenttargettype/parenthesized-callexpression-arguments.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/expressions/call/tco-non-eval-function-dynamic.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/call/tco-non-eval-function.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/call/tco-non-eval-global.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/call/tco-non-eval-with.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/class/elements/arrow-body-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/expressions/class/elements/arrow-body-private-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/expressions/class/elements/nested-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/expressions/class/elements/nested-private-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/expressions/delete/super-property-uninitialized-this.js:
  default: 'Test262Error: Expected a ReferenceError but got a Test262Error'
  strict mode: 'Test262Error: Expected a ReferenceError but got a Test262Error'
test/language/expressions/dynamic-import/for-await-resolution-and-error-agen-yield.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: f Expected SameValue(«null», «"foo"») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: f Expected SameValue(«null», «"foo"») to be true'
test/language/expressions/new/non-ctor-err-realm.js:
  default: 'Test262Error: production including Arguments Expected a TypeError but got a different error constructor with the same name'
  strict mode: 'Test262Error: production including Arguments Expected a TypeError but got a different error constructor with the same name'
test/language/expressions/object/computed-property-name-topropertykey-before-value-evaluation.js:
  default: 'Test262Error: Expected SameValue(«"bad"», «"ok"») to be true'
  strict mode: 'Test262Error: Expected SameValue(«"bad"», «"ok"») to be true'
test/language/expressions/super/prop-expr-uninitialized-this-putvalue-compound-assign.js:
  default: 'Test262Error: Expected a ReferenceError but got a Test262Error'
  strict mode: 'Test262Error: Expected a ReferenceError but got a Test262Error'
test/language/expressions/super/prop-expr-uninitialized-this-putvalue-increment.js:
  default: 'Test262Error: Expected a ReferenceError but got a Test262Error'
  strict mode: 'Test262Error: Expected a ReferenceError but got a Test262Error'
test/language/expressions/super/prop-expr-uninitialized-this-putvalue.js:
  default: 'Test262Error: Expected a ReferenceError but got a Test262Error'
  strict mode: 'Test262Error: Expected a ReferenceError but got a Test262Error'
test/language/expressions/yield/star-iterable.js:
  default: 'Test262Error: First result `done` flag Expected SameValue(«false», «undefined») to be true'
  strict mode: 'Test262Error: First result `done` flag Expected SameValue(«false», «undefined») to be true'
test/language/expressions/yield/star-rhs-iter-nrml-res-done-no-value.js:
  default: 'Test262Error: access count (first iteration) Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: access count (first iteration) Expected SameValue(«1», «0») to be true'
test/language/expressions/yield/star-rhs-iter-rtrn-res-done-no-value.js:
  default: 'Test262Error: access count (second iteration) Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: access count (second iteration) Expected SameValue(«1», «0») to be true'
test/language/expressions/yield/star-rhs-iter-thrw-res-done-no-value.js:
  default: 'Test262Error: access count (second iteration) Expected SameValue(«1», «0») to be true'
  strict mode: 'Test262Error: access count (second iteration) Expected SameValue(«1», «0») to be true'
test/language/identifier-resolution/assign-to-global-undefined.js:
  strict mode: Expected uncaught exception with name 'ReferenceError' but none was thrown
test/language/identifiers/part-unicode-16.0.0-class-escaped.js:
  default: "SyntaxError: Invalid unicode escape in identifier: '#_\\u0897'"
  strict mode: "SyntaxError: Invalid unicode escape in identifier: '#_\\u0897'"
test/language/identifiers/part-unicode-16.0.0-class.js:
  default: "SyntaxError: Invalid character '\\u0897'"
  strict mode: "SyntaxError: Invalid character '\\u0897'"
test/language/identifiers/part-unicode-16.0.0-escaped.js:
  default: "SyntaxError: Invalid unicode escape in identifier: '_\\u0897'"
  strict mode: "SyntaxError: Invalid unicode escape in identifier: '_\\u0897'"
test/language/identifiers/part-unicode-16.0.0.js:
  default: "SyntaxError: Invalid character '\\u0897'"
  strict mode: "SyntaxError: Invalid character '\\u0897'"
test/language/identifiers/start-unicode-16.0.0-class-escaped.js:
  default: "SyntaxError: Invalid unicode escape in identifier: '#\\u1C89'"
  strict mode: "SyntaxError: Invalid unicode escape in identifier: '#\\u1C89'"
test/language/identifiers/start-unicode-16.0.0-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/identifiers/start-unicode-16.0.0-escaped.js:
  default: "SyntaxError: Invalid unicode escape in identifier: '\\u1C89'"
  strict mode: "SyntaxError: Invalid unicode escape in identifier: '\\u1C89'"
test/language/identifiers/start-unicode-16.0.0.js:
  default: "SyntaxError: Invalid character '\\u1c89'"
  strict mode: "SyntaxError: Invalid character '\\u1c89'"
test/language/module-code/top-level-await/async-module-does-not-block-sibling-modules.js:
  module: 'Test262Error: Expected SameValue(«true», «false») to be true'
test/language/statements/async-generator/yield-star-promise-not-unwrapped.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: yield* should not unwrap promises from manually-implemented async iterators Expected SameValue(«"unwrapped value"», «[object Promise]») to be true'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: yield* should not unwrap promises from manually-implemented async iterators Expected SameValue(«"unwrapped value"», «[object Promise]») to be true'
test/language/statements/async-generator/yield-star-return-then-getter-ticks.js:
  default: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Actual [start, tick 1, tick 2, get then, tick 3, get return, get then] and expected [start, tick 1, get then, tick 2, get return, get then, tick 3] should have the same contents. Ticks for return with thenable getter'
  strict mode: 'Test262:AsyncTestFailure:Test262Error: Test262Error: Actual [start, tick 1, tick 2, get then, tick 3, get return, get then] and expected [start, tick 1, get then, tick 2, get return, get then, tick 3] should have the same contents. Ticks for return with thenable getter'
test/language/statements/class/definition/fn-length-static-precedence-order.js:
  default: 'Test262Error: Actual [name, prototype, method, length] and expected [length, name, prototype, method] should have the same contents. '
  strict mode: 'Test262Error: Actual [name, prototype, method, length] and expected [length, name, prototype, method] should have the same contents. '
test/language/statements/class/definition/fn-name-static-precedence-order.js:
  default: 'Test262Error: Actual [length, prototype, method, name] and expected [length, name, prototype, method] should have the same contents. '
  strict mode: 'Test262Error: Actual [length, prototype, method, name] and expected [length, name, prototype, method] should have the same contents. '
test/language/statements/class/elements/arrow-body-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/statements/class/elements/arrow-body-private-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/statements/class/elements/nested-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/statements/class/elements/nested-private-direct-eval-err-contains-arguments.js:
  default: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a SyntaxError but got a ReferenceError'
test/language/statements/class/subclass/default-constructor-spread-override.js:
  default: 'Test262Error: @@iterator invoked'
  strict mode: 'Test262Error: @@iterator invoked'
test/language/statements/for-await-of/head-lhs-async.js:
  default: "SyntaxError: Unexpected identifier 'of'"
  strict mode: "SyntaxError: Unexpected identifier 'of'"
test/language/statements/for-in/head-lhs-let.js:
  default: "SyntaxError: Cannot use the keyword 'in' as a lexical variable name."
test/language/statements/for-in/identifier-let-allowed-as-lefthandside-expression-not-strict.js:
  default: "SyntaxError: Cannot use the keyword 'in' as a lexical variable name."
test/language/statements/for/head-lhs-let.js:
  default: "SyntaxError: Unexpected token ';'. Expected a parameter pattern or a ')' in parameter list."
test/language/statements/with/get-binding-value-call-with-proxy-env.js:
  default: 'Test262Error: Actual [has:Object, get:Symbol(Symbol.unscopables), get:Object] and expected [has:Object, get:Symbol(Symbol.unscopables), has:Object, get:Object] should have the same contents. '
test/language/statements/with/get-binding-value-idref-with-proxy-env.js:
  default: 'Test262Error: Actual [has:Object, get:Symbol(Symbol.unscopables), get:Object] and expected [has:Object, get:Symbol(Symbol.unscopables), has:Object, get:Object] should have the same contents. '
test/language/statements/with/get-mutable-binding-binding-deleted-in-get-unscopables.js:
  default: "ReferenceError: Can't find variable: binding"
test/language/statements/with/set-mutable-binding-idref-compound-assign-with-proxy-env.js:
  default: 'Test262Error: Actual [has:p, get:Symbol(Symbol.unscopables), get:p, has:p, set:p, getOwnPropertyDescriptor:p, defineProperty:p] and expected [has:p, get:Symbol(Symbol.unscopables), has:p, get:p, has:p, set:p, getOwnPropertyDescriptor:p, defineProperty:p] should have the same contents. '
test/staging/built-ins/Object/preventExtensions/preventExtensions-variable-length-typed-arrays.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/staging/built-ins/Object/seal/seal-variable-length-typed-arrays.js:
  default: 'TypeError: Attempting to store non-configurable property on a typed array at index: 0'
  strict mode: 'TypeError: Attempting to store non-configurable property on a typed array at index: 0'
test/staging/built-ins/Reflect/preventExtensions/preventExtensions-variable-length-typed-arrays.js:
  default: 'Test262Error: Expected SameValue(«true», «false») to be true'
  strict mode: 'Test262Error: Expected SameValue(«true», «false») to be true'
