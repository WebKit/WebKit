// Copyright 2009 the Sputnik authors.  All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
info: Check operator x << y in distinct points
es5id: 11.7.1_A4_T1
description: ShiftExpression = -2^n, n = 0...15
---*/

//CHECK

if (-1 << 0 !== -1) { 
  throw new Test262Error('#1: -1 << 0 === -1. Actual: ' + (-1 << 0)); 
} 


if (-2 << 0 !== -2) { 
  throw new Test262Error('#2: -2 << 0 === -2. Actual: ' + (-2 << 0)); 
} 


if (-4 << 0 !== -4) { 
  throw new Test262Error('#3: -4 << 0 === -4. Actual: ' + (-4 << 0)); 
} 


if (-8 << 0 !== -8) { 
  throw new Test262Error('#4: -8 << 0 === -8. Actual: ' + (-8 << 0)); 
} 


if (-16 << 0 !== -16) { 
  throw new Test262Error('#5: -16 << 0 === -16. Actual: ' + (-16 << 0)); 
} 


if (-32 << 0 !== -32) { 
  throw new Test262Error('#6: -32 << 0 === -32. Actual: ' + (-32 << 0)); 
} 


if (-64 << 0 !== -64) { 
  throw new Test262Error('#7: -64 << 0 === -64. Actual: ' + (-64 << 0)); 
} 


if (-128 << 0 !== -128) { 
  throw new Test262Error('#8: -128 << 0 === -128. Actual: ' + (-128 << 0)); 
} 


if (-256 << 0 !== -256) { 
  throw new Test262Error('#9: -256 << 0 === -256. Actual: ' + (-256 << 0)); 
} 


if (-512 << 0 !== -512) { 
  throw new Test262Error('#10: -512 << 0 === -512. Actual: ' + (-512 << 0)); 
} 


if (-1024 << 0 !== -1024) { 
  throw new Test262Error('#11: -1024 << 0 === -1024. Actual: ' + (-1024 << 0)); 
} 


if (-2048 << 0 !== -2048) { 
  throw new Test262Error('#12: -2048 << 0 === -2048. Actual: ' + (-2048 << 0)); 
} 


if (-4096 << 0 !== -4096) { 
  throw new Test262Error('#13: -4096 << 0 === -4096. Actual: ' + (-4096 << 0)); 
} 


if (-8192 << 0 !== -8192) { 
  throw new Test262Error('#14: -8192 << 0 === -8192. Actual: ' + (-8192 << 0)); 
} 


if (-16384 << 0 !== -16384) { 
  throw new Test262Error('#15: -16384 << 0 === -16384. Actual: ' + (-16384 << 0)); 
} 


if (-32768 << 0 !== -32768) { 
  throw new Test262Error('#16: -32768 << 0 === -32768. Actual: ' + (-32768 << 0)); 
} 


if (-65536 << 0 !== -65536) { 
  throw new Test262Error('#17: -65536 << 0 === -65536. Actual: ' + (-65536 << 0)); 
} 


if (-131072 << 0 !== -131072) { 
  throw new Test262Error('#18: -131072 << 0 === -131072. Actual: ' + (-131072 << 0)); 
} 


if (-262144 << 0 !== -262144) { 
  throw new Test262Error('#19: -262144 << 0 === -262144. Actual: ' + (-262144 << 0)); 
} 


if (-524288 << 0 !== -524288) { 
  throw new Test262Error('#20: -524288 << 0 === -524288. Actual: ' + (-524288 << 0)); 
} 


if (-1048576 << 0 !== -1048576) { 
  throw new Test262Error('#21: -1048576 << 0 === -1048576. Actual: ' + (-1048576 << 0)); 
} 


if (-2097152 << 0 !== -2097152) { 
  throw new Test262Error('#22: -2097152 << 0 === -2097152. Actual: ' + (-2097152 << 0)); 
} 


if (-4194304 << 0 !== -4194304) { 
  throw new Test262Error('#23: -4194304 << 0 === -4194304. Actual: ' + (-4194304 << 0)); 
} 


if (-8388608 << 0 !== -8388608) { 
  throw new Test262Error('#24: -8388608 << 0 === -8388608. Actual: ' + (-8388608 << 0)); 
} 


if (-16777216 << 0 !== -16777216) { 
  throw new Test262Error('#25: -16777216 << 0 === -16777216. Actual: ' + (-16777216 << 0)); 
} 


if (-33554432 << 0 !== -33554432) { 
  throw new Test262Error('#26: -33554432 << 0 === -33554432. Actual: ' + (-33554432 << 0)); 
} 


if (-67108864 << 0 !== -67108864) { 
  throw new Test262Error('#27: -67108864 << 0 === -67108864. Actual: ' + (-67108864 << 0)); 
} 


if (-134217728 << 0 !== -134217728) { 
  throw new Test262Error('#28: -134217728 << 0 === -134217728. Actual: ' + (-134217728 << 0)); 
} 


if (-268435456 << 0 !== -268435456) { 
  throw new Test262Error('#29: -268435456 << 0 === -268435456. Actual: ' + (-268435456 << 0)); 
} 


if (-536870912 << 0 !== -536870912) { 
  throw new Test262Error('#30: -536870912 << 0 === -536870912. Actual: ' + (-536870912 << 0)); 
} 


if (-1073741824 << 0 !== -1073741824) { 
  throw new Test262Error('#31: -1073741824 << 0 === -1073741824. Actual: ' + (-1073741824 << 0)); 
} 


if (-2147483648 << 0 !== -2147483648) { 
  throw new Test262Error('#32: -2147483648 << 0 === -2147483648. Actual: ' + (-2147483648 << 0)); 
} 


if (-1 << 1 !== -2) { 
  throw new Test262Error('#33: -1 << 1 === -2. Actual: ' + (-1 << 1)); 
} 


if (-2 << 1 !== -4) { 
  throw new Test262Error('#34: -2 << 1 === -4. Actual: ' + (-2 << 1)); 
} 


if (-4 << 1 !== -8) { 
  throw new Test262Error('#35: -4 << 1 === -8. Actual: ' + (-4 << 1)); 
} 


if (-8 << 1 !== -16) { 
  throw new Test262Error('#36: -8 << 1 === -16. Actual: ' + (-8 << 1)); 
} 


if (-16 << 1 !== -32) { 
  throw new Test262Error('#37: -16 << 1 === -32. Actual: ' + (-16 << 1)); 
} 


if (-32 << 1 !== -64) { 
  throw new Test262Error('#38: -32 << 1 === -64. Actual: ' + (-32 << 1)); 
} 


if (-64 << 1 !== -128) { 
  throw new Test262Error('#39: -64 << 1 === -128. Actual: ' + (-64 << 1)); 
} 


if (-128 << 1 !== -256) { 
  throw new Test262Error('#40: -128 << 1 === -256. Actual: ' + (-128 << 1)); 
} 


if (-256 << 1 !== -512) { 
  throw new Test262Error('#41: -256 << 1 === -512. Actual: ' + (-256 << 1)); 
} 


if (-512 << 1 !== -1024) { 
  throw new Test262Error('#42: -512 << 1 === -1024. Actual: ' + (-512 << 1)); 
} 


if (-1024 << 1 !== -2048) { 
  throw new Test262Error('#43: -1024 << 1 === -2048. Actual: ' + (-1024 << 1)); 
} 


if (-2048 << 1 !== -4096) { 
  throw new Test262Error('#44: -2048 << 1 === -4096. Actual: ' + (-2048 << 1)); 
} 


if (-4096 << 1 !== -8192) { 
  throw new Test262Error('#45: -4096 << 1 === -8192. Actual: ' + (-4096 << 1)); 
} 


if (-8192 << 1 !== -16384) { 
  throw new Test262Error('#46: -8192 << 1 === -16384. Actual: ' + (-8192 << 1)); 
} 


if (-16384 << 1 !== -32768) { 
  throw new Test262Error('#47: -16384 << 1 === -32768. Actual: ' + (-16384 << 1)); 
} 


if (-32768 << 1 !== -65536) { 
  throw new Test262Error('#48: -32768 << 1 === -65536. Actual: ' + (-32768 << 1)); 
} 


if (-65536 << 1 !== -131072) { 
  throw new Test262Error('#49: -65536 << 1 === -131072. Actual: ' + (-65536 << 1)); 
} 


if (-131072 << 1 !== -262144) { 
  throw new Test262Error('#50: -131072 << 1 === -262144. Actual: ' + (-131072 << 1)); 
} 


if (-262144 << 1 !== -524288) { 
  throw new Test262Error('#51: -262144 << 1 === -524288. Actual: ' + (-262144 << 1)); 
} 


if (-524288 << 1 !== -1048576) { 
  throw new Test262Error('#52: -524288 << 1 === -1048576. Actual: ' + (-524288 << 1)); 
} 


if (-1048576 << 1 !== -2097152) { 
  throw new Test262Error('#53: -1048576 << 1 === -2097152. Actual: ' + (-1048576 << 1)); 
} 


if (-2097152 << 1 !== -4194304) { 
  throw new Test262Error('#54: -2097152 << 1 === -4194304. Actual: ' + (-2097152 << 1)); 
} 


if (-4194304 << 1 !== -8388608) { 
  throw new Test262Error('#55: -4194304 << 1 === -8388608. Actual: ' + (-4194304 << 1)); 
} 


if (-8388608 << 1 !== -16777216) { 
  throw new Test262Error('#56: -8388608 << 1 === -16777216. Actual: ' + (-8388608 << 1)); 
} 


if (-16777216 << 1 !== -33554432) { 
  throw new Test262Error('#57: -16777216 << 1 === -33554432. Actual: ' + (-16777216 << 1)); 
} 


if (-33554432 << 1 !== -67108864) { 
  throw new Test262Error('#58: -33554432 << 1 === -67108864. Actual: ' + (-33554432 << 1)); 
} 


if (-67108864 << 1 !== -134217728) { 
  throw new Test262Error('#59: -67108864 << 1 === -134217728. Actual: ' + (-67108864 << 1)); 
} 


if (-134217728 << 1 !== -268435456) { 
  throw new Test262Error('#60: -134217728 << 1 === -268435456. Actual: ' + (-134217728 << 1)); 
} 


if (-268435456 << 1 !== -536870912) { 
  throw new Test262Error('#61: -268435456 << 1 === -536870912. Actual: ' + (-268435456 << 1)); 
} 


if (-536870912 << 1 !== -1073741824) { 
  throw new Test262Error('#62: -536870912 << 1 === -1073741824. Actual: ' + (-536870912 << 1)); 
} 


if (-1073741824 << 1 !== -2147483648) { 
  throw new Test262Error('#63: -1073741824 << 1 === -2147483648. Actual: ' + (-1073741824 << 1)); 
} 


if (-2147483648 << 1 !== 0) { 
  throw new Test262Error('#64: -2147483648 << 1 === 0. Actual: ' + (-2147483648 << 1)); 
} 


if (-1 << 2 !== -4) { 
  throw new Test262Error('#65: -1 << 2 === -4. Actual: ' + (-1 << 2)); 
} 


if (-2 << 2 !== -8) { 
  throw new Test262Error('#66: -2 << 2 === -8. Actual: ' + (-2 << 2)); 
} 


if (-4 << 2 !== -16) { 
  throw new Test262Error('#67: -4 << 2 === -16. Actual: ' + (-4 << 2)); 
} 


if (-8 << 2 !== -32) { 
  throw new Test262Error('#68: -8 << 2 === -32. Actual: ' + (-8 << 2)); 
} 


if (-16 << 2 !== -64) { 
  throw new Test262Error('#69: -16 << 2 === -64. Actual: ' + (-16 << 2)); 
} 


if (-32 << 2 !== -128) { 
  throw new Test262Error('#70: -32 << 2 === -128. Actual: ' + (-32 << 2)); 
} 


if (-64 << 2 !== -256) { 
  throw new Test262Error('#71: -64 << 2 === -256. Actual: ' + (-64 << 2)); 
} 


if (-128 << 2 !== -512) { 
  throw new Test262Error('#72: -128 << 2 === -512. Actual: ' + (-128 << 2)); 
} 


if (-256 << 2 !== -1024) { 
  throw new Test262Error('#73: -256 << 2 === -1024. Actual: ' + (-256 << 2)); 
} 


if (-512 << 2 !== -2048) { 
  throw new Test262Error('#74: -512 << 2 === -2048. Actual: ' + (-512 << 2)); 
} 


if (-1024 << 2 !== -4096) { 
  throw new Test262Error('#75: -1024 << 2 === -4096. Actual: ' + (-1024 << 2)); 
} 


if (-2048 << 2 !== -8192) { 
  throw new Test262Error('#76: -2048 << 2 === -8192. Actual: ' + (-2048 << 2)); 
} 


if (-4096 << 2 !== -16384) { 
  throw new Test262Error('#77: -4096 << 2 === -16384. Actual: ' + (-4096 << 2)); 
} 


if (-8192 << 2 !== -32768) { 
  throw new Test262Error('#78: -8192 << 2 === -32768. Actual: ' + (-8192 << 2)); 
} 


if (-16384 << 2 !== -65536) { 
  throw new Test262Error('#79: -16384 << 2 === -65536. Actual: ' + (-16384 << 2)); 
} 


if (-32768 << 2 !== -131072) { 
  throw new Test262Error('#80: -32768 << 2 === -131072. Actual: ' + (-32768 << 2)); 
} 


if (-65536 << 2 !== -262144) { 
  throw new Test262Error('#81: -65536 << 2 === -262144. Actual: ' + (-65536 << 2)); 
} 


if (-131072 << 2 !== -524288) { 
  throw new Test262Error('#82: -131072 << 2 === -524288. Actual: ' + (-131072 << 2)); 
} 


if (-262144 << 2 !== -1048576) { 
  throw new Test262Error('#83: -262144 << 2 === -1048576. Actual: ' + (-262144 << 2)); 
} 


if (-524288 << 2 !== -2097152) { 
  throw new Test262Error('#84: -524288 << 2 === -2097152. Actual: ' + (-524288 << 2)); 
} 


if (-1048576 << 2 !== -4194304) { 
  throw new Test262Error('#85: -1048576 << 2 === -4194304. Actual: ' + (-1048576 << 2)); 
} 


if (-2097152 << 2 !== -8388608) { 
  throw new Test262Error('#86: -2097152 << 2 === -8388608. Actual: ' + (-2097152 << 2)); 
} 


if (-4194304 << 2 !== -16777216) { 
  throw new Test262Error('#87: -4194304 << 2 === -16777216. Actual: ' + (-4194304 << 2)); 
} 


if (-8388608 << 2 !== -33554432) { 
  throw new Test262Error('#88: -8388608 << 2 === -33554432. Actual: ' + (-8388608 << 2)); 
} 


if (-16777216 << 2 !== -67108864) { 
  throw new Test262Error('#89: -16777216 << 2 === -67108864. Actual: ' + (-16777216 << 2)); 
} 


if (-33554432 << 2 !== -134217728) { 
  throw new Test262Error('#90: -33554432 << 2 === -134217728. Actual: ' + (-33554432 << 2)); 
} 


if (-67108864 << 2 !== -268435456) { 
  throw new Test262Error('#91: -67108864 << 2 === -268435456. Actual: ' + (-67108864 << 2)); 
} 


if (-134217728 << 2 !== -536870912) { 
  throw new Test262Error('#92: -134217728 << 2 === -536870912. Actual: ' + (-134217728 << 2)); 
} 


if (-268435456 << 2 !== -1073741824) { 
  throw new Test262Error('#93: -268435456 << 2 === -1073741824. Actual: ' + (-268435456 << 2)); 
} 


if (-536870912 << 2 !== -2147483648) { 
  throw new Test262Error('#94: -536870912 << 2 === -2147483648. Actual: ' + (-536870912 << 2)); 
} 


if (-1073741824 << 2 !== 0) { 
  throw new Test262Error('#95: -1073741824 << 2 === 0. Actual: ' + (-1073741824 << 2)); 
} 


if (-2147483648 << 2 !== 0) { 
  throw new Test262Error('#96: -2147483648 << 2 === 0. Actual: ' + (-2147483648 << 2)); 
} 


if (-1 << 3 !== -8) { 
  throw new Test262Error('#97: -1 << 3 === -8. Actual: ' + (-1 << 3)); 
} 


if (-2 << 3 !== -16) { 
  throw new Test262Error('#98: -2 << 3 === -16. Actual: ' + (-2 << 3)); 
} 


if (-4 << 3 !== -32) { 
  throw new Test262Error('#99: -4 << 3 === -32. Actual: ' + (-4 << 3)); 
} 


if (-8 << 3 !== -64) { 
  throw new Test262Error('#100: -8 << 3 === -64. Actual: ' + (-8 << 3)); 
} 


if (-16 << 3 !== -128) { 
  throw new Test262Error('#101: -16 << 3 === -128. Actual: ' + (-16 << 3)); 
} 


if (-32 << 3 !== -256) { 
  throw new Test262Error('#102: -32 << 3 === -256. Actual: ' + (-32 << 3)); 
} 


if (-64 << 3 !== -512) { 
  throw new Test262Error('#103: -64 << 3 === -512. Actual: ' + (-64 << 3)); 
} 


if (-128 << 3 !== -1024) { 
  throw new Test262Error('#104: -128 << 3 === -1024. Actual: ' + (-128 << 3)); 
} 


if (-256 << 3 !== -2048) { 
  throw new Test262Error('#105: -256 << 3 === -2048. Actual: ' + (-256 << 3)); 
} 


if (-512 << 3 !== -4096) { 
  throw new Test262Error('#106: -512 << 3 === -4096. Actual: ' + (-512 << 3)); 
} 


if (-1024 << 3 !== -8192) { 
  throw new Test262Error('#107: -1024 << 3 === -8192. Actual: ' + (-1024 << 3)); 
} 


if (-2048 << 3 !== -16384) { 
  throw new Test262Error('#108: -2048 << 3 === -16384. Actual: ' + (-2048 << 3)); 
} 


if (-4096 << 3 !== -32768) { 
  throw new Test262Error('#109: -4096 << 3 === -32768. Actual: ' + (-4096 << 3)); 
} 


if (-8192 << 3 !== -65536) { 
  throw new Test262Error('#110: -8192 << 3 === -65536. Actual: ' + (-8192 << 3)); 
} 


if (-16384 << 3 !== -131072) { 
  throw new Test262Error('#111: -16384 << 3 === -131072. Actual: ' + (-16384 << 3)); 
} 


if (-32768 << 3 !== -262144) { 
  throw new Test262Error('#112: -32768 << 3 === -262144. Actual: ' + (-32768 << 3)); 
} 


if (-65536 << 3 !== -524288) { 
  throw new Test262Error('#113: -65536 << 3 === -524288. Actual: ' + (-65536 << 3)); 
} 


if (-131072 << 3 !== -1048576) { 
  throw new Test262Error('#114: -131072 << 3 === -1048576. Actual: ' + (-131072 << 3)); 
} 


if (-262144 << 3 !== -2097152) { 
  throw new Test262Error('#115: -262144 << 3 === -2097152. Actual: ' + (-262144 << 3)); 
} 


if (-524288 << 3 !== -4194304) { 
  throw new Test262Error('#116: -524288 << 3 === -4194304. Actual: ' + (-524288 << 3)); 
} 


if (-1048576 << 3 !== -8388608) { 
  throw new Test262Error('#117: -1048576 << 3 === -8388608. Actual: ' + (-1048576 << 3)); 
} 


if (-2097152 << 3 !== -16777216) { 
  throw new Test262Error('#118: -2097152 << 3 === -16777216. Actual: ' + (-2097152 << 3)); 
} 


if (-4194304 << 3 !== -33554432) { 
  throw new Test262Error('#119: -4194304 << 3 === -33554432. Actual: ' + (-4194304 << 3)); 
} 


if (-8388608 << 3 !== -67108864) { 
  throw new Test262Error('#120: -8388608 << 3 === -67108864. Actual: ' + (-8388608 << 3)); 
} 


if (-16777216 << 3 !== -134217728) { 
  throw new Test262Error('#121: -16777216 << 3 === -134217728. Actual: ' + (-16777216 << 3)); 
} 


if (-33554432 << 3 !== -268435456) { 
  throw new Test262Error('#122: -33554432 << 3 === -268435456. Actual: ' + (-33554432 << 3)); 
} 


if (-67108864 << 3 !== -536870912) { 
  throw new Test262Error('#123: -67108864 << 3 === -536870912. Actual: ' + (-67108864 << 3)); 
} 


if (-134217728 << 3 !== -1073741824) { 
  throw new Test262Error('#124: -134217728 << 3 === -1073741824. Actual: ' + (-134217728 << 3)); 
} 


if (-268435456 << 3 !== -2147483648) { 
  throw new Test262Error('#125: -268435456 << 3 === -2147483648. Actual: ' + (-268435456 << 3)); 
} 


if (-536870912 << 3 !== 0) { 
  throw new Test262Error('#126: -536870912 << 3 === 0. Actual: ' + (-536870912 << 3)); 
} 


if (-1073741824 << 3 !== 0) { 
  throw new Test262Error('#127: -1073741824 << 3 === 0. Actual: ' + (-1073741824 << 3)); 
} 


if (-2147483648 << 3 !== 0) { 
  throw new Test262Error('#128: -2147483648 << 3 === 0. Actual: ' + (-2147483648 << 3)); 
} 


if (-1 << 4 !== -16) { 
  throw new Test262Error('#129: -1 << 4 === -16. Actual: ' + (-1 << 4)); 
} 


if (-2 << 4 !== -32) { 
  throw new Test262Error('#130: -2 << 4 === -32. Actual: ' + (-2 << 4)); 
} 


if (-4 << 4 !== -64) { 
  throw new Test262Error('#131: -4 << 4 === -64. Actual: ' + (-4 << 4)); 
} 


if (-8 << 4 !== -128) { 
  throw new Test262Error('#132: -8 << 4 === -128. Actual: ' + (-8 << 4)); 
} 


if (-16 << 4 !== -256) { 
  throw new Test262Error('#133: -16 << 4 === -256. Actual: ' + (-16 << 4)); 
} 


if (-32 << 4 !== -512) { 
  throw new Test262Error('#134: -32 << 4 === -512. Actual: ' + (-32 << 4)); 
} 


if (-64 << 4 !== -1024) { 
  throw new Test262Error('#135: -64 << 4 === -1024. Actual: ' + (-64 << 4)); 
} 


if (-128 << 4 !== -2048) { 
  throw new Test262Error('#136: -128 << 4 === -2048. Actual: ' + (-128 << 4)); 
} 


if (-256 << 4 !== -4096) { 
  throw new Test262Error('#137: -256 << 4 === -4096. Actual: ' + (-256 << 4)); 
} 


if (-512 << 4 !== -8192) { 
  throw new Test262Error('#138: -512 << 4 === -8192. Actual: ' + (-512 << 4)); 
} 


if (-1024 << 4 !== -16384) { 
  throw new Test262Error('#139: -1024 << 4 === -16384. Actual: ' + (-1024 << 4)); 
} 


if (-2048 << 4 !== -32768) { 
  throw new Test262Error('#140: -2048 << 4 === -32768. Actual: ' + (-2048 << 4)); 
} 


if (-4096 << 4 !== -65536) { 
  throw new Test262Error('#141: -4096 << 4 === -65536. Actual: ' + (-4096 << 4)); 
} 


if (-8192 << 4 !== -131072) { 
  throw new Test262Error('#142: -8192 << 4 === -131072. Actual: ' + (-8192 << 4)); 
} 


if (-16384 << 4 !== -262144) { 
  throw new Test262Error('#143: -16384 << 4 === -262144. Actual: ' + (-16384 << 4)); 
} 


if (-32768 << 4 !== -524288) { 
  throw new Test262Error('#144: -32768 << 4 === -524288. Actual: ' + (-32768 << 4)); 
} 


if (-65536 << 4 !== -1048576) { 
  throw new Test262Error('#145: -65536 << 4 === -1048576. Actual: ' + (-65536 << 4)); 
} 


if (-131072 << 4 !== -2097152) { 
  throw new Test262Error('#146: -131072 << 4 === -2097152. Actual: ' + (-131072 << 4)); 
} 


if (-262144 << 4 !== -4194304) { 
  throw new Test262Error('#147: -262144 << 4 === -4194304. Actual: ' + (-262144 << 4)); 
} 


if (-524288 << 4 !== -8388608) { 
  throw new Test262Error('#148: -524288 << 4 === -8388608. Actual: ' + (-524288 << 4)); 
} 


if (-1048576 << 4 !== -16777216) { 
  throw new Test262Error('#149: -1048576 << 4 === -16777216. Actual: ' + (-1048576 << 4)); 
} 


if (-2097152 << 4 !== -33554432) { 
  throw new Test262Error('#150: -2097152 << 4 === -33554432. Actual: ' + (-2097152 << 4)); 
} 


if (-4194304 << 4 !== -67108864) { 
  throw new Test262Error('#151: -4194304 << 4 === -67108864. Actual: ' + (-4194304 << 4)); 
} 


if (-8388608 << 4 !== -134217728) { 
  throw new Test262Error('#152: -8388608 << 4 === -134217728. Actual: ' + (-8388608 << 4)); 
} 


if (-16777216 << 4 !== -268435456) { 
  throw new Test262Error('#153: -16777216 << 4 === -268435456. Actual: ' + (-16777216 << 4)); 
} 


if (-33554432 << 4 !== -536870912) { 
  throw new Test262Error('#154: -33554432 << 4 === -536870912. Actual: ' + (-33554432 << 4)); 
} 


if (-67108864 << 4 !== -1073741824) { 
  throw new Test262Error('#155: -67108864 << 4 === -1073741824. Actual: ' + (-67108864 << 4)); 
} 


if (-134217728 << 4 !== -2147483648) { 
  throw new Test262Error('#156: -134217728 << 4 === -2147483648. Actual: ' + (-134217728 << 4)); 
} 


if (-268435456 << 4 !== 0) { 
  throw new Test262Error('#157: -268435456 << 4 === 0. Actual: ' + (-268435456 << 4)); 
} 


if (-536870912 << 4 !== 0) { 
  throw new Test262Error('#158: -536870912 << 4 === 0. Actual: ' + (-536870912 << 4)); 
} 


if (-1073741824 << 4 !== 0) { 
  throw new Test262Error('#159: -1073741824 << 4 === 0. Actual: ' + (-1073741824 << 4)); 
} 


if (-2147483648 << 4 !== 0) { 
  throw new Test262Error('#160: -2147483648 << 4 === 0. Actual: ' + (-2147483648 << 4)); 
} 


if (-1 << 5 !== -32) { 
  throw new Test262Error('#161: -1 << 5 === -32. Actual: ' + (-1 << 5)); 
} 


if (-2 << 5 !== -64) { 
  throw new Test262Error('#162: -2 << 5 === -64. Actual: ' + (-2 << 5)); 
} 


if (-4 << 5 !== -128) { 
  throw new Test262Error('#163: -4 << 5 === -128. Actual: ' + (-4 << 5)); 
} 


if (-8 << 5 !== -256) { 
  throw new Test262Error('#164: -8 << 5 === -256. Actual: ' + (-8 << 5)); 
} 


if (-16 << 5 !== -512) { 
  throw new Test262Error('#165: -16 << 5 === -512. Actual: ' + (-16 << 5)); 
} 


if (-32 << 5 !== -1024) { 
  throw new Test262Error('#166: -32 << 5 === -1024. Actual: ' + (-32 << 5)); 
} 


if (-64 << 5 !== -2048) { 
  throw new Test262Error('#167: -64 << 5 === -2048. Actual: ' + (-64 << 5)); 
} 


if (-128 << 5 !== -4096) { 
  throw new Test262Error('#168: -128 << 5 === -4096. Actual: ' + (-128 << 5)); 
} 


if (-256 << 5 !== -8192) { 
  throw new Test262Error('#169: -256 << 5 === -8192. Actual: ' + (-256 << 5)); 
} 


if (-512 << 5 !== -16384) { 
  throw new Test262Error('#170: -512 << 5 === -16384. Actual: ' + (-512 << 5)); 
} 


if (-1024 << 5 !== -32768) { 
  throw new Test262Error('#171: -1024 << 5 === -32768. Actual: ' + (-1024 << 5)); 
} 


if (-2048 << 5 !== -65536) { 
  throw new Test262Error('#172: -2048 << 5 === -65536. Actual: ' + (-2048 << 5)); 
} 


if (-4096 << 5 !== -131072) { 
  throw new Test262Error('#173: -4096 << 5 === -131072. Actual: ' + (-4096 << 5)); 
} 


if (-8192 << 5 !== -262144) { 
  throw new Test262Error('#174: -8192 << 5 === -262144. Actual: ' + (-8192 << 5)); 
} 


if (-16384 << 5 !== -524288) { 
  throw new Test262Error('#175: -16384 << 5 === -524288. Actual: ' + (-16384 << 5)); 
} 


if (-32768 << 5 !== -1048576) { 
  throw new Test262Error('#176: -32768 << 5 === -1048576. Actual: ' + (-32768 << 5)); 
} 


if (-65536 << 5 !== -2097152) { 
  throw new Test262Error('#177: -65536 << 5 === -2097152. Actual: ' + (-65536 << 5)); 
} 


if (-131072 << 5 !== -4194304) { 
  throw new Test262Error('#178: -131072 << 5 === -4194304. Actual: ' + (-131072 << 5)); 
} 


if (-262144 << 5 !== -8388608) { 
  throw new Test262Error('#179: -262144 << 5 === -8388608. Actual: ' + (-262144 << 5)); 
} 


if (-524288 << 5 !== -16777216) { 
  throw new Test262Error('#180: -524288 << 5 === -16777216. Actual: ' + (-524288 << 5)); 
} 


if (-1048576 << 5 !== -33554432) { 
  throw new Test262Error('#181: -1048576 << 5 === -33554432. Actual: ' + (-1048576 << 5)); 
} 


if (-2097152 << 5 !== -67108864) { 
  throw new Test262Error('#182: -2097152 << 5 === -67108864. Actual: ' + (-2097152 << 5)); 
} 


if (-4194304 << 5 !== -134217728) { 
  throw new Test262Error('#183: -4194304 << 5 === -134217728. Actual: ' + (-4194304 << 5)); 
} 


if (-8388608 << 5 !== -268435456) { 
  throw new Test262Error('#184: -8388608 << 5 === -268435456. Actual: ' + (-8388608 << 5)); 
} 


if (-16777216 << 5 !== -536870912) { 
  throw new Test262Error('#185: -16777216 << 5 === -536870912. Actual: ' + (-16777216 << 5)); 
} 


if (-33554432 << 5 !== -1073741824) { 
  throw new Test262Error('#186: -33554432 << 5 === -1073741824. Actual: ' + (-33554432 << 5)); 
} 


if (-67108864 << 5 !== -2147483648) { 
  throw new Test262Error('#187: -67108864 << 5 === -2147483648. Actual: ' + (-67108864 << 5)); 
} 


if (-134217728 << 5 !== 0) { 
  throw new Test262Error('#188: -134217728 << 5 === 0. Actual: ' + (-134217728 << 5)); 
} 


if (-268435456 << 5 !== 0) { 
  throw new Test262Error('#189: -268435456 << 5 === 0. Actual: ' + (-268435456 << 5)); 
} 


if (-536870912 << 5 !== 0) { 
  throw new Test262Error('#190: -536870912 << 5 === 0. Actual: ' + (-536870912 << 5)); 
} 


if (-1073741824 << 5 !== 0) { 
  throw new Test262Error('#191: -1073741824 << 5 === 0. Actual: ' + (-1073741824 << 5)); 
} 


if (-2147483648 << 5 !== 0) { 
  throw new Test262Error('#192: -2147483648 << 5 === 0. Actual: ' + (-2147483648 << 5)); 
} 


if (-1 << 6 !== -64) { 
  throw new Test262Error('#193: -1 << 6 === -64. Actual: ' + (-1 << 6)); 
} 


if (-2 << 6 !== -128) { 
  throw new Test262Error('#194: -2 << 6 === -128. Actual: ' + (-2 << 6)); 
} 


if (-4 << 6 !== -256) { 
  throw new Test262Error('#195: -4 << 6 === -256. Actual: ' + (-4 << 6)); 
} 


if (-8 << 6 !== -512) { 
  throw new Test262Error('#196: -8 << 6 === -512. Actual: ' + (-8 << 6)); 
} 


if (-16 << 6 !== -1024) { 
  throw new Test262Error('#197: -16 << 6 === -1024. Actual: ' + (-16 << 6)); 
} 


if (-32 << 6 !== -2048) { 
  throw new Test262Error('#198: -32 << 6 === -2048. Actual: ' + (-32 << 6)); 
} 


if (-64 << 6 !== -4096) { 
  throw new Test262Error('#199: -64 << 6 === -4096. Actual: ' + (-64 << 6)); 
} 


if (-128 << 6 !== -8192) { 
  throw new Test262Error('#200: -128 << 6 === -8192. Actual: ' + (-128 << 6)); 
} 


if (-256 << 6 !== -16384) { 
  throw new Test262Error('#201: -256 << 6 === -16384. Actual: ' + (-256 << 6)); 
} 


if (-512 << 6 !== -32768) { 
  throw new Test262Error('#202: -512 << 6 === -32768. Actual: ' + (-512 << 6)); 
} 


if (-1024 << 6 !== -65536) { 
  throw new Test262Error('#203: -1024 << 6 === -65536. Actual: ' + (-1024 << 6)); 
} 


if (-2048 << 6 !== -131072) { 
  throw new Test262Error('#204: -2048 << 6 === -131072. Actual: ' + (-2048 << 6)); 
} 


if (-4096 << 6 !== -262144) { 
  throw new Test262Error('#205: -4096 << 6 === -262144. Actual: ' + (-4096 << 6)); 
} 


if (-8192 << 6 !== -524288) { 
  throw new Test262Error('#206: -8192 << 6 === -524288. Actual: ' + (-8192 << 6)); 
} 


if (-16384 << 6 !== -1048576) { 
  throw new Test262Error('#207: -16384 << 6 === -1048576. Actual: ' + (-16384 << 6)); 
} 


if (-32768 << 6 !== -2097152) { 
  throw new Test262Error('#208: -32768 << 6 === -2097152. Actual: ' + (-32768 << 6)); 
} 


if (-65536 << 6 !== -4194304) { 
  throw new Test262Error('#209: -65536 << 6 === -4194304. Actual: ' + (-65536 << 6)); 
} 


if (-131072 << 6 !== -8388608) { 
  throw new Test262Error('#210: -131072 << 6 === -8388608. Actual: ' + (-131072 << 6)); 
} 


if (-262144 << 6 !== -16777216) { 
  throw new Test262Error('#211: -262144 << 6 === -16777216. Actual: ' + (-262144 << 6)); 
} 


if (-524288 << 6 !== -33554432) { 
  throw new Test262Error('#212: -524288 << 6 === -33554432. Actual: ' + (-524288 << 6)); 
} 


if (-1048576 << 6 !== -67108864) { 
  throw new Test262Error('#213: -1048576 << 6 === -67108864. Actual: ' + (-1048576 << 6)); 
} 


if (-2097152 << 6 !== -134217728) { 
  throw new Test262Error('#214: -2097152 << 6 === -134217728. Actual: ' + (-2097152 << 6)); 
} 


if (-4194304 << 6 !== -268435456) { 
  throw new Test262Error('#215: -4194304 << 6 === -268435456. Actual: ' + (-4194304 << 6)); 
} 


if (-8388608 << 6 !== -536870912) { 
  throw new Test262Error('#216: -8388608 << 6 === -536870912. Actual: ' + (-8388608 << 6)); 
} 


if (-16777216 << 6 !== -1073741824) { 
  throw new Test262Error('#217: -16777216 << 6 === -1073741824. Actual: ' + (-16777216 << 6)); 
} 


if (-33554432 << 6 !== -2147483648) { 
  throw new Test262Error('#218: -33554432 << 6 === -2147483648. Actual: ' + (-33554432 << 6)); 
} 


if (-67108864 << 6 !== 0) { 
  throw new Test262Error('#219: -67108864 << 6 === 0. Actual: ' + (-67108864 << 6)); 
} 


if (-134217728 << 6 !== 0) { 
  throw new Test262Error('#220: -134217728 << 6 === 0. Actual: ' + (-134217728 << 6)); 
} 


if (-268435456 << 6 !== 0) { 
  throw new Test262Error('#221: -268435456 << 6 === 0. Actual: ' + (-268435456 << 6)); 
} 


if (-536870912 << 6 !== 0) { 
  throw new Test262Error('#222: -536870912 << 6 === 0. Actual: ' + (-536870912 << 6)); 
} 


if (-1073741824 << 6 !== 0) { 
  throw new Test262Error('#223: -1073741824 << 6 === 0. Actual: ' + (-1073741824 << 6)); 
} 


if (-2147483648 << 6 !== 0) { 
  throw new Test262Error('#224: -2147483648 << 6 === 0. Actual: ' + (-2147483648 << 6)); 
} 


if (-1 << 7 !== -128) { 
  throw new Test262Error('#225: -1 << 7 === -128. Actual: ' + (-1 << 7)); 
} 


if (-2 << 7 !== -256) { 
  throw new Test262Error('#226: -2 << 7 === -256. Actual: ' + (-2 << 7)); 
} 


if (-4 << 7 !== -512) { 
  throw new Test262Error('#227: -4 << 7 === -512. Actual: ' + (-4 << 7)); 
} 


if (-8 << 7 !== -1024) { 
  throw new Test262Error('#228: -8 << 7 === -1024. Actual: ' + (-8 << 7)); 
} 


if (-16 << 7 !== -2048) { 
  throw new Test262Error('#229: -16 << 7 === -2048. Actual: ' + (-16 << 7)); 
} 


if (-32 << 7 !== -4096) { 
  throw new Test262Error('#230: -32 << 7 === -4096. Actual: ' + (-32 << 7)); 
} 


if (-64 << 7 !== -8192) { 
  throw new Test262Error('#231: -64 << 7 === -8192. Actual: ' + (-64 << 7)); 
} 


if (-128 << 7 !== -16384) { 
  throw new Test262Error('#232: -128 << 7 === -16384. Actual: ' + (-128 << 7)); 
} 


if (-256 << 7 !== -32768) { 
  throw new Test262Error('#233: -256 << 7 === -32768. Actual: ' + (-256 << 7)); 
} 


if (-512 << 7 !== -65536) { 
  throw new Test262Error('#234: -512 << 7 === -65536. Actual: ' + (-512 << 7)); 
} 


if (-1024 << 7 !== -131072) { 
  throw new Test262Error('#235: -1024 << 7 === -131072. Actual: ' + (-1024 << 7)); 
} 


if (-2048 << 7 !== -262144) { 
  throw new Test262Error('#236: -2048 << 7 === -262144. Actual: ' + (-2048 << 7)); 
} 


if (-4096 << 7 !== -524288) { 
  throw new Test262Error('#237: -4096 << 7 === -524288. Actual: ' + (-4096 << 7)); 
} 


if (-8192 << 7 !== -1048576) { 
  throw new Test262Error('#238: -8192 << 7 === -1048576. Actual: ' + (-8192 << 7)); 
} 


if (-16384 << 7 !== -2097152) { 
  throw new Test262Error('#239: -16384 << 7 === -2097152. Actual: ' + (-16384 << 7)); 
} 


if (-32768 << 7 !== -4194304) { 
  throw new Test262Error('#240: -32768 << 7 === -4194304. Actual: ' + (-32768 << 7)); 
} 


if (-65536 << 7 !== -8388608) { 
  throw new Test262Error('#241: -65536 << 7 === -8388608. Actual: ' + (-65536 << 7)); 
} 


if (-131072 << 7 !== -16777216) { 
  throw new Test262Error('#242: -131072 << 7 === -16777216. Actual: ' + (-131072 << 7)); 
} 


if (-262144 << 7 !== -33554432) { 
  throw new Test262Error('#243: -262144 << 7 === -33554432. Actual: ' + (-262144 << 7)); 
} 


if (-524288 << 7 !== -67108864) { 
  throw new Test262Error('#244: -524288 << 7 === -67108864. Actual: ' + (-524288 << 7)); 
} 


if (-1048576 << 7 !== -134217728) { 
  throw new Test262Error('#245: -1048576 << 7 === -134217728. Actual: ' + (-1048576 << 7)); 
} 


if (-2097152 << 7 !== -268435456) { 
  throw new Test262Error('#246: -2097152 << 7 === -268435456. Actual: ' + (-2097152 << 7)); 
} 


if (-4194304 << 7 !== -536870912) { 
  throw new Test262Error('#247: -4194304 << 7 === -536870912. Actual: ' + (-4194304 << 7)); 
} 


if (-8388608 << 7 !== -1073741824) { 
  throw new Test262Error('#248: -8388608 << 7 === -1073741824. Actual: ' + (-8388608 << 7)); 
} 


if (-16777216 << 7 !== -2147483648) { 
  throw new Test262Error('#249: -16777216 << 7 === -2147483648. Actual: ' + (-16777216 << 7)); 
} 


if (-33554432 << 7 !== 0) { 
  throw new Test262Error('#250: -33554432 << 7 === 0. Actual: ' + (-33554432 << 7)); 
} 


if (-67108864 << 7 !== 0) { 
  throw new Test262Error('#251: -67108864 << 7 === 0. Actual: ' + (-67108864 << 7)); 
} 


if (-134217728 << 7 !== 0) { 
  throw new Test262Error('#252: -134217728 << 7 === 0. Actual: ' + (-134217728 << 7)); 
} 


if (-268435456 << 7 !== 0) { 
  throw new Test262Error('#253: -268435456 << 7 === 0. Actual: ' + (-268435456 << 7)); 
} 


if (-536870912 << 7 !== 0) { 
  throw new Test262Error('#254: -536870912 << 7 === 0. Actual: ' + (-536870912 << 7)); 
} 


if (-1073741824 << 7 !== 0) { 
  throw new Test262Error('#255: -1073741824 << 7 === 0. Actual: ' + (-1073741824 << 7)); 
} 


if (-2147483648 << 7 !== 0) { 
  throw new Test262Error('#256: -2147483648 << 7 === 0. Actual: ' + (-2147483648 << 7)); 
} 


if (-1 << 8 !== -256) { 
  throw new Test262Error('#257: -1 << 8 === -256. Actual: ' + (-1 << 8)); 
} 


if (-2 << 8 !== -512) { 
  throw new Test262Error('#258: -2 << 8 === -512. Actual: ' + (-2 << 8)); 
} 


if (-4 << 8 !== -1024) { 
  throw new Test262Error('#259: -4 << 8 === -1024. Actual: ' + (-4 << 8)); 
} 


if (-8 << 8 !== -2048) { 
  throw new Test262Error('#260: -8 << 8 === -2048. Actual: ' + (-8 << 8)); 
} 


if (-16 << 8 !== -4096) { 
  throw new Test262Error('#261: -16 << 8 === -4096. Actual: ' + (-16 << 8)); 
} 


if (-32 << 8 !== -8192) { 
  throw new Test262Error('#262: -32 << 8 === -8192. Actual: ' + (-32 << 8)); 
} 


if (-64 << 8 !== -16384) { 
  throw new Test262Error('#263: -64 << 8 === -16384. Actual: ' + (-64 << 8)); 
} 


if (-128 << 8 !== -32768) { 
  throw new Test262Error('#264: -128 << 8 === -32768. Actual: ' + (-128 << 8)); 
} 


if (-256 << 8 !== -65536) { 
  throw new Test262Error('#265: -256 << 8 === -65536. Actual: ' + (-256 << 8)); 
} 


if (-512 << 8 !== -131072) { 
  throw new Test262Error('#266: -512 << 8 === -131072. Actual: ' + (-512 << 8)); 
} 


if (-1024 << 8 !== -262144) { 
  throw new Test262Error('#267: -1024 << 8 === -262144. Actual: ' + (-1024 << 8)); 
} 


if (-2048 << 8 !== -524288) { 
  throw new Test262Error('#268: -2048 << 8 === -524288. Actual: ' + (-2048 << 8)); 
} 


if (-4096 << 8 !== -1048576) { 
  throw new Test262Error('#269: -4096 << 8 === -1048576. Actual: ' + (-4096 << 8)); 
} 


if (-8192 << 8 !== -2097152) { 
  throw new Test262Error('#270: -8192 << 8 === -2097152. Actual: ' + (-8192 << 8)); 
} 


if (-16384 << 8 !== -4194304) { 
  throw new Test262Error('#271: -16384 << 8 === -4194304. Actual: ' + (-16384 << 8)); 
} 


if (-32768 << 8 !== -8388608) { 
  throw new Test262Error('#272: -32768 << 8 === -8388608. Actual: ' + (-32768 << 8)); 
} 


if (-65536 << 8 !== -16777216) { 
  throw new Test262Error('#273: -65536 << 8 === -16777216. Actual: ' + (-65536 << 8)); 
} 


if (-131072 << 8 !== -33554432) { 
  throw new Test262Error('#274: -131072 << 8 === -33554432. Actual: ' + (-131072 << 8)); 
} 


if (-262144 << 8 !== -67108864) { 
  throw new Test262Error('#275: -262144 << 8 === -67108864. Actual: ' + (-262144 << 8)); 
} 


if (-524288 << 8 !== -134217728) { 
  throw new Test262Error('#276: -524288 << 8 === -134217728. Actual: ' + (-524288 << 8)); 
} 


if (-1048576 << 8 !== -268435456) { 
  throw new Test262Error('#277: -1048576 << 8 === -268435456. Actual: ' + (-1048576 << 8)); 
} 


if (-2097152 << 8 !== -536870912) { 
  throw new Test262Error('#278: -2097152 << 8 === -536870912. Actual: ' + (-2097152 << 8)); 
} 


if (-4194304 << 8 !== -1073741824) { 
  throw new Test262Error('#279: -4194304 << 8 === -1073741824. Actual: ' + (-4194304 << 8)); 
} 


if (-8388608 << 8 !== -2147483648) { 
  throw new Test262Error('#280: -8388608 << 8 === -2147483648. Actual: ' + (-8388608 << 8)); 
} 


if (-16777216 << 8 !== 0) { 
  throw new Test262Error('#281: -16777216 << 8 === 0. Actual: ' + (-16777216 << 8)); 
} 


if (-33554432 << 8 !== 0) { 
  throw new Test262Error('#282: -33554432 << 8 === 0. Actual: ' + (-33554432 << 8)); 
} 


if (-67108864 << 8 !== 0) { 
  throw new Test262Error('#283: -67108864 << 8 === 0. Actual: ' + (-67108864 << 8)); 
} 


if (-134217728 << 8 !== 0) { 
  throw new Test262Error('#284: -134217728 << 8 === 0. Actual: ' + (-134217728 << 8)); 
} 


if (-268435456 << 8 !== 0) { 
  throw new Test262Error('#285: -268435456 << 8 === 0. Actual: ' + (-268435456 << 8)); 
} 


if (-536870912 << 8 !== 0) { 
  throw new Test262Error('#286: -536870912 << 8 === 0. Actual: ' + (-536870912 << 8)); 
} 


if (-1073741824 << 8 !== 0) { 
  throw new Test262Error('#287: -1073741824 << 8 === 0. Actual: ' + (-1073741824 << 8)); 
} 


if (-2147483648 << 8 !== 0) { 
  throw new Test262Error('#288: -2147483648 << 8 === 0. Actual: ' + (-2147483648 << 8)); 
} 


if (-1 << 9 !== -512) { 
  throw new Test262Error('#289: -1 << 9 === -512. Actual: ' + (-1 << 9)); 
} 


if (-2 << 9 !== -1024) { 
  throw new Test262Error('#290: -2 << 9 === -1024. Actual: ' + (-2 << 9)); 
} 


if (-4 << 9 !== -2048) { 
  throw new Test262Error('#291: -4 << 9 === -2048. Actual: ' + (-4 << 9)); 
} 


if (-8 << 9 !== -4096) { 
  throw new Test262Error('#292: -8 << 9 === -4096. Actual: ' + (-8 << 9)); 
} 


if (-16 << 9 !== -8192) { 
  throw new Test262Error('#293: -16 << 9 === -8192. Actual: ' + (-16 << 9)); 
} 


if (-32 << 9 !== -16384) { 
  throw new Test262Error('#294: -32 << 9 === -16384. Actual: ' + (-32 << 9)); 
} 


if (-64 << 9 !== -32768) { 
  throw new Test262Error('#295: -64 << 9 === -32768. Actual: ' + (-64 << 9)); 
} 


if (-128 << 9 !== -65536) { 
  throw new Test262Error('#296: -128 << 9 === -65536. Actual: ' + (-128 << 9)); 
} 


if (-256 << 9 !== -131072) { 
  throw new Test262Error('#297: -256 << 9 === -131072. Actual: ' + (-256 << 9)); 
} 


if (-512 << 9 !== -262144) { 
  throw new Test262Error('#298: -512 << 9 === -262144. Actual: ' + (-512 << 9)); 
} 


if (-1024 << 9 !== -524288) { 
  throw new Test262Error('#299: -1024 << 9 === -524288. Actual: ' + (-1024 << 9)); 
} 


if (-2048 << 9 !== -1048576) { 
  throw new Test262Error('#300: -2048 << 9 === -1048576. Actual: ' + (-2048 << 9)); 
} 


if (-4096 << 9 !== -2097152) { 
  throw new Test262Error('#301: -4096 << 9 === -2097152. Actual: ' + (-4096 << 9)); 
} 


if (-8192 << 9 !== -4194304) { 
  throw new Test262Error('#302: -8192 << 9 === -4194304. Actual: ' + (-8192 << 9)); 
} 


if (-16384 << 9 !== -8388608) { 
  throw new Test262Error('#303: -16384 << 9 === -8388608. Actual: ' + (-16384 << 9)); 
} 


if (-32768 << 9 !== -16777216) { 
  throw new Test262Error('#304: -32768 << 9 === -16777216. Actual: ' + (-32768 << 9)); 
} 


if (-65536 << 9 !== -33554432) { 
  throw new Test262Error('#305: -65536 << 9 === -33554432. Actual: ' + (-65536 << 9)); 
} 


if (-131072 << 9 !== -67108864) { 
  throw new Test262Error('#306: -131072 << 9 === -67108864. Actual: ' + (-131072 << 9)); 
} 


if (-262144 << 9 !== -134217728) { 
  throw new Test262Error('#307: -262144 << 9 === -134217728. Actual: ' + (-262144 << 9)); 
} 


if (-524288 << 9 !== -268435456) { 
  throw new Test262Error('#308: -524288 << 9 === -268435456. Actual: ' + (-524288 << 9)); 
} 


if (-1048576 << 9 !== -536870912) { 
  throw new Test262Error('#309: -1048576 << 9 === -536870912. Actual: ' + (-1048576 << 9)); 
} 


if (-2097152 << 9 !== -1073741824) { 
  throw new Test262Error('#310: -2097152 << 9 === -1073741824. Actual: ' + (-2097152 << 9)); 
} 


if (-4194304 << 9 !== -2147483648) { 
  throw new Test262Error('#311: -4194304 << 9 === -2147483648. Actual: ' + (-4194304 << 9)); 
} 


if (-8388608 << 9 !== 0) { 
  throw new Test262Error('#312: -8388608 << 9 === 0. Actual: ' + (-8388608 << 9)); 
} 


if (-16777216 << 9 !== 0) { 
  throw new Test262Error('#313: -16777216 << 9 === 0. Actual: ' + (-16777216 << 9)); 
} 


if (-33554432 << 9 !== 0) { 
  throw new Test262Error('#314: -33554432 << 9 === 0. Actual: ' + (-33554432 << 9)); 
} 


if (-67108864 << 9 !== 0) { 
  throw new Test262Error('#315: -67108864 << 9 === 0. Actual: ' + (-67108864 << 9)); 
} 


if (-134217728 << 9 !== 0) { 
  throw new Test262Error('#316: -134217728 << 9 === 0. Actual: ' + (-134217728 << 9)); 
} 


if (-268435456 << 9 !== 0) { 
  throw new Test262Error('#317: -268435456 << 9 === 0. Actual: ' + (-268435456 << 9)); 
} 


if (-536870912 << 9 !== 0) { 
  throw new Test262Error('#318: -536870912 << 9 === 0. Actual: ' + (-536870912 << 9)); 
} 


if (-1073741824 << 9 !== 0) { 
  throw new Test262Error('#319: -1073741824 << 9 === 0. Actual: ' + (-1073741824 << 9)); 
} 


if (-2147483648 << 9 !== 0) { 
  throw new Test262Error('#320: -2147483648 << 9 === 0. Actual: ' + (-2147483648 << 9)); 
} 


if (-1 << 10 !== -1024) { 
  throw new Test262Error('#321: -1 << 10 === -1024. Actual: ' + (-1 << 10)); 
} 


if (-2 << 10 !== -2048) { 
  throw new Test262Error('#322: -2 << 10 === -2048. Actual: ' + (-2 << 10)); 
} 


if (-4 << 10 !== -4096) { 
  throw new Test262Error('#323: -4 << 10 === -4096. Actual: ' + (-4 << 10)); 
} 


if (-8 << 10 !== -8192) { 
  throw new Test262Error('#324: -8 << 10 === -8192. Actual: ' + (-8 << 10)); 
} 


if (-16 << 10 !== -16384) { 
  throw new Test262Error('#325: -16 << 10 === -16384. Actual: ' + (-16 << 10)); 
} 


if (-32 << 10 !== -32768) { 
  throw new Test262Error('#326: -32 << 10 === -32768. Actual: ' + (-32 << 10)); 
} 


if (-64 << 10 !== -65536) { 
  throw new Test262Error('#327: -64 << 10 === -65536. Actual: ' + (-64 << 10)); 
} 


if (-128 << 10 !== -131072) { 
  throw new Test262Error('#328: -128 << 10 === -131072. Actual: ' + (-128 << 10)); 
} 


if (-256 << 10 !== -262144) { 
  throw new Test262Error('#329: -256 << 10 === -262144. Actual: ' + (-256 << 10)); 
} 


if (-512 << 10 !== -524288) { 
  throw new Test262Error('#330: -512 << 10 === -524288. Actual: ' + (-512 << 10)); 
} 


if (-1024 << 10 !== -1048576) { 
  throw new Test262Error('#331: -1024 << 10 === -1048576. Actual: ' + (-1024 << 10)); 
} 


if (-2048 << 10 !== -2097152) { 
  throw new Test262Error('#332: -2048 << 10 === -2097152. Actual: ' + (-2048 << 10)); 
} 


if (-4096 << 10 !== -4194304) { 
  throw new Test262Error('#333: -4096 << 10 === -4194304. Actual: ' + (-4096 << 10)); 
} 


if (-8192 << 10 !== -8388608) { 
  throw new Test262Error('#334: -8192 << 10 === -8388608. Actual: ' + (-8192 << 10)); 
} 


if (-16384 << 10 !== -16777216) { 
  throw new Test262Error('#335: -16384 << 10 === -16777216. Actual: ' + (-16384 << 10)); 
} 


if (-32768 << 10 !== -33554432) { 
  throw new Test262Error('#336: -32768 << 10 === -33554432. Actual: ' + (-32768 << 10)); 
} 


if (-65536 << 10 !== -67108864) { 
  throw new Test262Error('#337: -65536 << 10 === -67108864. Actual: ' + (-65536 << 10)); 
} 


if (-131072 << 10 !== -134217728) { 
  throw new Test262Error('#338: -131072 << 10 === -134217728. Actual: ' + (-131072 << 10)); 
} 


if (-262144 << 10 !== -268435456) { 
  throw new Test262Error('#339: -262144 << 10 === -268435456. Actual: ' + (-262144 << 10)); 
} 


if (-524288 << 10 !== -536870912) { 
  throw new Test262Error('#340: -524288 << 10 === -536870912. Actual: ' + (-524288 << 10)); 
} 


if (-1048576 << 10 !== -1073741824) { 
  throw new Test262Error('#341: -1048576 << 10 === -1073741824. Actual: ' + (-1048576 << 10)); 
} 


if (-2097152 << 10 !== -2147483648) { 
  throw new Test262Error('#342: -2097152 << 10 === -2147483648. Actual: ' + (-2097152 << 10)); 
} 


if (-4194304 << 10 !== 0) { 
  throw new Test262Error('#343: -4194304 << 10 === 0. Actual: ' + (-4194304 << 10)); 
} 


if (-8388608 << 10 !== 0) { 
  throw new Test262Error('#344: -8388608 << 10 === 0. Actual: ' + (-8388608 << 10)); 
} 


if (-16777216 << 10 !== 0) { 
  throw new Test262Error('#345: -16777216 << 10 === 0. Actual: ' + (-16777216 << 10)); 
} 


if (-33554432 << 10 !== 0) { 
  throw new Test262Error('#346: -33554432 << 10 === 0. Actual: ' + (-33554432 << 10)); 
} 


if (-67108864 << 10 !== 0) { 
  throw new Test262Error('#347: -67108864 << 10 === 0. Actual: ' + (-67108864 << 10)); 
} 


if (-134217728 << 10 !== 0) { 
  throw new Test262Error('#348: -134217728 << 10 === 0. Actual: ' + (-134217728 << 10)); 
} 


if (-268435456 << 10 !== 0) { 
  throw new Test262Error('#349: -268435456 << 10 === 0. Actual: ' + (-268435456 << 10)); 
} 


if (-536870912 << 10 !== 0) { 
  throw new Test262Error('#350: -536870912 << 10 === 0. Actual: ' + (-536870912 << 10)); 
} 


if (-1073741824 << 10 !== 0) { 
  throw new Test262Error('#351: -1073741824 << 10 === 0. Actual: ' + (-1073741824 << 10)); 
} 


if (-2147483648 << 10 !== 0) { 
  throw new Test262Error('#352: -2147483648 << 10 === 0. Actual: ' + (-2147483648 << 10)); 
} 


if (-1 << 11 !== -2048) { 
  throw new Test262Error('#353: -1 << 11 === -2048. Actual: ' + (-1 << 11)); 
} 


if (-2 << 11 !== -4096) { 
  throw new Test262Error('#354: -2 << 11 === -4096. Actual: ' + (-2 << 11)); 
} 


if (-4 << 11 !== -8192) { 
  throw new Test262Error('#355: -4 << 11 === -8192. Actual: ' + (-4 << 11)); 
} 


if (-8 << 11 !== -16384) { 
  throw new Test262Error('#356: -8 << 11 === -16384. Actual: ' + (-8 << 11)); 
} 


if (-16 << 11 !== -32768) { 
  throw new Test262Error('#357: -16 << 11 === -32768. Actual: ' + (-16 << 11)); 
} 


if (-32 << 11 !== -65536) { 
  throw new Test262Error('#358: -32 << 11 === -65536. Actual: ' + (-32 << 11)); 
} 


if (-64 << 11 !== -131072) { 
  throw new Test262Error('#359: -64 << 11 === -131072. Actual: ' + (-64 << 11)); 
} 


if (-128 << 11 !== -262144) { 
  throw new Test262Error('#360: -128 << 11 === -262144. Actual: ' + (-128 << 11)); 
} 


if (-256 << 11 !== -524288) { 
  throw new Test262Error('#361: -256 << 11 === -524288. Actual: ' + (-256 << 11)); 
} 


if (-512 << 11 !== -1048576) { 
  throw new Test262Error('#362: -512 << 11 === -1048576. Actual: ' + (-512 << 11)); 
} 


if (-1024 << 11 !== -2097152) { 
  throw new Test262Error('#363: -1024 << 11 === -2097152. Actual: ' + (-1024 << 11)); 
} 


if (-2048 << 11 !== -4194304) { 
  throw new Test262Error('#364: -2048 << 11 === -4194304. Actual: ' + (-2048 << 11)); 
} 


if (-4096 << 11 !== -8388608) { 
  throw new Test262Error('#365: -4096 << 11 === -8388608. Actual: ' + (-4096 << 11)); 
} 


if (-8192 << 11 !== -16777216) { 
  throw new Test262Error('#366: -8192 << 11 === -16777216. Actual: ' + (-8192 << 11)); 
} 


if (-16384 << 11 !== -33554432) { 
  throw new Test262Error('#367: -16384 << 11 === -33554432. Actual: ' + (-16384 << 11)); 
} 


if (-32768 << 11 !== -67108864) { 
  throw new Test262Error('#368: -32768 << 11 === -67108864. Actual: ' + (-32768 << 11)); 
} 


if (-65536 << 11 !== -134217728) { 
  throw new Test262Error('#369: -65536 << 11 === -134217728. Actual: ' + (-65536 << 11)); 
} 


if (-131072 << 11 !== -268435456) { 
  throw new Test262Error('#370: -131072 << 11 === -268435456. Actual: ' + (-131072 << 11)); 
} 


if (-262144 << 11 !== -536870912) { 
  throw new Test262Error('#371: -262144 << 11 === -536870912. Actual: ' + (-262144 << 11)); 
} 


if (-524288 << 11 !== -1073741824) { 
  throw new Test262Error('#372: -524288 << 11 === -1073741824. Actual: ' + (-524288 << 11)); 
} 


if (-1048576 << 11 !== -2147483648) { 
  throw new Test262Error('#373: -1048576 << 11 === -2147483648. Actual: ' + (-1048576 << 11)); 
} 


if (-2097152 << 11 !== 0) { 
  throw new Test262Error('#374: -2097152 << 11 === 0. Actual: ' + (-2097152 << 11)); 
} 


if (-4194304 << 11 !== 0) { 
  throw new Test262Error('#375: -4194304 << 11 === 0. Actual: ' + (-4194304 << 11)); 
} 


if (-8388608 << 11 !== 0) { 
  throw new Test262Error('#376: -8388608 << 11 === 0. Actual: ' + (-8388608 << 11)); 
} 


if (-16777216 << 11 !== 0) { 
  throw new Test262Error('#377: -16777216 << 11 === 0. Actual: ' + (-16777216 << 11)); 
} 


if (-33554432 << 11 !== 0) { 
  throw new Test262Error('#378: -33554432 << 11 === 0. Actual: ' + (-33554432 << 11)); 
} 


if (-67108864 << 11 !== 0) { 
  throw new Test262Error('#379: -67108864 << 11 === 0. Actual: ' + (-67108864 << 11)); 
} 


if (-134217728 << 11 !== 0) { 
  throw new Test262Error('#380: -134217728 << 11 === 0. Actual: ' + (-134217728 << 11)); 
} 


if (-268435456 << 11 !== 0) { 
  throw new Test262Error('#381: -268435456 << 11 === 0. Actual: ' + (-268435456 << 11)); 
} 


if (-536870912 << 11 !== 0) { 
  throw new Test262Error('#382: -536870912 << 11 === 0. Actual: ' + (-536870912 << 11)); 
} 


if (-1073741824 << 11 !== 0) { 
  throw new Test262Error('#383: -1073741824 << 11 === 0. Actual: ' + (-1073741824 << 11)); 
} 


if (-2147483648 << 11 !== 0) { 
  throw new Test262Error('#384: -2147483648 << 11 === 0. Actual: ' + (-2147483648 << 11)); 
} 


if (-1 << 12 !== -4096) { 
  throw new Test262Error('#385: -1 << 12 === -4096. Actual: ' + (-1 << 12)); 
} 


if (-2 << 12 !== -8192) { 
  throw new Test262Error('#386: -2 << 12 === -8192. Actual: ' + (-2 << 12)); 
} 


if (-4 << 12 !== -16384) { 
  throw new Test262Error('#387: -4 << 12 === -16384. Actual: ' + (-4 << 12)); 
} 


if (-8 << 12 !== -32768) { 
  throw new Test262Error('#388: -8 << 12 === -32768. Actual: ' + (-8 << 12)); 
} 


if (-16 << 12 !== -65536) { 
  throw new Test262Error('#389: -16 << 12 === -65536. Actual: ' + (-16 << 12)); 
} 


if (-32 << 12 !== -131072) { 
  throw new Test262Error('#390: -32 << 12 === -131072. Actual: ' + (-32 << 12)); 
} 


if (-64 << 12 !== -262144) { 
  throw new Test262Error('#391: -64 << 12 === -262144. Actual: ' + (-64 << 12)); 
} 


if (-128 << 12 !== -524288) { 
  throw new Test262Error('#392: -128 << 12 === -524288. Actual: ' + (-128 << 12)); 
} 


if (-256 << 12 !== -1048576) { 
  throw new Test262Error('#393: -256 << 12 === -1048576. Actual: ' + (-256 << 12)); 
} 


if (-512 << 12 !== -2097152) { 
  throw new Test262Error('#394: -512 << 12 === -2097152. Actual: ' + (-512 << 12)); 
} 


if (-1024 << 12 !== -4194304) { 
  throw new Test262Error('#395: -1024 << 12 === -4194304. Actual: ' + (-1024 << 12)); 
} 


if (-2048 << 12 !== -8388608) { 
  throw new Test262Error('#396: -2048 << 12 === -8388608. Actual: ' + (-2048 << 12)); 
} 


if (-4096 << 12 !== -16777216) { 
  throw new Test262Error('#397: -4096 << 12 === -16777216. Actual: ' + (-4096 << 12)); 
} 


if (-8192 << 12 !== -33554432) { 
  throw new Test262Error('#398: -8192 << 12 === -33554432. Actual: ' + (-8192 << 12)); 
} 


if (-16384 << 12 !== -67108864) { 
  throw new Test262Error('#399: -16384 << 12 === -67108864. Actual: ' + (-16384 << 12)); 
} 


if (-32768 << 12 !== -134217728) { 
  throw new Test262Error('#400: -32768 << 12 === -134217728. Actual: ' + (-32768 << 12)); 
} 


if (-65536 << 12 !== -268435456) { 
  throw new Test262Error('#401: -65536 << 12 === -268435456. Actual: ' + (-65536 << 12)); 
} 


if (-131072 << 12 !== -536870912) { 
  throw new Test262Error('#402: -131072 << 12 === -536870912. Actual: ' + (-131072 << 12)); 
} 


if (-262144 << 12 !== -1073741824) { 
  throw new Test262Error('#403: -262144 << 12 === -1073741824. Actual: ' + (-262144 << 12)); 
} 


if (-524288 << 12 !== -2147483648) { 
  throw new Test262Error('#404: -524288 << 12 === -2147483648. Actual: ' + (-524288 << 12)); 
} 


if (-1048576 << 12 !== 0) { 
  throw new Test262Error('#405: -1048576 << 12 === 0. Actual: ' + (-1048576 << 12)); 
} 


if (-2097152 << 12 !== 0) { 
  throw new Test262Error('#406: -2097152 << 12 === 0. Actual: ' + (-2097152 << 12)); 
} 


if (-4194304 << 12 !== 0) { 
  throw new Test262Error('#407: -4194304 << 12 === 0. Actual: ' + (-4194304 << 12)); 
} 


if (-8388608 << 12 !== 0) { 
  throw new Test262Error('#408: -8388608 << 12 === 0. Actual: ' + (-8388608 << 12)); 
} 


if (-16777216 << 12 !== 0) { 
  throw new Test262Error('#409: -16777216 << 12 === 0. Actual: ' + (-16777216 << 12)); 
} 


if (-33554432 << 12 !== 0) { 
  throw new Test262Error('#410: -33554432 << 12 === 0. Actual: ' + (-33554432 << 12)); 
} 


if (-67108864 << 12 !== 0) { 
  throw new Test262Error('#411: -67108864 << 12 === 0. Actual: ' + (-67108864 << 12)); 
} 


if (-134217728 << 12 !== 0) { 
  throw new Test262Error('#412: -134217728 << 12 === 0. Actual: ' + (-134217728 << 12)); 
} 


if (-268435456 << 12 !== 0) { 
  throw new Test262Error('#413: -268435456 << 12 === 0. Actual: ' + (-268435456 << 12)); 
} 


if (-536870912 << 12 !== 0) { 
  throw new Test262Error('#414: -536870912 << 12 === 0. Actual: ' + (-536870912 << 12)); 
} 


if (-1073741824 << 12 !== 0) { 
  throw new Test262Error('#415: -1073741824 << 12 === 0. Actual: ' + (-1073741824 << 12)); 
} 


if (-2147483648 << 12 !== 0) { 
  throw new Test262Error('#416: -2147483648 << 12 === 0. Actual: ' + (-2147483648 << 12)); 
} 


if (-1 << 13 !== -8192) { 
  throw new Test262Error('#417: -1 << 13 === -8192. Actual: ' + (-1 << 13)); 
} 


if (-2 << 13 !== -16384) { 
  throw new Test262Error('#418: -2 << 13 === -16384. Actual: ' + (-2 << 13)); 
} 


if (-4 << 13 !== -32768) { 
  throw new Test262Error('#419: -4 << 13 === -32768. Actual: ' + (-4 << 13)); 
} 


if (-8 << 13 !== -65536) { 
  throw new Test262Error('#420: -8 << 13 === -65536. Actual: ' + (-8 << 13)); 
} 


if (-16 << 13 !== -131072) { 
  throw new Test262Error('#421: -16 << 13 === -131072. Actual: ' + (-16 << 13)); 
} 


if (-32 << 13 !== -262144) { 
  throw new Test262Error('#422: -32 << 13 === -262144. Actual: ' + (-32 << 13)); 
} 


if (-64 << 13 !== -524288) { 
  throw new Test262Error('#423: -64 << 13 === -524288. Actual: ' + (-64 << 13)); 
} 


if (-128 << 13 !== -1048576) { 
  throw new Test262Error('#424: -128 << 13 === -1048576. Actual: ' + (-128 << 13)); 
} 


if (-256 << 13 !== -2097152) { 
  throw new Test262Error('#425: -256 << 13 === -2097152. Actual: ' + (-256 << 13)); 
} 


if (-512 << 13 !== -4194304) { 
  throw new Test262Error('#426: -512 << 13 === -4194304. Actual: ' + (-512 << 13)); 
} 


if (-1024 << 13 !== -8388608) { 
  throw new Test262Error('#427: -1024 << 13 === -8388608. Actual: ' + (-1024 << 13)); 
} 


if (-2048 << 13 !== -16777216) { 
  throw new Test262Error('#428: -2048 << 13 === -16777216. Actual: ' + (-2048 << 13)); 
} 


if (-4096 << 13 !== -33554432) { 
  throw new Test262Error('#429: -4096 << 13 === -33554432. Actual: ' + (-4096 << 13)); 
} 


if (-8192 << 13 !== -67108864) { 
  throw new Test262Error('#430: -8192 << 13 === -67108864. Actual: ' + (-8192 << 13)); 
} 


if (-16384 << 13 !== -134217728) { 
  throw new Test262Error('#431: -16384 << 13 === -134217728. Actual: ' + (-16384 << 13)); 
} 


if (-32768 << 13 !== -268435456) { 
  throw new Test262Error('#432: -32768 << 13 === -268435456. Actual: ' + (-32768 << 13)); 
} 


if (-65536 << 13 !== -536870912) { 
  throw new Test262Error('#433: -65536 << 13 === -536870912. Actual: ' + (-65536 << 13)); 
} 


if (-131072 << 13 !== -1073741824) { 
  throw new Test262Error('#434: -131072 << 13 === -1073741824. Actual: ' + (-131072 << 13)); 
} 


if (-262144 << 13 !== -2147483648) { 
  throw new Test262Error('#435: -262144 << 13 === -2147483648. Actual: ' + (-262144 << 13)); 
} 


if (-524288 << 13 !== 0) { 
  throw new Test262Error('#436: -524288 << 13 === 0. Actual: ' + (-524288 << 13)); 
} 


if (-1048576 << 13 !== 0) { 
  throw new Test262Error('#437: -1048576 << 13 === 0. Actual: ' + (-1048576 << 13)); 
} 


if (-2097152 << 13 !== 0) { 
  throw new Test262Error('#438: -2097152 << 13 === 0. Actual: ' + (-2097152 << 13)); 
} 


if (-4194304 << 13 !== 0) { 
  throw new Test262Error('#439: -4194304 << 13 === 0. Actual: ' + (-4194304 << 13)); 
} 


if (-8388608 << 13 !== 0) { 
  throw new Test262Error('#440: -8388608 << 13 === 0. Actual: ' + (-8388608 << 13)); 
} 


if (-16777216 << 13 !== 0) { 
  throw new Test262Error('#441: -16777216 << 13 === 0. Actual: ' + (-16777216 << 13)); 
} 


if (-33554432 << 13 !== 0) { 
  throw new Test262Error('#442: -33554432 << 13 === 0. Actual: ' + (-33554432 << 13)); 
} 


if (-67108864 << 13 !== 0) { 
  throw new Test262Error('#443: -67108864 << 13 === 0. Actual: ' + (-67108864 << 13)); 
} 


if (-134217728 << 13 !== 0) { 
  throw new Test262Error('#444: -134217728 << 13 === 0. Actual: ' + (-134217728 << 13)); 
} 


if (-268435456 << 13 !== 0) { 
  throw new Test262Error('#445: -268435456 << 13 === 0. Actual: ' + (-268435456 << 13)); 
} 


if (-536870912 << 13 !== 0) { 
  throw new Test262Error('#446: -536870912 << 13 === 0. Actual: ' + (-536870912 << 13)); 
} 


if (-1073741824 << 13 !== 0) { 
  throw new Test262Error('#447: -1073741824 << 13 === 0. Actual: ' + (-1073741824 << 13)); 
} 


if (-2147483648 << 13 !== 0) { 
  throw new Test262Error('#448: -2147483648 << 13 === 0. Actual: ' + (-2147483648 << 13)); 
} 


if (-1 << 14 !== -16384) { 
  throw new Test262Error('#449: -1 << 14 === -16384. Actual: ' + (-1 << 14)); 
} 


if (-2 << 14 !== -32768) { 
  throw new Test262Error('#450: -2 << 14 === -32768. Actual: ' + (-2 << 14)); 
} 


if (-4 << 14 !== -65536) { 
  throw new Test262Error('#451: -4 << 14 === -65536. Actual: ' + (-4 << 14)); 
} 


if (-8 << 14 !== -131072) { 
  throw new Test262Error('#452: -8 << 14 === -131072. Actual: ' + (-8 << 14)); 
} 


if (-16 << 14 !== -262144) { 
  throw new Test262Error('#453: -16 << 14 === -262144. Actual: ' + (-16 << 14)); 
} 


if (-32 << 14 !== -524288) { 
  throw new Test262Error('#454: -32 << 14 === -524288. Actual: ' + (-32 << 14)); 
} 


if (-64 << 14 !== -1048576) { 
  throw new Test262Error('#455: -64 << 14 === -1048576. Actual: ' + (-64 << 14)); 
} 


if (-128 << 14 !== -2097152) { 
  throw new Test262Error('#456: -128 << 14 === -2097152. Actual: ' + (-128 << 14)); 
} 


if (-256 << 14 !== -4194304) { 
  throw new Test262Error('#457: -256 << 14 === -4194304. Actual: ' + (-256 << 14)); 
} 


if (-512 << 14 !== -8388608) { 
  throw new Test262Error('#458: -512 << 14 === -8388608. Actual: ' + (-512 << 14)); 
} 


if (-1024 << 14 !== -16777216) { 
  throw new Test262Error('#459: -1024 << 14 === -16777216. Actual: ' + (-1024 << 14)); 
} 


if (-2048 << 14 !== -33554432) { 
  throw new Test262Error('#460: -2048 << 14 === -33554432. Actual: ' + (-2048 << 14)); 
} 


if (-4096 << 14 !== -67108864) { 
  throw new Test262Error('#461: -4096 << 14 === -67108864. Actual: ' + (-4096 << 14)); 
} 


if (-8192 << 14 !== -134217728) { 
  throw new Test262Error('#462: -8192 << 14 === -134217728. Actual: ' + (-8192 << 14)); 
} 


if (-16384 << 14 !== -268435456) { 
  throw new Test262Error('#463: -16384 << 14 === -268435456. Actual: ' + (-16384 << 14)); 
} 


if (-32768 << 14 !== -536870912) { 
  throw new Test262Error('#464: -32768 << 14 === -536870912. Actual: ' + (-32768 << 14)); 
} 


if (-65536 << 14 !== -1073741824) { 
  throw new Test262Error('#465: -65536 << 14 === -1073741824. Actual: ' + (-65536 << 14)); 
} 


if (-131072 << 14 !== -2147483648) { 
  throw new Test262Error('#466: -131072 << 14 === -2147483648. Actual: ' + (-131072 << 14)); 
} 


if (-262144 << 14 !== 0) { 
  throw new Test262Error('#467: -262144 << 14 === 0. Actual: ' + (-262144 << 14)); 
} 


if (-524288 << 14 !== 0) { 
  throw new Test262Error('#468: -524288 << 14 === 0. Actual: ' + (-524288 << 14)); 
} 


if (-1048576 << 14 !== 0) { 
  throw new Test262Error('#469: -1048576 << 14 === 0. Actual: ' + (-1048576 << 14)); 
} 


if (-2097152 << 14 !== 0) { 
  throw new Test262Error('#470: -2097152 << 14 === 0. Actual: ' + (-2097152 << 14)); 
} 


if (-4194304 << 14 !== 0) { 
  throw new Test262Error('#471: -4194304 << 14 === 0. Actual: ' + (-4194304 << 14)); 
} 


if (-8388608 << 14 !== 0) { 
  throw new Test262Error('#472: -8388608 << 14 === 0. Actual: ' + (-8388608 << 14)); 
} 


if (-16777216 << 14 !== 0) { 
  throw new Test262Error('#473: -16777216 << 14 === 0. Actual: ' + (-16777216 << 14)); 
} 


if (-33554432 << 14 !== 0) { 
  throw new Test262Error('#474: -33554432 << 14 === 0. Actual: ' + (-33554432 << 14)); 
} 


if (-67108864 << 14 !== 0) { 
  throw new Test262Error('#475: -67108864 << 14 === 0. Actual: ' + (-67108864 << 14)); 
} 


if (-134217728 << 14 !== 0) { 
  throw new Test262Error('#476: -134217728 << 14 === 0. Actual: ' + (-134217728 << 14)); 
} 


if (-268435456 << 14 !== 0) { 
  throw new Test262Error('#477: -268435456 << 14 === 0. Actual: ' + (-268435456 << 14)); 
} 


if (-536870912 << 14 !== 0) { 
  throw new Test262Error('#478: -536870912 << 14 === 0. Actual: ' + (-536870912 << 14)); 
} 


if (-1073741824 << 14 !== 0) { 
  throw new Test262Error('#479: -1073741824 << 14 === 0. Actual: ' + (-1073741824 << 14)); 
} 


if (-2147483648 << 14 !== 0) { 
  throw new Test262Error('#480: -2147483648 << 14 === 0. Actual: ' + (-2147483648 << 14)); 
} 


if (-1 << 15 !== -32768) { 
  throw new Test262Error('#481: -1 << 15 === -32768. Actual: ' + (-1 << 15)); 
} 


if (-2 << 15 !== -65536) { 
  throw new Test262Error('#482: -2 << 15 === -65536. Actual: ' + (-2 << 15)); 
} 


if (-4 << 15 !== -131072) { 
  throw new Test262Error('#483: -4 << 15 === -131072. Actual: ' + (-4 << 15)); 
} 


if (-8 << 15 !== -262144) { 
  throw new Test262Error('#484: -8 << 15 === -262144. Actual: ' + (-8 << 15)); 
} 


if (-16 << 15 !== -524288) { 
  throw new Test262Error('#485: -16 << 15 === -524288. Actual: ' + (-16 << 15)); 
} 


if (-32 << 15 !== -1048576) { 
  throw new Test262Error('#486: -32 << 15 === -1048576. Actual: ' + (-32 << 15)); 
} 


if (-64 << 15 !== -2097152) { 
  throw new Test262Error('#487: -64 << 15 === -2097152. Actual: ' + (-64 << 15)); 
} 


if (-128 << 15 !== -4194304) { 
  throw new Test262Error('#488: -128 << 15 === -4194304. Actual: ' + (-128 << 15)); 
} 


if (-256 << 15 !== -8388608) { 
  throw new Test262Error('#489: -256 << 15 === -8388608. Actual: ' + (-256 << 15)); 
} 


if (-512 << 15 !== -16777216) { 
  throw new Test262Error('#490: -512 << 15 === -16777216. Actual: ' + (-512 << 15)); 
} 


if (-1024 << 15 !== -33554432) { 
  throw new Test262Error('#491: -1024 << 15 === -33554432. Actual: ' + (-1024 << 15)); 
} 


if (-2048 << 15 !== -67108864) { 
  throw new Test262Error('#492: -2048 << 15 === -67108864. Actual: ' + (-2048 << 15)); 
} 


if (-4096 << 15 !== -134217728) { 
  throw new Test262Error('#493: -4096 << 15 === -134217728. Actual: ' + (-4096 << 15)); 
} 


if (-8192 << 15 !== -268435456) { 
  throw new Test262Error('#494: -8192 << 15 === -268435456. Actual: ' + (-8192 << 15)); 
} 


if (-16384 << 15 !== -536870912) { 
  throw new Test262Error('#495: -16384 << 15 === -536870912. Actual: ' + (-16384 << 15)); 
} 


if (-32768 << 15 !== -1073741824) { 
  throw new Test262Error('#496: -32768 << 15 === -1073741824. Actual: ' + (-32768 << 15)); 
} 


if (-65536 << 15 !== -2147483648) { 
  throw new Test262Error('#497: -65536 << 15 === -2147483648. Actual: ' + (-65536 << 15)); 
} 


if (-131072 << 15 !== 0) { 
  throw new Test262Error('#498: -131072 << 15 === 0. Actual: ' + (-131072 << 15)); 
} 


if (-262144 << 15 !== 0) { 
  throw new Test262Error('#499: -262144 << 15 === 0. Actual: ' + (-262144 << 15)); 
} 


if (-524288 << 15 !== 0) { 
  throw new Test262Error('#500: -524288 << 15 === 0. Actual: ' + (-524288 << 15)); 
} 


if (-1048576 << 15 !== 0) { 
  throw new Test262Error('#501: -1048576 << 15 === 0. Actual: ' + (-1048576 << 15)); 
} 


if (-2097152 << 15 !== 0) { 
  throw new Test262Error('#502: -2097152 << 15 === 0. Actual: ' + (-2097152 << 15)); 
} 


if (-4194304 << 15 !== 0) { 
  throw new Test262Error('#503: -4194304 << 15 === 0. Actual: ' + (-4194304 << 15)); 
} 


if (-8388608 << 15 !== 0) { 
  throw new Test262Error('#504: -8388608 << 15 === 0. Actual: ' + (-8388608 << 15)); 
} 


if (-16777216 << 15 !== 0) { 
  throw new Test262Error('#505: -16777216 << 15 === 0. Actual: ' + (-16777216 << 15)); 
} 


if (-33554432 << 15 !== 0) { 
  throw new Test262Error('#506: -33554432 << 15 === 0. Actual: ' + (-33554432 << 15)); 
} 


if (-67108864 << 15 !== 0) { 
  throw new Test262Error('#507: -67108864 << 15 === 0. Actual: ' + (-67108864 << 15)); 
} 


if (-134217728 << 15 !== 0) { 
  throw new Test262Error('#508: -134217728 << 15 === 0. Actual: ' + (-134217728 << 15)); 
} 


if (-268435456 << 15 !== 0) { 
  throw new Test262Error('#509: -268435456 << 15 === 0. Actual: ' + (-268435456 << 15)); 
} 


if (-536870912 << 15 !== 0) { 
  throw new Test262Error('#510: -536870912 << 15 === 0. Actual: ' + (-536870912 << 15)); 
} 


if (-1073741824 << 15 !== 0) { 
  throw new Test262Error('#511: -1073741824 << 15 === 0. Actual: ' + (-1073741824 << 15)); 
} 


if (-2147483648 << 15 !== 0) { 
  throw new Test262Error('#512: -2147483648 << 15 === 0. Actual: ' + (-2147483648 << 15)); 
}
