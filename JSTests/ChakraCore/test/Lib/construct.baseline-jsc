   Exception: somevar = new eval().  :: function is not a constructor (evaluating 'new eval()')
   Exception: somevar = new parseInt().  :: function is not a constructor (evaluating 'new parseInt()')
   Exception: somevar = new parseFloat().  :: function is not a constructor (evaluating 'new parseFloat()')
   Exception: somevar = new isNaN().  :: function is not a constructor (evaluating 'new isNaN()')
   Exception: somevar = new isFinite().  :: function is not a constructor (evaluating 'new isFinite()')
   Exception: somevar = new decodeURI().  :: function is not a constructor (evaluating 'new decodeURI()')
   Exception: somevar = new encodeURI().  :: function is not a constructor (evaluating 'new encodeURI()')
   Exception: somevar = new decodeURIComponent().  :: function is not a constructor (evaluating 'new decodeURIComponent()')
   Exception: somevar = new encodeURIComponent().  :: function is not a constructor (evaluating 'new encodeURIComponent()')
No Exception: somevar = new Object()
No Exception: somevar = new Function()
No Exception: somevar = new Array()
No Exception: somevar = new String()
No Exception: somevar = new Boolean()
No Exception: somevar = new Number()
No Exception: somevar = new Date()
No Exception: somevar = new RegExp()
No Exception: somevar = new Error()
No Exception: somevar = new EvalError()
No Exception: somevar = new RangeError()
No Exception: somevar = new ReferenceError()
No Exception: somevar = new SyntaxError()
No Exception: somevar = new TypeError()
No Exception: somevar = new URIError()
   Exception: somevar = new Object.prototype.toString().  :: function is not a constructor (evaluating 'new Object.prototype.toString()')
   Exception: somevar = new Object.prototype.toLocaleString().  :: function is not a constructor (evaluating 'new Object.prototype.toLocaleString()')
   Exception: somevar = new Object.prototype.valueOf().  :: function is not a constructor (evaluating 'new Object.prototype.valueOf()')
   Exception: somevar = new Object.prototype.hasOwnProperty().  :: function is not a constructor (evaluating 'new Object.prototype.hasOwnProperty()')
   Exception: somevar = new Object.prototype.isPrototypeOf().  :: function is not a constructor (evaluating 'new Object.prototype.isPrototypeOf()')
   Exception: somevar = new Object.prototype.propertyIsEnumerable().  :: function is not a constructor (evaluating 'new Object.prototype.propertyIsEnumerable()')
No Exception: somevar = new Function.prototype.constructor()
   Exception: somevar = new Function.prototype.toString().  :: function is not a constructor (evaluating 'new Function.prototype.toString()')
   Exception: somevar = new Function.prototype.apply().  :: function is not a constructor (evaluating 'new Function.prototype.apply()')
   Exception: somevar = new Function.prototype.call().  :: function is not a constructor (evaluating 'new Function.prototype.call()')
No Exception: somevar = new Array.prototype.constructor()
   Exception: somevar = new Array.prototype.toString().  :: function is not a constructor (evaluating 'new Array.prototype.toString()')
   Exception: somevar = new Array.prototype.toLocaleString().  :: function is not a constructor (evaluating 'new Array.prototype.toLocaleString()')
   Exception: somevar = new Array.prototype.concat().  :: function is not a constructor (evaluating 'new Array.prototype.concat()')
   Exception: somevar = new Array.prototype.join().  :: function is not a constructor (evaluating 'new Array.prototype.join()')
   Exception: somevar = new Array.prototype.pop().  :: function is not a constructor (evaluating 'new Array.prototype.pop()')
   Exception: somevar = new Array.prototype.push().  :: function is not a constructor (evaluating 'new Array.prototype.push()')
   Exception: somevar = new Array.prototype.reverse().  :: function is not a constructor (evaluating 'new Array.prototype.reverse()')
   Exception: somevar = new Array.prototype.shift().  :: function is not a constructor (evaluating 'new Array.prototype.shift()')
   Exception: somevar = new Array.prototype.slice().  :: function is not a constructor (evaluating 'new Array.prototype.slice()')
   Exception: somevar = new Array.prototype.sort().  :: function is not a constructor (evaluating 'new Array.prototype.sort()')
   Exception: somevar = new Array.prototype.splice().  :: function is not a constructor (evaluating 'new Array.prototype.splice()')
   Exception: somevar = new Array.prototype.unshift().  :: function is not a constructor (evaluating 'new Array.prototype.unshift()')
No Exception: somevar = new String.prototype.constructor()
   Exception: somevar = new String.prototype.toString().  :: function is not a constructor (evaluating 'new String.prototype.toString()')
   Exception: somevar = new String.prototype.valueOf().  :: function is not a constructor (evaluating 'new String.prototype.valueOf()')
   Exception: somevar = new String.prototype.charAt().  :: function is not a constructor (evaluating 'new String.prototype.charAt()')
   Exception: somevar = new String.prototype.charCodeAt().  :: function is not a constructor (evaluating 'new String.prototype.charCodeAt()')
   Exception: somevar = new String.prototype.concat().  :: function is not a constructor (evaluating 'new String.prototype.concat()')
   Exception: somevar = new String.prototype.indexOf().  :: function is not a constructor (evaluating 'new String.prototype.indexOf()')
   Exception: somevar = new String.prototype.lastIndexOf().  :: function is not a constructor (evaluating 'new String.prototype.lastIndexOf()')
   Exception: somevar = new String.prototype.localeCompare().  :: function is not a constructor (evaluating 'new String.prototype.localeCompare()')
   Exception: somevar = new String.prototype.match().  :: function is not a constructor (evaluating 'new String.prototype.match()')
   Exception: somevar = new String.prototype.replace().  :: function is not a constructor (evaluating 'new String.prototype.replace()')
   Exception: somevar = new String.prototype.search().  :: function is not a constructor (evaluating 'new String.prototype.search()')
   Exception: somevar = new String.prototype.slice().  :: function is not a constructor (evaluating 'new String.prototype.slice()')
   Exception: somevar = new String.prototype.split().  :: function is not a constructor (evaluating 'new String.prototype.split()')
   Exception: somevar = new String.prototype.substring().  :: function is not a constructor (evaluating 'new String.prototype.substring()')
   Exception: somevar = new String.prototype.toLowerCase().  :: function is not a constructor (evaluating 'new String.prototype.toLowerCase()')
   Exception: somevar = new String.prototype.toLocaleLowerCase().  :: function is not a constructor (evaluating 'new String.prototype.toLocaleLowerCase()')
   Exception: somevar = new String.prototype.toUpperCase().  :: function is not a constructor (evaluating 'new String.prototype.toUpperCase()')
   Exception: somevar = new String.prototype.toLocaleUpperCase().  :: function is not a constructor (evaluating 'new String.prototype.toLocaleUpperCase()')
   Exception: somevar = new String.prototype.anchor().  :: function is not a constructor (evaluating 'new String.prototype.anchor()')
   Exception: somevar = new String.prototype.big().  :: function is not a constructor (evaluating 'new String.prototype.big()')
   Exception: somevar = new String.prototype.blink().  :: function is not a constructor (evaluating 'new String.prototype.blink()')
   Exception: somevar = new String.prototype.bold().  :: function is not a constructor (evaluating 'new String.prototype.bold()')
   Exception: somevar = new String.prototype.fixed().  :: function is not a constructor (evaluating 'new String.prototype.fixed()')
   Exception: somevar = new String.prototype.fontcolor().  :: function is not a constructor (evaluating 'new String.prototype.fontcolor()')
   Exception: somevar = new String.prototype.fontsize().  :: function is not a constructor (evaluating 'new String.prototype.fontsize()')
   Exception: somevar = new String.prototype.italics().  :: function is not a constructor (evaluating 'new String.prototype.italics()')
   Exception: somevar = new String.prototype.link().  :: function is not a constructor (evaluating 'new String.prototype.link()')
   Exception: somevar = new String.prototype.small().  :: function is not a constructor (evaluating 'new String.prototype.small()')
   Exception: somevar = new String.prototype.strike().  :: function is not a constructor (evaluating 'new String.prototype.strike()')
   Exception: somevar = new String.prototype.sub().  :: function is not a constructor (evaluating 'new String.prototype.sub()')
   Exception: somevar = new String.prototype.sup().  :: function is not a constructor (evaluating 'new String.prototype.sup()')
   Exception: somevar = new String.prototype.substr().  :: function is not a constructor (evaluating 'new String.prototype.substr()')
   Exception: somevar = new String.fromCharCode().  :: function is not a constructor (evaluating 'new String.fromCharCode()')
No Exception: somevar = new Boolean.prototype.constructor()
   Exception: somevar = new Boolean.prototype.toString().  :: function is not a constructor (evaluating 'new Boolean.prototype.toString()')
   Exception: somevar = new Boolean.prototype.valueOf().  :: function is not a constructor (evaluating 'new Boolean.prototype.valueOf()')
No Exception: somevar = new Number.prototype.constructor()
   Exception: somevar = new Number.prototype.toString().  :: function is not a constructor (evaluating 'new Number.prototype.toString()')
   Exception: somevar = new Number.prototype.toLocaleString().  :: function is not a constructor (evaluating 'new Number.prototype.toLocaleString()')
   Exception: somevar = new Number.prototype.valueOf().  :: function is not a constructor (evaluating 'new Number.prototype.valueOf()')
   Exception: somevar = new Number.prototype.toFixed().  :: function is not a constructor (evaluating 'new Number.prototype.toFixed()')
   Exception: somevar = new Number.prototype.toExponential().  :: function is not a constructor (evaluating 'new Number.prototype.toExponential()')
   Exception: somevar = new Number.prototype.toPrecision().  :: function is not a constructor (evaluating 'new Number.prototype.toPrecision()')
   Exception: somevar = new Math.abs().  :: function is not a constructor (evaluating 'new Math.abs()')
   Exception: somevar = new Math.acos().  :: function is not a constructor (evaluating 'new Math.acos()')
   Exception: somevar = new Math.asin().  :: function is not a constructor (evaluating 'new Math.asin()')
   Exception: somevar = new Math.atan().  :: function is not a constructor (evaluating 'new Math.atan()')
   Exception: somevar = new Math.atan2().  :: function is not a constructor (evaluating 'new Math.atan2()')
   Exception: somevar = new Math.ceil().  :: function is not a constructor (evaluating 'new Math.ceil()')
   Exception: somevar = new Math.cos().  :: function is not a constructor (evaluating 'new Math.cos()')
   Exception: somevar = new Math.exp().  :: function is not a constructor (evaluating 'new Math.exp()')
   Exception: somevar = new Math.floor().  :: function is not a constructor (evaluating 'new Math.floor()')
   Exception: somevar = new Math.log().  :: function is not a constructor (evaluating 'new Math.log()')
   Exception: somevar = new Math.max().  :: function is not a constructor (evaluating 'new Math.max()')
   Exception: somevar = new Math.min().  :: function is not a constructor (evaluating 'new Math.min()')
   Exception: somevar = new Math.pow().  :: function is not a constructor (evaluating 'new Math.pow()')
   Exception: somevar = new Math.random().  :: function is not a constructor (evaluating 'new Math.random()')
   Exception: somevar = new Math.round().  :: function is not a constructor (evaluating 'new Math.round()')
   Exception: somevar = new Math.sin().  :: function is not a constructor (evaluating 'new Math.sin()')
   Exception: somevar = new Math.sqrt().  :: function is not a constructor (evaluating 'new Math.sqrt()')
   Exception: somevar = new Math.tan().  :: function is not a constructor (evaluating 'new Math.tan()')
No Exception: somevar = new Date.prototype.constructor()
   Exception: somevar = new Date.prototype.toString().  :: function is not a constructor (evaluating 'new Date.prototype.toString()')
   Exception: somevar = new Date.prototype.toDateString().  :: function is not a constructor (evaluating 'new Date.prototype.toDateString()')
   Exception: somevar = new Date.prototype.toTimeString().  :: function is not a constructor (evaluating 'new Date.prototype.toTimeString()')
   Exception: somevar = new Date.prototype.toLocaleString().  :: function is not a constructor (evaluating 'new Date.prototype.toLocaleString()')
   Exception: somevar = new Date.prototype.toLocaleDateString().  :: function is not a constructor (evaluating 'new Date.prototype.toLocaleDateString()')
   Exception: somevar = new Date.prototype.valueOf().  :: function is not a constructor (evaluating 'new Date.prototype.valueOf()')
   Exception: somevar = new Date.prototype.getTime().  :: function is not a constructor (evaluating 'new Date.prototype.getTime()')
   Exception: somevar = new Date.prototype.getFullYear().  :: function is not a constructor (evaluating 'new Date.prototype.getFullYear()')
   Exception: somevar = new Date.prototype.getUTCFullYear().  :: function is not a constructor (evaluating 'new Date.prototype.getUTCFullYear()')
   Exception: somevar = new Date.prototype.getMonth().  :: function is not a constructor (evaluating 'new Date.prototype.getMonth()')
   Exception: somevar = new Date.prototype.getUTCMonth().  :: function is not a constructor (evaluating 'new Date.prototype.getUTCMonth()')
   Exception: somevar = new Date.prototype.getDate().  :: function is not a constructor (evaluating 'new Date.prototype.getDate()')
   Exception: somevar = new Date.prototype.getUTCDate().  :: function is not a constructor (evaluating 'new Date.prototype.getUTCDate()')
   Exception: somevar = new Date.prototype.getDay().  :: function is not a constructor (evaluating 'new Date.prototype.getDay()')
   Exception: somevar = new Date.prototype.getUTCDay().  :: function is not a constructor (evaluating 'new Date.prototype.getUTCDay()')
   Exception: somevar = new Date.prototype.getHours().  :: function is not a constructor (evaluating 'new Date.prototype.getHours()')
   Exception: somevar = new Date.prototype.getUTCHours().  :: function is not a constructor (evaluating 'new Date.prototype.getUTCHours()')
   Exception: somevar = new Date.prototype.getMinutes().  :: function is not a constructor (evaluating 'new Date.prototype.getMinutes()')
   Exception: somevar = new Date.prototype.getUTCMinutes().  :: function is not a constructor (evaluating 'new Date.prototype.getUTCMinutes()')
   Exception: somevar = new Date.prototype.getSeconds().  :: function is not a constructor (evaluating 'new Date.prototype.getSeconds()')
   Exception: somevar = new Date.prototype.getUTCSeconds().  :: function is not a constructor (evaluating 'new Date.prototype.getUTCSeconds()')
   Exception: somevar = new Date.prototype.getMilliseconds().  :: function is not a constructor (evaluating 'new Date.prototype.getMilliseconds()')
   Exception: somevar = new Date.prototype.getUTCMilliseconds().  :: function is not a constructor (evaluating 'new Date.prototype.getUTCMilliseconds()')
   Exception: somevar = new Date.prototype.getTimezoneOffset().  :: function is not a constructor (evaluating 'new Date.prototype.getTimezoneOffset()')
   Exception: somevar = new Date.prototype.setTime().  :: function is not a constructor (evaluating 'new Date.prototype.setTime()')
   Exception: somevar = new Date.prototype.setMilliseconds().  :: function is not a constructor (evaluating 'new Date.prototype.setMilliseconds()')
   Exception: somevar = new Date.prototype.setUTCMilliseconds().  :: function is not a constructor (evaluating 'new Date.prototype.setUTCMilliseconds()')
   Exception: somevar = new Date.prototype.setSeconds().  :: function is not a constructor (evaluating 'new Date.prototype.setSeconds()')
   Exception: somevar = new Date.prototype.setUTCSeconds().  :: function is not a constructor (evaluating 'new Date.prototype.setUTCSeconds()')
   Exception: somevar = new Date.prototype.setMinutes().  :: function is not a constructor (evaluating 'new Date.prototype.setMinutes()')
   Exception: somevar = new Date.prototype.setUTCMinutes().  :: function is not a constructor (evaluating 'new Date.prototype.setUTCMinutes()')
   Exception: somevar = new Date.prototype.setHours().  :: function is not a constructor (evaluating 'new Date.prototype.setHours()')
   Exception: somevar = new Date.prototype.setUTCHours().  :: function is not a constructor (evaluating 'new Date.prototype.setUTCHours()')
   Exception: somevar = new Date.prototype.setDate().  :: function is not a constructor (evaluating 'new Date.prototype.setDate()')
   Exception: somevar = new Date.prototype.setUTCDate().  :: function is not a constructor (evaluating 'new Date.prototype.setUTCDate()')
   Exception: somevar = new Date.prototype.setMonth().  :: function is not a constructor (evaluating 'new Date.prototype.setMonth()')
   Exception: somevar = new Date.prototype.setUTCMonth().  :: function is not a constructor (evaluating 'new Date.prototype.setUTCMonth()')
   Exception: somevar = new Date.prototype.setFullYear().  :: function is not a constructor (evaluating 'new Date.prototype.setFullYear()')
   Exception: somevar = new Date.prototype.setUTCFullYear().  :: function is not a constructor (evaluating 'new Date.prototype.setUTCFullYear()')
   Exception: somevar = new Date.prototype.toUTCString().  :: function is not a constructor (evaluating 'new Date.prototype.toUTCString()')
   Exception: somevar = new Date.prototype.toGMTString().  :: function is not a constructor (evaluating 'new Date.prototype.toGMTString()')
   Exception: somevar = new Date.prototype.toLocaleTimeString().  :: function is not a constructor (evaluating 'new Date.prototype.toLocaleTimeString()')
   Exception: somevar = new Date.prototype.toUTCString().  :: function is not a constructor (evaluating 'new Date.prototype.toUTCString()')
   Exception: somevar = new Date.prototype.setYear().  :: function is not a constructor (evaluating 'new Date.prototype.setYear()')
   Exception: somevar = new Date.prototype.getYear().  :: function is not a constructor (evaluating 'new Date.prototype.getYear()')
   Exception: somevar = new Date.parse().  :: function is not a constructor (evaluating 'new Date.parse()')
   Exception: somevar = new Date.UTC().  :: function is not a constructor (evaluating 'new Date.UTC()')
No Exception: somevar = new RegExp.prototype.constructor()
   Exception: somevar = new RegExp.prototype.exec().  :: function is not a constructor (evaluating 'new RegExp.prototype.exec()')
   Exception: somevar = new RegExp.prototype.test().  :: function is not a constructor (evaluating 'new RegExp.prototype.test()')
   Exception: somevar = new RegExp.prototype.toString().  :: function is not a constructor (evaluating 'new RegExp.prototype.toString()')
No Exception: somevar = new Error.prototype.constructor()
   Exception: somevar = new Error.prototype.name().  :: "Error" is not a constructor (evaluating 'new Error.prototype.name()')
   Exception: somevar = new Error.prototype.message().  :: "" is not a constructor (evaluating 'new Error.prototype.message()')
   Exception: somevar = new Error.prototype.toString().  :: function is not a constructor (evaluating 'new Error.prototype.toString()')
