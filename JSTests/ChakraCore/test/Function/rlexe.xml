<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
  <test>
    <default>
      <files>apply.js</files>
      <baseline>apply.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>apply3.js</files>
      <baseline>apply3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>applyArgs.js</files>
      <baseline>applyArgs.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>arguments1.js</files>
      <baseline>arguments1.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>arguments2.js</files>
      <baseline>arguments2.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>arguments3.js</files>
      <baseline>arguments3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>arguments4.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>argumentsMisc.js</files>
      <baseline>argumentsMisc_3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>arguments.es5.js</files>
      <baseline>arguments.es5.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>argumentsResolution.js</files>
      <baseline>argumentsResolution_3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>argumentsLimits.js</files>
      <baseline>argumentsLimits.baseline</baseline>
      <!-- this test takes a long time with dynapogo on chk build -->
      <tags>exclude_chk</tags>
    </default>
  </test>
  <test>
    <default>
      <files>someMoreArguments.js</files>
      <baseline>someMoreArguments_3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bind.js</files>
      <baseline>bind.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>call1.js</files>
      <baseline>call1.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>call2.js</files>
      <baseline>call2.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>CallerArgs.js</files>
      <baseline>CallerArgsES5.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>callsideeffects.js</files>
      <baseline>callsideeffects_3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>catchsymbolvar.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>newsideeffect.js</files>
      <baseline>newsideeffect.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>newsideeffect.js</files>
      <baseline>newsideeffect.baseline</baseline>
      <compile-flags>-Force:Deferparse</compile-flags>
      <tags>exclude_ship</tags>
    </default>
  </test>
  <test>
    <default>
      <files>callmissingtgt.js</files>
      <baseline>callmissingtgt.6.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>defernested.js</files>
      <baseline>defernested.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>defernested.js</files>
      <compile-flags>-Force:Deferparse -DeferNested</compile-flags>
      <baseline>defernested.baseline</baseline>
      <tags>exclude_ship</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jitLoopBody.js</files>
      <baseline>jitLoopBody.baseline</baseline>
      <compile-flags>-force:jitLoopBody</compile-flags>
      <tags>exclude_ship</tags>
    </default>
  </test>
  <test>
    <default>
      <files>deferredParsing.js</files>
      <compile-flags>-force:deferparse</compile-flags>
      <baseline>deferredParsing_3.baseline</baseline>
      <tags>exclude_fre</tags>
    </default>
  </test>
  <test>
    <default>
      <files>deferredParsing.js</files>
      <compile-flags>-forceUndoDefer</compile-flags>
      <baseline>deferredParsing_3.baseline</baseline>
      <tags>exclude_fre</tags>
    </default>
  </test>
  <test>
    <default>
      <files>deferredGetterSetter.js</files>
      <compile-flags>-force:deferparse</compile-flags>
      <baseline>deferredGetterSetter.baseline</baseline>
      <tags>exclude_fre</tags>
    </default>
  </test>
  <test>
    <default>
      <files>deferredBadContinue.js</files>
      <baseline>deferredBadContinue.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>deferredBadContinue.js</files>
      <baseline>deferredBadContinue.baseline</baseline>
      <compile-flags>-Force:Deferparse</compile-flags>
      <tags>exclude_ship,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>deferredWith.js</files>
      <compile-flags>-Force:Deferparse</compile-flags>
      <baseline>deferredWith.v4.baseline</baseline>
      <tags>exclude_fre</tags>
    </default>
  </test>
  <test>
    <default>
      <files>deferredWith2.js</files>
      <compile-flags>-Force:Deferparse</compile-flags>
      <baseline>deferredWith2.baseline</baseline>
      <tags>exclude_fre</tags>
    </default>
  </test>
  <test>
    <default>
      <files>newFunction.js</files>
      <baseline>newFunction.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>prototype.js</files>
      <baseline>prototype.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>TApply1.js</files>
      <baseline>TApply1.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>toString.js</files>
      <baseline>toString.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>funcExpr.js</files>
      <baseline>funcExpr5.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>moreFuncExpr.js</files>
      <baseline>moreFuncExpr3.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>moreFuncExpr.js</files>
      <baseline>moreFuncExpr3.baseline</baseline>
      <compile-flags>-forceundodefer</compile-flags>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>evenMoreFuncExpr3.js</files>
      <baseline>evenMoreFuncExpr3.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>someMoreFuncExpr.js</files>
      <baseline>someMoreFuncExpr3.baseline</baseline>
      <tags>fail_mutators</tags>
    </default>
  </test>
  <test>
    <default>
      <files>constructor.js</files>
      <baseline>constructor.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>ctrFlags.js</files>
      <baseline>ctrFlags3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>typeErrorAccessor.js</files>
      <baseline>typeErrorAccessor.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>FuncBody.js</files>
      <baseline>FuncBodyES5.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>FuncBody.bug133933.js</files>
      <baseline>FuncBody.bug133933.baseline</baseline>
      <compile-flags>-trace:FunctionSourceInfoParse -off:deferparse</compile-flags>
      <tags>exclude_fre,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>FuncBody.bug227901.js</files>
      <baseline>FuncBody.bug227901.baseline</baseline>
      <compile-flags>-off:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>FuncBody.bug232281.js</files>
      <baseline>FuncBody.bug232281.baseline</baseline>
      <compile-flags>-off:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>FuncBody.bug236810.js</files>
      <baseline>FuncBody.bug236810.baseline</baseline>
      <compile-flags>-off:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>FuncBody.bug231397.js</files>
      <baseline>FuncBody.bug231397.baseline</baseline>
      <compile-flags>-dump:bytecode</compile-flags>
      <tags>exclude_bytecodelayout,exclude_fre,require_backend</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_258259.js</files>
      <baseline>bug_258259.baseline</baseline>
      <compile-flags>-ExtendedErrorStackForTestHost</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>sameNamePara.js</files>
      <baseline>sameNamePara.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>closure.js</files>
      <baseline>closure.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>undefThis.js</files>
      <baseline>undefThis.v10.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>stackargs.js</files>
      <baseline>stackargs.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>StackArgsWithFormals.js</files>
      <compile-flags>-mic:1 -off:simpleJit</compile-flags>
    </default>
  </test>
   <test>
    <default>
      <files>StackArgsWithFormals.js</files>
      <compile-flags>-mic:1 -off:simpleJit -forceserialized</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>StackArgsWithFormals.js</files>
      <compile-flags>-mic:1 -off:simpleJit -forcedeferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>StackArgsWithFormals.js</files>
      <compile-flags>-mic:1 -off:simpleJit -trace:stackargformalsopt</compile-flags>
      <tags>exclude_dynapogo,exclude_ship,exclude_fre,exclude_nonative,require_backend,exclude_forceserialized</tags>
      <baseline>StackArgsWithFormals.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>StackArgs_MaxInterpret.js</files>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit</compile-flags>
      <tags>exclude_dynapogo,exclude_ship</tags>
    </default>
  </test>
  <test>
    <default>
      <files>childCallsEvalJitLoopBody.js</files>
      <baseline />
      <compile-flags>-prejit</compile-flags>
      <tags>exclude_fre,exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>631838.js</files>
      <compile-flags>-nonative</compile-flags>
      <baseline>631838.baseline</baseline>
      <!-- On ARM it would take TOO long (700s on Tegra 2 vs 20s on Intel Core i7) to run, as we need to use even bigger object -->
      <tags>exclude_dynapogo,exclude_arm,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>calli.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>caller_replaced_proto.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug542360.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>crosssite_bind_main.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>failnativecodeinstall.js</files>
      <compile-flags>/maxinterpretcount:2 /lic:1 /bgjit /off:simplejit /on:failnativecodeinstall</compile-flags>
      <tags>exclude_dynapogo,require_backend</tags>
      <baseline>failnativecodeinstall.baseline</baseline>
    </default>
  </test>
</regress-exe>
