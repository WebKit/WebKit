<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
  <test>
    <default>
      <files>bug602.js</files>
      <baseline>bug602_3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bug764.js</files>
      <baseline>bug764.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>withnonativeApplyOptimizationBug3433559.js</files>
      <compile-flags>-nonative</compile-flags>
      <tags>BugFix</tags>
    </default>
  </test>
  <test>
    <default>
      <files>Win8_486977_BranchStrictEqual.js</files>
      <baseline>Win8_486977_BranchStrictEqual.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>Win8_459638.js</files>
      <baseline>Win8_459638.baseline</baseline>
      <tags>exclude_x86,exclude_amd64</tags>
      <!-- The bug is related to ARM only -->
      <compile-flags>-forceNative -off:simpleJit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS_1197716.js</files>
      <compile-flags>-deferparse</compile-flags>
      <tags>BugFix</tags>
    </default>
  </test>
  <test>
    <default>
      <files>addexception.js</files>
      <baseline>addexception.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>regalloc.js</files>
      <baseline>regalloc.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>randombug.js</files>
      <baseline>randombug.baseline</baseline>
      <compile-flags>-ExtendedErrorStackForTestHost</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>blue_532460.js</files>
      <compile-flags>-MaxinterpretCount:1 -MaxSimpleJITRunCount:0 -loopinterpretcount:1 -force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug56026.js</files>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug56026_minimal.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug56026_minimalWithProperties.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug56026_nested.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug56026_trycatch.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>blue_245702.js</files>
      <baseline>blue_245702.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:2 -maxsimplejitruncount:5  -off:inline</compile-flags>
      <files>bug547302.js</files>
      <tags>exclude_shp</tags>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:2  -MaxLinearStringCaseCount:2 -MaxLinearIntCaseCount:2 -forceserialized -MinSwitchJumpTableSize:3 -bgjit- -loopinterpretcount:1 -force:fieldhoist -force:polymorphicinlinecache -force:fieldcopyprop -sse:2 -force:interpreterautoprofile</compile-flags>
      <files>bug215238.mul-53-ovf.js</files>
      <baseline>bug215238.mul-53-ovf.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1  -MinSwitchJumpTableSize:3 -bgjit- -loopinterpretcount:1 -force:fieldhoist -force:rejit -force:ScriptFunctionWithInlineCache -force:fixdataprops</compile-flags>
      <files>bug215238-shrua.js</files>
      <baseline>bug215238-shrua.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1  -force:polymorphicinlinecache -MinSwitchJumpTableSize:2 -force:rejit -force:ScriptFunctionWithInlineCache -force:atom -off:ArrayCheckHoist -force:fixdataprops -ForceArrayBTree</compile-flags>
      <files>bug215238.shrua-2.js</files>
      <baseline>bug215238.shrua-2.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -off:simplejit</compile-flags>
      <files>bug435809.js</files>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -off:simplejit -force:fixdataprops</compile-flags>
      <files>bug594298.js</files>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-loopinterpretcount:1 -bgjit- -maxsimplejitruncount:1 -maxinterpretcount:1 -force:inline</compile-flags>
      <files>bug661952.js</files>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-loopinterpretcount:1 -bgjit- -maxsimplejitruncount:1 -maxinterpretcount:1 -force:deferparse -force:inline</compile-flags>
      <files>bug724121.js</files>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -force:fieldcopyprop -forceserialized</compile-flags>
      <files>deserializationbug339404.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug843670.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug934443.js</files>
      <compile-flags>-force:fieldcopyprop -off:dynamicprofile</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>vso_os_1091425.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug1092916.js</files>
      <compile-flags>-mic:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>blue_1096569.js</files>
      <compile-flags>-MaxinterpretCount:2 -off:simplejit -force:Inline -off:insertnops</compile-flags>
      <baseline>blue_1096569.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>blue_1086262.js</files>
      <compile-flags>-off:insertnops -bgjit- -fja:2 -off:simplejit -force:fieldcopyprop -off:aggressiveinttypespec</compile-flags>
      <baseline>blue_1086262.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bug1288931.js</files>
      <compile-flags>-mic:1 -off:simplejit -off:fastpath</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>OS_1362136.js</files>
      <compile-flags>-mic:1 -off:simplejit -off:fastpath</compile-flags>
      <tags>BugFix</tags>
    </default>
  </test>
  <test>
    <default>
      <files>SIMDExtendArgCSE.js</files>
      <baseline>SIMDExtendArgCSE.baseline</baseline>
      <tags>exclude_dynapogo,exclude_ship,require_backend</tags>
      <compile-flags>-bgjit- -on:asmjs -simdjs -testtrace:asmjs -AsmJsStopOnError -maic:0</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS_4683246.js</files>
      <tags>exclude_dynapogo</tags>
      <compile-flags>-loopinterpretcount:0 -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>fabs1.js</files>
      <tags>exclude_dynapogo,require_backend</tags>
      <compile-flags>-off:backend -asmjs -testtrace:asmjs</compile-flags>
      <baseline>fabs1.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>OS_5248645.js</files>
      <tags>exclude_dynapogo</tags>
      <compile-flags>-maxinterpretCount:2 -off:simplejit -off:dynamicProfile -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>OS_5553123.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>symbol_tostring.js</files>
      <compile-flags>-maxsimplejitruncount:1 -maxinterpretcount:1 -force:fieldcopyprop</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>default_undodefer.js</files>
      <compile-flags>-forcedeferparse -forceundodefer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>Bug_resetisdead.js</files>
      <compile-flags>-on:prelowererpeeps</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_es5array.js</files>
      <compile-flags>-off:NativeArray -ForceES5Array</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>simpletypehandler-property-deletion.js</files>
      <compile-flags>-ES6FunctionName -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>HasOnlyWritableDataProperties-cross-context.js</files>
      <compile-flags>-nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>b208.js</files>
      <baseline>b208.baseline</baseline>
      <tags>require_backend</tags>
      <compile-flags> -bgjit- -simdjs -simd128typespec -mic:1 -lic:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>b208_asmjs.js</files>
      <baseline>b208_asmjs.baseline</baseline>
      <tags>exclude_dynapogo,exclude_ship,require_backend</tags>
      <compile-flags>-simdjs -AsmJsStopOnError -maic:0</compile-flags>
    </default>
  </test> 
  <test>
    <default>
      <files>b208_asmjs.js</files>
      <baseline>b208_asmjs.baseline</baseline>
      <tags>exclude_dynapogo,exclude_ship,require_backend</tags>
      <compile-flags> -bgjit- -simdjs -simd128typespec -asmjs- -mic:1 -lic:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>testSimdManyVars.js</files>
      <baseline>testSimdManyVars.baseline</baseline>
      <tags>exclude_dynapogo,exclude_ship,require_backend</tags>
      <compile-flags> -simdjs -asmjs -off:backend -testtrace:asmjs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>b95.js</files>
      <baseline>b95.baseline</baseline>
      <tags>exclude_dynapogo,exclude_ship,require_backend</tags>
      <compile-flags>-simdjs -testtrace:asmjs  -asmjs -maic:0</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>b108.js</files>
      <baseline>b108.baseline</baseline>
      <tags>exclude_dynapogo,exclude_ship,require_backend</tags>
      <compile-flags>-simdjs  -asmjs -testtrace:asmjs -asmjsstoponerror</compile-flags>
    </default>
  </test>
</regress-exe>
