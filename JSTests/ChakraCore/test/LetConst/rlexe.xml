<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
  <test>
    <default>
      <files>a.js</files>
      <baseline>a.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>b.js</files>
      <baseline>b.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>c.js</files>
      <baseline>c.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>d.js</files>
      <baseline>d.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>d.js</files>
      <baseline>d.baseline</baseline>
      <compile-flags>-forceundodefer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>e.js</files>
      <baseline>e.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>e.js</files>
      <baseline>e.baseline</baseline>
      <compile-flags>-forceundodefer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>f.js</files>
      <baseline>f.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>g.js</files>
      <baseline>g.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>h.js</files>
      <baseline>h.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>i.js</files>
      <baseline>i.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>j.js</files>
      <baseline>j.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>k.js</files>
      <baseline>k.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>l.js</files>
      <baseline>l.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>m.js</files>
      <baseline>m.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>n.js</files>
      <baseline>n.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>o.js</files>
      <baseline>o.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>p.js</files>
      <baseline>p.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>q.js</files>
      <baseline>q.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>redeclaration.js</files>
      <baseline>redeclaration.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>redeclaration.js</files>
      <baseline>redeclaration.baseline</baseline>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>r.js</files>
      <baseline>r.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>AssignmentToConst.js</files>
      <baseline>AssignmentToConst.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>DeclOutofBlock.js</files>
      <baseline>DeclOutofBlock.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>DeclOutofBlock.js</files>
      <baseline>DeclOutofBlock.baseline</baseline>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>defer1.js</files>
      <baseline>defer1.baseline</baseline>
      <compile-flags>-force:deferparse</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>defer2.js</files>
      <baseline>defer2.baseline</baseline>
      <compile-flags>-force:deferparse</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>defer3.js</files>
      <baseline>defer3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>defer4.js</files>
      <baseline>defer4.baseline</baseline>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>defer5.js</files>
      <baseline>defer5.baseline</baseline>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>tdz1.js</files>
      <baseline>tdz1.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>tdz2.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>eval1.js</files>
      <baseline>eval1.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>eval1.js</files>
      <baseline>eval1.baseline</baseline>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>scopegen1.js</files>
      <baseline>scopegen1.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>constreassign1.js</files>
      <baseline>constreassign1.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>mixedscope.js</files>
      <baseline>mixedscope.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>for-loop.js</files>
      <baseline>for-loop.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>for-loop.js</files>
      <baseline>for-loop.baseline</baseline>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>letvar.js</files>
      <baseline>letvar.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>eval_letconst.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>eval_letconst.js</files>
      <compile-flags>-force:deferparse</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>eval_letconst.js</files>
      <compile-flags>-force:evalcompile</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>eval_letconst.js</files>
      <compile-flags>-force:deferparse -force:evalcompile</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>arguments.js</files>
      <baseline>arguments.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>seal.js</files>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>seal1.js</files>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>seal2.js</files>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>dop.js</files>
      <baseline>dop.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>dop1.js</files>
      <baseline>dop1.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>delete.js</files>
      <baseline>delete.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>eval_fncdecl.js</files>
      <baseline>eval_fncdecl.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>storeundecl_multiscript.js</files>
      <baseline>storeundecl_multiscript.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>storeundecl_eval.js</files>
      <baseline>storeundecl_eval.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>with.js</files>
      <baseline>with.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>unassignedconst.js</files>
      <compile-flags>-Intl-</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>unassignedconst.js</files>
      <compile-flags>-Intl- -force:deferparse</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>letconst_undeclinlinecache.js</files>
      <compile-flags>-Intl-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>loopinit.js</files>
      <compile-flags>-loopinterpretcount:1 -bgjit-</compile-flags>
      <baseline>loopinit.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>letlet.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
</regress-exe>
