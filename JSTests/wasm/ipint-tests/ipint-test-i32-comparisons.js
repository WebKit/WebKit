import { instantiate } from "../wabt-wrapper.js"
import * as assert from "../assert.js"

let wat = `
(module
    (func (export "eqz") (param i32) (result i32)
        (local.get 0)
        (i32.eqz)
        (return)
    )
    (func (export "eq") (param i32 i32) (result i32)
        (local.get 0)
        (local.get 1)
        (i32.eq)
        (return)
    )
    (func (export "ne") (param i32 i32) (result i32)
        (local.get 0)
        (local.get 1)
        (i32.ne)
        (return)
    )
    (func (export "lt_s") (param i32 i32) (result i32)
        (local.get 0)
        (local.get 1)
        (i32.lt_s)
        (return)
    )
    (func (export "lt_u") (param i32 i32) (result i32)
        (local.get 0)
        (local.get 1)
        (i32.lt_u)
        (return)
    )
    (func (export "gt_s") (param i32 i32) (result i32)
        (local.get 0)
        (local.get 1)
        (i32.gt_s)
        (return)
    )
    (func (export "gt_u") (param i32 i32) (result i32)
        (local.get 0)
        (local.get 1)
        (i32.gt_u)
        (return)
    )
    (func (export "le_s") (param i32 i32) (result i32)
        (local.get 0)
        (local.get 1)
        (i32.le_s)
        (return)
    )
    (func (export "le_u") (param i32 i32) (result i32)
        (local.get 0)
        (local.get 1)
        (i32.le_u)
        (return)
    )
    (func (export "ge_s") (param i32 i32) (result i32)
        (local.get 0)
        (local.get 1)
        (i32.ge_s)
        (return)
    )
    (func (export "ge_u") (param i32 i32) (result i32)
        (local.get 0)
        (local.get 1)
        (i32.ge_u)
        (return)
    )
)
`

async function test() {
    const instance = await instantiate(wat, {});
    const { eqz, eq, ne, lt_s, lt_u, gt_s, gt_u, le_s, le_u, ge_s, ge_u }= instance.exports
    assert.eq(eqz(0), 1)
    assert.eq(eqz(1), 0)
    assert.eq(eq(0, 0), 1)
    assert.eq(eq(1, 2), 0)
    assert.eq(ne(0, 0), 0)
    assert.eq(ne(1, 2), 1)
    assert.eq(lt_s(-1, 1), 1)
    assert.eq(lt_s(1, 1), 0)
    assert.eq(lt_u(-1, 1), 0)
    assert.eq(lt_u(1, 2), 1)
    assert.eq(gt_s(1, -1), 1)
    assert.eq(gt_s(1, 1), 0)
    assert.eq(gt_u(1, -1), 0)
    assert.eq(gt_u(2, 1), 1)
    assert.eq(le_s(-1, 1), 1)
    assert.eq(le_s(1, 1), 1)
    assert.eq(le_u(-1, 1), 0)
    assert.eq(le_u(1, 2), 1)
    assert.eq(ge_s(1, -1), 1)
    assert.eq(ge_s(1, 1), 1)
    assert.eq(ge_u(1, -1), 0)
    assert.eq(ge_u(2, 1), 1)
}

await assert.asyncTest(test())
