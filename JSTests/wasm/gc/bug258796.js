//@ skip if !$isSIMDPlatform
//@ runWebAssemblySuite("--useWebAssemblyTypedFunctionReferences=true", "--useWebAssemblyGC=true")

import * as assert from "../assert.js";

function module(bytes, valid = true) {
  let buffer = new ArrayBuffer(bytes.length);
  let view = new Uint8Array(buffer);
  for (let i = 0; i < bytes.length; ++i) {
    view[i] = bytes.charCodeAt(i);
  }
  return new WebAssembly.Module(buffer);
}

// GC proposal spec decoder nor wasm-dis could decode.
assert.throws(
  () => new WebAssembly.Instance(module("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xa0\x80\x80\x80\x00\x04\x50\x00\x5f\x01\x7f\x00\x50\x00\x5e\x7b\x01\x50\x00\x60\x03\x7f\x7f\x7f\x01\x7f\x60\x06\x7f\x70\x64\x6b\x71\x64\x70\x7f\x00\x03\x82\x80\x80\x80\x00\x01\x02\x04\x85\x80\x80\x80\x00\x01\x70\x01\x01\x01\x05\x84\x80\x80\x80\x00\x01\x01\x10\x20\x0d\x83\x80\x80\x80\x00\x01\x00\x03\x07\x88\x80\x80\x80\x00\x01\x04\x6d\x61\x69\x6e\x00\x00\x09\x8b\x80\x80\x80\x00\x01\x06\x00\x41\x00\x0b\x70\x01\xd2\x00\x0b\x0a\x94\x80\x80\x80\x00\x01\x12\x00\x06\x7f\x41\x70\x07\x00\x1a\x1a\x1a\x1a\x1a\x01\x0b\xb3\xa8\x6b\x0b")),
  WebAssembly.CompileError,
  "WebAssembly.Module doesn't parse at byte 17: can't pop empty stack in binary left, in function at index 0"
);
