
import { instantiate } from "../wabt-wrapper.js"
import * as assert from "../assert.js"

/*
(module
  (tag $e0)
  (func (export "throw_null_ref")
    (local $e exnref)
    (block $h2
        (throw_ref (local.get $e))
    )
    (return)
  )
)
*/

var wasm_module = new WebAssembly.Module(new Uint8Array([
0x00,0x61,0x73,0x6d,0x01,0x00,0x00,0x00,0x01,0x84,0x80,0x80,0x80,0x00,0x01,0x60,0x00,0x00,0x03,0x82,0x80,0x80,0x80,0x00,0x01,0x00,0x0d,0x83,0x80,0x80,0x80,0x00,0x01,0x00,0x00,0x07,0x92,0x80,0x80,0x80,0x00,0x01,0x0e,0x74,0x68,0x72,0x6f,0x77,0x5f,0x6e,0x75,0x6c,0x6c,0x5f,0x72,0x65,0x66,0x00,0x00,0x0a,0x91,0x80,0x80,0x80,0x00,0x01,0x8b,0x80,0x80,0x80,0x00,0x01,0x01,0x69,0x02,0x40,0x20,0x00,0x0a,0x0b,0x0f,0x0b
]));

var instance = new WebAssembly.Instance(wasm_module);

const { throw_null_ref } = instance.exports

for (let i = 0; i < 10000; ++i) {
    try {
        throw_null_ref();
        print("bad!");
        break;
    } catch (e) {
    }
}
