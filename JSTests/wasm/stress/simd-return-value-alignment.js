//@ requireOptions("--useWebAssemblySIMD=1")
//@ skip if !$isSIMDPlatform

/*
(module
  (type (;0;) (func (result i32 v128)))
  (func (;0;) (type 0) (result i32 v128)
    (local v128)
    i32.const 0
    v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000
  )
  (export "foo" (func 0))
)
*/
const wasm = new Uint8Array([
    0x00,0x61,0x73,0x6d,0x01,0x00,0x00,0x00,0x01,0x06,0x01,0x60,
    0x00,0x02,0x7f,0x7b,0x03,0x02,0x01,0x00,0x07,0x07,0x01,0x03,
    0x66,0x6f,0x6f,0x00,0x00,0x0a,0x1a,0x01,0x18,0x01,0x01,0x7b,
    0x41,0x00,0xfd,0x0c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b
]);

WebAssembly.instantiate(wasm).then(e => {
    for (let i = 0; i < 10000; i ++) {
        e.exports.foo();
    }
});
