
// atomic.wast:3
let $1 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xb3\x80\x80\x80\x00\x09\x60\x01\x7e\x00\x60\x01\x7f\x01\x7f\x60\x01\x7f\x01\x7e\x60\x02\x7f\x7f\x00\x60\x02\x7f\x7e\x00\x60\x02\x7f\x7f\x01\x7f\x60\x02\x7f\x7e\x01\x7e\x60\x03\x7f\x7f\x7f\x01\x7f\x60\x03\x7f\x7e\x7e\x01\x7e\x03\xc1\x80\x80\x80\x00\x40\x00\x01\x02\x01\x01\x02\x02\x02\x03\x04\x03\x03\x04\x04\x04\x05\x06\x05\x05\x06\x06\x06\x05\x06\x05\x05\x06\x06\x06\x05\x06\x05\x05\x06\x06\x06\x05\x06\x05\x05\x06\x06\x06\x05\x06\x05\x05\x06\x06\x06\x05\x06\x05\x05\x06\x06\x06\x07\x08\x07\x07\x08\x08\x08\x05\x84\x80\x80\x80\x00\x01\x03\x01\x01\x07\xc4\x8b\x80\x80\x00\x40\x04\x69\x6e\x69\x74\x00\x00\x0f\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x02\x12\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x38\x5f\x75\x00\x03\x13\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x04\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x38\x5f\x75\x00\x05\x13\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x06\x13\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x07\x10\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x00\x08\x10\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x00\x09\x11\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x38\x00\x0a\x12\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x0b\x11\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x38\x00\x0c\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x0d\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x0e\x12\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x61\x64\x64\x00\x0f\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x61\x64\x64\x00\x10\x15\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x61\x64\x64\x5f\x75\x00\x11\x16\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x61\x64\x64\x5f\x75\x00\x12\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x61\x64\x64\x5f\x75\x00\x13\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x61\x64\x64\x5f\x75\x00\x14\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x61\x64\x64\x5f\x75\x00\x15\x12\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x73\x75\x62\x00\x16\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x73\x75\x62\x00\x17\x15\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x73\x75\x62\x5f\x75\x00\x18\x16\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x73\x75\x62\x5f\x75\x00\x19\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x73\x75\x62\x5f\x75\x00\x1a\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x73\x75\x62\x5f\x75\x00\x1b\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x73\x75\x62\x5f\x75\x00\x1c\x12\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x61\x6e\x64\x00\x1d\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x61\x6e\x64\x00\x1e\x15\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x61\x6e\x64\x5f\x75\x00\x1f\x16\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x61\x6e\x64\x5f\x75\x00\x20\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x61\x6e\x64\x5f\x75\x00\x21\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x61\x6e\x64\x5f\x75\x00\x22\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x61\x6e\x64\x5f\x75\x00\x23\x11\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x6f\x72\x00\x24\x11\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x6f\x72\x00\x25\x14\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x6f\x72\x5f\x75\x00\x26\x15\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x6f\x72\x5f\x75\x00\x27\x14\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x6f\x72\x5f\x75\x00\x28\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x6f\x72\x5f\x75\x00\x29\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x6f\x72\x5f\x75\x00\x2a\x12\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x78\x6f\x72\x00\x2b\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x78\x6f\x72\x00\x2c\x15\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x78\x6f\x72\x5f\x75\x00\x2d\x16\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x78\x6f\x72\x5f\x75\x00\x2e\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x78\x6f\x72\x5f\x75\x00\x2f\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x78\x6f\x72\x5f\x75\x00\x30\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x78\x6f\x72\x5f\x75\x00\x31\x13\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x78\x63\x68\x67\x00\x32\x13\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x78\x63\x68\x67\x00\x33\x16\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x78\x63\x68\x67\x5f\x75\x00\x34\x17\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x78\x63\x68\x67\x5f\x75\x00\x35\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x78\x63\x68\x67\x5f\x75\x00\x36\x17\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x78\x63\x68\x67\x5f\x75\x00\x37\x17\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x78\x63\x68\x67\x5f\x75\x00\x38\x16\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x63\x6d\x70\x78\x63\x68\x67\x00\x39\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x63\x6d\x70\x78\x63\x68\x67\x00\x3a\x19\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x3b\x1a\x69\x33\x32\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x3c\x19\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x3d\x1a\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x3e\x1a\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x3f\x0a\xc0\x87\x80\x80\x00\x40\x89\x80\x80\x80\x00\x00\x41\x00\x20\x00\x37\x03\x00\x0b\x88\x80\x80\x80\x00\x00\x20\x00\xfe\x10\x02\x00\x0b\x88\x80\x80\x80\x00\x00\x20\x00\xfe\x11\x03\x00\x0b\x88\x80\x80\x80\x00\x00\x20\x00\xfe\x12\x00\x00\x0b\x88\x80\x80\x80\x00\x00\x20\x00\xfe\x13\x01\x00\x0b\x88\x80\x80\x80\x00\x00\x20\x00\xfe\x14\x00\x00\x0b\x88\x80\x80\x80\x00\x00\x20\x00\xfe\x15\x01\x00\x0b\x88\x80\x80\x80\x00\x00\x20\x00\xfe\x16\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x17\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x18\x03\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x19\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x1a\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x1b\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x1c\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x1d\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x1e\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x1f\x03\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x20\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x21\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x22\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x23\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x24\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x25\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x26\x03\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x27\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x28\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x29\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x2a\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x2b\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x2c\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x2d\x03\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x2e\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x2f\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x30\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x31\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x32\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x33\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x34\x03\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x35\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x36\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x37\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x38\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x39\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x3a\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x3b\x03\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x3c\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x3d\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x3e\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x3f\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x40\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x41\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x42\x03\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x43\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x44\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x45\x00\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x46\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x47\x02\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfe\x48\x02\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfe\x49\x03\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfe\x4a\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfe\x4b\x01\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfe\x4c\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfe\x4d\x01\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfe\x4e\x02\x00\x0b");

// atomic.wast:84
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x80\x82\x88\x98\xc0\xa0\x81\x83\x07\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("506_097_522_914_230_528")]))

// atomic.wast:86
assert_return(() => call($1, "i32.atomic.load", [0]), 50_462_976);

// atomic.wast:87
assert_return(() => call($1, "i32.atomic.load", [4]), 117_835_012);

// atomic.wast:89
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x80\x82\x88\x98\xc0\xa0\x81\x83\x07\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("506_097_522_914_230_528"))

// atomic.wast:91
assert_return(() => call($1, "i32.atomic.load8_u", [0]), 0);

// atomic.wast:92
assert_return(() => call($1, "i32.atomic.load8_u", [5]), 5);

// atomic.wast:94
assert_return(() => call($1, "i32.atomic.load16_u", [0]), 256);

// atomic.wast:95
assert_return(() => call($1, "i32.atomic.load16_u", [6]), 1_798);

// atomic.wast:97
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x38\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x00\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load8_u", [0]), int64("0"))

// atomic.wast:98
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x38\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x41\x05\x10\x00\x01\x42\x05\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load8_u", [5]), int64("5"))

// atomic.wast:100
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x9a\x80\x80\x80\x00\x01\x02\x24\x31\x13\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x80\x02\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load16_u", [0]), int64("256"))

// atomic.wast:101
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x9a\x80\x80\x80\x00\x01\x02\x24\x31\x13\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9a\x80\x80\x80\x00\x01\x94\x80\x80\x80\x00\x00\x02\x40\x41\x06\x10\x00\x01\x42\x86\x0e\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load16_u", [6]), int64("1_798"))

// atomic.wast:103
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x9a\x80\x80\x80\x00\x01\x02\x24\x31\x13\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x80\x82\x88\x18\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load32_u", [0]), int64("50_462_976"))

// atomic.wast:104
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x9a\x80\x80\x80\x00\x01\x02\x24\x31\x13\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9c\x80\x80\x80\x00\x01\x96\x80\x80\x80\x00\x00\x02\x40\x41\x04\x10\x00\x01\x42\x84\x8a\x98\x38\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load32_u", [4]), int64("117_835_012"))

// atomic.wast:108
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("0")]))

// atomic.wast:110
assert_return(() => call($1, "i32.atomic.store", [0, -1_122_868]));

// atomic.wast:111
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xcc\xbb\xbb\xff\x0f\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("4_293_844_428"))

// atomic.wast:113
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x00\x02\x97\x80\x80\x80\x00\x01\x02\x24\x31\x10\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9b\x80\x80\x80\x00\x01\x95\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xef\x9b\xaf\xcd\xf8\xac\xd1\x91\x01\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.store", [0, int64("81_985_529_216_486_895")]))

// atomic.wast:114
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xef\x9b\xaf\xcd\xf8\xac\xd1\x91\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("81_985_529_216_486_895"))

// atomic.wast:116
assert_return(() => call($1, "i32.atomic.store8", [1, 66]));

// atomic.wast:117
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xef\x85\xad\xcd\xf8\xac\xd1\x91\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("81_985_529_216_451_311"))

// atomic.wast:119
assert_return(() => call($1, "i32.atomic.store16", [4, 34_884]));

// atomic.wast:120
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xef\x85\xad\xcd\xc8\x88\xe2\x91\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("82_059_046_171_656_943"))

// atomic.wast:122
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x00\x02\x98\x80\x80\x80\x00\x01\x02\x24\x31\x11\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x38\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x99\x01\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.store8", [1, int64("153")]))

// atomic.wast:123
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xef\xb3\xae\xcd\xc8\x88\xe2\x91\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("82_059_046_171_679_215"))

// atomic.wast:125
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x00\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x41\x04\x42\xfe\x95\x03\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.store16", [4, int64("51_966")]))

// atomic.wast:126
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xef\xb3\xae\xcd\xe8\xdf\xf2\x91\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("82_132_412_803_029_487"))

// atomic.wast:128
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x00\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x97\x80\x80\x80\x00\x01\x91\x80\x80\x80\x00\x00\x02\x40\x41\x04\x42\xef\xfd\xb6\xf5\x0d\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.store32", [4, int64("3_735_928_559")]))

// atomic.wast:129
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xef\xb3\xae\xcd\xf8\xdd\xef\xd6\x5e\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("-2_401_053_090_302_420_497"))

// atomic.wast:133
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:134
assert_return(() => call($1, "i32.atomic.rmw.add", [0, 305_419_896]), 286_331_153);

// atomic.wast:135
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x89\xcf\x95\x9a\x92\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_552_723_337"))

// atomic.wast:137
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:138
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x61\x64\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x82\x84\x88\x90\x90\xa0\xc0\x80\x01\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw.add", [0, int64("72_340_172_854_919_682")]), int64("1_229_782_938_247_303_441"))

// atomic.wast:139
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x93\xa6\xcc\x98\xa1\xc2\x84\x89\x12\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_302_123_111_102_223_123"))

// atomic.wast:141
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:142
assert_return(() => call($1, "i32.atomic.rmw8.add_u", [0, -842_150_451]), 17);

// atomic.wast:143
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xde\xa3\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_646"))

// atomic.wast:145
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:146
assert_return(() => call($1, "i32.atomic.rmw16.add_u", [0, -889_271_554]), 4_369);

// atomic.wast:147
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x8f\xb8\xc7\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_355_407"))

// atomic.wast:149
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:150
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9c\x80\x80\x80\x00\x01\x02\x24\x31\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x61\x64\x64\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xc2\x84\x89\x92\xa4\xc8\x90\xa1\xc2\x00\x10\x00\x01\x42\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw8.add_u", [0, int64("4_774_451_407_313_060_418")]), int64("17"))

// atomic.wast:151
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xd3\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_507"))

// atomic.wast:153
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:154
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x61\x64\x64\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa5\x80\x80\x80\x00\x01\x9f\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xef\xfd\xbe\xf7\xfb\xdd\xef\xf7\xbe\x7f\x10\x00\x01\x42\x91\x22\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw16.add_u", [0, int64("-4_688_318_750_159_552_785")]), int64("4_369"))

// atomic.wast:155
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x80\xa0\xc7\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_352_320"))

// atomic.wast:157
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:158
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x61\x64\x64\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xe5\xcd\xee\xd5\xdc\xdc\xe9\xdd\x4a\x10\x00\x01\x42\x91\xa2\xc4\x88\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw32.add_u", [0, int64("-3_838_290_751_524_198_683")]), int64("286_331_153"))

// atomic.wast:159
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xf6\xef\xb2\xde\x9d\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_941_648_599_030"))

// atomic.wast:163
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:164
assert_return(() => call($1, "i32.atomic.rmw.sub", [0, 305_419_896]), 286_331_153);

// atomic.wast:165
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x99\xf5\xf2\xf6\x9f\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_942_236_850_841"))

// atomic.wast:167
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:168
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x73\x75\x62\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x82\x84\x88\x90\x90\xa0\xc0\x80\x01\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw.sub", [0, int64("72_340_172_854_919_682")]), int64("1_229_782_938_247_303_441"))

// atomic.wast:169
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x8f\x9e\xbc\xf8\x80\x82\x84\x88\x10\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_157_442_765_392_383_759"))

// atomic.wast:171
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:172
assert_return(() => call($1, "i32.atomic.rmw8.sub_u", [0, -842_150_451]), 17);

// atomic.wast:173
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xc4\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_492"))

// atomic.wast:175
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:176
assert_return(() => call($1, "i32.atomic.rmw16.sub_u", [0, -889_271_554]), 4_369);

// atomic.wast:177
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x93\x8c\xc5\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_317_011"))

// atomic.wast:179
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:180
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9c\x80\x80\x80\x00\x01\x02\x24\x31\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x73\x75\x62\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xc2\x84\x89\x92\xa4\xc8\x90\xa1\xc2\x00\x10\x00\x01\x42\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw8.sub_u", [0, int64("4_774_451_407_313_060_418")]), int64("17"))

// atomic.wast:181
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xcf\xa3\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_631"))

// atomic.wast:183
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:184
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x73\x75\x62\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa5\x80\x80\x80\x00\x01\x9f\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xef\xfd\xbe\xf7\xfb\xdd\xef\xf7\xbe\x7f\x10\x00\x01\x42\x91\x22\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw16.sub_u", [0, int64("-4_688_318_750_159_552_785")]), int64("4_369"))

// atomic.wast:185
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xa2\xa4\xc5\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_320_098"))

// atomic.wast:187
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:188
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x73\x75\x62\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xe5\xcd\xee\xd5\xdc\xdc\xe9\xdd\x4a\x10\x00\x01\x42\x91\xa2\xc4\x88\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw32.sub_u", [0, int64("-3_838_290_751_524_198_683")]), int64("286_331_153"))

// atomic.wast:189
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xac\xd4\xd5\xb2\x94\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_939_140_975_148"))

// atomic.wast:193
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:194
assert_return(() => call($1, "i32.atomic.rmw.and", [0, 305_419_896]), 286_331_153);

// atomic.wast:195
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x90\xa0\xc0\x80\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_230_460_432"))

// atomic.wast:197
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:198
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x61\x6e\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x82\x84\x88\x90\x90\xa0\xc0\x80\x01\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw.and", [0, int64("72_340_172_854_919_682")]), int64("1_229_782_938_247_303_441"))

// atomic.wast:199
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x80\x80\x80\x80\x90\xa0\xc0\x80\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("72_340_172_821_233_664"))

// atomic.wast:201
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:202
assert_return(() => call($1, "i32.atomic.rmw8.and_u", [0, -842_150_451]), 17);

// atomic.wast:203
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x81\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_425"))

// atomic.wast:205
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:206
assert_return(() => call($1, "i32.atomic.rmw16.and_u", [0, -889_271_554]), 4_369);

// atomic.wast:207
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x90\x80\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_299_088"))

// atomic.wast:209
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:210
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9c\x80\x80\x80\x00\x01\x02\x24\x31\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x61\x6e\x64\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xc2\x84\x89\x92\xa4\xc8\x90\xa1\xc2\x00\x10\x00\x01\x42\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw8.and_u", [0, int64("4_774_451_407_313_060_418")]), int64("17"))

// atomic.wast:211
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x80\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_424"))

// atomic.wast:213
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:214
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x61\x6e\x64\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa5\x80\x80\x80\x00\x01\x9f\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xef\xfd\xbe\xf7\xfb\xdd\xef\xf7\xbe\x7f\x10\x00\x01\x42\x91\x22\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw16.and_u", [0, int64("-4_688_318_750_159_552_785")]), int64("4_369"))

// atomic.wast:215
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x81\xa0\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_169"))

// atomic.wast:217
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:218
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x61\x6e\x64\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xe5\xcd\xee\xd5\xdc\xdc\xe9\xdd\x4a\x10\x00\x01\x42\x91\xa2\xc4\x88\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw32.and_u", [0, int64("-3_838_290_751_524_198_683")]), int64("286_331_153"))

// atomic.wast:219
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x81\x80\xc4\x80\x90\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_937_962_086_401"))

// atomic.wast:223
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:224
assert_return(() => call($1, "i32.atomic.rmw.or", [0, 305_419_896]), 286_331_153);

// atomic.wast:225
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xf9\xae\xd5\x99\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_283_235_193"))

// atomic.wast:227
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:228
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x02\x24\x31\x11\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x6f\x72\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x82\x84\x88\x90\x90\xa0\xc0\x80\x01\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw.or", [0, int64("72_340_172_854_919_682")]), int64("1_229_782_938_247_303_441"))

// atomic.wast:229
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x93\xa6\xcc\x98\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_280_989_459"))

// atomic.wast:231
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:232
assert_return(() => call($1, "i32.atomic.rmw8.or_u", [0, -842_150_451]), 17);

// atomic.wast:233
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xdd\xa3\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_645"))

// atomic.wast:235
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:236
assert_return(() => call($1, "i32.atomic.rmw16.or_u", [0, -889_271_554]), 4_369);

// atomic.wast:237
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xff\xb7\xc7\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_355_391"))

// atomic.wast:239
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:240
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9b\x80\x80\x80\x00\x01\x02\x24\x31\x14\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x6f\x72\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xc2\x84\x89\x92\xa4\xc8\x90\xa1\xc2\x00\x10\x00\x01\x42\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw8.or_u", [0, int64("4_774_451_407_313_060_418")]), int64("17"))

// atomic.wast:241
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xd3\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_507"))

// atomic.wast:243
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:244
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9c\x80\x80\x80\x00\x01\x02\x24\x31\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x6f\x72\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa5\x80\x80\x80\x00\x01\x9f\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xef\xfd\xbe\xf7\xfb\xdd\xef\xf7\xbe\x7f\x10\x00\x01\x42\x91\x22\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw16.or_u", [0, int64("-4_688_318_750_159_552_785")]), int64("4_369"))

// atomic.wast:245
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xff\xff\xc6\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_348_223"))

// atomic.wast:247
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:248
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9c\x80\x80\x80\x00\x01\x02\x24\x31\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x6f\x72\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xe5\xcd\xee\xd5\xdc\xdc\xe9\xdd\x4a\x10\x00\x01\x42\x91\xa2\xc4\x88\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw32.or_u", [0, int64("-3_838_290_751_524_198_683")]), int64("286_331_153"))

// atomic.wast:249
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xf5\xef\xee\xdd\x9d\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_941_647_484_917"))

// atomic.wast:253
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:254
assert_return(() => call($1, "i32.atomic.rmw.xor", [0, 305_419_896]), 286_331_153);

// atomic.wast:255
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xe9\x8e\x95\x99\x90\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_013_747_049"))

// atomic.wast:257
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:258
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x78\x6f\x72\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x82\x84\x88\x90\x90\xa0\xc0\x80\x01\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw.xor", [0, int64("72_340_172_854_919_682")]), int64("1_229_782_938_247_303_441"))

// atomic.wast:259
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x93\xa6\xcc\x98\x81\x82\x84\x88\x10\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_157_442_765_459_755_795"))

// atomic.wast:261
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:262
assert_return(() => call($1, "i32.atomic.rmw8.xor_u", [0, -842_150_451]), 17);

// atomic.wast:263
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xdc\xa3\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_644"))

// atomic.wast:265
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:266
assert_return(() => call($1, "i32.atomic.rmw16.xor_u", [0, -889_271_554]), 4_369);

// atomic.wast:267
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xef\xb7\xc7\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_355_375"))

// atomic.wast:269
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:270
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9c\x80\x80\x80\x00\x01\x02\x24\x31\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x78\x6f\x72\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xc2\x84\x89\x92\xa4\xc8\x90\xa1\xc2\x00\x10\x00\x01\x42\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw8.xor_u", [0, int64("4_774_451_407_313_060_418")]), int64("17"))

// atomic.wast:271
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xd3\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_507"))

// atomic.wast:273
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:274
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x78\x6f\x72\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa5\x80\x80\x80\x00\x01\x9f\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xef\xfd\xbe\xf7\xfb\xdd\xef\xf7\xbe\x7f\x10\x00\x01\x42\x91\x22\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw16.xor_u", [0, int64("-4_688_318_750_159_552_785")]), int64("4_369"))

// atomic.wast:275
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xfe\xdf\xc6\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_344_126"))

// atomic.wast:277
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:278
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x78\x6f\x72\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xe5\xcd\xee\xd5\xdc\xdc\xe9\xdd\x4a\x10\x00\x01\x42\x91\xa2\xc4\x88\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw32.xor_u", [0, int64("-3_838_290_751_524_198_683")]), int64("286_331_153"))

// atomic.wast:279
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xf4\xef\xaa\xdd\x9d\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_941_646_370_804"))

// atomic.wast:283
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:284
assert_return(() => call($1, "i32.atomic.rmw.xchg", [0, 305_419_896]), 286_331_153);

// atomic.wast:285
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xf8\xac\xd1\x91\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_266_392_184"))

// atomic.wast:287
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:288
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9a\x80\x80\x80\x00\x01\x02\x24\x31\x13\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x78\x63\x68\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xab\x80\x80\x80\x00\x01\xa5\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x82\x84\x88\x90\x90\xa0\xc0\x80\x01\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw.xchg", [0, int64("72_340_172_854_919_682")]), int64("1_229_782_938_247_303_441"))

// atomic.wast:289
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x82\x84\x88\x90\x90\xa0\xc0\x80\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("72_340_172_854_919_682"))

// atomic.wast:291
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:292
assert_return(() => call($1, "i32.atomic.rmw8.xchg_u", [0, -842_150_451]), 17);

// atomic.wast:293
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xcd\xa3\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_629"))

// atomic.wast:295
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:296
assert_return(() => call($1, "i32.atomic.rmw16.xchg_u", [0, -889_271_554]), 4_369);

// atomic.wast:297
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xfe\x95\xc7\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_351_038"))

// atomic.wast:299
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:300
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa4\x80\x80\x80\x00\x01\x9e\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xc2\x84\x89\x92\xa4\xc8\x90\xa1\xc2\x00\x10\x00\x01\x42\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw8.xchg_u", [0, int64("4_774_451_407_313_060_418")]), int64("17"))

// atomic.wast:301
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xc2\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_490"))

// atomic.wast:303
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:304
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9e\x80\x80\x80\x00\x01\x02\x24\x31\x17\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa5\x80\x80\x80\x00\x01\x9f\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xef\xfd\xbe\xf7\xfb\xdd\xef\xf7\xbe\x7f\x10\x00\x01\x42\x91\x22\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw16.xchg_u", [0, int64("-4_688_318_750_159_552_785")]), int64("4_369"))

// atomic.wast:305
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xef\xfd\xc6\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_347_951"))

// atomic.wast:307
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:308
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9e\x80\x80\x80\x00\x01\x02\x24\x31\x17\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\xe5\xcd\xee\xd5\xdc\xdc\xe9\xdd\x4a\x10\x00\x01\x42\x91\xa2\xc4\x88\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw32.xchg_u", [0, int64("-3_838_290_751_524_198_683")]), int64("286_331_153"))

// atomic.wast:309
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xe5\xcd\xee\xd5\x9c\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_941_362_267_877"))

// atomic.wast:313
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:314
assert_return(() => call($1, "i32.atomic.rmw.cmpxchg", [0, 0, 305_419_896]), 286_331_153);

// atomic.wast:315
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_441"))

// atomic.wast:317
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:318
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x63\x6d\x70\x78\x63\x68\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x00\x42\x82\x84\x88\x90\x90\xa0\xc0\x80\x01\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw.cmpxchg", [0, int64("0"), int64("72_340_172_854_919_682")]), int64("1_229_782_938_247_303_441"))

// atomic.wast:319
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_441"))

// atomic.wast:321
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:322
assert_return(() => call($1, "i32.atomic.rmw8.cmpxchg_u", [0, 0, -842_150_451]), 17);

// atomic.wast:323
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_441"))

// atomic.wast:325
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:326
assert_return(() => call($1, "i32.atomic.rmw16.cmpxchg_u", [0, 0, -889_271_554]), 4_369);

// atomic.wast:327
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_441"))

// atomic.wast:329
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:330
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7e\x02\xa0\x80\x80\x80\x00\x01\x02\x24\x31\x19\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa6\x80\x80\x80\x00\x01\xa0\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x00\x42\xc2\x84\x89\x92\xa4\xc8\x90\xa1\xc2\x00\x10\x00\x01\x42\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw8.cmpxchg_u", [0, int64("0"), int64("4_774_451_407_313_060_418")]), int64("17"))

// atomic.wast:331
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_441"))

// atomic.wast:333
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:334
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7e\x02\xa1\x80\x80\x80\x00\x01\x02\x24\x31\x1a\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa7\x80\x80\x80\x00\x01\xa1\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x00\x42\xef\xfd\xbe\xf7\xfb\xdd\xef\xf7\xbe\x7f\x10\x00\x01\x42\x91\x22\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw16.cmpxchg_u", [0, int64("0"), int64("-4_688_318_750_159_552_785")]), int64("4_369"))

// atomic.wast:335
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_441"))

// atomic.wast:337
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:338
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7e\x02\xa1\x80\x80\x80\x00\x01\x02\x24\x31\x1a\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa9\x80\x80\x80\x00\x01\xa3\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x00\x42\xe5\xcd\xee\xd5\xdc\xdc\xe9\xdd\x4a\x10\x00\x01\x42\x91\xa2\xc4\x88\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw32.cmpxchg_u", [0, int64("0"), int64("-3_838_290_751_524_198_683")]), int64("286_331_153"))

// atomic.wast:339
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_441"))

// atomic.wast:343
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:344
assert_return(() => call($1, "i32.atomic.rmw.cmpxchg", [0, 286_331_153, 305_419_896]), 286_331_153);

// atomic.wast:345
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xf8\xac\xd1\x91\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_266_392_184"))

// atomic.wast:347
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:348
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x63\x6d\x70\x78\x63\x68\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xb5\x80\x80\x80\x00\x01\xaf\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x42\x82\x84\x88\x90\x90\xa0\xc0\x80\x01\x10\x00\x01\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw.cmpxchg", [0, int64("1_229_782_938_247_303_441"), int64("72_340_172_854_919_682")]), int64("1_229_782_938_247_303_441"))

// atomic.wast:349
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\x82\x84\x88\x90\x90\xa0\xc0\x80\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("72_340_172_854_919_682"))

// atomic.wast:351
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:352
assert_return(() => call($1, "i32.atomic.rmw8.cmpxchg_u", [0, 17, -842_150_451]), 17);

// atomic.wast:353
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xcd\xa3\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_629"))

// atomic.wast:355
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:356
assert_return(() => call($1, "i32.atomic.rmw16.cmpxchg_u", [0, 4_369, -889_271_554]), 4_369);

// atomic.wast:357
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xfe\x95\xc7\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_351_038"))

// atomic.wast:359
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:360
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7e\x02\xa0\x80\x80\x80\x00\x01\x02\x24\x31\x19\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x38\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa6\x80\x80\x80\x00\x01\xa0\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x11\x42\xc2\x84\x89\x92\xa4\xc8\x90\xa1\xc2\x00\x10\x00\x01\x42\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw8.cmpxchg_u", [0, int64("17"), int64("4_774_451_407_313_060_418")]), int64("17"))

// atomic.wast:361
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xc2\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_303_490"))

// atomic.wast:363
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:364
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7e\x02\xa1\x80\x80\x80\x00\x01\x02\x24\x31\x1a\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa8\x80\x80\x80\x00\x01\xa2\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x91\x22\x42\xef\xfd\xbe\xf7\xfb\xdd\xef\xf7\xbe\x7f\x10\x00\x01\x42\x91\x22\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw16.cmpxchg_u", [0, int64("4_369"), int64("-4_688_318_750_159_552_785")]), int64("4_369"))

// atomic.wast:365
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xef\xfd\xc6\x88\x91\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_938_247_347_951"))

// atomic.wast:367
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x31\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x99\x80\x80\x80\x00\x01\x93\x80\x80\x80\x00\x00\x02\x40\x42\x91\xa2\xc4\x88\x91\xa2\xc4\x88\x11\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // run(() => call($1, "init", [int64("1_229_782_938_247_303_441")]))

// atomic.wast:368
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7e\x02\xa1\x80\x80\x80\x00\x01\x02\x24\x31\x1a\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xad\x80\x80\x80\x00\x01\xa7\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x91\xa2\xc4\x88\x01\x42\xe5\xcd\xee\xd5\xdc\xdc\xe9\xdd\x4a\x10\x00\x01\x42\x91\xa2\xc4\x88\x01\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.rmw32.cmpxchg_u", [0, int64("286_331_153"), int64("-3_838_290_751_524_198_683")]), int64("286_331_153"))

// atomic.wast:369
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\xa1\x80\x80\x80\x00\x01\x9b\x80\x80\x80\x00\x00\x02\x40\x41\x00\x10\x00\x01\x42\xe5\xcd\xee\xd5\x9c\xa2\xc4\x88\x11\x01\x51\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_return(() => call($1, "i64.atomic.load", [0]), int64("1_229_782_941_362_267_877"))

// atomic.wast:374
assert_trap(() => call($1, "i32.atomic.load", [1]));

// atomic.wast:375
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x96\x80\x80\x80\x00\x01\x02\x24\x31\x0f\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x41\x01\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.load", [1]))

// atomic.wast:376
assert_trap(() => call($1, "i32.atomic.load16_u", [1]));

// atomic.wast:377
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x9a\x80\x80\x80\x00\x01\x02\x24\x31\x13\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x31\x36\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x41\x01\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.load16_u", [1]))

// atomic.wast:378
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7f\x01\x7e\x02\x9a\x80\x80\x80\x00\x01\x02\x24\x31\x13\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6c\x6f\x61\x64\x33\x32\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x41\x01\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.load32_u", [1]))

// atomic.wast:379
assert_trap(() => call($1, "i32.atomic.store", [1, 0]));

// atomic.wast:380
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x00\x02\x97\x80\x80\x80\x00\x01\x02\x24\x31\x10\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.store", [1, int64("0")]))

// atomic.wast:381
assert_trap(() => call($1, "i32.atomic.store16", [1, 0]));

// atomic.wast:382
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x00\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x31\x36\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.store16", [1, int64("0")]))

// atomic.wast:383
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x00\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x73\x74\x6f\x72\x65\x33\x32\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.store32", [1, int64("0")]))

// atomic.wast:384
assert_trap(() => call($1, "i32.atomic.rmw.add", [1, 0]));

// atomic.wast:385
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x61\x64\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw.add", [1, int64("0")]))

// atomic.wast:386
assert_trap(() => call($1, "i32.atomic.rmw16.add_u", [1, 0]));

// atomic.wast:387
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x61\x64\x64\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw16.add_u", [1, int64("0")]))

// atomic.wast:388
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x61\x64\x64\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw32.add_u", [1, int64("0")]))

// atomic.wast:389
assert_trap(() => call($1, "i32.atomic.rmw.sub", [1, 0]));

// atomic.wast:390
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x73\x75\x62\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw.sub", [1, int64("0")]))

// atomic.wast:391
assert_trap(() => call($1, "i32.atomic.rmw16.sub_u", [1, 0]));

// atomic.wast:392
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x73\x75\x62\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw16.sub_u", [1, int64("0")]))

// atomic.wast:393
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x73\x75\x62\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw32.sub_u", [1, int64("0")]))

// atomic.wast:394
assert_trap(() => call($1, "i32.atomic.rmw.and", [1, 0]));

// atomic.wast:395
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x61\x6e\x64\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw.and", [1, int64("0")]))

// atomic.wast:396
assert_trap(() => call($1, "i32.atomic.rmw16.and_u", [1, 0]));

// atomic.wast:397
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x61\x6e\x64\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw16.and_u", [1, int64("0")]))

// atomic.wast:398
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x61\x6e\x64\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw32.and_u", [1, int64("0")]))

// atomic.wast:399
assert_trap(() => call($1, "i32.atomic.rmw.or", [1, 0]));

// atomic.wast:400
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x98\x80\x80\x80\x00\x01\x02\x24\x31\x11\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x6f\x72\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw.or", [1, int64("0")]))

// atomic.wast:401
assert_trap(() => call($1, "i32.atomic.rmw16.or_u", [1, 0]));

// atomic.wast:402
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9c\x80\x80\x80\x00\x01\x02\x24\x31\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x6f\x72\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw16.or_u", [1, int64("0")]))

// atomic.wast:403
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9c\x80\x80\x80\x00\x01\x02\x24\x31\x15\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x6f\x72\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw32.or_u", [1, int64("0")]))

// atomic.wast:404
assert_trap(() => call($1, "i32.atomic.rmw.xor", [1, 0]));

// atomic.wast:405
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x99\x80\x80\x80\x00\x01\x02\x24\x31\x12\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x78\x6f\x72\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw.xor", [1, int64("0")]))

// atomic.wast:406
assert_trap(() => call($1, "i32.atomic.rmw16.xor_u", [1, 0]));

// atomic.wast:407
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x78\x6f\x72\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw16.xor_u", [1, int64("0")]))

// atomic.wast:408
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x78\x6f\x72\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw32.xor_u", [1, int64("0")]))

// atomic.wast:409
assert_trap(() => call($1, "i32.atomic.rmw.xchg", [1, 0]));

// atomic.wast:410
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9a\x80\x80\x80\x00\x01\x02\x24\x31\x13\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x78\x63\x68\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw.xchg", [1, int64("0")]))

// atomic.wast:411
assert_trap(() => call($1, "i32.atomic.rmw16.xchg_u", [1, 0]));

// atomic.wast:412
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9e\x80\x80\x80\x00\x01\x02\x24\x31\x17\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw16.xchg_u", [1, int64("0")]))

// atomic.wast:413
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x00\x60\x02\x7f\x7e\x01\x7e\x02\x9e\x80\x80\x80\x00\x01\x02\x24\x31\x17\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw32.xchg_u", [1, int64("0")]))

// atomic.wast:414
assert_trap(() => call($1, "i32.atomic.rmw.cmpxchg", [1, 0, 0]));

// atomic.wast:415
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7e\x02\x9d\x80\x80\x80\x00\x01\x02\x24\x31\x16\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x2e\x63\x6d\x70\x78\x63\x68\x67\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw.cmpxchg", [1, int64("0"), int64("0")]))

// atomic.wast:416
assert_trap(() => call($1, "i32.atomic.rmw16.cmpxchg_u", [1, 0, 0]));

// atomic.wast:417
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7e\x02\xa1\x80\x80\x80\x00\x01\x02\x24\x31\x1a\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x31\x36\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw16.cmpxchg_u", [1, int64("0"), int64("0")]))

// atomic.wast:418
assert_trap(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7e\x02\xa1\x80\x80\x80\x00\x01\x02\x24\x31\x1a\x69\x36\x34\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x72\x6d\x77\x33\x32\x2e\x63\x6d\x70\x78\x63\x68\x67\x5f\x75\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x40\x41\x01\x42\x00\x42\x00\x10\x00\x0f\x0b\x00\x0b", exports("$1", $1)),  "run", []));  // assert_trap(() => call($1, "i64.atomic.rmw32.cmpxchg_u", [1, int64("0"), int64("0")]))

// atomic.wast:420
let $2 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x99\x80\x80\x80\x00\x04\x60\x01\x7e\x00\x60\x02\x7f\x7f\x01\x7f\x60\x03\x7f\x7f\x7e\x01\x7f\x60\x03\x7f\x7e\x7e\x01\x7f\x03\x85\x80\x80\x80\x00\x04\x00\x01\x02\x03\x05\x84\x80\x80\x80\x00\x01\x03\x01\x01\x07\xcd\x80\x80\x80\x00\x04\x04\x69\x6e\x69\x74\x00\x00\x14\x6d\x65\x6d\x6f\x72\x79\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x6e\x6f\x74\x69\x66\x79\x00\x01\x14\x6d\x65\x6d\x6f\x72\x79\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x77\x61\x69\x74\x33\x32\x00\x02\x14\x6d\x65\x6d\x6f\x72\x79\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x77\x61\x69\x74\x36\x34\x00\x03\x0a\xc0\x80\x80\x80\x00\x04\x89\x80\x80\x80\x00\x00\x41\x00\x20\x00\x37\x03\x00\x0b\x8a\x80\x80\x80\x00\x00\x20\x00\x20\x01\xfe\x00\x02\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfe\x01\x02\x00\x0b\x8c\x80\x80\x80\x00\x00\x20\x00\x20\x01\x20\x02\xfe\x02\x03\x00\x0b");

// atomic.wast:433
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x88\x80\x80\x80\x00\x02\x60\x00\x00\x60\x01\x7e\x00\x02\x8b\x80\x80\x80\x00\x01\x02\x24\x32\x04\x69\x6e\x69\x74\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x97\x80\x80\x80\x00\x01\x91\x80\x80\x80\x00\x00\x02\x40\x42\xff\xff\xff\xff\xff\xff\x3f\x10\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // run(() => call($2, "init", [int64("281_474_976_710_655")]))

// atomic.wast:434
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7f\x7e\x01\x7f\x02\x9b\x80\x80\x80\x00\x01\x02\x24\x32\x14\x6d\x65\x6d\x6f\x72\x79\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x77\x61\x69\x74\x33\x32\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\x02\x40\x41\x00\x41\x00\x42\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_return(() => call($2, "memory.atomic.wait32", [0, 0, int64("0")]), 1)

// atomic.wast:435
run(() => call(instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8b\x80\x80\x80\x00\x02\x60\x00\x00\x60\x03\x7f\x7e\x7e\x01\x7f\x02\x9b\x80\x80\x80\x00\x01\x02\x24\x32\x14\x6d\x65\x6d\x6f\x72\x79\x2e\x61\x74\x6f\x6d\x69\x63\x2e\x77\x61\x69\x74\x36\x34\x00\x01\x03\x82\x80\x80\x80\x00\x01\x00\x07\x87\x80\x80\x80\x00\x01\x03\x72\x75\x6e\x00\x01\x0a\x9d\x80\x80\x80\x00\x01\x97\x80\x80\x80\x00\x00\x02\x40\x41\x00\x42\x00\x42\x00\x10\x00\x01\x41\x01\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b", exports("$2", $2)),  "run", []));  // assert_return(() => call($2, "memory.atomic.wait64", [0, int64("0"), int64("0")]), 1)

// atomic.wast:436
assert_return(() => call($2, "memory.atomic.notify", [0, 0]), 0);

// atomic.wast:439
let $3 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\xb1\x80\x80\x80\x00\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x84\x80\x80\x80\x00\x01\x01\x01\x01\x0a\x80\x86\x80\x80\x00\x30\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x00\x02\x00\x1a\x0b\x8d\x80\x80\x80\x00\x00\x41\x00\x41\x00\x42\x00\xfe\x01\x02\x00\x1a\x0b\x8d\x80\x80\x80\x00\x00\x41\x00\x42\x00\x42\x00\xfe\x02\x03\x00\x1a\x0b\x89\x80\x80\x80\x00\x00\x41\x00\xfe\x10\x02\x00\x1a\x0b\x89\x80\x80\x80\x00\x00\x41\x00\xfe\x11\x03\x00\x1a\x0b\x89\x80\x80\x80\x00\x00\x41\x00\xfe\x13\x01\x00\x1a\x0b\x89\x80\x80\x80\x00\x00\x41\x00\xfe\x15\x01\x00\x1a\x0b\x89\x80\x80\x80\x00\x00\x41\x00\xfe\x16\x02\x00\x1a\x0b\x8a\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x17\x02\x00\x0b\x8a\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x18\x03\x00\x0b\x8a\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x1a\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x1c\x01\x00\x0b\x8a\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x1d\x02\x00\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x1e\x02\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x1f\x03\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x21\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x23\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x24\x02\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x25\x02\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x26\x03\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x28\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x2a\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x2b\x02\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x2c\x02\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x2d\x03\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x2f\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x31\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x32\x02\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x33\x02\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x34\x03\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x36\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x38\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x39\x02\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x3a\x02\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x3b\x03\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x3d\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x3f\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x40\x02\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x41\x02\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x42\x03\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x44\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x46\x01\x00\x1a\x0b\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x47\x02\x00\x1a\x0b\x8d\x80\x80\x80\x00\x00\x41\x00\x41\x00\x41\x00\xfe\x48\x02\x00\x1a\x0b\x8d\x80\x80\x80\x00\x00\x41\x00\x42\x00\x42\x00\xfe\x49\x03\x00\x1a\x0b\x8d\x80\x80\x80\x00\x00\x41\x00\x41\x00\x41\x00\xfe\x4b\x01\x00\x1a\x0b\x8d\x80\x80\x80\x00\x00\x41\x00\x42\x00\x42\x00\xfe\x4d\x01\x00\x1a\x0b\x8d\x80\x80\x80\x00\x00\x41\x00\x42\x00\x42\x00\xfe\x4e\x02\x00\x1a\x0b");

// atomic.wast:492
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x00\x02\x00\x1a\x0b");

// atomic.wast:493
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x41\x00\x41\x00\x42\x00\xfe\x01\x02\x00\x1a\x0b");

// atomic.wast:494
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x41\x00\x42\x00\x42\x00\xfe\x02\x03\x00\x1a\x0b");

// atomic.wast:495
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x41\x00\xfe\x10\x02\x00\x1a\x0b");

// atomic.wast:496
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x41\x00\xfe\x11\x03\x00\x1a\x0b");

// atomic.wast:497
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x41\x00\xfe\x13\x01\x00\x1a\x0b");

// atomic.wast:498
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x41\x00\xfe\x15\x01\x00\x1a\x0b");

// atomic.wast:499
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x41\x00\xfe\x16\x02\x00\x1a\x0b");

// atomic.wast:500
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x17\x02\x00\x0b");

// atomic.wast:501
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x18\x03\x00\x0b");

// atomic.wast:502
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x1a\x01\x00\x0b");

// atomic.wast:503
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x1c\x01\x00\x0b");

// atomic.wast:504
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x1d\x02\x00\x0b");

// atomic.wast:505
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x1e\x02\x00\x1a\x0b");

// atomic.wast:506
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x1f\x03\x00\x1a\x0b");

// atomic.wast:507
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x21\x01\x00\x1a\x0b");

// atomic.wast:508
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x23\x01\x00\x1a\x0b");

// atomic.wast:509
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x24\x02\x00\x1a\x0b");

// atomic.wast:510
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x25\x02\x00\x1a\x0b");

// atomic.wast:511
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x26\x03\x00\x1a\x0b");

// atomic.wast:512
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x28\x01\x00\x1a\x0b");

// atomic.wast:513
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x2a\x01\x00\x1a\x0b");

// atomic.wast:514
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x2b\x02\x00\x1a\x0b");

// atomic.wast:515
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x2c\x02\x00\x1a\x0b");

// atomic.wast:516
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x2d\x03\x00\x1a\x0b");

// atomic.wast:517
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x2f\x01\x00\x1a\x0b");

// atomic.wast:518
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x31\x01\x00\x1a\x0b");

// atomic.wast:519
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x32\x02\x00\x1a\x0b");

// atomic.wast:520
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x33\x02\x00\x1a\x0b");

// atomic.wast:521
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x34\x03\x00\x1a\x0b");

// atomic.wast:522
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x36\x01\x00\x1a\x0b");

// atomic.wast:523
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x38\x01\x00\x1a\x0b");

// atomic.wast:524
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x39\x02\x00\x1a\x0b");

// atomic.wast:525
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x3a\x02\x00\x1a\x0b");

// atomic.wast:526
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x3b\x03\x00\x1a\x0b");

// atomic.wast:527
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x3d\x01\x00\x1a\x0b");

// atomic.wast:528
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x3f\x01\x00\x1a\x0b");

// atomic.wast:529
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x40\x02\x00\x1a\x0b");

// atomic.wast:530
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x41\x02\x00\x1a\x0b");

// atomic.wast:531
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x42\x03\x00\x1a\x0b");

// atomic.wast:532
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x41\x00\xfe\x44\x01\x00\x1a\x0b");

// atomic.wast:533
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x46\x01\x00\x1a\x0b");

// atomic.wast:534
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x41\x00\x42\x00\xfe\x47\x02\x00\x1a\x0b");

// atomic.wast:535
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x41\x00\x41\x00\x41\x00\xfe\x48\x02\x00\x1a\x0b");

// atomic.wast:536
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x41\x00\x42\x00\x42\x00\xfe\x49\x03\x00\x1a\x0b");

// atomic.wast:537
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x41\x00\x41\x00\x41\x00\xfe\x4b\x01\x00\x1a\x0b");

// atomic.wast:538
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x41\x00\x42\x00\x42\x00\xfe\x4d\x01\x00\x1a\x0b");

// atomic.wast:539
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x41\x00\x42\x00\x42\x00\xfe\x4e\x02\x00\x1a\x0b");
