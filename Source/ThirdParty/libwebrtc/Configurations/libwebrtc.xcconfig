// Copyright (C) 2017-2023 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
// PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#include "../../../../Configurations/Version.xcconfig"
#include "Base-libwebrtc.xcconfig"

PRODUCT_NAME = libwebrtc;

// Disable symbol exporting when ENABLE_LIBFUZZER=YES.
GCC_SYMBOLS_PRIVATE_EXTERN = $(WK_NOT_$(ENABLE_LIBFUZZER));
EXPORTED_SYMBOLS_FILE = $(EXPORTED_SYMBOLS_FILE_ENABLED_$(WK_NOT_$(ENABLE_LIBFUZZER)));
EXPORTED_SYMBOLS_FILE_ENABLED_YES = $(BUILT_PRODUCTS_DIR)/DerivedSources/libwebrtc/libwebrtc.generated.exp;

// Force-load symbols from static libraries when symbol exports are disabled.
WEBRTC_LDFLAGS_ENABLE_LIBFUZZER_ = $(WEBRTC_LDFLAGS_ENABLE_LIBFUZZER_NO);
WEBRTC_LDFLAGS_ENABLE_LIBFUZZER_NO = -lboringssl -lopus -lsrtp -lvpx -lwebm -lyuv;
WEBRTC_LDFLAGS_ENABLE_LIBFUZZER_YES = -force_load $(BUILT_PRODUCTS_DIR)/libboringssl.a -force_load $(BUILT_PRODUCTS_DIR)/libopus.a -force_load $(BUILT_PRODUCTS_DIR)/libsrtp.a -force_load $(BUILT_PRODUCTS_DIR)/libvpx.a -force_load $(BUILT_PRODUCTS_DIR)/libwebm.a -force_load $(BUILT_PRODUCTS_DIR)/libyuv.a;

INSTALL_PATH = $(WEBCORE_LIBRARY_DIR);

DYLIB_INSTALL_NAME_BASE = $(NORMAL_UMBRELLA_FRAMEWORKS_DIR)/WebCore.framework/Frameworks;
DYLIB_INSTALL_NAME_BASE[sdk=macosx*] = $(DYLIB_INSTALL_NAME_BASE_USE_OVERRIDE_FRAMEWORKS_DIR_$(WK_USE_OVERRIDE_FRAMEWORKS_DIR));
DYLIB_INSTALL_NAME_BASE_USE_OVERRIDE_FRAMEWORKS_DIR_NO = $(DYLIB_INSTALL_NAME_BASE_WK_RELOCATABLE_FRAMEWORKS_$(WK_RELOCATABLE_FRAMEWORKS));
DYLIB_INSTALL_NAME_BASE_USE_OVERRIDE_FRAMEWORKS_DIR_YES = $(WK_OVERRIDE_FRAMEWORKS_DIR);
DYLIB_INSTALL_NAME_BASE_WK_RELOCATABLE_FRAMEWORKS_ = $(NORMAL_UMBRELLA_FRAMEWORKS_DIR)/WebCore.framework/Versions/A/Frameworks;
DYLIB_INSTALL_NAME_BASE_WK_RELOCATABLE_FRAMEWORKS_YES = @loader_path/../../../;

GCC_WARN_64_TO_32_BIT_CONVERSION = NO;

PUBLIC_HEADERS_FOLDER_PREFIX = $(WK_LIBRARY_HEADERS_FOLDER_PATH);
INSTALL_PUBLIC_HEADER_PREFIX = $(INSTALL_PATH_PREFIX)$(PUBLIC_HEADERS_FOLDER_PREFIX);
SYSTEM_PUBLIC_HEADER_PREFIX = $(SYSTEM_PUBLIC_HEADER_PREFIX_$(USE_SYSTEM_CONTENT_PATH));
SYSTEM_PUBLIC_HEADER_PREFIX_YES = $(DSTROOT)$(PUBLIC_HEADERS_FOLDER_PREFIX);
HEADER_FOLDER_LIST = absl libwebrtc webm webrtc;

PUBLIC_LIBRARY_FOLDER_PREFIX = $(WK_LIBRARY_INSTALL_PATH);
INSTALL_PUBLIC_LIBRARY_PREFIX = $(INSTALL_PATH_PREFIX)$(PUBLIC_LIBRARY_FOLDER_PREFIX);
SYSTEM_PUBLIC_LIBRARY_PREFIX = $(SYSTEM_PUBLIC_LIBRARY_PREFIX_$(USE_SYSTEM_CONTENT_PATH));
SYSTEM_PUBLIC_LIBRARY_PREFIX_YES = $(DSTROOT)$(PUBLIC_LIBRARY_FOLDER_PREFIX);
LIBRARY_LIST = libboringssl.a libopus.a libsrtp.a libvpx.a libwebm.a libyuv.a

CREATE_SYMLINK_OUTPUT_FILES = ${SYSTEM_PUBLIC_HEADER_PREFIX}  ${SYSTEM_PUBLIC_LIBRARY_PREFIX};

APPLY_RULES_IN_COPY_HEADERS = YES;
PUBLIC_HEADERS_FOLDER_PATH = ${INSTALL_PUBLIC_HEADER_PREFIX}/webrtc;

INSTALLHDRS_SCRIPT_PHASE = YES;

STRIP_INSTALLED_PRODUCT = YES;
STRIP_INSTALLED_PRODUCT[config=Debug] = NO;

EXCLUDED_SOURCE_FILE_NAMES_macosx = voice_processing_audio_unit.mm;
EXCLUDED_SOURCE_FILE_NAMES_ios = macutils.cc macwindowpicker.cc audio_device_mac.cc audio_mixer_manager_mac.cc logging_mac.mm;
EXCLUDED_SOURCE_FILE_NAMES_arm = *_sse.cc *_sse2.cc;

EXCLUDED_SOURCE_FILE_NAMES[sdk=appletvos*] = $(EXCLUDED_SOURCE_FILE_NAMES_ios) $(EXCLUDED_SOURCE_FILE_NAMES_arm);
EXCLUDED_SOURCE_FILE_NAMES[sdk=appletvsimulator*] = $(EXCLUDED_SOURCE_FILE_NAMES_ios);
EXCLUDED_SOURCE_FILE_NAMES[sdk=appletvsimulator*][arch=arm64*] = $(EXCLUDED_SOURCE_FILE_NAMES_ios) $(EXCLUDED_SOURCE_FILE_NAMES_arm);
EXCLUDED_SOURCE_FILE_NAMES[sdk=iphoneos*] = $(EXCLUDED_SOURCE_FILE_NAMES_ios) $(EXCLUDED_SOURCE_FILE_NAMES_arm);
EXCLUDED_SOURCE_FILE_NAMES[sdk=iphonesimulator*] = $(EXCLUDED_SOURCE_FILE_NAMES_ios);
EXCLUDED_SOURCE_FILE_NAMES[sdk=iphonesimulator*][arch=arm64*] = $(EXCLUDED_SOURCE_FILE_NAMES_ios) $(EXCLUDED_SOURCE_FILE_NAMES_arm);
EXCLUDED_SOURCE_FILE_NAMES[sdk=macosx*] = $(EXCLUDED_SOURCE_FILE_NAMES_macosx);
EXCLUDED_SOURCE_FILE_NAMES[sdk=macosx*][arch=arm64*] = $(EXCLUDED_SOURCE_FILE_NAMES_macosx) $(EXCLUDED_SOURCE_FILE_NAMES_arm);

OTHER_LDFLAGS = $(inherited) $(SOURCE_VERSION_LDFLAGS) $(WEBRTC_LDFLAGS_ENABLE_LIBFUZZER_$(ENABLE_LIBFUZZER)) -framework CoreGraphics;
