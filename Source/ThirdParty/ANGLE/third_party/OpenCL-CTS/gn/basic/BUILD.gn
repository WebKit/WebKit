# Copyright 2024 The ANGLE Project Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//third_party/OpenCL-CTS/gn/angle_ocl_cts.gni")

ocl_cts_binary("basic") {
  include_dirs =
      [ "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic" ]
  sources = [
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/main.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_arraycopy.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_arrayimagecopy.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_arrayreadwrite.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_astype.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_async_copy.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_async_copy2D.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_async_copy3D.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_async_copy_fence.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_async_strided_copy.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_barrier.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_basic_parameter_types.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_bufferreadwriterect.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_constant.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_constant_source.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_createkernelsinprogram.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_enqueue_map.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_enqueued_local_size.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_explicit_s2v.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_fpmath.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_get_linear_ids.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_global_linear_id.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_global_work_offsets.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_hiloeo.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_hostptr.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_if.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_image_multipass.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_image_param.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_image_r8.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_imagearraycopy.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_imagearraycopy3d.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_imagecopy.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_imagecopy3d.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_imagedim.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_imagenpot.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_imagerandomcopy.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_imagereadwrite.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_imagereadwrite3d.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_int2fp.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_intmath.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_kernel_call_kernel_function.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_kernel_memory_alignment.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_local.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_local_kernel_scope.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_local_linear_id.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_loop.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_multireadimagemultifmt.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_multireadimageonefmt.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_numeric_constants.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_pointercast.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_preprocessors.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_progvar.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_queue_priority.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_readimage.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_rw_image_access_qualifier.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_simple_image_pitch.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_sizeof.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_vec_type_hint.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_vector_creation.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_vector_swizzle.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_vloadstore.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_work_item_functions.cpp",
    "$angle_root/third_party/OpenCL-CTS/src/test_conformance/basic/test_writeimage.cpp",
  ]
}
