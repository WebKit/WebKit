// GENERATED FILE - DO NOT EDIT.
// Generated by generate_entry_points.py using data from gl.xml.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Context_gles_1_0_autogen.h: Creates a macro for interfaces in Context.

#ifndef ANGLE_CONTEXT_GLES_1_0_AUTOGEN_H_
#define ANGLE_CONTEXT_GLES_1_0_AUTOGEN_H_

#define ANGLE_GLES_1_0_CONTEXT_API                                                        \
    void clientActiveTexture(GLenum texture);                                             \
    void colorPointer(GLint size, VertexAttribType typePacked, GLsizei stride,            \
                      const void *pointer);                                               \
    void disableClientState(ClientVertexArrayType arrayPacked);                           \
    void enableClientState(ClientVertexArrayType arrayPacked);                            \
    void getFixedv(GLenum pname, GLfixed *params);                                        \
    void getTexParameterxv(TextureType targetPacked, GLenum pname, GLfixed *params);      \
    void normalPointer(VertexAttribType typePacked, GLsizei stride, const void *pointer); \
    void texCoordPointer(GLint size, VertexAttribType typePacked, GLsizei stride,         \
                         const void *pointer);                                            \
    void texParameterx(TextureType targetPacked, GLenum pname, GLfixed param);            \
    void texParameterxv(TextureType targetPacked, GLenum pname, const GLfixed *params);   \
    void vertexPointer(GLint size, VertexAttribType typePacked, GLsizei stride,           \
                       const void *pointer);

#endif  // ANGLE_CONTEXT_API_1_0_AUTOGEN_H_
