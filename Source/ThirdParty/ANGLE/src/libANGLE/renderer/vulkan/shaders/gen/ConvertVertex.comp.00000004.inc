// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertVertex.comp.00000004.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertVertex_comp_00000004[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x9d,0x99,0x77,0x70,0x57,0x45,
    0x10,0xc7,0xdf,0xa5,0x9b,0x20,0x10,0x4a,0x90,0x16,0x89,0x20,0x04,0x12,0x03,0x62,
    0x08,0x2d,0x04,0xa4,0x05,0x25,0x48,0x13,0x15,0x46,0xac,0x68,0x6c,0x28,0x0a,0x76,
    0x50,0x40,0x05,0xb1,0xa2,0x58,0xb1,0x77,0x51,0xec,0x1d,0x0b,0x16,0xec,0x62,0x57,
    0xec,0xbd,0x97,0x19,0x67,0x54,0x04,0x0b,0x78,0xfb,0xee,0xb3,0xc9,0x72,0xe6,0x2f,
    0x33,0xf3,0xe6,0xf7,0xf6,0xbb,0xbb,0xdf,0xdd,0xdb,0xdb,0xbb,0x77,0xef,0x25,0x33,
    0xa3,0x6b,0x6e,0x92,0xb8,0x24,0x3f,0xc9,0x4b,0xf6,0x74,0x49,0xfa,0x57,0x98,0x64,
    0x24,0x72,0x5b,0x90,0xe4,0xa4,0xbf,0xb5,0x75,0x93,0xeb,0x2a,0x66,0xcf,0x99,0x51,
    0x51,0xd9,0xaf,0x8f,0xe8,0x9b,0x27,0x99,0xa9,0x9d,0xe8,0x5a,0x78,0x9b,0x6c,0xff,
    0x9b,0xe5,0xaf,0x99,0xfb,0x1f,0x7a,0xa4,0xe0,0x6d,0xbc,0xa2,0xa5,0xc7,0xb3,0x52,
    0xae,0x24,0x19,0x86,0xad,0x5c,0x63,0xbc,0xf5,0xf6,0x21,0x4c,0xd2,0x95,0x5f,0xc5,
    0x1c,0x58,0x96,0xc1,0x32,0xc0,0xf2,0x0c,0x96,0x09,0xd6,0xcc,0x60,0x59,0x60,0x2d,
    0x0d,0x96,0x0d,0xd6,0xc6,0x60,0x39,0x60,0xdb,0x18,0x2c,0x17,0xac,0x93,0xc1,0xf2,
    0xc0,0xba,0x18,0x6c,0x2b,0xb0,0x6e,0x06,0xcb,0x07,0x2b,0x35,0x58,0x01,0x58,0xb9,
    0xc1,0x9a,0x81,0xf5,0x31,0xd8,0xd6,0x60,0x95,0x06,0x6b,0x0e,0x36,0x40,0xea,0xee,
    0x47,0xaa,0x35,0xa8,0xf5,0x23,0x3c,0x90,0xfc,0xb5,0x3e,0x33,0xa2,0x3a,0x8a,0xfd,
    0x0c,0xea,0x23,0xf6,0x07,0xfb,0xdf,0xed,0x1a,0x74,0x41,0x2e,0xa1,0xce,0x22,0x37,
    0x77,0x5b,0xf2,0xb5,0x70,0xff,0xe5,0x13,0x4c,0xf9,0x0a,0xdd,0x96,0x7c,0x22,0x97,
    0x18,0x59,0xe6,0xbd,0x80,0x3a,0x8a,0xbc,0x07,0x72,0x7b,0x7f,0xb5,0xf6,0xa3,0xc8,
    0x48,0xe3,0x67,0xa6,0x7c,0x72,0xdf,0xd6,0xdb,0xe4,0x50,0xe3,0x24,0xfd,0xcd,0x4a,
    0xe7,0x22,0x97,0x71,0x96,0xf8,0x9c,0xf2,0xb8,0x57,0xbc,0xc8,0x7b,0x17,0xe2,0x53,
    0xe2,0xed,0x5b,0xd1,0x63,0xb9,0xf8,0x17,0x71,0x5f,0x88,0xbe,0x1d,0xf7,0x45,0xf0,
    0x75,0x34,0x7c,0x45,0xd8,0x74,0x21,0x1f,0xc1,0x8a,0xbd,0xb5,0xf6,0xc9,0xff,0xbd,
    0x24,0x8f,0xee,0xf4,0x8b,0x70,0x0d,0x46,0xee,0x01,0x26,0xe3,0x2e,0x65,0x0c,0x52,
    0xf2,0x32,0xe4,0x9e,0xc6,0xbf,0x17,0xb6,0x39,0x46,0xdf,0x9b,0x9e,0x56,0xb9,0x92,
    0xbc,0xcb,0xa8,0x63,0x35,0x73,0xa9,0x72,0x0d,0x7d,0xac,0xf6,0xa3,0x22,0x79,0x3c,
    0xf6,0x6d,0x3c,0xcb,0x24,0xe3,0x37,0x85,0x1e,0x12,0x59,0x6a,0x37,0x8d,0xf9,0xe9,
    0xec,0x51,0xed,0xc1,0x62,0x7a,0xed,0x40,0xf2,0x3d,0x88,0x5c,0x66,0x30,0x5e,0x91,
    0x0f,0x36,0xf9,0x49,0xbc,0x7a,0x33,0xcf,0x87,0xa1,0xb3,0xe3,0x9b,0xc9,0x9a,0xd0,
    0x3c,0x66,0x61,0xaf,0xfa,0xe3,0x59,0x6f,0x2a,0xcf,0x33,0x79,0x8a,0x7c,0x8a,0xbf,
    0x36,0x67,0x36,0xca,0x0b,0x58,0x4f,0xca,0x77,0xa6,0xf1,0x17,0x79,0x59,0x54,0xbf,
    0x1b,0x99,0x13,0xc9,0xef,0x66,0xfa,0xa1,0xd4,0xf0,0xdf,0x26,0xfc,0xfe,0x4f,0xe5,
    0x95,0xd1,0xfc,0x3d,0xc6,0x3a,0x17,0xff,0x17,0xf1,0xb7,0x75,0x5d,0x6b,0xec,0xa5,
    0xae,0x3f,0xa6,0xa3,0x9b,0xbf,0x5a,0xfd,0x7f,0x65,0xce,0x55,0xfe,0x87,0xfd,0xac,
    0x9d,0x97,0x33,0x5c,0xe8,0xe3,0x0c,0xe6,0x41,0xd7,0x6e,0x31,0x6b,0x54,0x64,0x89,
    0xdb,0xd2,0x05,0x1b,0xc1,0x06,0x23,0x17,0x82,0x09,0x4f,0x2b,0xfc,0x32,0xc9,0xb3,
    0xb5,0x0b,0x39,0xb5,0xc2,0x5e,0xe4,0x36,0x60,0xa2,0x6f,0xcb,0xbd,0x9d,0xa7,0x0a,
    0xd6,0x75,0x43,0xbf,0xb8,0xb0,0xc7,0x97,0x7b,0x49,0x78,0x64,0xdd,0x0b,0xb6,0x96,
    0x31,0x57,0xf9,0xae,0xcd,0xa0,0xd7,0x12,0x62,0x6f,0xf0,0x48,0x36,0xbd,0x22,0x75,
    0xea,0xee,0x42,0xbd,0x54,0xee,0x11,0xc9,0x7d,0x8d,0x2c,0xeb,0x76,0xe7,0x48,0x3f,
    0x3c,0xd2,0x8f,0x8a,0xe4,0xd1,0x91,0xfd,0x2e,0x91,0x7e,0x6c,0xa4,0x9f,0x84,0xbc,
    0xb3,0xcf,0x52,0x6a,0x50,0x4c,0x5d,0xa4,0x27,0x87,0x30,0xee,0x6d,0xc1,0xc5,0x46,
    0xd6,0x6b,0x17,0x17,0xd6,0x78,0xbd,0xb1,0x29,0x71,0x01,0xbf,0xd3,0xdb,0x48,0x2f,
    0x6c,0xe7,0x82,0x9f,0xe0,0x7f,0xf8,0x4a,0x74,0x63,0xcf,0xfd,0xd3,0xdb,0x8b,0xae,
    0xab,0xbf,0x04,0x93,0xfa,0xc8,0xfd,0x3f,0xbe,0xfa,0x72,0x2f,0x58,0x8d,0xb7,0xef,
    0x4e,0x0e,0x72,0xdf,0x83,0xfb,0x8d,0x5e,0x5f,0x8a,0x8f,0xfc,0xae,0x97,0xfd,0xc3,
    0xff,0x96,0xc1,0x2d,0xfa,0x72,0xf4,0xf2,0xab,0xb9,0xed,0xe0,0x42,0x9d,0x35,0xff,
    0xde,0xe4,0x5f,0x61,0x6c,0xfa,0xb8,0x80,0xdf,0x4d,0xfe,0x3b,0xba,0xe0,0x27,0xb8,
    0xe4,0x2c,0x72,0x4f,0x7f,0xf5,0x82,0xbf,0xa7,0x6b,0xac,0xd9,0x4e,0x4d,0xd4,0xac,
    0x12,0x5c,0x63,0xf6,0x6b,0x22,0x66,0x95,0x0b,0xf8,0xe9,0xde,0x46,0xe4,0xfe,0x2e,
    0xf8,0x55,0x19,0x9b,0x01,0xe4,0x3e,0x1f,0x9b,0x81,0x2e,0xd8,0x0d,0xa0,0x4e,0xd2,
    0x2f,0x03,0x8d,0xfd,0x20,0x17,0x7a,0x48,0xe3,0x0e,0x26,0xee,0x4a,0x93,0x5b,0xb5,
    0x0b,0xb8,0xce,0xd5,0x10,0x17,0xfc,0xaa,0x99,0xab,0xa1,0x66,0xae,0x44,0x57,0xe3,
    0xaf,0xa1,0x8c,0x5b,0xee,0xa5,0xce,0x5a,0x87,0xa1,0x26,0xf6,0x08,0x62,0x4b,0x5e,
    0xd2,0xa7,0x22,0x0f,0xf4,0x31,0x64,0x3d,0x8f,0x74,0xe1,0x7c,0x32,0x1c,0xbd,0xf4,
    0xf5,0x48,0x7c,0x45,0x5f,0xeb,0x42,0xaf,0x8b,0x4e,0x7a,0xb8,0xd6,0xf8,0x8e,0x71,
    0xe1,0xd9,0x3a,0x1a,0xbd,0xf4,0xfc,0x18,0x13,0x77,0x57,0x13,0x57,0xfa,0x7d,0x57,
    0xc3,0x5b,0xe7,0xc2,0x1a,0x11,0x9d,0xf4,0x7e,0x5d,0xca,0x9b,0x93,0xfa,0x8d,0x93,
    0xbe,0x66,0x8d,0x8c,0x35,0x7c,0xbb,0xb9,0xb0,0x4e,0x9f,0xa5,0xe6,0xe3,0x5d,0xc0,
    0xc6,0x99,0xde,0x1c,0x4f,0x1d,0xca,0xa8,0x43,0x99,0xf1,0x9f,0x10,0xcd,0xd9,0x44,
    0x17,0xb0,0x95,0xa6,0x9f,0x27,0xba,0x2d,0xfb,0xb9,0x97,0xf1,0x9f,0x4c,0x7c,0xb1,
    0x95,0xf5,0x39,0x99,0x5a,0xc8,0xde,0xb2,0x3b,0x67,0x93,0x49,0xac,0x99,0x01,0xfe,
    0xaa,0x22,0x4e,0x01,0xfb,0x8e,0x3c,0xfb,0xfa,0x7b,0xdf,0x5c,0xf6,0x59,0xbd,0xcf,
    0x67,0x3f,0x6a,0x66,0x7a,0xa1,0x1b,0x36,0xda,0x2f,0x65,0x3c,0xbf,0x7b,0x1a,0x9b,
    0x72,0x70,0xed,0xd3,0x1d,0xf0,0x2b,0x37,0x36,0x15,0xf0,0x2b,0x4f,0x1f,0x78,0x7a,
    0x1b,0x9b,0x1d,0xc1,0x95,0xa7,0x2f,0x7e,0x82,0x6b,0xad,0x76,0x82,0xbf,0xaf,0xe1,
    0xea,0x07,0x57,0xa5,0xe1,0xaa,0x02,0x57,0xbf,0xfe,0xf8,0x0a,0xbe,0xc9,0x8f,0xb1,
    0x7f,0x7a,0xb6,0x6c,0xac,0x4d,0x8b,0x26,0x6a,0xb3,0xb5,0xb9,0x6f,0x4e,0x6d,0x5a,
    0x9a,0xbd,0x71,0x10,0xcf,0x36,0x8d,0x39,0x18,0x9f,0x25,0x70,0x0e,0x01,0xab,0x36,
    0x63,0x1a,0x0a,0x5e,0xc3,0x5c,0x0f,0x6a,0xc0,0x02,0xc7,0x30,0x78,0x25,0xc7,0x61,
    0x26,0xc7,0x42,0xce,0xef,0xf2,0xd7,0xca,0xe4,0xd5,0x9a,0xbc,0xda,0x9a,0xbc,0x46,
    0x24,0xd1,0x1e,0x1f,0xc9,0x7b,0x47,0xf2,0xf4,0x48,0xde,0x37,0x92,0x0f,0x88,0xe4,
    0x39,0x91,0x7c,0x52,0x24,0x2f,0x8e,0xe4,0xf3,0x22,0x79,0x79,0x24,0x5f,0x69,0x64,
    0x39,0x6f,0xdc,0x12,0xe9,0x1f,0x35,0xb2,0x9c,0x27,0x5e,0x8a,0xf4,0x6f,0x45,0xfe,
    0xef,0x44,0xf2,0x67,0xc9,0x96,0xcf,0xb8,0x2f,0xa3,0x79,0x1b,0x49,0x1d,0xb5,0x9f,
    0x46,0xd3,0x4f,0xa3,0x8c,0x4d,0x2d,0xf8,0x22,0xe6,0x71,0x0c,0x7e,0xb5,0xcc,0xe3,
    0x08,0xb0,0x86,0x3d,0x27,0xe2,0x1c,0xdb,0x04,0x67,0x1d,0xb8,0xf6,0xcb,0x38,0xfc,
    0xea,0xe0,0xdc,0x05,0xac,0x61,0xdf,0x61,0x2e,0x95,0x73,0x02,0x9c,0xe3,0x8d,0xcd,
    0x44,0x70,0xdd,0xbb,0x27,0xe3,0x37,0xd1,0xd8,0xec,0x0e,0x8f,0x3e,0xcb,0xf6,0x00,
    0x9b,0x92,0xd6,0x3e,0x60,0x7b,0xe2,0x2b,0x3a,0xd9,0xf3,0xa7,0x26,0x8d,0x7b,0xbe,
    0xe8,0xf6,0xf2,0xd7,0x54,0x7a,0x6f,0x2f,0xfa,0x75,0x1a,0xf2,0x54,0x13,0x6b,0x1f,
    0xfa,0x51,0xc6,0x33,0x1d,0x59,0x75,0xfb,0x91,0x87,0xe8,0xf6,0x45,0xd6,0xbd,0x77,
    0x7f,0xf6,0xab,0xe9,0xf4,0xa3,0xd8,0xec,0x0d,0xae,0xfe,0x87,0xd0,0xcb,0x3a,0x27,
    0x87,0x82,0x55,0xa7,0x35,0xca,0x49,0xcf,0xd6,0x87,0x73,0xfe,0xae,0x47,0xaf,0xbe,
    0x47,0xa0,0x13,0xde,0x03,0x90,0xb5,0xae,0x47,0x52,0xd7,0x99,0xc6,0xfe,0x28,0xf0,
    0xdb,0xa9,0xcf,0xd1,0x60,0xb3,0xa8,0xcf,0x6c,0x53,0x1f,0xd1,0x1d,0xe3,0xaf,0xcb,
    0xa9,0xc7,0x31,0x86,0xe7,0x58,0xc6,0x7c,0x1b,0x3c,0xc7,0x81,0x49,0xed,0x57,0x78,
    0x0b,0x39,0x57,0x9e,0x00,0x5e,0xc9,0x59,0x7f,0x2e,0xbe,0x27,0xa2,0x93,0x9c,0xe7,
    0x20,0x2b,0xef,0xc9,0x11,0xef,0x5c,0x30,0xcb,0x7b,0x2a,0xf8,0x3c,0xde,0x11,0x94,
    0x77,0x3e,0x3a,0xe1,0x3d,0x09,0x59,0x6b,0xb1,0x90,0x5a,0x2c,0x30,0xb1,0x4e,0x03,
    0xd7,0x5a,0x9c,0x0e,0xa6,0xb5,0x58,0x64,0x6a,0x21,0xba,0x33,0xfc,0x75,0x36,0xb5,
    0x38,0xc3,0xf0,0x2c,0x21,0x67,0xdd,0x1b,0xcf,0xe2,0xdd,0x64,0x09,0xb9,0x2c,0x06,
    0x93,0xe7,0xe0,0x22,0xfc,0xcf,0x36,0xfe,0xe7,0x44,0x63,0x3e,0x17,0x6c,0x0a,0x79,
    0x2c,0x35,0x79,0x88,0xee,0x7c,0x7f,0x5d,0x00,0xcf,0xf9,0xc4,0x38,0x2f,0x69,0x3c,
    0x3b,0x2e,0x45,0x77,0x81,0x89,0x71,0x21,0xfb,0x9d,0xca,0x17,0x11,0x73,0x21,0x39,
    0x5f,0xcc,0xfb,0xd3,0x45,0x66,0x1c,0x97,0xe0,0x77,0xb1,0x79,0xfe,0x5c,0x0a,0xbe,
    0xcc,0xc4,0xbd,0x34,0x8a,0xbb,0xd4,0xc4,0xb9,0x8c,0x7d,0x53,0xeb,0x70,0x59,0x54,
    0x87,0x45,0xc8,0xb3,0x91,0x2f,0x37,0xbe,0x57,0xb0,0x2e,0xc4,0x77,0x39,0xb2,0xce,
    0xe7,0x55,0x4d,0x3c,0x77,0xaf,0x06,0x17,0xfb,0x2b,0x91,0x75,0x1d,0x5e,0xc3,0xb3,
    0x71,0x39,0xfb,0xb4,0xe6,0x73,0x8d,0xe1,0xbc,0xb6,0x09,0xce,0xeb,0xc0,0xb5,0x26,
    0xd7,0x83,0xd5,0x98,0xfe,0xbd,0xde,0xd8,0xdf,0x40,0x9d,0x75,0x2e,0x6f,0x02,0xbb,
    0x91,0xb9,0x5c,0x61,0xe6,0x52,0x74,0xb7,0xa6,0xfd,0x17,0xc6,0x7e,0x2b,0x9c,0xb7,
    0xf0,0x6e,0x2a,0x75,0x59,0x81,0xee,0x76,0x13,0xe3,0x0e,0x62,0xac,0xf1,0x31,0x4a,
    0xd3,0x3d,0x32,0x9c,0xb9,0xee,0x60,0x3e,0x05,0xbb,0xcb,0xe0,0xca,0x79,0x57,0xc4,
    0xb9,0x02,0xce,0xd2,0x74,0x0f,0x0d,0xcf,0x2b,0x5d,0x4b,0xf7,0x80,0xe9,0x5a,0xba,
    0x27,0x9a,0xa7,0xd9,0x26,0x9f,0x7b,0xa3,0xfd,0xfc,0xbe,0x26,0xf6,0xf3,0xfb,0xc1,
    0x75,0x3f,0x7f,0x00,0xbf,0xfb,0x8d,0xcd,0x83,0xd1,0x3a,0x78,0x08,0xcc,0xee,0xe7,
    0x0f,0xe3,0xfb,0x10,0xf5,0x5c,0x65,0xea,0x29,0xba,0x47,0xfc,0xb5,0x9a,0x1c,0x1f,
    0x31,0x39,0x3d,0x4e,0x4e,0x8f,0x99,0x78,0x4f,0x80,0xcb,0x18,0x1f,0x45,0x96,0x31,
    0xae,0xc2,0x7f,0xb5,0xb1,0x7d,0x92,0xf3,0x83,0xca,0x4f,0x71,0x3e,0x78,0x9a,0xbe,
    0x78,0x1a,0x9b,0xa7,0x8c,0xcd,0x33,0x9c,0x29,0x9e,0xc7,0x66,0x0d,0x76,0xcf,0x98,
    0x98,0x6b,0xa2,0x98,0xab,0x8c,0xff,0xb3,0xcc,0xb3,0x3e,0xdf,0x9e,0x03,0xd3,0x5e,
    0x7a,0xc1,0x8c,0xfd,0xb9,0x34,0x4e,0x92,0x62,0xc2,0xf3,0xbc,0xe1,0x79,0x99,0xb3,
    0x87,0xca,0xaf,0xc0,0xab,0x6b,0xff,0x55,0xb0,0xb5,0xa6,0xa7,0x5e,0xa3,0x77,0x5e,
    0x35,0x3d,0xf1,0x3a,0xb8,0x8e,0xe7,0x0d,0xb8,0x5f,0x37,0x7b,0xe8,0x9b,0xe0,0xfa,
    0x4e,0xfb,0x12,0x98,0xc4,0x16,0xfd,0xdb,0x9c,0x7b,0x24,0xff,0x75,0x26,0x7f,0xc1,
    0xdf,0xf5,0xd7,0x07,0xe4,0xff,0xae,0xc9,0xf7,0xbd,0xa8,0xdf,0xdf,0x67,0x7d,0xbc,
    0x47,0x8c,0x77,0xc0,0xa4,0x8e,0xeb,0xf0,0xff,0xc0,0xe8,0xea,0x23,0xdd,0x3a,0xd3,
    0xf7,0x1f,0x72,0xce,0xd2,0x31,0x7e,0x04,0x26,0xbe,0x6f,0x21,0x6b,0x1e,0x1f,0x73,
    0x46,0x53,0xf9,0x13,0xea,0xaa,0xef,0x4f,0x9f,0x82,0x7d,0x6c,0xe6,0xf7,0x53,0x62,
    0xeb,0xbc,0xbc,0x60,0xfc,0x3f,0xc7,0x7f,0x2e,0xb9,0x7c,0x01,0x26,0xbe,0x9f,0x21,
    0x6b,0x9e,0x5f,0x71,0xfe,0x3b,0x8a,0xf7,0xbd,0xaf,0xc1,0x94,0xeb,0x1b,0x7a,0x4d,
    0xfb,0xf1,0x5b,0xb0,0x95,0xe9,0x5c,0x04,0x9f,0xef,0xc0,0xcf,0xe4,0x1c,0xfe,0x3d,
    0x3c,0xdf,0x11,0xf3,0x4b,0x30,0x7d,0xa7,0xfc,0x81,0x33,0x66,0x33,0x7f,0xca,0x14,
    0xf9,0x27,0xbe,0x77,0x95,0xa2,0xfb,0xd1,0xf8,0xfd,0x64,0xfc,0x7e,0xc6,0x4f,0xce,
    0x52,0x3f,0x47,0x67,0xff,0xf6,0xcc,0x79,0x3b,0xce,0xfe,0x45,0x7c,0xbb,0x97,0xda,
    0x74,0x30,0x1c,0xbf,0x80,0x0b,0xc7,0x2f,0xd1,0x3b,0x4e,0x31,0x1c,0x1d,0xcd,0xfb,
    0x43,0x27,0xc3,0xd7,0x19,0xbe,0x6d,0xcd,0xd9,0x7a,0x63,0x74,0xd6,0x4e,0xcc,0xf7,
    0x20,0xd9,0x1f,0x7e,0x63,0x7f,0xf8,0xd5,0xd4,0xf4,0x77,0x70,0xdd,0x8f,0xd6,0x83,
    0x2d,0xa3,0x7f,0x37,0x98,0xfe,0x5d,0x9f,0x62,0x9e,0x93,0xf7,0xdc,0x3f,0x0c,0xcf,
    0x9f,0xe4,0xa7,0xeb,0xe6,0x2f,0xb0,0xb5,0x86,0xfb,0x6f,0xf0,0x59,0xe6,0x9c,0xb3,
    0x09,0xbc,0x9e,0x6f,0x87,0xda,0xa3,0x9b,0xd1,0x49,0xed,0x37,0x22,0x6b,0xdd,0x9c,
    0x0b,0xe3,0x9f,0x20,0xef,0xd1,0xf2,0xad,0xdf,0x05,0x6c,0x5a,0x3a,0x8f,0xe1,0x59,
    0x98,0xc5,0x37,0x40,0x79,0x3f,0xcb,0x34,0xef,0xe3,0xd9,0x2e,0xd4,0x69,0x0d,0x79,
    0xe6,0xb8,0x60,0x9b,0xcd,0x3b,0xba,0x38,0xe5,0xf0,0x3e,0xbf,0x81,0x1a,0xe7,0x9a,
    0x6f,0x10,0x79,0xc4,0xd6,0x7e,0xde,0xca,0x05,0x4c,0xf3,0xce,0x77,0x01,0x53,0xae,
    0xfc,0x88,0x6b,0x83,0xa9,0x59,0x01,0xff,0x60,0x92,0xf9,0x97,0x7b,0x9d,0xff,0x0c,
    0xf3,0x3f,0x90,0x2e,0x66,0xfe,0x4b,0xe0,0xe8,0x6a,0xbe,0xf1,0x15,0x35,0xf1,0xbd,
    0xaa,0x1d,0xb8,0xce,0xfb,0x36,0x7c,0x37,0x9a,0x67,0x6c,0xda,0xbb,0x80,0xeb,0x79,
    0xbc,0x83,0x0b,0x58,0xb5,0x39,0x07,0x75,0x74,0x81,0xab,0x83,0xa9,0x5f,0x27,0xfe,
    0x7f,0xa2,0x67,0xf6,0xce,0x7c,0xab,0xad,0xc7,0x5e,0xc6,0x2d,0x58,0x27,0xf3,0x4d,
    0xe3,0x5f,0x7d,0xdf,0x14,0x6b,0xb0,0x1b,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dst
// {
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)buffer src
// {
//     uint srcData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint outputCount;
//
//     uint componentCount;
//
//     uint srcOffset;
//     uint dstOffset;
//
//     uint Ns;
//     uint Bs;
//     uint Ss;
//     uint Es;
//
//     uint Nd;
//     uint Bd;
//     uint Sd;
//     uint Ed;
//
//     uint srcEmulatedAlpha;
//
//     bool isSrcHDR;
//     bool isSrcA2BGR10;
// } params;
//
// uint getSourceComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Ss + component * params . Bs + params . srcOffset;
// }
//
// uint getDestinationComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Sd + component * params . Bd + params . dstOffset;
// }
//
// uint getShiftBits(uint offset, uint B)
// {
//
//     uint shift =(offset % 4)* 8;
//
//     return shift;
// }
//
//       float loadSourceComponent(uint cd)
// {
//
//     uint vertex = cd / params . Nd;
//     uint component = cd % params . Nd;
//
//     if(component >= params . Ns && component < 3)
//     {
//         return 0;
//     }
//
//     uint offset = getSourceComponentOffset(vertex, component);
//     uint block = srcData[offset / 4];
//
//     uint shiftBits;
//     uint valueBits;
//     uint valueMask;
//
//     if(params . isSrcHDR)
//     {
//         valueBits = component == 3 ? 2 : 10;
//         valueMask = component == 3 ? 0x03 : 0x3FF;
//         if(params . isSrcA2BGR10)
//         {
//             shiftBits = 10 * component;
//         }
//         else
//         {
//
//             shiftBits = component == 3 ? 0 :(valueBits *(2 - component)+ 2);
//         }
//     }
//     else
//     {
//         shiftBits = getShiftBits(offset, params . Bs);
//         valueBits = params . Bs * 8;
//         valueMask = valueBits == 32 ? - 1 :(1 << valueBits)- 1;
//     }
//
//     uint valueAsUint;
//
//     if(component >= params . Ns && component == 3)
//     {
//         valueAsUint = params . srcEmulatedAlpha;
//     }
//     else
//     {
//         valueAsUint =(block >> shiftBits)& valueMask;
//     }
//
//     if(valueBits < 32)
//     {
//         bool isNegative =(valueAsUint &(1 <<(valueBits - 1)))!= 0;
//         uint signExtension = isNegative ? 0xFFFFFFFF << valueBits : 0;
//         valueAsUint |= signExtension;
//     }
//     int valueAsInt = int(valueAsUint);
//           float value = float(valueAsInt)/(valueMask >> 1);
//     value = max(value, float(- 1));
//
//     return value;
// }
//
//        float convertComponent(float srcValue)
// {
//
//     return srcValue;
// }
//
// uint makeDestinationComponent(uint cd, float value)
// {
//
//     uint valueAsUint;
//
//     if(params . Bd == 2)
//     {
//
//         uint shift =((cd & 1)== 0)? 0 : 16;
//         valueAsUint = packHalf2x16(vec2(value, 0.0))<< shift;
//     }
//     else
//     {
//         valueAsUint = floatBitsToInt(value);
//     }
//
//     return valueAsUint;
// }
//
// void storeDestinationComponents(uint valueAsUint)
// {
//
//     destData[gl_GlobalInvocationID . x + params . dstOffset / 4]= valueAsUint;
// }
//
// void main()
// {
//     if(gl_GlobalInvocationID . x >= params . outputCount)
//         return;
//
//     uint valueOut = 0;
//     for(uint i = 0;i < params . Ed;++ i)
//     {
//         uint cd = gl_GlobalInvocationID . x * params . Ed + i;
//         if(cd >= params . componentCount)
//         {
//             break;
//         }
//
//               float srcValue = loadSourceComponent(cd);
//                float destValue = convertComponent(srcValue);
//         valueOut |= makeDestinationComponent(cd, destValue);
//     }
//
//     storeDestinationComponents(valueOut);
// }
