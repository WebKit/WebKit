// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolve.frag.00000013.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolve_frag_00000013[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x93,0xed,0x4b,0x54,0x41,
    0x14,0xc6,0x67,0xf7,0xea,0xbd,0x5a,0xa9,0x2b,0xb6,0x9a,0x11,0x69,0xd9,0x87,0xa0,
    0x14,0x3f,0x54,0x08,0x51,0xd4,0x07,0x4d,0x63,0x2b,0xdf,0x0b,0xac,0x2e,0xa6,0x4b,
    0x6a,0xba,0x99,0xbb,0x65,0x49,0x04,0x65,0xfd,0x09,0xf5,0x4f,0xf4,0xf7,0x45,0x2f,
    0x10,0x74,0x9e,0xb9,0xbf,0x91,0xa1,0x85,0xd9,0x99,0xf3,0x9c,0xe7,0xbc,0x3c,0x73,
    0xe6,0x26,0xe5,0x91,0xcc,0xb9,0x92,0x3b,0xe6,0x3a,0xdc,0x17,0x57,0xfc,0x7a,0x5d,
    0xd9,0x90,0x62,0xff,0xda,0xe7,0xcc,0xd7,0xe9,0x16,0x66,0x97,0xf3,0xc9,0x47,0x8b,
    0x79,0x73,0x63,0x75,0xbd,0xbe,0x97,0x37,0x5b,0xf5,0xc6,0xda,0xe6,0x76,0x5e,0x7f,
    0xbb,0xfb,0x72,0xaf,0x65,0xdc,0xe3,0x2e,0xf5,0x31,0x77,0x6a,0x0b,0xb5,0xb1,0x66,
    0x6b,0x7d,0xec,0xca,0xd5,0x71,0xe5,0xea,0x76,0x89,0xcf,0x29,0x5f,0x8f,0xcb,0x5c,
    0x9b,0xed,0x5a,0x3b,0xab,0x9b,0x0d,0xe1,0x15,0x5b,0x53,0x7e,0x4f,0x3c,0x9e,0x29,
    0x87,0x9d,0x2a,0x3e,0xa7,0x62,0x9c,0x9b,0x76,0xed,0xae,0x9f,0xde,0x46,0xd8,0x03,
    0x56,0x02,0xeb,0x88,0xb0,0x32,0x58,0x25,0xc2,0x12,0xb0,0x53,0x11,0xd6,0x06,0x76,
    0x26,0xc2,0xda,0xc1,0x86,0x23,0x2c,0x05,0xbb,0x10,0x61,0x19,0xd8,0xc5,0x08,0xeb,
    0x00,0xbb,0x1c,0x61,0x9d,0x60,0xe3,0x5e,0x57,0x72,0xd4,0x9f,0x34,0x4e,0xa1,0xf1,
    0x5b,0x5f,0x61,0xcf,0xd8,0xf9,0x3c,0xfa,0x82,0x7d,0x0e,0x8d,0x7d,0x16,0x55,0xf6,
    0x76,0xe2,0xb5,0xe8,0x5c,0x35,0x4e,0x4a,0xaf,0xe2,0x0c,0x98,0x9d,0xd1,0xaf,0xfc,
    0xfd,0xc6,0xec,0xc2,0x2f,0x5f,0xb7,0xed,0x5d,0xe8,0x1e,0xb6,0xff,0x1e,0xe2,0x84,
    0x5f,0xc7,0xae,0x44,0xb9,0x7a,0xe1,0x87,0x5a,0x55,0x72,0xe9,0x77,0xd6,0x9d,0x38,
    0xba,0x87,0x5e,0x56,0xca,0xea,0x62,0xaf,0x46,0x4b,0xf5,0x06,0xb8,0x8f,0x7e,0xea,
    0x0d,0x30,0x0f,0x61,0x97,0xd0,0x32,0x48,0x7e,0xf1,0x4f,0xe3,0xcb,0x22,0xff,0x10,
    0xb6,0xfc,0xc3,0xf8,0x95,0xff,0xa4,0x75,0x39,0x02,0xaf,0xca,0xac,0x5c,0x14,0x37,
    0xca,0x7c,0x82,0x3d,0x41,0xac,0xf2,0x4c,0xf2,0x3e,0x52,0xfa,0x9a,0xe4,0x4d,0x26,
    0xbe,0x9f,0x4e,0x9b,0x45,0x51,0xa3,0x44,0xce,0x52,0xb4,0x42,0xaf,0xd3,0x47,0x73,
    0x2b,0x72,0xc8,0x9e,0xf9,0xaf,0x87,0x1a,0x39,0xc5,0xbf,0x47,0xfd,0x94,0xbb,0x9e,
    0xe5,0x9c,0x60,0x2f,0x52,0x53,0xb3,0xba,0x66,0x6f,0xa9,0xcc,0xd9,0xc1,0xf9,0x65,
    0x88,0xde,0xea,0x0d,0xe6,0xba,0xc2,0xec,0x1e,0xd8,0xed,0x68,0x16,0x8f,0xc1,0x56,
    0xa2,0x9e,0x1b,0xbc,0x8f,0x27,0xf8,0x6f,0x5b,0x06,0xdd,0xf1,0x53,0xe6,0x30,0x48,
    0x3e,0x71,0x72,0xf0,0x4f,0xc6,0x91,0xbd,0x4a,0x5c,0x4e,0x9c,0xee,0xfe,0x19,0x71,
    0x43,0xc4,0xa9,0xdf,0x35,0xf0,0xef,0xc6,0xd1,0x3c,0xd6,0xc1,0x34,0x8f,0x9f,0xd6,
    0xf9,0x16,0xfd,0xfc,0x31,0xbe,0x7c,0x75,0x5b,0x5b,0xe8,0xd1,0x79,0xce,0xe2,0x74,
    0x0f,0xcf,0xa9,0xa9,0xdf,0x07,0xee,0x6f,0x03,0x7c,0xde,0xac,0xcc,0xe3,0x05,0x16,
    0x78,0xbf,0x2d,0x47,0xc8,0xa5,0xfd,0x87,0xb1,0x32,0xaf,0xa1,0xe0,0xb4,0x13,0x53,
    0x8f,0x34,0xbc,0x40,0xc3,0x68,0xa4,0x61,0x1b,0x3c,0x68,0xd8,0x01,0x0b,0x1a,0x9a,
    0x91,0x86,0x1d,0x7f,0xaf,0xce,0x63,0xaa,0xdb,0x88,0x34,0xec,0x52,0xbb,0x14,0x69,
    0x78,0x05,0x1e,0x34,0x7c,0x04,0x0b,0x3c,0x69,0x08,0xb9,0x9a,0x91,0x86,0x43,0x38,
    0x5b,0xc4,0x34,0x22,0x0d,0x2d,0x34,0x4c,0x44,0x1a,0x5e,0x83,0x07,0x0d,0x6f,0xc0,
    0x82,0x86,0x83,0x48,0x83,0x7c,0xfb,0xb6,0x0e,0xa8,0xbb,0xcf,0x3b,0x52,0xdd,0x77,
    0xd4,0x3e,0x8c,0xde,0xbb,0x7a,0x0c,0xdc,0x83,0xa8,0xc7,0xcf,0xf0,0x9a,0xc4,0xed,
    0xd3,0x8f,0xbe,0x89,0xbb,0x7c,0x0f,0xea,0x59,0x6f,0xff,0x3e,0x3d,0xd7,0xe0,0xa4,
    0xbe,0x66,0x81,0x87,0xfb,0x9b,0x23,0xa7,0x8b,0xb0,0x79,0x30,0xf5,0x32,0x6b,0x88,
    0xbe,0x9b,0x05,0xb8,0xf3,0xe4,0xc8,0xad,0x1b,0x7d,0x3f,0x4b,0xd4,0x95,0xff,0x16,
    0xef,0x5b,0x79,0x74,0x3f,0xcb,0xf8,0xf5,0x7b,0x4f,0xfd,0x87,0xe0,0x37,0xed,0x7e,
    0xa6,0xb0,0xff,0x5a,0xa5,0x09,0x5b,0xff,0x00,0xd5,0xcc,0x3b,0x94,0x28,0x07,0x00,
    0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_GOOGLE_include_directive : require
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// #extension GL_ARB_shader_stencil_export : require
//
// layout(set = 0, binding = 1)uniform utexture2DMSArray stencil;
//
// #line 1 "shaders/src/BlitResolve.inc"
//
// layout(push_constant)uniform PushConstants {
//
//             ivec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int samples;
//     float invSamples;
//
//     int outputMask;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
// } params;
//
//         ivec2 getSrcImageCoords()
// {
//
//             ivec2 srcImageCoords = ivec2(gl_FragCoord . xy);
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//         srcImageCoords . x = - srcImageCoords . x;
//     if(params . flipY)
//         srcImageCoords . y = - srcImageCoords . y;
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//     return srcImageCoords;
// }
//
// #line 123 "shaders/src/BlitResolve.frag"
//
// void main()
// {
//             ivec2 srcImageCoords = getSrcImageCoords();
//
//     gl_FragStencilRefARB = int(texelFetch(stencil, ivec3(srcImageCoords, params . srcLayer), 0). x);
//
// }
