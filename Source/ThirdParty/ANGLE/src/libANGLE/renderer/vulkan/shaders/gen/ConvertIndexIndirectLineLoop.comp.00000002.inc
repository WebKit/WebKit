// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertIndexIndirectLineLoop.comp.00000002.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertIndexIndirectLineLoop_comp_00000002[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x6d,0x95,0x6d,0x68,0x95,0x65,
    0x18,0xc7,0xef,0xf3,0xb2,0xe3,0x5b,0x94,0xb5,0xad,0x17,0xf0,0xcc,0x93,0x7e,0xd8,
    0xda,0x42,0x82,0x1d,0xd7,0x1b,0x4d,0xf7,0xc5,0xb9,0xda,0xa9,0x46,0xdf,0x72,0x83,
    0x8a,0x26,0x24,0x95,0x96,0x61,0x1b,0x6d,0x14,0x41,0x1b,0x7d,0xd9,0xb7,0x90,0xdc,
    0xb7,0xb6,0x66,0x8d,0x0c,0x4b,0x50,0x98,0x60,0x19,0x13,0x2c,0x73,0x7d,0x2b,0x89,
    0xa2,0x08,0x29,0x44,0x0a,0x91,0x6c,0x4d,0x2d,0xbb,0xae,0x67,0xbf,0x7b,0xfd,0x7d,
    0x38,0x07,0x6e,0x9e,0x73,0xfd,0xff,0xd7,0xf5,0xbf,0xde,0xee,0xf3,0x9c,0x5c,0x76,
    0xfd,0xb2,0x10,0x32,0x61,0x65,0x58,0x1e,0xea,0x32,0x21,0xf9,0xdc,0x1c,0xb2,0xc1,
    0xbf,0xae,0x0a,0x85,0xe4,0xd9,0xd9,0xfd,0x44,0xf7,0x86,0xdd,0xaf,0x3c,0xbb,0xa1,
    0xbc,0xf1,0x1e,0xe7,0x6f,0x0c,0xb9,0xc4,0xcf,0xb9,0x9b,0xcc,0xa7,0xc6,0x9e,0x79,
    0x3b,0x2f,0x3c,0xfd,0xdc,0x8b,0x8e,0x6f,0xb5,0xb3,0xda,0xf0,0x7c,0xa2,0x15,0xc2,
    0x66,0x7c,0x33,0x09,0x57,0x93,0x60,0xfe,0x59,0xcf,0x33,0x62,0x19,0xb0,0xbc,0x60,
    0x59,0xb0,0xe5,0x82,0xe5,0xc0,0x6e,0x10,0x2c,0x0f,0xb6,0xda,0xeb,0x35,0x8f,0x18,
    0xdb,0x69,0xcc,0x1a,0x7b,0x16,0x96,0x74,0xf3,0xa1,0x48,0xde,0xdb,0x89,0x2f,0xa6,
    0xea,0xf1,0xf8,0x22,0x79,0x3c,0x7e,0xad,0x3d,0xd7,0x2d,0x71,0x8b,0xf6,0x9d,0xd4,
    0xeb,0x76,0xe3,0x75,0xfa,0x35,0xa1,0xa9,0x8a,0x5e,0x93,0xe8,0x35,0xa7,0xf4,0x9a,
    0xd1,0x8b,0x76,0x6b,0xaa,0xde,0x72,0xaa,0xde,0x72,0x15,0xfd,0xb2,0xe8,0xb7,0xa5,
    0xf4,0xdb,0xd0,0x8f,0xf3,0xd8,0x9a,0xec,0x36,0x24,0x73,0x71,0x7b,0x22,0x55,0xff,
    0x64,0x15,0xfd,0x49,0xd1,0x9f,0x4a,0xe9,0x4f,0xa1,0x1f,0xf9,0xd3,0xe8,0xdf,0x61,
    0xa7,0xd6,0xb2,0x66,0x13,0x3e,0x97,0xf0,0xfe,0xbd,0xde,0x7c,0x3c,0x5f,0x09,0x8d,
    0x86,0xb0,0x2c,0xd9,0x57,0xa1,0xca,0x29,0x99,0xef,0x2d,0xf6,0x5c,0xc1,0x5d,0x7a,
    0x10,0xbb,0x16,0xcc,0xb5,0xea,0xd0,0xf2,0x7d,0xb4,0x60,0xd7,0x93,0xcb,0xe3,0x6f,
    0xc5,0xd7,0xf5,0x8a,0x56,0x45,0xbc,0x0f,0x0d,0xec,0x79,0x0d,0x7e,0x0d,0xc4,0x14,
    0xc9,0xe3,0xf6,0x5a,0xb0,0x16,0xc9,0x13,0xf0,0x5f,0x07,0x17,0x75,0x1b,0x45,0xd7,
    0xf7,0xdd,0x88,0xdf,0x5d,0xf8,0x35,0xa1,0xeb,0x76,0x73,0x4a,0xb7,0x85,0xf9,0xb9,
    0x4e,0xab,0xe8,0xf8,0x5e,0x5b,0xd1,0xd9,0x48,0x4c,0x19,0x1d,0xb7,0xdb,0x44,0xc7,
    0x63,0xda,0xb1,0x6f,0x33,0x7b,0x0b,0x3a,0x39,0xe2,0x3b,0x99,0xd1,0x16,0xe2,0x3b,
    0xf9,0xad,0x66,0x24,0xbe,0x4b,0xfa,0x7b,0x18,0xae,0x20,0x7c,0x05,0xac,0xce,0xb2,
    0x3c,0x2a,0xf8,0x33,0x76,0xae,0xd9,0x27,0xf6,0xd3,0x9f,0xda,0xc7,0x2e,0xee,0x97,
    0xf7,0x37,0x21,0xfd,0xf9,0xbd,0x9a,0x20,0xdf,0xfb,0xd4,0x3e,0x49,0x7d,0x6e,0x4f,
    0xa5,0xfa,0x9b,0xa1,0x9f,0x68,0xcf,0xa2,0x1b,0xed,0xaf,0x79,0xdf,0xdc,0x6d,0x96,
    0xf7,0x79,0x1a,0xac,0xc2,0x69,0xb3,0xfb,0x9d,0x25,0x26,0xa0,0xf5,0xb7,0x21,0xfe,
    0x0e,0x9b,0x37,0x6b,0x0e,0xfc,0x8a,0x7d,0xf7,0x59,0x7c,0x03,0xef,0xcf,0x0e,0xf3,
    0xf2,0xbb,0x74,0x2f,0xf7,0xcf,0xef,0xc2,0x43,0xe4,0xbd,0x0f,0xbc,0xc3,0x2c,0xbf,
    0x17,0xf7,0xb3,0x9b,0x12,0x5c,0xf4,0x7b,0x00,0xee,0x0d,0xd3,0x72,0x7b,0x13,0x7c,
    0xbb,0xc4,0x6e,0x96,0xd8,0x4d,0x12,0xdb,0x01,0xe7,0x75,0xf8,0x6e,0x1e,0x61,0x7f,
    0x5d,0xe2,0xd3,0x0d,0xfe,0xb1,0xf9,0xf8,0x7e,0x1e,0x03,0xab,0xd0,0x5f,0x0f,0xfd,
    0x5d,0x36,0x7f,0xe7,0x1e,0xb7,0xd3,0x43,0x8f,0xfe,0x7d,0xc1,0x9e,0x73,0xd8,0x3d,
    0xd8,0x4f,0x62,0xfb,0xf3,0x92,0xfd,0x56,0x3d,0xcf,0x35,0xea,0x71,0x9f,0xed,0x76,
    0xfa,0x84,0xfb,0x87,0x9a,0x9c,0xab,0xcd,0x5c,0xcf,0x5d,0x15,0x6e,0x65,0x8a,0xbb,
    0x22,0xdc,0x8a,0x14,0x77,0x99,0xd9,0x39,0xb7,0x93,0x7c,0x1f,0xd1,0xe3,0x53,0xf0,
    0x1e,0xfb,0x97,0xf5,0xd5,0x0b,0x1f,0xfb,0x74,0x7e,0x9b,0x9d,0x5e,0xfa,0xd8,0x26,
    0xf3,0xdf,0x4e,0x2f,0xfd,0xb2,0xdf,0x6f,0xd9,0x6f,0xbd,0xcc,0xf5,0x3b,0xf0,0x2f,
    0x88,0x3b,0x03,0x56,0x2f,0x5a,0xdf,0xa3,0x75,0x46,0x76,0xf9,0x03,0xef,0x90,0x12,
    0x7c,0xd4,0xfb,0x11,0x6e,0x9a,0x1e,0x76,0x48,0xff,0x3e,0xf3,0xe7,0xa9,0xd5,0x9f,
    0x1f,0x5a,0x44,0x81,0x59,0xee,0x20,0xd6,0x67,0xfc,0x26,0x79,0x77,0xd2,0xbf,0xf6,
    0xf0,0x12,0x3d,0xec,0x92,0x9c,0x2f,0x83,0xc7,0x9c,0xbb,0xc1,0x2a,0x82,0xed,0x41,
    0xdf,0x7f,0xcf,0xfb,0xc1,0x5e,0xc5,0x77,0x0f,0x77,0x68,0x50,0x66,0xeb,0xdc,0x80,
    0x9d,0x31,0xea,0x1d,0x90,0xbd,0xbc,0x46,0x4f,0xf1,0xee,0x0d,0x4b,0x9c,0x73,0x43,
    0x76,0x86,0x89,0x1b,0x92,0x39,0xbe,0xce,0x3d,0xd1,0x7e,0x7e,0xa2,0x9f,0x16,0xe9,
    0xe7,0x67,0xf0,0x18,0xf7,0x0b,0xd8,0x55,0x99,0xff,0x59,0xde,0xb5,0x25,0xf8,0x76,
    0xab,0xe3,0x2c,0xb3,0xf4,0x39,0xc7,0xfc,0xc3,0x72,0xd7,0x6a,0x32,0x8b,0x1a,0x03,
    0xd4,0x32,0x24,0x3d,0xbd,0x25,0x7b,0xf2,0x9e,0x46,0xa5,0x27,0xe7,0x46,0xec,0x8c,
    0xa2,0x39,0x22,0xb5,0xbd,0x8d,0xae,0xf6,0xf4,0x6b,0x95,0x9e,0x7e,0x03,0x8f,0x71,
    0xe7,0xc0,0x3c,0x36,0xf6,0x74,0x5e,0x7a,0x3a,0x47,0x4f,0xe7,0xd9,0x99,0xf7,0x14,
    0xf3,0x8f,0x4a,0x4f,0xab,0x32,0x8b,0x1a,0xc3,0xd4,0x32,0x82,0xef,0x20,0xbe,0x63,
    0x52,0xd7,0xef,0x55,0xea,0xfa,0x03,0x3c,0xd6,0x75,0x01,0x4c,0x67,0x7d,0x51,0xea,
    0xba,0x40,0x5d,0x17,0xb9,0x4f,0x31,0xee,0x1d,0xd9,0x6d,0xc4,0xf6,0x32,0xd3,0xfe,
    0x54,0x4d,0x83,0x52,0xbf,0xbf,0x2b,0xbc,0x87,0x51,0x34,0xc6,0x84,0xf3,0x77,0x45,
    0x17,0x73,0xdf,0x0b,0xe7,0x3a,0x7d,0xe8,0xf4,0xa5,0xde,0x63,0xbd,0xb2,0xcf,0x77,
    0x53,0x77,0x74,0x5c,0xf6,0xe9,0xdc,0x3e,0x3b,0xe3,0xc4,0xed,0x93,0x19,0xfd,0x59,
    0x65,0x46,0x97,0xc0,0x63,0x5f,0xf3,0x60,0x3a,0xa3,0x05,0x99,0xd1,0x3c,0x33,0x5a,
    0xe0,0xf7,0x1c,0xe3,0xde,0x93,0x19,0x79,0xdd,0x31,0xff,0xb8,0xf4,0xfc,0x2f,0x3e,
    0xbd,0xf8,0x6b,0x6d,0xfb,0xa9,0xad,0x5f,0x6a,0xfb,0x00,0x3c,0xd6,0x31,0xcd,0x7f,
    0x6b,0x09,0xce,0xeb,0x98,0x46,0x37,0xd6,0x71,0x00,0xae,0x22,0xd8,0x41,0xfe,0xaf,
    0x2a,0xa2,0xf5,0x89,0xfc,0x5f,0x1d,0x94,0x9c,0x9f,0xc2,0x45,0xbf,0x43,0x92,0xf3,
    0x00,0x39,0x0f,0xe1,0x17,0xf5,0x0f,0x2f,0xd5,0xf3,0x7f,0xdc,0x11,0x89,0x3b,0x4c,
    0xdc,0x11,0x7e,0x83,0x31,0xee,0x28,0x71,0x33,0x82,0x1d,0xa3,0xd6,0x19,0xd1,0xfa,
    0x4c,0x6a,0x3d,0x26,0xb5,0x7e,0x0e,0x17,0xfd,0x8e,0x4b,0xce,0xa3,0xe4,0x3c,0x8e,
    0x5f,0xd4,0x3f,0x41,0xce,0x59,0xc1,0x4e,0x92,0x73,0x56,0xb4,0xbe,0x94,0x9c,0x27,
    0x25,0xe7,0x57,0x70,0xd1,0xef,0x94,0xe4,0x3c,0x41,0xce,0x53,0xf8,0xe9,0xff,0xf2,
    0x5c,0x72,0x5f,0x32,0x96,0x27,0x13,0xfe,0x03,0x09,0x62,0xa1,0x7f,0xc0,0x0d,0x00,
    0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dst
// {
//
//     uint dstData[];
// };
//
// layout(set = 0, binding = 1)readonly buffer src
// {
//
//     uint srcData[];
// };
//
// layout(set = 0, binding = 2)readonly buffer cmd
// {
//
//     uint cmdData[];
// };
//
// layout(set = 0, binding = 3)buffer dstCmd
// {
//
//     uint dstCmdData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint cmdOffsetDiv4;
//
//     uint dstCmdOffsetDiv4;
//
//     uint srcOffset;
//
//     uint dstOffsetDiv4;
//
//     uint isRestartEnabled;
// };
//
// uint GetIndexValue(uint index)
// {
//
//     index += srcOffset >>(2 - 0);
//
//     return srcData[index];
//
// }
//
// void PutIndexValue(uint index, uint value)
// {
//
//     dstData[dstOffsetDiv4 + index]= value;
//
// }
//
// void main()
// {
//
//     uint indexCount = cmdData[cmdOffsetDiv4];
//     uint firstIndex = cmdData[cmdOffsetDiv4 + 2];
//     uint endIndex = firstIndex + indexCount;
//
//     if(gl_GlobalInvocationID . x >= 1)
//         return;
//
//     uint workingCount = 0;
//     uint srcIdx = firstIndex;
//     uint indicesRemaining = indexCount;
//     uint lineSize = 0;
//     uint firstIndexValue = 0;
//     while(indicesRemaining > 0)
//     {
//         uint indexValue;
//         uint restartValue = 0xffffffff;
//         indexValue = GetIndexValue(srcIdx ++);
//         if(lineSize == 0)
//         {
//             firstIndexValue = indexValue;
//         }
//         indicesRemaining --;
//         if((isRestartEnabled == 1)&&(indexValue == restartValue))
//         {
//
//             if(lineSize > 1)
//             {
//                 PutIndexValue(workingCount ++, firstIndexValue);
//             }
//             if(lineSize > 0)
//             {
//                 PutIndexValue(workingCount ++, restartValue);
//             }
//             lineSize = 0;
//         } else {
//             PutIndexValue(workingCount, indexValue);
//             workingCount ++;
//             lineSize ++;
//         }
//     }
//     if(lineSize > 1)
//     {
//         PutIndexValue(workingCount, firstIndexValue);
//         workingCount ++;
//     }
//
//     dstCmdData[dstCmdOffsetDiv4]= workingCount;
//     dstCmdData[dstCmdOffsetDiv4 + 1]= cmdData[cmdOffsetDiv4 + 1];
//     dstCmdData[dstCmdOffsetDiv4 + 2]= 0;
//     dstCmdData[dstCmdOffsetDiv4 + 3]= cmdData[cmdOffsetDiv4 + 3];
//     dstCmdData[dstCmdOffsetDiv4 + 4]= cmdData[cmdOffsetDiv4 + 4];
// }
