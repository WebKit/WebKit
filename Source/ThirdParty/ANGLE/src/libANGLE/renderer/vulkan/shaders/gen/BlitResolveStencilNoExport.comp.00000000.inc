// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolveStencilNoExport.comp.00000000.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolveStencilNoExport_comp_00000000[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x6d,0x96,0xdb,0x6f,0x94,0x45,
    0x18,0xc6,0xbf,0xdd,0x6d,0x77,0xcb,0x6a,0x5b,0xaa,0x2d,0x60,0x0b,0x94,0x5a,0x83,
    0x87,0x25,0x88,0x09,0x27,0x03,0x2b,0x85,0x08,0x62,0x4b,0x44,0xc0,0x6e,0x34,0xa8,
    0xad,0xc6,0x0b,0xb8,0xe8,0x21,0x29,0xb1,0xb6,0x41,0x6d,0x69,0x45,0xc4,0xa2,0x41,
    0x40,0x03,0x91,0x18,0x12,0x13,0xa9,0x4d,0xd0,0x6a,0x8c,0x05,0x8c,0x37,0x9e,0x2e,
    0x10,0xc4,0x2b,0xfc,0x47,0x3c,0xc7,0xe8,0xfb,0xcc,0xfe,0xc6,0xbc,0x6e,0xfc,0x92,
    0xc9,0xec,0x3c,0xef,0xf9,0x34,0xb3,0x99,0x74,0x7b,0x2e,0x49,0x52,0x49,0x3e,0xa9,
    0x49,0x7e,0x4a,0xca,0x5f,0x43,0x92,0x36,0x24,0x49,0x6e,0x4a,0xb2,0x61,0x7f,0x68,
    0xc7,0x9e,0x1d,0x2b,0x87,0x0e,0x3c,0xb7,0x72,0xf5,0x9a,0x55,0xa2,0xd7,0x25,0x99,
    0xc0,0x27,0x5a,0xbd,0xf1,0x54,0xdb,0x5e,0x65,0xab,0xef,0x99,0xfd,0xfd,0xc2,0x6b,
    0x6d,0xcd,0x37,0xbc,0x2a,0xe8,0x4a,0x4c,0x73,0x79,0x05,0x5d,0x86,0xd6,0x06,0xdd,
    0x49,0xb2,0xd8,0xd6,0x76,0x93,0x5e,0x82,0xdd,0x76,0xf6,0x88,0xa5,0xc0,0x6a,0x1c,
    0x96,0x06,0x9b,0xef,0xb0,0x0c,0xd8,0x22,0x87,0x55,0x81,0x79,0x1b,0xd5,0x60,0xcb,
    0x1c,0x96,0x05,0x5b,0xe5,0xb0,0x1c,0xd8,0x6a,0x87,0xd5,0x80,0xad,0x77,0xd8,0x3c,
    0xb0,0x8d,0x21,0xae,0xcc,0xbf,0xfe,0x29,0xc6,0x23,0xb6,0xdf,0x4e,0x3c,0xf1,0xdc,
    0xe6,0x72,0x30,0x55,0x41,0x9f,0x82,0x1e,0xe5,0xcf,0xe3,0x5b,0x15,0xf6,0xa6,0x2b,
    0x72,0x24,0x7b,0xd3,0xc4,0x2e,0xfe,0x99,0x0a,0x7d,0x33,0xe8,0x8b,0xe7,0x4b,0xe4,
    0xfc,0x36,0x5b,0xb7,0x9a,0x95,0x74,0xa0,0x67,0x82,0xbc,0x7e,0x37,0x19,0x4f,0x96,
    0xdc,0xc8,0xc7,0x85,0x76,0xce,0xe1,0x43,0xa4,0xe7,0xa1,0x27,0xd0,0xa5,0x2f,0x8f,
    0x0f,0xcb,0xec,0x7c,0x33,0xb2,0xc2,0x37,0x70,0xae,0x05,0x2b,0x20,0x5f,0x87,0xbc,
    0xf8,0xeb,0xa1,0xe5,0x1d,0xfd,0x16,0x62,0x8e,0xe7,0x26,0x78,0x16,0x98,0x95,0x66,
    0xec,0xcb,0x76,0x8b,0xed,0xcd,0xf8,0xa6,0xf3,0x62,0x97,0xaf,0xa5,0x66,0x59,0xb5,
    0x68,0x71,0x2b,0xcb,0x8a,0x7c,0x79,0xb7,0xe4,0xcb,0x52,0xea,0xb9,0x04,0xdf,0x75,
    0x6e,0x05,0x2b,0xb8,0xdc,0x54,0xc3,0xdf,0x06,0x4d,0xfa,0x1a,0xcd,0x8b,0xe5,0xf8,
    0x71,0xa7,0xed,0xcb,0xf1,0x2b,0xca,0xad,0x25,0x06,0xc9,0xad,0x43,0xae,0x05,0x7a,
    0x33,0xfd,0x63,0xdf,0xa6,0x15,0xa6,0x5d,0x78,0x11,0x6c,0xa3,0xd3,0xd1,0x41,0xde,
    0xe2,0x79,0x2b,0x7d,0x2a,0x9d,0xdb,0xd0,0x99,0x77,0xf4,0x5d,0xf4,0x6c,0x3c,0xef,
    0xad,0x88,0x65,0x9f,0xad,0xbf,0xed,0x8b,0xe7,0x21,0x97,0x77,0xf9,0x34,0xec,0xea,
    0xf4,0x22,0xb2,0xd9,0xd0,0x3f,0xf3,0x92,0xc3,0xd8,0x4a,0x25,0xff,0xfd,0x52,0x4e,
    0xe6,0x55,0x7e,0x1f,0x26,0x9f,0x3a,0x1f,0x01,0x6b,0xb6,0xec,0x1c,0x85,0xef,0x75,
    0xb0,0xa3,0xf0,0xe9,0x3c,0x05,0xd6,0x62,0x35,0x7f,0x03,0x1d,0xd1,0xcf,0xe3,0xae,
    0xe6,0xa7,0xf0,0xc3,0xf7,0xcb,0x69,0xc5,0x15,0xea,0x98,0x09,0x33,0x94,0x0f,0xfd,
    0x50,0x9e,0x95,0xf3,0xd8,0xfc,0x10,0x1d,0xd3,0xd8,0xd4,0x79,0xa6,0xa2,0x66,0x17,
    0x88,0x57,0xfc,0x9f,0x43,0xf3,0x7d,0x7a,0x91,0xfc,0xae,0x30,0x2e,0xf5,0xfb,0x25,
    0xb0,0x8b,0xf4,0xec,0x5a,0xab,0x65,0x1a,0xdf,0x12,0x66,0xe4,0x37,0x43,0xd4,0x3f,
    0xbf,0xda,0xe9,0x32,0xf8,0x9f,0xf6,0x5b,0x33,0xf1,0x05,0x74,0xed,0x9b,0x8d,0xab,
    0x9e,0x3b,0xae,0x96,0x99,0x29,0x62,0xb7,0x01,0x7c,0xd2,0x78,0xf2,0x61,0x96,0xcb,
    0x98,0xe6,0xe6,0x20,0xbe,0x37,0x82,0x47,0x3d,0x0b,0xd0,0xd3,0xe4,0xf4,0x2c,0x04,
    0x8f,0x32,0x8b,0xc0,0x1e,0x35,0x99,0x1c,0xf7,0x44,0x23,0xb8,0xf4,0xb4,0x71,0xbf,
    0xb4,0x32,0x07,0x45,0x66,0xae,0x1d,0x7c,0xa7,0x49,0x49,0xee,0x0e,0xb0,0x76,0x72,
    0xa6,0xb8,0x3f,0x35,0x79,0xcd,0xc5,0x5d,0xd0,0xa5,0xfb,0x8c,0xc9,0x6b,0x4e,0xee,
    0x06,0x57,0x4e,0x0a,0xe4,0xe4,0x0f,0xa3,0x09,0xbf,0x27,0xe4,0xbb,0x9c,0x17,0xfd,
    0xfe,0xdd,0xf6,0xcb,0x9c,0x0b,0xce,0xe6,0xbd,0xce,0x66,0xec,0xc3,0x31,0xe2,0xb8,
    0x0f,0x7b,0xe2,0x19,0xe0,0xde,0x58,0x03,0xae,0xb8,0xd6,0x71,0xa7,0xb7,0x32,0xa7,
    0x45,0x78,0xee,0x07,0x7f,0x85,0x99,0xdc,0x80,0x9c,0xf0,0x71,0xb0,0x4d,0xe0,0x45,
    0xa7,0x6b,0x33,0xba,0x3a,0x9c,0xae,0x2d,0xe0,0x13,0xc8,0x3d,0x88,0xec,0x16,0xe4,
    0xb6,0x85,0x3b,0xba,0x2c,0xb7,0xd5,0xd5,0x68,0x3b,0xf8,0x8c,0xf1,0x28,0x57,0x0f,
    0x83,0xd5,0x91,0xaf,0x2e,0x97,0x2f,0xd1,0x3a,0x6d,0x75,0x91,0x9f,0xce,0x70,0x07,
    0x54,0x87,0x59,0x7e,0x04,0x9b,0xfa,0x5e,0x66,0xbe,0x77,0x82,0xef,0xb6,0xea,0xcb,
    0xa7,0xaf,0xc0,0x22,0x9f,0x72,0x1d,0x75,0x69,0xff,0xd9,0xb2,0x29,0xbe,0xef,0xe1,
    0x29,0x20,0xd3,0xe9,0x62,0xd8,0x4d,0x0c,0xbb,0x5c,0x0c,0x7b,0xc0,0x63,0x0c,0x8f,
    0x81,0xc5,0x18,0x4a,0x2e,0x06,0xd1,0xba,0x6d,0x95,0xb0,0xdb,0xed,0x62,0x78,0x1c,
    0xdb,0x29,0x17,0xc3,0x13,0xe0,0x31,0x86,0x6f,0xc1,0x22,0x9f,0x62,0x88,0xba,0x4a,
    0x2e,0x86,0xab,0xf0,0x74,0x21,0xd3,0xed,0x62,0x78,0x92,0x18,0xf6,0xba,0x18,0x9e,
    0x02,0x8f,0x31,0x3c,0x0d,0x16,0x63,0xe8,0x75,0x31,0x88,0xd6,0x63,0xab,0x17,0xbb,
    0x3d,0xf4,0xa9,0xec,0x3e,0x8b,0xed,0xab,0xee,0xae,0x94,0x8f,0x91,0xb7,0xd7,0xf9,
    0xf8,0x23,0x7c,0x25,0xe4,0x7a,0xc2,0x7d,0x95,0x0d,0xb3,0xba,0x9f,0x5e,0xd8,0x47,
    0xcf,0x4a,0x47,0x1f,0x3a,0xfa,0x9c,0x8e,0xeb,0xe8,0x91,0xde,0x2b,0xb6,0x06,0xa1,
    0x29,0xa6,0x1f,0xf0,0x5f,0xb4,0x1b,0x8e,0x26,0xfd,0xd7,0xe8,0x5f,0xd1,0x3e,0x80,
    0x36,0x4b,0xec,0x07,0xa0,0xeb,0xbd,0xf8,0xc5,0xe2,0x1d,0x80,0x1e,0xe3,0x17,0xbd,
    0x3f,0xcc,0x5a,0xd9,0x9f,0x7e,0x57,0xc3,0xe7,0xf1,0x49,0xdf,0x97,0xe8,0x7b,0x01,
    0x7c,0x98,0x5c,0x8e,0x3a,0x5d,0xa2,0x8d,0xd8,0x1a,0x45,0xd7,0x08,0x75,0xd2,0x7b,
    0xf4,0x12,0x75,0x1a,0xa2,0x4e,0xd9,0xd0,0x17,0x65,0x7c,0x80,0xfe,0x18,0x03,0x9b,
    0xc3,0xd6,0x38,0xb6,0xc6,0xc8,0x59,0xd4,0x3b,0x4a,0xec,0xe2,0x39,0x84,0x4f,0xfd,
    0xf0,0x8f,0xe0,0xd7,0xa4,0xf3,0xeb,0x50,0x98,0xe5,0x24,0x60,0x92,0x9f,0xc0,0x07,
    0xbd,0x53,0xaf,0xf1,0xce,0xe9,0xac,0x37,0xed,0x18,0xef,0x59,0xc9,0x7c,0xd0,0x5b,
    0xf6,0x26,0x3c,0xc7,0xdc,0x9d,0xf1,0x16,0xb1,0x1c,0x77,0x77,0xc6,0x09,0xf0,0x78,
    0xff,0x9c,0x24,0x77,0x27,0x42,0xcf,0xe7,0xc2,0xdb,0xf7,0x36,0xfa,0x4e,0x72,0xd7,
    0x0e,0x93,0x6b,0xd5,0xf7,0x1d,0xe8,0xfa,0xbe,0x03,0x3b,0x03,0x7e,0x9a,0xf7,0x43,
    0x39,0x7b,0x97,0x7a,0x6a,0x66,0xbf,0x86,0xef,0x2c,0xbc,0xa2,0x7d,0x03,0xf6,0x1e,
    0x3d,0x73,0x96,0xdc,0xc5,0xd8,0x27,0x5d,0x4f,0xdd,0x80,0x67,0x14,0xfe,0x09,0x57,
    0x8b,0x73,0xf4,0xed,0x38,0xbd,0xf0,0x3e,0xb5,0x38,0xe7,0xe6,0xf7,0x0a,0xf8,0x75,
    0x37,0x1b,0x83,0xd8,0x19,0xe4,0x4e,0xcf,0xd2,0x93,0xd7,0xfe,0xa7,0xf7,0x07,0x5c,
    0x7f,0x7c,0x44,0x4e,0x2f,0xb8,0xfe,0xf8,0x18,0xfc,0x20,0x73,0x3d,0x0b,0x16,0xdf,
    0xd2,0x4f,0x78,0x03,0x67,0xb1,0x25,0xec,0x33,0xf0,0x86,0xa0,0x3b,0x1b,0xfe,0x0b,
    0xcc,0xf1,0x7f,0xa1,0x03,0xfa,0x03,0xd6,0x1f,0x73,0xc4,0xee,0xdf,0x28,0xed,0x7f,
    0xd9,0xa4,0xaf,0xb7,0xf5,0x0f,0x1b,0x39,0x83,0xf3,0x68,0x0d,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 8, local_size_y = 8, local_size_z = 1)in;
//
// layout(push_constant)uniform PushConstants {
//
//             vec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int srcWidth;
//
//     ivec4 blitArea;
//     int destPitch;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
// } params;
//
// layout(set = 0, binding = 0)buffer dst
// {
//
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)uniform utexture2D stencil;
//
// layout(set = 0, binding = 2)uniform sampler blitSampler;
//
// void main()
// {
//     ivec2 destSubImageCoords = ivec2(gl_GlobalInvocationID . x * 4, gl_GlobalInvocationID . y);
//     if(any(lessThanEqual(params . blitArea . zw, destSubImageCoords)))
//     {
//         return;
//     }
//
//     destSubImageCoords += params . blitArea . xy;
//             vec2 srcImageCoords = vec2(destSubImageCoords);
//
//     srcImageCoords *= params . stretch;
//     srcImageCoords += vec2(0.5);
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//         srcImageCoords . x = - srcImageCoords . x;
//     if(params . flipY)
//         srcImageCoords . y = - srcImageCoords . y;
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//     int xDir = params . flipX ? - 1 : 1;
//
//     uint outStencils = 0;
//
//     for(int i = 0;i < 4;++ i)
//     {
//
//         if(srcImageCoords . x >= 0 && srcImageCoords . x < params . srcWidth)
//         {
//
//             uint stencilValue = texture(usampler2D(stencil, blitSampler), srcImageCoords * params . invSrcExtent). x;
//
//             outStencils |=(stencilValue & 0xFF)<<(i * 8);
//
//         }
//
//         srcImageCoords . x += xDir;
//     }
//
//     destData[gl_GlobalInvocationID . y * params . destPitch + gl_GlobalInvocationID . x]= outStencils;
// }
