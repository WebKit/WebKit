// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolve.frag.00000010.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolve_frag_00000010[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x93,0x6b,0x4b,0xd4,0x41,
    0x14,0x87,0x67,0xef,0x6b,0x37,0x8d,0x6d,0xd5,0x34,0xc2,0x32,0xa3,0x1b,0x22,0x58,
    0x11,0x44,0x42,0x2f,0xa2,0xc0,0x35,0x5d,0x77,0x35,0xcb,0x6a,0x11,0xdd,0x72,0xc9,
    0x5b,0xae,0xc5,0x56,0x92,0x6c,0x2a,0xf9,0x22,0x28,0x8b,0xfa,0x12,0x7d,0xbe,0xe8,
    0x02,0x41,0xe7,0xcc,0xff,0x19,0x39,0xb9,0x30,0x3b,0xff,0xf3,0xcc,0xb9,0xcc,0x6f,
    0xce,0x4c,0x22,0xde,0x9b,0x71,0x2e,0xe6,0x0e,0xb8,0xac,0xfb,0xe2,0xa2,0xdf,0x51,
    0x17,0x17,0x12,0xcd,0x5f,0x73,0x4e,0xd6,0x5a,0x5c,0x69,0x6c,0xb2,0x72,0x6b,0xaa,
    0x5c,0xa9,0xcf,0xcf,0xcc,0x55,0x57,0x2b,0xf5,0xb5,0xea,0xd2,0x6c,0x6d,0xa1,0x52,
    0x6d,0xac,0x2c,0xaf,0xae,0x89,0xef,0x41,0x97,0xf6,0x31,0xb7,0x0b,0xa5,0x42,0x7f,
    0x7d,0x6d,0xae,0xff,0xf2,0x95,0x01,0xcd,0x75,0xc4,0x25,0x7c,0x4e,0x5d,0x6b,0x75,
    0x19,0x97,0x94,0x59,0xc7,0xe2,0x4c,0x6d,0xc9,0x79,0xe6,0x5c,0x41,0x46,0x9b,0xf8,
    0x29,0xcf,0x68,0x0e,0xf9,0x6a,0xf5,0x39,0xa3,0xf5,0x3b,0x2e,0xe5,0x3a,0xd8,0x5b,
    0x2f,0x73,0x60,0x31,0x58,0xd6,0xb0,0x38,0xac,0xcd,0xb0,0x04,0xac,0xd3,0xb0,0x24,
    0xec,0x84,0x61,0x29,0x58,0x8f,0x61,0x69,0xd8,0x19,0xc3,0x32,0xb0,0x73,0x86,0x65,
    0x61,0x97,0x0c,0x6b,0x81,0x0d,0x78,0x5d,0x89,0xbd,0xfd,0xa9,0xc6,0x02,0x1a,0xbf,
    0xe5,0x22,0x7b,0x54,0xbe,0x4f,0xa3,0x2f,0xd8,0xa7,0xd0,0xa8,0x76,0x69,0xdf,0x7a,
    0x89,0x75,0xcd,0x97,0x93,0xff,0xb8,0xb7,0x13,0x5e,0xab,0x7e,0xb7,0xcb,0x57,0x1a,
    0x2d,0x1d,0xe2,0x9f,0x41,0x4b,0x1c,0xfb,0x30,0x76,0xd2,0xfb,0x24,0xa5,0x57,0x51,
    0x2d,0xe5,0xd7,0xb1,0x5b,0x61,0x79,0xb1,0xf3,0xe4,0x0a,0x76,0x3b,0xb6,0xfe,0x4e,
    0xba,0x43,0x7b,0xe7,0x12,0x46,0x9e,0x91,0x66,0x6e,0x37,0x43,0xeb,0x75,0x72,0x3e,
    0x1d,0xd4,0x53,0xfb,0x38,0xec,0x22,0xf5,0xba,0xa8,0xa7,0xfe,0xdd,0xac,0x65,0xcc,
    0x7a,0xa8,0x1f,0xec,0x3e,0xd6,0xd5,0xff,0x2c,0xfe,0x5a,0xef,0x98,0xa8,0x3e,0x8f,
    0x9f,0xda,0x17,0xf6,0xc5,0x0d,0xd2,0xbf,0x60,0x0f,0x11,0xab,0x79,0x86,0xb9,0x3f,
    0x79,0xf6,0x39,0xcc,0x9d,0x4d,0xf8,0xfd,0xb6,0xb8,0x11,0x6a,0xc4,0xdc,0xff,0xbf,
    0x60,0x6b,0x8e,0xbb,0x7c,0x8f,0x90,0x43,0xed,0x51,0x58,0x97,0xec,0xad,0x88,0xdf,
    0x38,0xac,0x88,0x9f,0xda,0x25,0x58,0xb7,0x54,0x9c,0x20,0x47,0xd8,0xe7,0x94,0xe9,
    0xe7,0x43,0xf6,0xa1,0xfd,0xbc,0x2a,0xf7,0x2f,0xce,0xb7,0x63,0xaf,0xbf,0x84,0xe8,
    0xfd,0xbe,0x41,0xef,0x67,0xe9,0x6f,0x51,0xa8,0xf6,0xa8,0x0a,0x73,0x86,0x3d,0x81,
    0xa9,0x96,0x31,0x61,0x7a,0xb6,0x4f,0xf1,0xd5,0xb5,0x9b,0xc2,0xb4,0x2f,0xf3,0xf4,
    0xae,0x8b,0xfc,0xea,0x57,0x83,0x6f,0x13,0xf7,0x8c,0xd8,0x9a,0x89,0x5b,0x20,0xae,
    0xc7,0xc4,0x2d,0xc2,0x37,0x89,0x5b,0x26,0x76,0x91,0x38,0xed,0xeb,0x0a,0x71,0x7d,
    0xc4,0xa9,0xee,0xe7,0xf0,0xef,0xe2,0xa3,0xbd,0x5e,0x85,0x69,0xaf,0x7f,0xca,0x09,
    0x34,0xd0,0xf6,0x47,0xfc,0x75,0xad,0x2e,0xa3,0xc1,0xb9,0xd4,0x8d,0xe6,0x17,0xd4,
    0xd4,0xdf,0x86,0xf8,0x2a,0x7b,0x09,0x1f,0x17,0x4b,0xf7,0xf4,0x01,0x16,0xfc,0x7e,
    0x4b,0x8e,0x90,0x4b,0xe7,0x1f,0xe2,0xa5,0x7e,0x9f,0xf0,0x49,0x11,0x53,0x37,0x1a,
    0x5e,0xa1,0x61,0xd0,0x68,0x78,0x0d,0x0f,0x1a,0xde,0xc0,0x82,0x86,0xa6,0xd1,0xa0,
    0x6b,0xeb,0x32,0x9a,0xd4,0x5d,0x37,0x1a,0xde,0x52,0x3b,0x66,0x34,0x6c,0xc0,0x83,
    0x86,0x8f,0xb0,0xe0,0xa7,0x1a,0x42,0xae,0xa6,0xd1,0xb0,0x8b,0x4f,0x83,0x98,0x75,
    0xa3,0xe1,0x1d,0x1a,0x86,0x8c,0x86,0x4d,0x78,0xd0,0xb0,0x05,0x0b,0x1a,0x76,0x8c,
    0x86,0x2d,0x7f,0x3f,0x9c,0x67,0x5a,0x77,0xdb,0xbf,0x8b,0xa8,0xee,0x7b,0x6a,0xef,
    0x9a,0xb7,0xa4,0x7b,0x0c,0xbe,0x3b,0x66,0x8f,0x9f,0xf1,0x6b,0x12,0xb7,0xcd,0x7e,
    0x46,0xfc,0xbd,0x8d,0xde,0x9a,0xda,0xfa,0xae,0xca,0xbc,0xa9,0x49,0xd9,0xdf,0x84,
    0x9f,0x23,0x9f,0xb2,0xb9,0x97,0xf7,0xd1,0x35,0x65,0xee,0xe5,0x03,0x78,0xb8,0xcf,
    0xd3,0xd4,0x55,0x7e,0x4f,0x98,0xbe,0xbf,0x47,0xe4,0x9b,0xa6,0x17,0x7a,0x1e,0x8f,
    0xe1,0xce,0x9f,0x5d,0xf4,0x6e,0x2b,0xf0,0x21,0x39,0x8f,0x02,0xf6,0x5f,0x51,0x79,
    0x4d,0xc6,0x3f,0xb4,0x82,0xd4,0xb9,0x94,0x07,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_GOOGLE_include_directive : require
//
// #extension GL_ARB_shader_stencil_export : require
//
// layout(set = 0, binding = 1)uniform utexture2D stencil;
//
// layout(set = 0, binding = 2)uniform sampler blitSampler;
//
// #line 1 "shaders/src/BlitResolve.inc"
//
// layout(push_constant)uniform PushConstants {
//
//             vec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int samples;
//     float invSamples;
//
//     int outputMask;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
// } params;
//
//         vec2 getSrcImageCoords()
// {
//
//             vec2 srcImageCoords = vec2(gl_FragCoord . xy);
//
//     srcImageCoords *= params . stretch;
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//         srcImageCoords . x = - srcImageCoords . x;
//     if(params . flipY)
//         srcImageCoords . y = - srcImageCoords . y;
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//     return srcImageCoords;
// }
//
// #line 123 "shaders/src/BlitResolve.frag"
//
// void main()
// {
//             vec2 srcImageCoords = getSrcImageCoords();
//
//     gl_FragStencilRefARB = int(texture(usampler2D(stencil, blitSampler), srcImageCoords * params . invSrcExtent). x);
//
// }
