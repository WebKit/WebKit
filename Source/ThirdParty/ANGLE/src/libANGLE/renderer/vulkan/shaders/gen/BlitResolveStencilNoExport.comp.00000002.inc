// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolveStencilNoExport.comp.00000002.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolveStencilNoExport_comp_00000002[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x95,0xdb,0x6f,0x54,0x55,
    0x14,0xc6,0xf7,0xcc,0xb4,0x33,0x65,0xa4,0x2d,0xc5,0x16,0x90,0x7b,0xad,0x29,0xe8,
    0x18,0xc0,0x04,0x99,0x8a,0x14,0x95,0x26,0x22,0xd8,0x56,0xb0,0x28,0x8d,0x2f,0xb5,
    0x09,0xb4,0x35,0x08,0xb6,0x11,0xd0,0x36,0xe5,0xa6,0x42,0x20,0x3e,0x98,0x40,0x6d,
    0x02,0x42,0x42,0xe4,0x16,0x63,0xa2,0x21,0x26,0x88,0xd6,0x27,0xd4,0xf8,0x17,0x79,
    0x41,0x62,0x74,0x7d,0xfb,0xfc,0xb6,0xac,0xcc,0x49,0x76,0xf6,0x59,0xdf,0xba,0x7e,
    0x6b,0xaf,0x7d,0x4e,0x21,0xdf,0x51,0x0a,0x21,0x17,0xca,0xa1,0x21,0xfc,0x1c,0xb2,
    0xa7,0x25,0xe4,0x0d,0x09,0xe1,0x91,0x50,0x8c,0xfb,0xf6,0xde,0x81,0xde,0x75,0xef,
    0x1f,0xde,0xb7,0x6e,0xe3,0xb3,0x1b,0xa4,0x6f,0x0a,0x85,0x68,0x27,0x5d,0xb3,0xd9,
    0xd4,0xdb,0x5e,0x67,0xeb,0xe0,0xf0,0x3b,0x87,0x84,0x37,0xda,0x5a,0x60,0x78,0x5d,
    0x8c,0x15,0x2c,0x72,0xb6,0x62,0x2c,0x43,0x1b,0x63,0xec,0x10,0x96,0xdb,0x7a,0xc5,
    0xbc,0x57,0x90,0xb7,0x83,0x3d,0x61,0x39,0xb0,0x06,0x87,0xe5,0xc1,0x16,0x38,0xac,
    0x00,0xb6,0xc4,0x61,0x75,0x60,0x3e,0x47,0x3d,0xd8,0x6a,0x87,0x15,0xc1,0x36,0x38,
    0xac,0x04,0xb6,0xd1,0x61,0x0d,0x60,0x5d,0x0e,0x9b,0x07,0xb6,0x25,0xf2,0x2a,0xfc,
    0x5f,0x9f,0x38,0x1e,0xb7,0xfd,0x71,0xf8,0x24,0xb9,0xdd,0xf5,0xe0,0x02,0xb9,0xeb,
    0x88,0x37,0x53,0xd3,0x03,0xc5,0x9b,0x81,0x9b,0xec,0x67,0x6b,0xe2,0xcd,0x12,0x2f,
    0xc9,0x37,0xe8,0xe9,0x63,0xb6,0x1e,0xb5,0x2a,0xf2,0x51,0x5f,0x88,0xfe,0x7a,0x6f,
    0x33,0x9b,0x22,0xdc,0x55,0xc3,0x62,0x93,0x4b,0xd4,0x90,0xf4,0x65,0xf4,0x01,0xbd,
    0xe2,0x95,0xa9,0x61,0xb5,0xc9,0xf3,0xf1,0x15,0xfe,0x3c,0x72,0x23,0x58,0x05,0xff,
    0x26,0xfc,0x65,0xdf,0x8c,0xae,0xec,0xf4,0x0b,0xe1,0x9c,0xe4,0x36,0x6c,0x16,0x59,
    0x96,0xa5,0xe4,0x57,0xee,0x65,0xb6,0x2f,0xa5,0x36,0xc9,0xcb,0x5d,0xbf,0x56,0x5a,
    0xe6,0x74,0x4e,0xcb,0x58,0x45,0x56,0xb2,0x2b,0xbb,0xa5,0x5a,0x56,0x72,0x5e,0x2b,
    0xa8,0x5d,0xf2,0x2a,0xb0,0x8a,0xeb,0x4d,0x3d,0xf6,0xed,0xe8,0x14,0xaf,0xd5,0xaa,
    0xe8,0xa4,0x8e,0x35,0xb6,0x77,0x52,0x57,0xf2,0xab,0x3a,0xce,0x5d,0xf8,0x95,0x9c,
    0xbe,0x1b,0x59,0xfa,0xad,0xe8,0xcb,0x4e,0xbf,0x83,0xf9,0x4a,0xf2,0x40,0x4d,0x5d,
    0x43,0xb6,0xfe,0xb5,0x27,0xc9,0x6f,0xbb,0x9e,0x4b,0x3e,0x40,0x5f,0x14,0xff,0x30,
    0xbe,0xc5,0x38,0x0b,0xf3,0xc2,0x34,0xb9,0x72,0xe1,0xe1,0x93,0x73,0xb2,0x7c,0x8e,
    0xf1,0x3e,0x4d,0x6f,0x24,0x1f,0x77,0x73,0x70,0x8a,0x18,0xfe,0xdc,0x4e,0xab,0xa6,
    0xd8,0xcf,0x42,0x9c,0xe5,0x72,0x3c,0x97,0x6c,0x66,0x2f,0x10,0xf7,0x73,0xfa,0x34,
    0x43,0x5c,0xc9,0xb3,0x35,0xbd,0xbb,0x48,0xad,0xb2,0xff,0x12,0x9d,0x9f,0x97,0xeb,
    0xf4,0xe6,0x69,0xb3,0xd2,0xdc,0xdd,0x00,0xbb,0xce,0xec,0x6c,0xb2,0x13,0xcb,0x53,
    0x5b,0x60,0x56,0xff,0x32,0x44,0xe7,0xf8,0xa7,0x49,0x37,0xc1,0x1f,0xd8,0xbb,0x66,
    0xf3,0x16,0x7a,0xed,0x2f,0x99,0x55,0x33,0xdf,0x92,0x46,0x66,0xb7,0x9b,0xbc,0x2d,
    0xe0,0x9f,0x98,0x4d,0x39,0xde,0xa9,0x0c,0x5b,0x18,0xfb,0x94,0xd5,0xde,0x0a,0x9e,
    0xe2,0x2c,0x22,0x4e,0x9b,0x8b,0xb3,0x18,0x3c,0xf9,0x2c,0x01,0xdb,0x65,0x3e,0x25,
    0xee,0x6b,0x2b,0xb8,0xe2,0xb4,0x73,0xcf,0x57,0x31,0x8f,0xdd,0xcc,0x7e,0x07,0xf8,
    0x6b,0xe6,0x25,0xbf,0x27,0xc0,0x3a,0xe8,0x99,0x78,0x7f,0x67,0xfe,0x9a,0xcf,0xb5,
    0xe8,0x15,0xfb,0x92,0xf9,0x6b,0x5e,0x9f,0x04,0x57,0x4f,0x2a,0xf4,0xe4,0x6f,0xd3,
    0x09,0x7f,0x2a,0xf6,0x3b,0xeb,0x8b,0xde,0xef,0xdb,0x7e,0x13,0xb9,0xe2,0x72,0xae,
    0x77,0x39,0xd3,0x1c,0x9d,0x84,0xc7,0x33,0xe4,0x5b,0x0f,0x0f,0xdd,0x83,0xe7,0xe0,
    0x51,0x85,0x87,0xec,0x36,0x83,0x7f,0x84,0xdf,0x16,0x7c,0x37,0xe3,0xa7,0xfb,0xf1,
    0x02,0x7e,0xdd,0xae,0x8f,0x2f,0x82,0x7f,0x6d,0x36,0x9d,0xd1,0x36,0xc3,0x9a,0xe0,
    0xd4,0xe3,0x38,0x49,0xb7,0xcd,0x56,0x0f,0x1c,0xf4,0xbe,0xdb,0xfc,0xd4,0xff,0x97,
    0xc9,0x19,0xe2,0x8c,0x67,0x67,0xb2,0x1d,0xfc,0x75,0x93,0x54,0xd3,0x37,0x60,0xc9,
    0x4e,0xfd,0x48,0xb1,0xb4,0xff,0x4e,0x3f,0xbe,0xc7,0xa6,0x82,0xcf,0x36,0xc7,0x61,
    0x27,0x1c,0x76,0x38,0x0e,0xaf,0x82,0x27,0x0e,0xbd,0x60,0x89,0x43,0xbf,0xe3,0x20,
    0x5d,0x9f,0xad,0x7e,0xf2,0xf6,0x39,0x0e,0xbb,0xc8,0x9d,0x73,0x1c,0x76,0x83,0x27,
    0x0e,0xb7,0xc1,0x92,0x9d,0x38,0xa4,0x58,0xfd,0x8e,0xc3,0x5d,0x6c,0x7a,0xf0,0xe9,
    0x73,0x1c,0xf6,0xc0,0x61,0xc0,0x71,0x78,0x03,0x3c,0x71,0x78,0x13,0x2c,0x71,0x18,
    0x74,0x1c,0xa4,0xdb,0x6b,0x6b,0x90,0xbc,0x7b,0xdd,0x2c,0xbd,0x45,0xee,0xbb,0xee,
    0x5b,0xa4,0x1a,0x93,0xed,0xa0,0xab,0xf1,0x27,0xec,0xfa,0xf1,0x53,0x9c,0xaf,0x8c,
    0xa7,0x78,0x0f,0x33,0x0b,0x43,0x7c,0x17,0x15,0x63,0x3f,0x31,0xf6,0xbb,0x18,0x73,
    0xc4,0x51,0xdc,0x3b,0xb6,0xc6,0xd0,0x89,0xd3,0x8f,0xd4,0x2f,0xdd,0x3d,0xa7,0x53,
    0xfc,0x1f,0x98,0x5f,0xe9,0xce,0xa3,0xbb,0x0d,0xf7,0x77,0xd1,0xeb,0xfb,0xfb,0x87,
    0xf1,0x1d,0x45,0x9f,0xf8,0x4b,0x3f,0x62,0x6b,0x94,0x7a,0x46,0xdc,0x19,0x1e,0xa2,
    0x26,0x3d,0xdf,0x12,0xef,0x3d,0xf0,0x2a,0xbd,0x9c,0x70,0xb1,0xa4,0x1b,0xb7,0x35,
    0x41,0xac,0x71,0xce,0x49,0xdf,0xfb,0x23,0x9c,0xd3,0x01,0xce,0x49,0xf1,0x8f,0x82,
    0xa7,0x5a,0x3f,0x20,0xf6,0x51,0x7a,0x94,0xe2,0x4c,0xc0,0x55,0x36,0x1f,0x52,0xc3,
    0x08,0xf6,0xe3,0xd4,0x31,0xe5,0xea,0x90,0xcd,0xa4,0xad,0x29,0xfc,0x27,0xc9,0xa9,
    0x7f,0xc7,0x09,0xfe,0x1b,0x43,0x16,0xef,0x54,0xbc,0xe3,0x19,0x36,0xc7,0x5d,0xad,
    0xc2,0x5f,0x3d,0xff,0x18,0xbd,0x9e,0xdf,0xc0,0xce,0x80,0x9f,0xe6,0xbb,0x2b,0x1e,
    0x67,0xe9,0xb1,0xee,0xd1,0x2f,0xd8,0x9d,0xc3,0x56,0xba,0x5f,0xc1,0x3e,0xe5,0x1c,
    0xcf,0xc1,0x2f,0xd5,0x37,0xe5,0xce,0xf9,0x1e,0x36,0x13,0xd8,0x4f,0xf2,0xfd,0x52,
    0x9e,0xcf,0xe8,0xcf,0xb0,0xbb,0x43,0x77,0xc0,0xe7,0xdc,0x7c,0x8e,0x11,0x77,0xcc,
    0xf9,0x9e,0xa7,0xc6,0xda,0xf9,0x1b,0x75,0x67,0x74,0x89,0x33,0xba,0xe8,0xce,0xe8,
    0x0b,0xf0,0x69,0xee,0xd6,0x65,0xb0,0xf4,0xcf,0xb9,0xc2,0xbf,0xe2,0x32,0xb9,0x84,
    0x5d,0x05,0x6f,0x89,0xb1,0x8b,0xf1,0x9f,0x79,0x8d,0xff,0x6a,0x15,0xfd,0x56,0x3b,
    0xb3,0x6b,0x70,0xf5,0xdf,0x72,0xed,0xff,0xd8,0x6d,0xeb,0xb2,0xf5,0x1f,0x9d,0xad,
    0x56,0x74,0xf8,0x0b,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(local_size_x = 8, local_size_y = 8, local_size_z = 1)in;
//
// layout(push_constant)uniform PushConstants {
//
//             ivec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int srcWidth;
//
//     ivec4 blitArea;
//     int destPitch;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
// } params;
//
// layout(set = 0, binding = 0)buffer dst
// {
//
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)uniform utexture2DMS stencil;
//
// void main()
// {
//     ivec2 destSubImageCoords = ivec2(gl_GlobalInvocationID . x * 4, gl_GlobalInvocationID . y);
//     if(any(lessThanEqual(params . blitArea . zw, destSubImageCoords)))
//     {
//         return;
//     }
//
//     destSubImageCoords += params . blitArea . xy;
//             ivec2 srcImageCoords = ivec2(destSubImageCoords);
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//         srcImageCoords . x = - srcImageCoords . x;
//     if(params . flipY)
//         srcImageCoords . y = - srcImageCoords . y;
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//     int xDir = params . flipX ? - 1 : 1;
//
//     uint outStencils = 0;
//
//     for(int i = 0;i < 4;++ i)
//     {
//
//         if(srcImageCoords . x >= 0 && srcImageCoords . x < params . srcWidth)
//         {
//
//             uint stencilValue = texelFetch(stencil, srcImageCoords, 0). x;
//
//             outStencils |=(stencilValue & 0xFF)<<(i * 8);
//
//         }
//
//         srcImageCoords . x += xDir;
//     }
//
//     destData[gl_GlobalInvocationID . y * params . destPitch + gl_GlobalInvocationID . x]= outStencils;
// }
