// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000010.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000010[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x0b,0x94,0x8d,0x55,
    0x14,0xc7,0xbf,0x7b,0xef,0xcc,0x1d,0x06,0x79,0x13,0x79,0x95,0xbc,0x16,0x4d,0xd6,
    0x1a,0xe4,0x11,0x83,0x62,0x28,0x6f,0x51,0xa1,0x98,0xf2,0x16,0x0a,0xbd,0x90,0x90,
    0x57,0x54,0xa8,0x28,0x8f,0x24,0xa1,0xa2,0x14,0x25,0x42,0x92,0xca,0xa8,0xa8,0x28,
    0x54,0x1e,0x45,0x45,0x79,0xf4,0x42,0x5e,0x49,0x67,0x9f,0xfb,0xdb,0xd3,0xf6,0x65,
    0xd5,0xac,0x75,0xd6,0xbd,0xfb,0xbf,0xf7,0xf9,0xef,0xff,0xd9,0xfb,0x9c,0x73,0xbf,
    0xf9,0x62,0xd1,0xf2,0x29,0x41,0x10,0x09,0x52,0x83,0x5c,0x41,0x3c,0x12,0xf8,0xbf,
    0x82,0x41,0x34,0x90,0xaf,0x79,0x82,0xb8,0xff,0xcc,0x6c,0xd1,0xbe,0x45,0xda,0xe0,
    0x21,0xdd,0xd3,0x6a,0xd4,0xac,0x2e,0xfe,0x8b,0x82,0x98,0x8f,0x13,0x5f,0xfe,0x20,
    0x25,0x48,0x72,0x9f,0x32,0xfa,0x67,0xf5,0x19,0x20,0x78,0x1d,0xb1,0x9d,0xb3,0x80,
    0x8b,0x13,0x3c,0x45,0x38,0xdc,0xb7,0x3a,0x9e,0x53,0xe6,0x04,0x41,0xb3,0x20,0x39,
    0xc8,0x48,0xa4,0x0b,0xca,0xf3,0xa9,0x58,0x04,0x2c,0x97,0xc1,0xa2,0x60,0x05,0x0c,
    0x16,0x03,0x2b,0x62,0xb0,0x24,0xb0,0x8b,0x0d,0x96,0x0c,0x56,0xca,0x60,0x71,0xb0,
    0x72,0x06,0x4b,0x01,0xbb,0xdc,0x60,0xb9,0xc0,0x2a,0x1b,0x2c,0x37,0x58,0x35,0x83,
    0xa5,0x82,0x55,0x37,0x58,0x1e,0xb0,0x1a,0x06,0xcb,0x0b,0x56,0xdb,0x60,0xf9,0xc0,
    0xae,0xf6,0x75,0x8a,0xe5,0xac,0x57,0x6a,0xd6,0xdf,0x7d,0x5e,0x46,0x7d,0xd4,0xbe,
    0xd4,0xd8,0x52,0xe7,0x32,0xd8,0x85,0xdd,0xac,0xa8,0xf7,0xc7,0x7c,0x6d,0xe4,0x7b,
    0x31,0xf7,0x2d,0xce,0x3a,0xcb,0xb9,0xf8,0x14,0xd6,0x19,0xf7,0x71,0x49,0x7e,0x7d,
    0x71,0xb0,0xaa,0xce,0x8e,0x53,0xe3,0x52,0x69,0x2d,0xeb,0x15,0x71,0x0c,0x05,0x0d,
    0x5e,0xcc,0x8d,0x76,0x2b,0x5b,0x35,0x52,0xfb,0x12,0x37,0x3a,0x74,0xd8,0xd6,0x40,
    0xed,0xd2,0x6e,0xd4,0x4f,0x1d,0x9f,0xa1,0x76,0x59,0x37,0x96,0x64,0x66,0xd5,0x57,
    0x5b,0xea,0xba,0x7f,0x49,0x85,0x1c,0xfb,0x4a,0x37,0x66,0xce,0x28,0xd1,0xb0,0xa8,
    0xb3,0xd3,0xd1,0x28,0xbd,0x2f,0xee,0x6c,0xa9,0x59,0x3a,0x6b,0x10,0xdd,0x35,0xd1,
    0x58,0x03,0xff,0x55,0xe8,0x4e,0xc2,0x5f,0x9b,0xb9,0x82,0xd7,0xc3,0xae,0x63,0xf8,
    0xea,0x12,0x2f,0x7c,0x92,0xaf,0x01,0xf9,0xe4,0xaf,0x8c,0x5b,0x71,0x06,0xdc,0x9a,
    0x57,0x46,0x83,0xff,0x19,0x1a,0x23,0xf9,0x1b,0xb2,0x2f,0x32,0xc8,0x2f,0x76,0x23,
    0xb0,0xaa,0xac,0xaf,0x31,0x7a,0x24,0xfe,0x1a,0x7c,0x35,0x8c,0xbf,0xb9,0x59,0xcf,
    0x75,0xf8,0x1b,0xe0,0x97,0xcf,0x96,0xe8,0x15,0x7f,0x5b,0xea,0x91,0x6e,0xe6,0x77,
    0x64,0xaf,0x6b,0x7c,0x17,0xf2,0xa9,0x3f,0x8b,0xbd,0x26,0xf3,0xfb,0x30,0x5f,0xea,
    0x55,0xc2,0x65,0xea,0x47,0x7d,0xb8,0x02,0xfe,0xf5,0x29,0x73,0xee,0xe0,0x7b,0x3f,
    0xd6,0x28,0x76,0x7f,0x30,0xcd,0x31,0x30,0x64,0x0f,0xe1,0x9c,0xca,0xfc,0xbb,0x59,
    0x53,0x3a,0x3d,0xb9,0x8f,0xef,0x31,0x13,0x3f,0x9c,0x1e,0xa9,0x3d,0x92,0xb3,0xa5,
    0x6b,0x9a,0x1a,0xf2,0x4f,0x47,0xb7,0xfa,0x67,0xc3,0x27,0xfc,0xcf,0xe2,0xb3,0xfc,
    0x0b,0x43,0x7b,0x7d,0x49,0x48,0xef,0x7a,0xce,0xad,0xda,0x3b,0xb8,0x03,0xd4,0xde,
    0x17,0xea,0xe9,0x11,0xce,0xb4,0xf2,0x45,0x7c,0xc1,0x46,0x66,0xc8,0x7a,0x63,0x91,
    0x44,0x6e,0xdd,0x93,0x62,0x27,0x81,0xd5,0x72,0x9d,0x8a,0xd2,0xef,0x00,0x8d,0x27,
    0x1d,0x92,0x4c,0x6c,0x4d,0x1f,0x93,0xd0,0xaa,0x76,0xa6,0xb1,0xa5,0x7f,0x7d,0x8d,
    0x2d,0x9f,0xe3,0x42,0xf6,0xa4,0x90,0x3d,0x25,0x34,0x7f,0x75,0xc8,0xbf,0x31,0x64,
    0x6f,0x0e,0xd9,0x5b,0x8d,0x2d,0xfb,0xef,0x30,0x76,0x7d,0xce,0x63,0x3d,0xce,0x5c,
    0x6b,0x87,0xd6,0xe5,0x3e,0xab,0xc7,0xd0,0xbd,0x34,0x80,0xb3,0x5d,0x1f,0x7f,0x23,
    0xb7,0x62,0x39,0x0b,0xd7,0x72,0x5e,0x1a,0xc3,0x27,0x31,0x4d,0xc0,0x47,0xbb,0x18,
    0xb1,0x9b,0x32,0xaf,0x89,0x3f,0x17,0x31,0x5f,0x9f,0xa6,0x26,0xbe,0x19,0x35,0x13,
    0x5f,0x26,0xb6,0xf0,0xcb,0x59,0xba,0x1e,0xfe,0xe6,0xc4,0xcb,0x5e,0x69,0x01,0xbe,
    0xd8,0xc5,0xc8,0x3d,0xd7,0x0a,0x4c,0xce,0xd9,0x09,0xc7,0xd1,0x06,0xdd,0xa7,0x5d,
    0x7c,0x2b,0xbf,0xae,0xc0,0x63,0xd2,0xa7,0xd6,0x70,0x4b,0x1d,0xda,0xd1,0x9b,0x96,
    0x70,0xcb,0xbe,0x68,0x0f,0x3e,0x02,0xfb,0x06,0x30,0x9d,0xd3,0xc1,0xcc,0x11,0xbd,
    0x1d,0x88,0x39,0xe5,0xb8,0x35,0x47,0x1b,0xa3,0xff,0x46,0xf4,0x77,0x34,0xfa,0x6f,
    0x02,0x57,0xfd,0x37,0x83,0xa9,0xfe,0xce,0x46,0xbf,0xf8,0x3a,0xb9,0xd1,0x19,0xee,
    0x4e,0x46,0xcb,0x2d,0x68,0xe9,0x62,0xf4,0xdf,0x0a,0xae,0xfa,0xbb,0x82,0xe9,0x9c,
    0x6e,0x66,0x8e,0xe8,0xef,0x46,0x8c,0xe8,0xd7,0x1c,0x9d,0x8d,0xfe,0xdb,0xd0,0x9f,
    0x65,0xf4,0xdf,0x0e,0xae,0xfa,0xbb,0x83,0xa9,0xfe,0x9e,0x46,0xbf,0xf8,0x7a,0xb8,
    0xd1,0x13,0xee,0x1e,0xa6,0xef,0xbd,0xd0,0x22,0xfb,0x4e,0xec,0xde,0x60,0xbd,0xcc,
    0xfd,0xa5,0x7b,0xa2,0x37,0x1a,0x95,0xa7,0x27,0x3c,0xfd,0xfc,0xde,0x4c,0xdc,0x67,
    0xba,0x27,0xef,0x44,0xf3,0x40,0x93,0xeb,0x2e,0x70,0xb5,0x07,0x91,0x7b,0x24,0x7b,
    0x74,0x30,0x31,0x83,0xe0,0x91,0x3b,0xef,0x1e,0x78,0x86,0x98,0xfa,0xde,0x0b,0xde,
    0xd6,0xc5,0x88,0x7d,0x3f,0x73,0x03,0x83,0x0d,0x05,0x8b,0xf8,0x7d,0x17,0xf7,0xf7,
    0xe5,0x30,0x62,0x87,0xc2,0xa1,0x39,0x1e,0x20,0xc7,0x70,0x93,0x63,0x04,0x78,0x57,
    0x57,0x17,0x39,0x9f,0x0f,0xb2,0xc6,0x61,0xdc,0xa1,0x23,0xa8,0x4b,0x5f,0x7c,0xda,
    0xab,0x51,0x70,0x8d,0x34,0xbd,0x1a,0x0d,0xae,0xbd,0x7a,0x08,0x4c,0x7b,0x35,0xd6,
    0xf4,0x4a,0x7c,0x63,0xdc,0x18,0x4b,0x8d,0xc7,0xc0,0x2d,0x77,0xc5,0x78,0xee,0x2d,
    0x3d,0x2b,0x72,0x67,0x4e,0x00,0x17,0x2d,0xe3,0xb0,0xeb,0xb8,0x78,0xf1,0x3d,0xcc,
    0xfd,0x3f,0xce,0x70,0x4c,0x34,0x1c,0x32,0x67,0x22,0x71,0xea,0x7f,0x04,0x7f,0x17,
    0x93,0xe3,0x51,0x70,0x89,0x9f,0x84,0xad,0x39,0x1e,0x23,0xc7,0x24,0xc3,0x31,0xd9,
    0x70,0xc8,0x9c,0xc9,0xc4,0xa9,0xff,0x71,0xfc,0x53,0x4d,0x8e,0x27,0xc0,0x25,0x7e,
    0x0a,0xb6,0xe6,0x78,0x92,0x1c,0x53,0x0c,0xc7,0x34,0xc3,0x21,0x73,0xa6,0x11,0x27,
    0xfb,0x53,0x6b,0x37,0xd6,0xf4,0xe5,0x29,0xfa,0x32,0xdd,0xf4,0xe5,0x69,0x70,0xed,
    0xcb,0x0c,0x30,0xed,0xcb,0x2c,0xd3,0x17,0xf1,0xcd,0x74,0x63,0x01,0xdc,0x33,0x8d,
    0x96,0x67,0xd0,0x32,0xdb,0xac,0x67,0x0e,0xb8,0xde,0xef,0x73,0x89,0x69,0xed,0x7e,
    0x11,0xe5,0xb7,0xf5,0x39,0xb0,0xb9,0xe6,0x7e,0x8f,0xfa,0x3a,0x25,0x7b,0xff,0x3c,
    0x62,0xe6,0x18,0x8e,0xe7,0x73,0x38,0x72,0x7b,0x7b,0x3e,0xd8,0x3c,0x7e,0x0b,0x93,
    0xcd,0x6f,0xb6,0xee,0xcd,0xf9,0xd4,0x64,0x16,0xba,0x17,0x98,0x9a,0xbc,0x40,0x4d,
    0x16,0x9a,0x9a,0xbc,0x08,0xae,0x35,0x79,0x09,0x4c,0x6b,0xb2,0xd8,0xd4,0x44,0x7c,
    0x8b,0x7c,0x6c,0x82,0x7b,0x91,0xa9,0xc9,0xcb,0x17,0xa8,0xc9,0x2b,0xe0,0xab,0xe0,
    0x7e,0x15,0x6c,0x09,0x1a,0x95,0x47,0x3e,0x8f,0x3b,0x16,0x89,0x79,0x0d,0x0d,0x0b,
    0x88,0x5f,0x84,0x8e,0x65,0x46,0x87,0xc4,0x2c,0x75,0x63,0x19,0xf3,0x97,0x1a,0x1d,
    0xaf,0x5f,0x40,0xc7,0x1b,0xe0,0x5a,0xd7,0xe5,0xa1,0xde,0xbc,0x09,0xb6,0x3c,0xd4,
    0x1b,0xb9,0x47,0xc4,0xbf,0x02,0x0e,0x1d,0x13,0xe8,0xd9,0x4a,0xe6,0xae,0x30,0xdc,
    0x6f,0x85,0x7a,0xb6,0x0a,0x6c,0xe5,0x7f,0xf4,0x6c,0x15,0xf5,0xd0,0xf5,0x2c,0x0b,
    0xf5,0x70,0x96,0xe1,0x5f,0x03,0x7f,0x5b,0xce,0xca,0xdb,0x60,0x81,0xc1,0xd6,0x82,
    0x45,0x0c,0xf6,0x0e,0x58,0xd4,0x60,0xeb,0xc0,0x62,0x7e,0xad,0x89,0x7b,0xef,0x5d,
    0x38,0xd7,0x32,0x67,0x1d,0x3a,0x57,0xe3,0xd3,0xbd,0xf4,0x1e,0x7b,0x69,0xbd,0xd9,
    0x4b,0xef,0x83,0xeb,0x5e,0xfa,0x00,0x4c,0xf7,0x52,0xb6,0xe9,0xa1,0xf8,0x36,0xb8,
    0x91,0xcd,0x1a,0x37,0x98,0x1e,0x7e,0xc8,0xf3,0x96,0xbd,0xf7,0x3e,0x02,0x17,0x2d,
    0x1b,0xb1,0xf5,0xbe,0xf8,0x98,0x67,0xf5,0x8d,0x86,0x63,0x93,0xe1,0x90,0x39,0x9b,
    0x88,0x53,0xff,0x27,0xf8,0xed,0xbd,0xf7,0x29,0xb8,0xc4,0x6f,0xc6,0xd6,0x1c,0x9f,
    0x91,0x63,0xb3,0xe1,0xd8,0x62,0x38,0x64,0xce,0x16,0xe2,0xd4,0xff,0x39,0x7e,0x7b,
    0xef,0x7d,0x01,0x2e,0xf1,0x5b,0xb1,0x35,0xc7,0x36,0x72,0x6c,0x35,0x1c,0xdb,0x0d,
    0x87,0xcc,0xd9,0x4e,0x9c,0xec,0x0f,0xad,0x5d,0xb6,0xe9,0xcb,0x97,0xf4,0x65,0x87,
    0xe9,0xcb,0x57,0xe0,0xda,0x97,0xaf,0xc1,0xb4,0x2f,0xbb,0x4c,0x5f,0xc4,0xb7,0xd3,
    0x8d,0xbd,0x70,0xef,0x34,0x7b,0x6f,0x37,0x5a,0xf4,0x99,0x75,0x0f,0xd8,0x6e,0xf3,
    0x5c,0xae,0xb1,0xdf,0xe4,0xc4,0x26,0xce,0xc1,0xb7,0x60,0x7b,0xcc,0x39,0x88,0x9a,
    0x73,0xb0,0x9a,0x18,0x59,0xd7,0x2e,0x72,0xef,0x35,0xeb,0xfa,0x8e,0x75,0xed,0x33,
    0xeb,0xfa,0x1e,0x5c,0xd7,0xf5,0x03,0x98,0xae,0xeb,0x80,0x59,0x97,0xf8,0xf6,0xbb,
    0x71,0x08,0xee,0xfd,0xa6,0xc6,0x3f,0xa2,0xd5,0xde,0x19,0x3f,0x81,0x6b,0xcc,0xc1,
    0xd0,0x7e,0x3a,0x48,0x8c,0xe8,0x3d,0x00,0xe7,0x21,0xf3,0x8c,0xf1,0x33,0x7a,0x8f,
    0x98,0x67,0x8c,0x5f,0xc0,0x65,0xfe,0x61,0x6c,0xf5,0xfd,0xca,0xff,0x08,0xd9,0x3c,
    0xcf,0xfc,0x06,0x36,0xdc,0xac,0xef,0x77,0xf0,0x81,0xac,0xef,0x98,0x59,0x9f,0xf8,
    0x8e,0xba,0x71,0x0c,0x2d,0x47,0x8d,0xf6,0xe3,0xa1,0x7d,0x7a,0xdc,0xdc,0xc1,0x1a,
    0x7f,0xcc,0x68,0xf9,0x23,0xa4,0xe5,0x04,0x58,0x73,0xa3,0xe5,0x24,0xb8,0x6a,0x39,
    0x6d,0xb4,0x9c,0xf4,0xdc,0x81,0xc7,0x84,0xfb,0x94,0xd1,0x72,0x26,0xb4,0x9f,0xcf,
    0x18,0x2d,0x1a,0x7f,0xda,0x68,0xf9,0x33,0xa4,0xe5,0x2c,0xd8,0x0e,0xa3,0xe5,0x2f,
    0x70,0xd5,0xa2,0x0f,0xb2,0xa2,0x45,0x7c,0xe7,0xb8,0xd4,0x85,0xfb,0x9c,0xd1,0x12,
    0x8d,0xfc,0xd3,0x77,0xd1,0x22,0xb6,0xfc,0x4f,0x2a,0x5a,0x34,0x3e,0x88,0x9c,0xdf,
    0xe3,0x03,0xa1,0x3d,0xba,0xcb,0xec,0xf9,0x64,0xf8,0x84,0x4b,0xfe,0x77,0x15,0xfb,
    0xac,0x23,0xa8,0xed,0x46,0x2d,0xce,0x78,0x2a,0x75,0xca,0xe5,0xff,0xd7,0x8d,0x79,
    0x1d,0xb9,0xe1,0xca,0x63,0xf6,0x5f,0x7e,0xf0,0x35,0xac,0xb1,0x10,0x58,0x01,0xd6,
    0x58,0xc4,0xd4,0xbb,0x90,0x7f,0x9f,0x25,0xef,0x26,0x12,0x3c,0x85,0x0d,0x4f,0x51,
    0x78,0xc6,0x92,0xbf,0x38,0x58,0x31,0x5f,0xb7,0xa8,0xb7,0x65,0x4e,0x09,0x33,0xa7,
    0x24,0x73,0xf2,0x3a,0x75,0x71,0xde,0x05,0x46,0xc0,0x4b,0xf2,0x2e,0x4b,0xf9,0xca,
    0xe0,0x2f,0xed,0x9f,0x73,0x93,0x73,0xde,0x9f,0x95,0xe1,0x9d,0x96,0xe4,0x28,0x47,
    0x8e,0x22,0xbe,0x17,0xe7,0xd7,0x23,0xdf,0x05,0xea,0x91,0x97,0xf8,0x8b,0x8c,0xa6,
    0xf2,0xe0,0x5a,0x8f,0x0a,0xe6,0xfd,0xa3,0xd4,0xa3,0x92,0xa9,0x87,0xf8,0x2a,0xfa,
    0xf7,0x0c,0x09,0x9e,0x8a,0x86,0xa7,0x32,0x3c,0x13,0xc8,0x5f,0x05,0x4c,0xeb,0x51,
    0x85,0x39,0x55,0xcd,0x9c,0x6a,0xcc,0x19,0xc5,0x9c,0x2b,0xc0,0xca,0x1a,0x9e,0x34,
    0xf0,0xd2,0xa6,0x6e,0xd5,0x4d,0xdd,0xd2,0x78,0x87,0x27,0x39,0xaa,0x93,0xa3,0x92,
    0xa9,0xc7,0xdf,0x33,0xd1,0xa7,0xd1,0x5c,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DArray src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
