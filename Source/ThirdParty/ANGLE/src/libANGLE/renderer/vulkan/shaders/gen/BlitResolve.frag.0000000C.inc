// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolve.frag.0000000C.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolve_frag_0000000C[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x94,0x6b,0x4b,0x54,0x51,
    0x14,0x86,0xd7,0x9c,0x33,0xce,0x8c,0xdd,0x34,0xca,0x19,0x1b,0x23,0x4c,0x33,0xba,
    0x21,0x82,0x15,0x41,0x24,0xf4,0xa9,0xc0,0x99,0x6c,0x1c,0x2d,0xcb,0xfa,0x20,0x59,
    0x62,0xa2,0x35,0x28,0x56,0x52,0x4c,0x39,0xe8,0x87,0xa0,0xac,0xdf,0xd1,0xef,0x8b,
    0x2e,0x10,0xb4,0xd6,0x3e,0xcf,0x8e,0x95,0x07,0xb6,0x7b,0xd6,0xb3,0xd7,0xed,0x3d,
    0x6b,0x1f,0xd3,0x64,0xb8,0x28,0x92,0x93,0x03,0x52,0x92,0xaf,0x92,0x3d,0x47,0x25,
    0x51,0x22,0x72,0x50,0x0a,0x61,0xbf,0x55,0x6b,0xd6,0x46,0xd7,0x37,0x16,0x47,0x2f,
    0x5f,0x19,0xb3,0xf3,0x23,0x92,0x06,0x3f,0x3b,0xeb,0x91,0xa2,0xe4,0x75,0xb7,0xb5,
    0xba,0xb0,0xbc,0x26,0x81,0x89,0xd4,0x74,0xf5,0xaa,0x9f,0xf1,0xa2,0xfb,0x7d,0xc8,
    0xf2,0xe9,0xaf,0x9e,0x90,0x3f,0xf3,0xbd,0x2d,0x5d,0x52,0xa1,0xf6,0x30,0x7b,0x64,
    0x39,0x58,0xc9,0xb1,0x04,0xd6,0xeb,0x58,0x0a,0xeb,0x77,0x2c,0x0f,0x3b,0xe9,0x58,
    0x17,0x6c,0xd0,0xb1,0x02,0xec,0x8c,0x63,0x45,0xd8,0x39,0xc7,0x4a,0xb0,0x4b,0x8e,
    0x75,0xc3,0xc6,0x82,0xae,0xf4,0x5f,0x7f,0xa6,0xb1,0x86,0xc6,0x32,0xf6,0x94,0xee,
    0x43,0xe8,0x8b,0xf6,0x69,0x67,0x37,0xf7,0x9d,0x37,0x39,0xb7,0x7c,0xc7,0xf4,0x6f,
    0x12,0xec,0x34,0x68,0x4d,0x42,0xde,0x34,0xf4,0x6e,0x5a,0x2a,0xea,0x5f,0x44,0x4b,
    0x82,0x7d,0x18,0x3b,0x1f,0x7c,0xf2,0x3a,0xb7,0xec,0x7d,0x1a,0xbf,0x8e,0xdd,0x03,
    0xeb,0x53,0xbb,0x8f,0x5c,0xd1,0x2e,0x63,0xdb,0x73,0x4a,0x27,0x17,0xdf,0x4b,0x5c,
    0x7d,0xac,0x02,0x7b,0xd9,0x2d,0xab,0xd7,0xcf,0xfb,0xa9,0x50,0xcf,0xec,0x13,0xb0,
    0x8b,0xd4,0xab,0x52,0xcf,0xfc,0x07,0x38,0x2b,0xba,0xf3,0x58,0x3f,0xda,0x23,0x9c,
    0x9b,0xff,0x59,0xfc,0xad,0xde,0x71,0x55,0x7d,0x1e,0x3f,0xb3,0x2f,0xec,0x8b,0x1b,
    0x67,0x7e,0xd1,0x9e,0x20,0xd6,0xf2,0x4c,0x72,0x7f,0x0a,0xf4,0x39,0xc9,0xfd,0x4d,
    0x43,0xbf,0xdd,0x52,0xe7,0x2c,0x27,0xff,0x3f,0xd1,0xb6,0x1c,0x77,0xf8,0x5d,0x27,
    0x87,0xd9,0x53,0xb0,0xaa,0xf6,0xd6,0xc0,0x6f,0x1a,0xd6,0xc0,0xcf,0xec,0x26,0x6c,
    0x40,0x2b,0xce,0x92,0x23,0xf6,0x39,0xc7,0x3c,0xaf,0xea,0x7d,0x4b,0x98,0xa5,0xd0,
    0xdb,0x4f,0x25,0x76,0x9f,0x6f,0x30,0xeb,0x05,0xe6,0xd9,0x50,0x6a,0xfd,0x3e,0x81,
    0x89,0x63,0x8b,0x30,0xeb,0xfd,0xae,0x32,0x7b,0x97,0x4f,0xf1,0xb5,0xb3,0x9b,0xca,
    0x6c,0x0e,0xcf,0x98,0x55,0x95,0xfc,0xe6,0xb7,0x04,0xdf,0x21,0x6e,0x99,0xd8,0x25,
    0x17,0xf7,0x9c,0xb8,0x41,0x17,0xb7,0x02,0xef,0x10,0xb7,0x4a,0xec,0x0a,0x71,0x36,
    0xc7,0x35,0xe2,0x46,0x88,0xb3,0x19,0xbe,0x80,0x7f,0x53,0x1f,0x9b,0xed,0x4b,0x98,
    0xcd,0xf6,0x87,0xbe,0x81,0x4d,0xb4,0xfd,0x56,0x7f,0x3b,0x6b,0xe9,0xda,0xe4,0xbd,
    0xb4,0x9c,0xe6,0x75,0x6a,0xda,0xd3,0x56,0x5f,0x63,0x1b,0xf0,0x69,0xb5,0xac,0xa7,
    0x8f,0xb0,0xe8,0xf7,0x4b,0x73,0xc4,0x5c,0xb6,0x7f,0x57,0x2f,0xf3,0xfb,0x8c,0x4f,
    0x17,0x31,0x2d,0xa7,0xe1,0x15,0x1a,0xc6,0x9d,0x86,0xd7,0xf0,0xa8,0xe1,0x0d,0x2c,
    0x6a,0x68,0x3b,0x0d,0x76,0xb6,0x15,0x7a,0xcc,0xea,0x6e,0x39,0x0d,0x6f,0xa9,0x9d,
    0x73,0x1a,0xde,0xc1,0xa3,0x86,0x4f,0xb0,0xe8,0x67,0x1a,0x62,0xae,0xb6,0xd3,0xb0,
    0x87,0xcf,0x26,0x31,0x5b,0x4e,0xc3,0x7b,0x34,0x4c,0x38,0x0d,0x1f,0xe0,0x51,0xc3,
    0x36,0x2c,0x6a,0xd8,0x75,0x1a,0xb6,0xc3,0x9c,0x25,0x30,0xab,0xdb,0x09,0xdf,0x41,
    0x56,0x77,0x87,0xda,0x7b,0xee,0xdb,0xb1,0x1e,0xa3,0xef,0xae,0xeb,0xf1,0x0b,0x7e,
    0x6d,0xe2,0x3a,0xf4,0x53,0x0f,0xf7,0x36,0xfb,0xb6,0xcc,0xb6,0xef,0x68,0x86,0x6f,
    0xe8,0x9e,0xf6,0x37,0x1b,0xf6,0xcc,0x67,0xc6,0xdd,0xcb,0x07,0xe8,0x9a,0x73,0xf7,
    0xf2,0x21,0x3c,0xde,0xe7,0x79,0xea,0x1a,0xbf,0xaf,0xcc,0xbe,0xa9,0x47,0xe4,0x9b,
    0x77,0xb3,0x78,0x0c,0x97,0xf0,0x9e,0xd2,0xf0,0xbf,0xc2,0xd8,0x1f,0x55,0x75,0x4d,
    0xd7,0x5f,0x4f,0xda,0x98,0xde,0x54,0x07,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_GOOGLE_include_directive : require
//
// layout(set = 0, binding = 0)uniform texture2D depth;
//
// layout(set = 0, binding = 2)uniform sampler blitSampler;
//
// #line 1 "shaders/src/BlitResolve.inc"
//
// layout(push_constant)uniform PushConstants {
//
//             vec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int samples;
//     float invSamples;
//
//     int outputMask;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
// } params;
//
//         vec2 getSrcImageCoords()
// {
//
//             vec2 srcImageCoords = vec2(gl_FragCoord . xy);
//
//     srcImageCoords *= params . stretch;
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//         srcImageCoords . x = - srcImageCoords . x;
//     if(params . flipY)
//         srcImageCoords . y = - srcImageCoords . y;
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//     return srcImageCoords;
// }
//
// #line 123 "shaders/src/BlitResolve.frag"
//
// void main()
// {
//             vec2 srcImageCoords = getSrcImageCoords();
//
//     gl_FragDepth = texture(sampler2D(depth, blitSampler), srcImageCoords * params . invSrcExtent). x;
//
// }
