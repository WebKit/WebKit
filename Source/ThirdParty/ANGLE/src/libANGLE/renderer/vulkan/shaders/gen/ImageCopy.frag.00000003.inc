// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000003.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000003[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x58,0x59,0x6c,0x55,0x55,
    0x14,0xbd,0xe7,0xbd,0x0e,0x4c,0x2a,0x44,0xac,0x40,0x29,0x08,0xd4,0xc4,0x30,0xb5,
    0xa1,0xa5,0x0c,0xa5,0x7d,0xb4,0x02,0x2d,0x0a,0x65,0xa8,0x4c,0x6d,0xa2,0x14,0x68,
    0x05,0x5b,0x68,0xad,0x10,0x86,0x42,0x99,0x64,0x30,0x26,0x4d,0x4c,0x9a,0x54,0xa0,
    0x8a,0xca,0x50,0xa0,0x08,0xd2,0x86,0x40,0x01,0xf5,0x03,0x15,0x12,0x7f,0xfc,0x21,
    0x41,0x85,0x0f,0x41,0xa1,0x31,0x04,0x8d,0xd2,0x08,0x34,0x8a,0x67,0xdf,0xb3,0x76,
    0xdf,0xca,0x8d,0xc4,0x97,0x9c,0xdc,0x77,0xd6,0x9e,0xd6,0x5e,0xe7,0x9c,0x7b,0xef,
    0x7b,0xe1,0xd0,0xb0,0x78,0xcf,0x33,0x5e,0x0f,0xaf,0x9b,0xf7,0xa5,0xf1,0xfc,0x4f,
    0x1f,0x2f,0xe4,0x19,0x5c,0xc7,0xd8,0x6b,0x4f,0x2f,0xce,0x9f,0xe7,0xcd,0x28,0x9c,
    0x31,0xfa,0xad,0xd5,0xcb,0x46,0xa7,0x8f,0x4d,0x15,0xbf,0x27,0xbd,0xb0,0xef,0x2f,
    0xb6,0xa7,0xbc,0x78,0x2f,0xc6,0x5e,0x65,0xac,0x2c,0x59,0xb1,0x4a,0xf0,0x09,0x76,
    0xc4,0x5a,0x63,0x6f,0xeb,0x27,0x78,0xbc,0xe4,0xb0,0xdf,0x26,0xf8,0x39,0x25,0xc6,
    0xf3,0xf2,0xbd,0x58,0x2f,0xe2,0xca,0x7a,0xc3,0x70,0x55,0xcc,0x00,0xeb,0x46,0x58,
    0x08,0x58,0x6f,0xc2,0xc2,0xc0,0xfa,0x12,0x16,0x03,0xac,0x1f,0x61,0xb1,0xc0,0x06,
    0x12,0x16,0x07,0xec,0x39,0xc2,0xe2,0x81,0x25,0x13,0xd6,0x0d,0xd8,0x0b,0x84,0x75,
    0x07,0x36,0x92,0xb0,0x1e,0xc0,0x52,0x09,0xeb,0x09,0x2c,0x9d,0xb0,0x5e,0xc0,0xc6,
    0x13,0xf6,0x04,0xb0,0x49,0xbe,0x4e,0xe1,0xae,0x7e,0x45,0x33,0x11,0x74,0x28,0xf4,
    0xd1,0xf9,0x10,0x9a,0x8b,0xce,0x83,0x30,0x7f,0xda,0x46,0x85,0x7c,0x7b,0xd8,0xd7,
    0x46,0xbe,0x27,0xd8,0x6f,0x71,0xe8,0x73,0x84,0xf5,0x8f,0x83,0x86,0x03,0x47,0xcf,
    0xcc,0xec,0x6b,0x3d,0xfa,0x10,0x9e,0x60,0xc7,0xdc,0xb3,0x05,0x39,0x3a,0x4f,0xb4,
    0x63,0xde,0xbc,0x2b,0xd9,0x3a,0x4f,0xb2,0x23,0xab,0xc7,0xae,0x88,0xce,0x07,0xdb,
    0x71,0x22,0xaf,0x24,0x4b,0xe7,0xa2,0xdb,0xad,0x13,0xcf,0x77,0xcd,0x53,0xec,0xd8,
    0xbb,0xa7,0xff,0xe4,0x67,0xec,0x3c,0x0d,0x1c,0x64,0x6d,0x9f,0xb5,0x73,0xd1,0x24,
    0x0d,0x1c,0x65,0x3e,0x0e,0x6b,0x12,0xe3,0xfb,0xc5,0xf8,0xfa,0x88,0xaf,0xe0,0x99,
    0x98,0x4f,0xa0,0xf8,0x89,0xf0,0x97,0x78,0xc9,0x9f,0x8d,0xfc,0xf2,0x19,0x64,0x3b,
    0x8c,0x40,0x77,0xad,0x23,0x23,0xfb,0x7f,0x86,0xfa,0x48,0xfd,0xc9,0x58,0xe7,0x08,
    0xea,0xcb,0x3c,0x07,0xd8,0x08,0xf4,0x93,0x0b,0x3e,0xe2,0xff,0x22,0x6c,0xe9,0x64,
    0x9f,0x4e,0xfd,0xbc,0x04,0x7b,0x36,0xec,0x72,0x9d,0x09,0xbe,0xea,0x3f,0x1f,0x7b,
    0x55,0xe7,0x25,0xd8,0x1b,0xfd,0x6d,0x64,0x39,0xfa,0xc5,0x51,0xed,0xfa,0xe8,0x3c,
    0xd1,0xae,0x73,0x85,0xbd,0x96,0xa3,0xde,0x4a,0xe0,0x15,0xe0,0x2f,0xf3,0x55,0x81,
    0x7a,0x55,0x81,0x79,0x0d,0xf4,0x94,0xf8,0x8d,0xe0,0x9b,0x46,0xf6,0xad,0xd8,0xe7,
    0x3a,0x6f,0x00,0x27,0x59,0x8f,0x8f,0xf0,0x3d,0x4c,0xf6,0x26,0x9c,0x29,0xdd,0x0f,
    0x27,0x03,0xf5,0x2e,0xe2,0x8c,0xe8,0xfc,0x2a,0xce,0x9b,0xce,0x6f,0x06,0xf4,0xbe,
    0x8b,0xf3,0xa3,0xf9,0x42,0x7e,0xf3,0x5b,0x22,0xc2,0x37,0xc6,0xb8,0xda,0xba,0x5f,
    0x64,0x1e,0x6b,0xa2,0x7c,0xc4,0xff,0xa0,0x9d,0x57,0x36,0x55,0x77,0xed,0xdf,0x43,
    0x76,0xfe,0xde,0xf6,0x0f,0xb3,0x32,0xac,0xea,0x21,0xac,0x95,0x87,0x1e,0xee,0x5b,
    0x44,0xd6,0x22,0x0b,0x7b,0x33,0x13,0xfb,0x6f,0x96,0xed,0x68,0x22,0xce,0x6a,0x26,
    0x86,0xae,0xc3,0x2a,0xec,0xeb,0x2c,0xd8,0x73,0x6c,0x06,0xd9,0x17,0x53,0xb0,0x77,
    0x72,0x91,0x4f,0x7c,0xa6,0x02,0xdf,0x66,0x7d,0x64,0x3e,0x0d,0x71,0x53,0x11,0x27,
    0xfb,0xe5,0x65,0xc4,0x4d,0x47,0x9c,0xec,0x99,0x19,0xc0,0x9b,0xad,0x8f,0x9c,0xdd,
    0x02,0x60,0xb2,0x97,0xfe,0xb2,0xcc,0x67,0x83,0xcf,0x43,0xeb,0x5f,0xe0,0xf3,0xf5,
    0x7c,0x4c,0xfa,0x91,0xef,0x73,0x6c,0x9c,0x68,0x59,0x88,0x9a,0xf2,0xa9,0x85,0xbe,
    0xaf,0x00,0x9f,0x6b,0xd5,0x11,0x4e,0xdb,0x8c,0xc3,0xd4,0xef,0x81,0xcd,0xa1,0xb9,
    0xe4,0xda,0x61,0xb5,0x10,0xbf,0xc3,0xc6,0xf9,0xc4,0x22,0x66,0x16,0xf5,0xb0,0x00,
    0x3d,0xcc,0xa7,0x1e,0x16,0x02,0xd7,0x1e,0x16,0x01,0xd3,0x1e,0x8a,0xa9,0x07,0xb1,
    0x15,0xd9,0x51,0x8c,0xba,0x45,0xd4,0xc3,0xab,0xa8,0x6d,0xa8,0x87,0xd7,0x80,0x6b,
    0x0f,0x3b,0x8c,0xc3,0xd4,0x4f,0x7a,0xd0,0x5c,0xc5,0xd4,0x43,0x93,0x71,0x3e,0xb3,
    0x11,0x53,0x44,0x3d,0x2c,0x41,0x0f,0x25,0xd4,0xc3,0x52,0xe0,0xda,0xc3,0x32,0x60,
    0xda,0x43,0x19,0xf5,0x20,0xb6,0x52,0x3b,0xca,0x50,0xb7,0x14,0xfb,0x48,0xea,0x2e,
    0x47,0xed,0x26,0x13,0x3d,0xcb,0xc2,0x51,0x7d,0xcb,0x88,0xe3,0x11,0xf8,0x15,0x23,
    0xae,0x14,0x7c,0xe4,0x8c,0x57,0xe2,0x7c,0xeb,0x9e,0x7b,0x13,0x9c,0xab,0x68,0xcf,
    0x55,0x03,0xdf,0x82,0x3d,0xb7,0x1a,0x98,0xe4,0xad,0xc4,0x3d,0x75,0x0d,0xf0,0x65,
    0x76,0x2e,0xf7,0x92,0xb5,0xc8,0xfd,0x3a,0x62,0xd6,0x01,0xab,0xf2,0xa2,0x31,0xeb,
    0x81,0xef,0xb6,0x3e,0x32,0xdf,0x80,0x3c,0xeb,0xc1,0x47,0xee,0x25,0x9b,0xc0,0xa7,
    0x06,0x7c,0xd2,0xfc,0x35,0x73,0x78,0x25,0xce,0xe3,0x66,0x60,0x0b,0x6c,0xbf,0xe3,
    0x7c,0x9e,0xae,0xf6,0x06,0x9c,0xaf,0xcd,0xb4,0x26,0xdb,0x90,0x6f,0x2b,0xad,0xc9,
    0x76,0xe0,0xba,0x26,0x6f,0x03,0xd3,0x35,0xd9,0x49,0x6b,0x22,0xb6,0x1d,0x76,0xec,
    0x84,0xce,0x3b,0xb0,0xaf,0x84,0xc7,0x3b,0xa8,0xed,0x21,0x2e,0x19,0x0b,0xd3,0x69,
    0xbf,0x4b,0xae,0x7e,0xc6,0xc5,0xc8,0xf5,0x02,0x6a,0x0d,0x30,0x2e,0xae,0x37,0x62,
    0x86,0x99,0x68,0x2d,0xb1,0x25,0xca,0x73,0x1a,0x71,0x72,0xed,0x65,0x7b,0xf4,0x9f,
    0xcb,0x58,0xf7,0x01,0xa8,0x9b,0xe8,0xf3,0x72,0x3c,0x86,0x18,0x67,0x4f,0xf2,0xfb,
    0x70,0xd8,0x50,0xe3,0xf0,0xc1,0xd8,0x27,0xc9,0xc8,0x29,0xf9,0x35,0x2e,0x09,0x5c,
    0x12,0x02,0x3e,0xc2,0xe9,0x91,0xad,0x76,0x1f,0x58,0x07,0x38,0x1c,0x35,0x2e,0xaf,
    0xf0,0x4a,0x02,0x57,0x39,0x3f,0xb2,0x06,0xbb,0x8d,0xb3,0xab,0x1e,0xaa,0x51,0x1d,
    0x34,0x32,0xe8,0x37,0x23,0xa0,0xd1,0x70,0xd4,0x1c,0x4e,0x1a,0x8d,0x34,0x2e,0x4e,
    0x35,0x1a,0x4b,0x1a,0x89,0x6d,0x94,0x1d,0xa9,0x88,0x4b,0x25,0x8d,0xc6,0x90,0x46,
    0x75,0x01,0x8d,0xd2,0x8c,0xb3,0xb3,0x46,0xe9,0xc6,0xe1,0xaa,0x51,0x06,0x72,0x8e,
    0x22,0x8d,0x52,0xc0,0x25,0x21,0xe0,0x33,0x96,0x34,0xca,0x20,0x8d,0x9a,0x8d,0xcb,
    0x2b,0xbc,0x52,0xc0,0x55,0x35,0x7a,0xd7,0x38,0xfb,0x6e,0xf0,0x54,0x8d,0xea,0xa1,
    0x51,0x08,0xfd,0xe6,0x07,0x34,0x9a,0x84,0x9a,0x93,0x48,0xa3,0x6c,0xe3,0xe2,0x54,
    0xa3,0x3c,0xd2,0x48,0x6c,0x11,0x3b,0x72,0x11,0x97,0x4b,0x1a,0x4d,0x21,0x8d,0xea,
    0x03,0x1a,0x4d,0x35,0xce,0xce,0x1a,0x4d,0x33,0x0e,0x57,0x8d,0xf2,0x91,0x33,0x42,
    0x1a,0xe5,0x80,0x4b,0x42,0xc0,0x27,0x8f,0x34,0xca,0x27,0x8d,0x3e,0x35,0x2e,0xaf,
    0xf0,0xca,0x01,0x57,0xd5,0xa8,0xce,0x38,0xbb,0x68,0x15,0x42,0x3e,0x3d,0x7b,0x3b,
    0x71,0x8f,0x13,0xbf,0x93,0xd8,0x6b,0x65,0x88,0x91,0xfc,0x7a,0xe6,0xdf,0xc7,0x99,
    0x6f,0xa0,0x33,0xbf,0x07,0xb8,0x9e,0xf9,0xbd,0xc0,0xf4,0xcc,0x37,0xd2,0x99,0x17,
    0xdb,0x3e,0x79,0x16,0xa0,0xee,0x61,0xba,0x9f,0x1c,0x41,0xee,0x26,0xca,0x7d,0x14,
    0xb8,0xe6,0x3e,0x06,0x4c,0x73,0x1f,0xa7,0xdc,0xc7,0x7c,0x3f,0xcf,0xc7,0x24,0x77,
    0x33,0xed,0x83,0x13,0xe8,0x4b,0xde,0x2b,0xce,0x21,0xd7,0x67,0x8a,0x43,0x0b,0x8d,
    0x3b,0x0e,0x2d,0xc4,0xe7,0x14,0x6a,0x1e,0x86,0x7f,0x33,0xea,0xb6,0x52,0x5d,0xf1,
    0x69,0xb1,0xa3,0x15,0xf1,0x2d,0x54,0xf7,0x34,0xd5,0x9d,0x65,0xdf,0xac,0xe4,0x1d,
    0xed,0x0c,0xb0,0x93,0x26,0xfa,0xde,0x12,0xf2,0xdf,0x11,0xe2,0x7c,0xfb,0x59,0xc4,
    0xe9,0x90,0x7b,0xba,0xe0,0x6d,0x88,0x3d,0xeb,0xe7,0xea,0xee,0xaf,0xd5,0x79,0xe4,
    0x6a,0xc3,0xbb,0x53,0x2c,0xbd,0x03,0x4a,0x4f,0xca,0xa9,0x95,0xd6,0xb7,0x05,0xb5,
    0x8f,0x23,0xbe,0x05,0xbe,0x8d,0xf0,0xdd,0x47,0xfc,0xf7,0xff,0x07,0xff,0x4f,0x1e,
    0xc3,0xbf,0x0e,0x3c,0x0f,0xc0,0x67,0x3f,0xf1,0x3c,0x84,0x98,0x03,0x8f,0xe1,0xa9,
    0xb5,0x1b,0x89,0xe7,0x29,0xe3,0xb8,0xb6,0x22,0x7e,0x1f,0xed,0x95,0xaf,0xb0,0x57,
    0x2e,0xd2,0x5e,0xf9,0x1a,0xb8,0xee,0x95,0x6f,0x80,0xe9,0x5e,0xb9,0x4c,0x6b,0x26,
    0xb6,0x4b,0x76,0x5c,0x46,0xdd,0x4b,0xd4,0xf3,0xb7,0xa8,0xad,0xcf,0x9e,0xa2,0xc0,
    0x3d,0xa3,0x00,0x67,0xb0,0x80,0xee,0x19,0xb3,0x8d,0x8b,0x4b,0x46,0xcc,0x22,0xba,
    0x67,0x88,0x6d,0x8e,0xbc,0xc7,0x21,0x4e,0xae,0x5b,0x51,0x6b,0x3e,0xe2,0x06,0xd3,
    0xbd,0x62,0x81,0x71,0xf8,0x41,0xba,0xb7,0x2c,0xa4,0x7b,0x8b,0xd8,0x53,0xa0,0x5b,
    0x11,0x72,0xce,0xa1,0x7b,0x46,0x21,0x72,0xca,0xbb,0x35,0xfb,0x2c,0xa2,0x7b,0x46,
    0x11,0xdd,0x33,0x5a,0x8d,0xcb,0x2f,0xbc,0x0a,0xc1,0x55,0xef,0x19,0xf5,0xc6,0xd9,
    0x55,0x0f,0xd5,0xe8,0x3b,0x68,0xa4,0xcf,0x9e,0x8a,0x80,0x46,0x8b,0x51,0x73,0x31,
    0x69,0xb4,0xc4,0xb8,0x38,0xd5,0xa8,0x9c,0x34,0x12,0xdb,0x52,0x3b,0xca,0x10,0x57,
    0x46,0x1a,0x2d,0x47,0x1c,0x6b,0xb4,0xc2,0x38,0x9c,0x35,0x7a,0x83,0x34,0x5a,0x41,
    0x1a,0x55,0x20,0xe7,0x52,0xd2,0xa8,0x14,0x39,0x55,0x23,0xf5,0x29,0x27,0x8d,0x2a,
    0x48,0xa3,0xd3,0xc6,0xe5,0x17,0x5e,0xa5,0xe0,0xaa,0x1a,0x35,0x18,0x67,0xaf,0x0f,
    0x3c,0x7b,0xae,0x40,0x23,0x7d,0xf6,0xd4,0x06,0x34,0xaa,0x46,0xcd,0x6a,0xd2,0x68,
    0xb5,0x71,0x71,0xaa,0xd1,0x26,0xd2,0x48,0x6c,0x6b,0xec,0x58,0x87,0xb8,0x75,0xa4,
    0xd1,0x06,0xc4,0xb1,0x46,0x35,0xc6,0xe1,0xac,0xd1,0x46,0xd2,0xa8,0x86,0x34,0xaa,
    0x45,0xce,0x35,0xa4,0xd1,0x5a,0xe4,0x54,0x8d,0xd4,0x67,0x13,0x69,0x54,0x4b,0x1a,
    0x9d,0x31,0x2e,0xbf,0xf0,0x5a,0x0b,0xae,0xaa,0xd1,0x5e,0xe3,0xec,0x0d,0xf4,0xec,
    0xd1,0xb3,0x77,0x99,0xce,0x7c,0x1b,0xf6,0x5a,0x23,0x62,0x6a,0xe9,0xd9,0xf3,0x3d,
    0xce,0xfc,0x55,0x3a,0xf3,0x3f,0x00,0xd7,0x33,0xff,0x23,0x30,0x3d,0xf3,0xd7,0xe9,
    0xcc,0x8b,0xed,0x9a,0x1d,0x37,0x50,0xf7,0x06,0xdd,0x4f,0x7e,0x46,0xee,0x9b,0x94,
    0xfb,0x17,0xe0,0x9a,0xfb,0x16,0x30,0xcd,0xdd,0x4e,0xb9,0xc5,0x76,0xdb,0x8e,0x3b,
    0xc8,0x7d,0x87,0xde,0xbb,0x7f,0x43,0xee,0xbb,0xf4,0xde,0xfd,0x3b,0xf0,0x4b,0xf8,
    0x1d,0xf5,0x07,0xb0,0x1a,0xaa,0xf7,0x27,0xf0,0x2a,0xd4,0xeb,0xa0,0x7a,0x62,0xbb,
    0xe7,0xeb,0xe6,0xea,0xdd,0xf3,0xa2,0x5a,0xef,0x37,0xee,0x99,0xd6,0x46,0xbf,0xb7,
    0xd4,0xaf,0x83,0xb4,0x3e,0x67,0x9c,0xcf,0x1d,0xc4,0xdc,0x23,0x3e,0xf7,0xc1,0x67,
    0x3a,0xf1,0x79,0x00,0x5c,0xf9,0x74,0x12,0x9f,0x07,0xfe,0xd5,0xf3,0x31,0xa9,0xf3,
    0x90,0xf8,0x7c,0x0c,0x3e,0xe7,0x68,0xed,0xd5,0xaf,0x93,0xf8,0x9c,0x37,0xce,0xa7,
    0x03,0x31,0x0f,0x89,0xcf,0x3f,0xe0,0x73,0x95,0xf8,0x3c,0x02,0xae,0x7c,0x0c,0x9d,
    0x95,0x47,0x78,0x30,0x19,0xec,0x59,0x8f,0xf6,0xe2,0x01,0xe3,0xfe,0xb7,0x38,0x6f,
    0xa2,0xcf,0x1f,0xf5,0x33,0x26,0xca,0xe7,0x0b,0xf8,0x74,0x22,0xc6,0xc3,0x39,0x68,
    0x07,0xf7,0xdb,0x74,0xd6,0x7f,0x85,0xde,0x61,0xea,0xfb,0x03,0x13,0xc5,0xf5,0x37,
    0xa5,0xc6,0xb6,0x53,0xdf,0x9f,0x1b,0x57,0x4b,0x6a,0x4b,0xcc,0x6d,0xf8,0x5e,0x87,
    0xef,0x35,0x7a,0x8e,0xfe,0x84,0x7c,0x32,0xf4,0x7f,0xdd,0x10,0x3d,0x47,0x35,0xe6,
    0x3a,0xe5,0xbf,0x60,0x5c,0x8d,0x76,0xc4,0x5f,0xf3,0xff,0x03,0x0b,0xfb,0xff,0xcd,
    0x88,0xed,0x6f,0xdb,0xd8,0x78,0x3b,0xfe,0x05,0xfc,0x0e,0x7e,0xc9,0x90,0x16,0x00,
    0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform sampler2D src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texture(
//         src, vec2(params . srcOffset + srcSubImageCoords)/ textureSize(src, 0), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
