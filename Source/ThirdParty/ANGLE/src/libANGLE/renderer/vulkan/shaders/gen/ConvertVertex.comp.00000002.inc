// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertVertex.comp.00000002.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertVertex_comp_00000002[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x9d,0x99,0x77,0x70,0x57,0x45,
    0x10,0xc7,0xdf,0x25,0x21,0x09,0x84,0x16,0x5a,0x50,0x21,0x12,0x10,0xa4,0x13,0x85,
    0xc4,0x60,0x0c,0x01,0x45,0x08,0x08,0x88,0xa0,0xa8,0x64,0xc4,0x06,0x76,0x14,0x05,
    0x3b,0x28,0x36,0x14,0x2b,0x8a,0x15,0x51,0xec,0x22,0x58,0xb0,0x21,0xd8,0x45,0x14,
    0x0b,0x76,0x05,0xb1,0xeb,0x8c,0xce,0xd8,0xb0,0x23,0xd8,0xf0,0xf6,0xdd,0x67,0xf3,
    0xdb,0x9c,0xf9,0xcb,0xcc,0xbc,0xf9,0xbd,0xfd,0xee,0xee,0x77,0xf7,0xf6,0xf6,0xee,
    0xdd,0x7b,0xc9,0xce,0xea,0x92,0x97,0x24,0x2e,0x69,0x92,0xe4,0x27,0x63,0x5c,0x92,
    0xfe,0x15,0x26,0x59,0x89,0xdc,0x16,0x24,0xb9,0xe9,0xef,0xf0,0x51,0xe3,0x47,0xf5,
    0x9d,0x3e,0x63,0x72,0xdf,0x01,0x65,0xa5,0xa2,0x6f,0x9e,0x64,0xa7,0x76,0xa2,0x6b,
    0xe1,0x6d,0x1a,0xf9,0xdf,0x1c,0x7f,0x4d,0x3d,0xf4,0xe8,0xe3,0x05,0x2f,0xf0,0x8a,
    0x96,0x1e,0xcf,0x49,0xb9,0x92,0x64,0x30,0xb6,0x72,0xd5,0x78,0xeb,0x1d,0x43,0x98,
    0xa4,0x0b,0xbf,0x8a,0x39,0xb0,0x1c,0x83,0x65,0x81,0xe5,0x1b,0x2c,0x1b,0xac,0xa9,
    0xc1,0x72,0xc0,0x5a,0x1a,0xac,0x11,0x58,0x1b,0x83,0xe5,0x82,0xb5,0x37,0x58,0x1e,
    0x58,0x07,0x83,0xe5,0x83,0x75,0x32,0x58,0x63,0xb0,0x1d,0x0c,0xd6,0x04,0xac,0xbb,
    0xc1,0x0a,0xc0,0x7a,0x1b,0xac,0x29,0x58,0xa9,0xc1,0x9a,0x81,0x0d,0x30,0x58,0x73,
    0xb0,0x0a,0xa9,0xbb,0x1f,0xa9,0xd6,0x60,0xb8,0x1f,0xe1,0x64,0xf2,0xd7,0xfa,0x4c,
    0x89,0xea,0x28,0xf6,0x53,0xa8,0x8f,0xd8,0x1f,0xe9,0x7f,0x3b,0xd7,0xe9,0x82,0x5c,
    0x42,0x9d,0x45,0x6e,0xe4,0xea,0xf3,0xe5,0xba,0xff,0xf2,0x09,0xa6,0x7c,0xf9,0xae,
    0x3e,0x9f,0xc8,0x25,0x46,0x96,0x79,0x2f,0xa0,0x8e,0x22,0x8f,0x46,0xde,0xc6,0x5f,
    0xad,0xfd,0x28,0xb2,0xd2,0xf8,0xd9,0x29,0x9f,0xdc,0xb7,0xf5,0x36,0xb9,0xd4,0x38,
    0x49,0x7f,0x73,0xd2,0xb9,0xc8,0x63,0x9c,0x25,0x3e,0xa7,0x7c,0xee,0x15,0x17,0x9f,
    0x42,0x7c,0x5c,0x6a,0x93,0x93,0xb4,0xa2,0xcf,0xf2,0xe0,0x68,0xc7,0xbd,0x60,0xed,
    0x7c,0xb4,0x22,0xec,0xc5,0x56,0xe6,0xbd,0x28,0xc5,0x83,0x6d,0x07,0x6c,0x8b,0x88,
    0xd7,0xd1,0xc4,0xeb,0x80,0x4f,0x67,0xf2,0x15,0xac,0xd8,0xb3,0x6a,0x1f,0xfd,0xdf,
    0x4b,0xe2,0x76,0xa7,0x9f,0x84,0xab,0x12,0xb9,0x07,0x58,0x2f,0xc6,0xd8,0xd3,0xd8,
    0xf7,0x42,0x97,0x6b,0xf4,0xa5,0xf4,0xb8,0xca,0x65,0xe4,0xd9,0x8b,0xba,0x56,0x31,
    0xb7,0x2a,0x57,0xd3,0xd7,0x6a,0x3f,0x2c,0x92,0xc7,0x62,0xdf,0xc6,0xb3,0x8c,0x37,
    0x7e,0x13,0xe8,0x29,0xb5,0xab,0x65,0xbe,0x3a,0x7a,0x54,0x7b,0xb2,0x98,0xde,0x9b,
    0x4c,0xbe,0x47,0x90,0xcb,0x14,0xc6,0x27,0xf2,0x91,0x60,0xa2,0x3f,0x86,0x7b,0x3b,
    0x9e,0xa9,0xac,0x09,0x8d,0x3b,0x8d,0x38,0xaa,0x3f,0x95,0xf5,0xa6,0xf2,0xac,0x28,
    0xaf,0xb3,0xfc,0xb5,0x35,0x3b,0x23,0x9f,0xc3,0x7a,0x52,0xbe,0x8b,0x8c,0xbf,0xc8,
    0xf3,0xa3,0x7a,0xdd,0x41,0x9f,0xa8,0xff,0x3d,0xc2,0xe7,0xff,0x54,0x5e,0x4a,0xcf,
    0xa9,0xfc,0x04,0xeb,0x5a,0xc6,0xf3,0x12,0xfd,0x61,0xeb,0xb6,0x36,0xb2,0xff,0x3a,
    0x9a,0xdf,0x5f,0xd8,0xaf,0x44,0x96,0xfe,0xdb,0xcc,0x78,0x8b,0xbc,0xbc,0x85,0x9e,
    0xcc,0xa2,0xce,0xba,0x56,0x8b,0x59,0x93,0x22,0xa7,0xeb,0xc5,0x51,0x47,0x17,0xea,
    0x2c,0x72,0x3e,0x98,0xf0,0x34,0xc6,0x2f,0x9b,0x3c,0x9b,0xb8,0x90,0x53,0x63,0xec,
    0x45,0x2e,0x00,0x13,0x7d,0x53,0xee,0xed,0xbc,0x74,0x65,0x1d,0xeb,0xb8,0x46,0xb9,
    0xb0,0xa7,0xf7,0xf6,0x92,0xf0,0xc8,0x3a,0x17,0x6c,0x2d,0x63,0x2e,0xf7,0x5d,0x99,
    0x45,0x2f,0x25,0xc4,0xde,0xec,0x91,0x46,0xf4,0x82,0xd4,0xa9,0xa3,0x0b,0xf5,0x52,
    0xb9,0x38,0x92,0x7b,0x18,0x59,0xd6,0x6a,0x45,0xa4,0x1f,0x68,0x64,0x59,0xa7,0xbb,
    0x45,0xf6,0x55,0x91,0xfd,0xe0,0xc8,0x7e,0xf7,0x48,0x3f,0x02,0x79,0x88,0xcf,0x52,
    0x6a,0xd0,0x96,0xba,0x4c,0x4b,0xd7,0x51,0x18,0x77,0x3b,0x70,0xb1,0x91,0xf5,0x58,
    0xe4,0xc2,0x9a,0xad,0x35,0x36,0xed,0x5d,0xc0,0xef,0xf7,0x36,0xd2,0x0b,0xdb,0xb8,
    0xe0,0x27,0xf8,0xef,0xbe,0x12,0xdb,0xb1,0xc7,0xfe,0xe1,0xed,0x45,0xb7,0xad,0xbf,
    0x04,0x93,0xfa,0xc8,0xfd,0xdf,0xbe,0xfa,0x72,0x2f,0xd8,0x20,0x6f,0xdf,0x91,0x1c,
    0xe4,0xbe,0x98,0xfb,0x2d,0x5e,0xbf,0x3d,0x3e,0xf2,0xbb,0xc9,0x73,0x95,0xc8,0xde,
    0x0c,0xb7,0xe8,0xbb,0xa0,0x97,0x5f,0xcd,0x6d,0x07,0x17,0xea,0xac,0xf9,0x77,0x23,
    0xff,0xae,0xc6,0x66,0x47,0x17,0xf0,0x65,0xe4,0xdf,0xdd,0x05,0x3f,0xc1,0x25,0x67,
    0x91,0x3b,0xc9,0xbe,0x0f,0x7f,0x27,0x97,0xa9,0x59,0xcf,0x06,0x6a,0xd6,0x0b,0x5c,
    0x63,0xf6,0x6e,0x20,0x66,0x1f,0x17,0xf0,0xf3,0xe5,0x19,0xe4,0xe5,0xbe,0x2e,0xf8,
    0xf5,0x31,0x36,0xfd,0xc8,0x7d,0x36,0x36,0xa5,0x2e,0xd8,0xf5,0xa3,0x4e,0xd2,0x2f,
    0xa5,0xc6,0x7e,0x27,0x17,0x7a,0x48,0xe3,0xee,0x4c,0xdc,0xa5,0x26,0xb7,0xfe,0x2e,
    0xe0,0x3a,0x57,0x03,0x5c,0xf0,0xeb,0xcf,0x5c,0x95,0x9b,0xb9,0x12,0x5d,0x99,0xbf,
    0xca,0x19,0xb7,0xdc,0x4b,0x9d,0xb5,0x0e,0xe5,0x26,0xf6,0xae,0xc4,0x96,0xbc,0xa4,
    0x4f,0x45,0x1e,0xe8,0x63,0xc8,0x5a,0xaa,0x74,0xe1,0x3c,0x32,0x10,0xbd,0xf4,0x75,
    0x25,0xbe,0xa2,0x1f,0xe4,0x42,0xaf,0x8b,0x4e,0x7a,0x78,0x10,0xbe,0xb2,0x17,0x54,
    0x4b,0xbf,0xd0,0xdb,0xa2,0x97,0x9e,0xaf,0x36,0x71,0x87,0x98,0xb8,0xd2,0xef,0x43,
    0xd0,0x89,0xef,0x1e,0x2e,0xac,0x11,0xd1,0x49,0xef,0xef,0x91,0xf2,0xe6,0xa6,0x7e,
    0x43,0x5d,0xd8,0xf7,0xc4,0x67,0x77,0xc3,0xb7,0xa7,0x0b,0xeb,0xf4,0x05,0x6a,0x3e,
    0xcc,0x05,0x6c,0xa8,0xe9,0xcd,0x61,0xd4,0xa1,0x33,0x75,0xe8,0x6c,0xfc,0x87,0x47,
    0x73,0x56,0xe3,0x02,0xb6,0xd4,0xf4,0x73,0x8d,0xab,0xdf,0xcf,0x25,0xc6,0x7f,0x24,
    0xf1,0xc5,0x56,0xd6,0xe7,0x48,0x6a,0x21,0x7b,0xcb,0x5e,0x2e,0x9c,0xc3,0x46,0xb0,
    0x66,0x2a,0xfc,0x55,0x4e,0x9c,0x02,0xf6,0x1d,0x79,0xb6,0xed,0xe2,0x7d,0xf3,0xd8,
    0x77,0xf5,0xbe,0x09,0xfb,0x51,0x53,0xd3,0x0b,0xdd,0xb0,0xa9,0xeb,0x53,0x9e,0xc7,
    0x3d,0x8d,0x4d,0x1f,0xf0,0xba,0x3e,0xc5,0xaf,0x8f,0xb1,0xe9,0x07,0xbf,0xf2,0xec,
    0x04,0x4f,0xa9,0xb1,0xd9,0x19,0x5c,0x79,0xfa,0xe3,0x27,0xb8,0xd6,0x6a,0x00,0xfc,
    0xfd,0x0d,0x57,0x39,0x5c,0x65,0x86,0x6b,0x17,0x70,0xf5,0xab,0xc0,0x57,0xf0,0x7f,
    0xfc,0x18,0x2b,0x52,0x2c,0x53,0x9b,0x16,0x0d,0xd4,0xa6,0x99,0xb9,0x6f,0x4e,0x6d,
    0x5a,0x9a,0xbd,0xb1,0x92,0x67,0x9b,0xc6,0xdc,0x0d,0x9f,0xb9,0x70,0x0e,0x02,0xab,
    0x32,0x63,0x1a,0x0c,0x5e,0xcd,0x5c,0x57,0x82,0xd5,0xf5,0x2a,0xbc,0x92,0xe3,0x10,
    0x93,0x63,0x21,0xe7,0x75,0xf9,0x6b,0x65,0xf2,0x6a,0x4d,0x5e,0x6d,0x4d,0x5e,0x43,
    0x93,0xfa,0x7b,0xf8,0xc8,0x48,0x3e,0x28,0x92,0x27,0x45,0xf2,0x21,0x91,0x7c,0x78,
    0x24,0xcf,0x88,0xe4,0x33,0x22,0xf9,0xc2,0x48,0xbe,0x3c,0x92,0x17,0x44,0xf2,0xc2,
    0xa4,0xfe,0x33,0xea,0xae,0x48,0xff,0xb8,0x91,0xe5,0x3c,0xf1,0x72,0xa4,0x7f,0x3b,
    0xf2,0x7f,0x37,0x92,0x3f,0x8d,0xe6,0x69,0x4f,0xea,0xa6,0xfd,0x33,0x9c,0xfe,0x19,
    0x66,0x6c,0x6a,0xc0,0xe7,0x30,0x6f,0x23,0xf0,0xab,0x61,0xde,0x86,0x82,0xa9,0xfd,
    0x5e,0x11,0xe7,0xa8,0x06,0x38,0x47,0x83,0x6b,0x7f,0x8c,0xc1,0x6f,0x34,0x9c,0x23,
    0xc1,0xd4,0x7e,0x6f,0xe6,0x4e,0x39,0xf7,0x81,0x73,0xac,0xb1,0x19,0x07,0xae,0x7b,
    0xf5,0xbe,0xf8,0x8d,0x33,0x36,0xfb,0xc1,0xa3,0xcf,0xae,0xfd,0xc1,0xe4,0xfc,0x7a,
    0x37,0xd8,0x01,0xf8,0x8a,0x4e,0xf6,0xf8,0x89,0x49,0x66,0x8f,0x17,0xdd,0x81,0xfe,
    0x9a,0x48,0xaf,0x1d,0x48,0x7f,0xd6,0x22,0x4f,0x34,0xb1,0x0e,0xa6,0xff,0x64,0x3c,
    0x93,0x90,0x55,0x77,0x28,0x79,0x88,0xee,0x10,0x64,0xdd,0x6b,0x0f,0x63,0x7f,0x9a,
    0x44,0xff,0x89,0xcd,0x41,0xe0,0xea,0x7f,0x14,0xbd,0xab,0x73,0x72,0x34,0x58,0x55,
    0x5a,0xa3,0xdc,0xf4,0xec,0x7c,0x2c,0xe7,0xe9,0x5a,0xf4,0xea,0x7b,0x1c,0x3a,0xe1,
    0x3d,0x1c,0x59,0xeb,0x7a,0x3c,0x75,0x9d,0x6a,0xec,0x4f,0x00,0x5f,0x4a,0x7d,0x4e,
    0x04,0x9b,0x46,0x7d,0xa6,0x9b,0xfa,0x88,0xee,0x24,0x7f,0xdd,0x40,0x3d,0x4e,0x32,
    0x3c,0x27,0x33,0xe6,0x25,0xf0,0x9c,0x02,0x36,0x21,0x3d,0x47,0xe7,0xa6,0xeb,0xfa,
    0x34,0xf0,0x32,0xce,0xf2,0x33,0xf1,0x3d,0x1d,0x9d,0xe4,0x3c,0x03,0x59,0x79,0xcf,
    0x8c,0x78,0x67,0x82,0x59,0xde,0xb3,0xc1,0x67,0xf1,0x0e,0xa0,0xbc,0xb3,0xd1,0x09,
    0xef,0x19,0xc8,0x5a,0x8b,0x73,0xa9,0xc5,0x39,0x26,0xd6,0x79,0xe0,0x5a,0x8b,0xf3,
    0xc1,0xb4,0x16,0x73,0x4c,0x2d,0x44,0x77,0x81,0xbf,0x2e,0xa1,0x16,0x17,0x18,0x9e,
    0xb9,0xe4,0xac,0x7b,0xe1,0xc5,0xbc,0x7b,0xcc,0x25,0x97,0x0b,0xc1,0xe4,0xb9,0x37,
    0x07,0xff,0x4b,0x8c,0xff,0xa5,0xd1,0x98,0x2f,0x03,0x9b,0x40,0x1e,0xf3,0x4c,0x1e,
    0xa2,0xbb,0xc2,0x5f,0x57,0xc2,0x73,0x05,0x31,0x2e,0x4f,0x32,0x67,0xc5,0x79,0xe8,
    0xae,0x34,0x31,0xae,0x62,0x7f,0x53,0xf9,0x6a,0x62,0x9e,0x4b,0xce,0xd7,0xf0,0x7e,
    0x74,0xb5,0x19,0xc7,0xb5,0xf8,0x5d,0x63,0x9e,0x37,0xd7,0x81,0xcf,0x37,0x71,0xaf,
    0x8b,0xe2,0xce,0x33,0x71,0xae,0x67,0x9f,0xd4,0x3a,0x5c,0x1f,0xd5,0x61,0x0e,0xf2,
    0x74,0xe4,0x1b,0x8c,0xef,0x8d,0xac,0x0b,0xf1,0x5d,0x80,0xac,0xf3,0x79,0x53,0x03,
    0xcf,0xd9,0x9b,0xc1,0xc5,0x7e,0x21,0xb2,0xae,0xc3,0x45,0x3c,0x0b,0x17,0xb0,0x2f,
    0x6b,0x3e,0x8b,0x0c,0xe7,0x2d,0x0d,0x70,0xde,0x0a,0xae,0x35,0xb9,0x0d,0xac,0xda,
    0xf4,0xef,0x6d,0xc6,0xfe,0x76,0xea,0xac,0x73,0x79,0x27,0xd8,0x1d,0xcc,0xe5,0x62,
    0x33,0x97,0x77,0xa6,0xfb,0x94,0xd8,0x86,0xb1,0xdf,0x0d,0xe7,0x5d,0xbc,0x8b,0x4a,
    0x5d,0x16,0xa3,0x5b,0x62,0x62,0xdc,0x4b,0x8c,0xd5,0x3c,0x3f,0xef,0xe3,0x9c,0x7b,
    0x2f,0xf3,0x59,0x98,0xee,0x9b,0x19,0x5c,0x39,0xef,0x8f,0x38,0x17,0x27,0x99,0x73,
    0xe8,0x03,0x3c,0x9f,0x74,0x2d,0x2d,0x03,0xd3,0xb5,0xb4,0x2c,0x9a,0xa7,0xe9,0x26,
    0x9f,0x07,0xa3,0xfd,0xfc,0xa1,0x06,0xf6,0xf3,0x87,0xc1,0x75,0x3f,0x7f,0x04,0xbf,
    0x87,0x8d,0xcd,0xa3,0xd1,0x3a,0x58,0x0e,0x66,0xf7,0xf3,0xc7,0xf0,0x5d,0x4e,0x3d,
    0x57,0x9a,0x7a,0x8a,0x6e,0x85,0xbf,0x9e,0x26,0xc7,0x15,0x26,0xa7,0x27,0xc9,0xe9,
    0x09,0x13,0xef,0x29,0x70,0x19,0xe3,0xe3,0xc8,0x32,0xc6,0x95,0xf8,0x3f,0x6d,0x6c,
    0x9f,0xe1,0xbc,0xa0,0xf2,0xb3,0x9c,0x07,0x56,0xd1,0x17,0xcf,0x61,0xf3,0xac,0xb1,
    0x59,0xc5,0x19,0x62,0x0d,0x36,0xcf,0x63,0xb7,0xca,0xc4,0x7c,0x3e,0x8a,0xb9,0xd2,
    0xf8,0xaf,0x66,0x9e,0xf5,0xf9,0xf6,0x02,0x98,0xf6,0xd2,0x1a,0x33,0x76,0xd1,0xbd,
    0x98,0xc6,0x0a,0x3c,0x2f,0x1a,0x9e,0x57,0x38,0x6b,0xa8,0xfc,0x2a,0xbc,0xba,0xf6,
    0x5f,0x03,0x5b,0x6b,0x7a,0xea,0x75,0x7a,0xe7,0x35,0xd3,0x13,0x6f,0x80,0xeb,0x78,
    0xde,0x84,0xfb,0x0d,0xb3,0x87,0xbe,0x05,0xae,0xef,0xb0,0x2f,0x83,0x49,0x6c,0xd1,
    0xbf,0xc3,0x39,0x47,0xf2,0x5f,0x67,0xf2,0x17,0xfc,0x3d,0x7f,0x6d,0x20,0xff,0xf7,
    0x4c,0xbe,0xeb,0xa3,0x7e,0x7f,0x9f,0xf5,0xb1,0x9e,0x18,0xef,0x82,0x49,0x1d,0xd7,
    0xe1,0xbf,0xc1,0xe8,0x6a,0x23,0xdd,0x3a,0xd3,0xf7,0x1f,0x70,0xae,0xd2,0x31,0x7e,
    0x08,0x26,0xbe,0x6f,0x23,0x6b,0x1e,0x1f,0x71,0x26,0x53,0xf9,0x63,0xea,0xaa,0xef,
    0x4b,0x9f,0x80,0x7d,0x64,0xe6,0xf7,0x13,0x62,0xeb,0xbc,0xac,0x31,0xfe,0x9f,0xe1,
    0x3f,0x93,0x5c,0x3e,0x07,0x13,0xdf,0x4f,0x91,0x35,0xcf,0x2f,0x38,0xef,0xc9,0xf9,
    0xe4,0x0b,0x73,0x7e,0x96,0x77,0xbd,0x6d,0xa9,0x63,0x7b,0xce,0xcf,0xed,0xf8,0x06,
    0x9b,0x7e,0x57,0x30,0x1c,0x5f,0x82,0x9f,0xc0,0x3b,0xe2,0x57,0x60,0xc2,0xf9,0x55,
    0xf4,0xde,0xd0,0xa9,0xee,0x9b,0x5f,0xe6,0x4c,0x5e,0xcc,0xbd,0x7c,0x4f,0xd9,0x1e,
    0xfe,0x12,0x73,0x5e,0xfd,0x21,0x3a,0xbf,0x6e,0x4a,0x32,0xdf,0x58,0x64,0x0d,0x7e,
    0xc3,0x1a,0xfc,0xda,0xd4,0xe0,0x5b,0x70,0x5d,0xf3,0xdf,0x81,0xcd,0xa7,0x47,0x36,
    0x9a,0x1e,0x11,0xdd,0xf7,0x69,0xbe,0x21,0xf6,0xf7,0x86,0xe7,0x47,0xf2,0xd3,0xde,
    0xfc,0x09,0x6c,0xad,0xe1,0xfe,0x19,0x7c,0x9a,0x39,0x4b,0xfc,0x0a,0x5e,0xcb,0xf7,
    0x39,0xed,0x83,0xdf,0xd0,0xc9,0x5c,0xfc,0x80,0xac,0xef,0xd6,0xbf,0x33,0xfe,0xb1,
    0x9e,0x77,0x4b,0x9a,0x5b,0xc0,0x36,0xa7,0xdf,0x07,0xc3,0xf3,0xe6,0x4f,0xbe,0x05,
    0xee,0x8a,0x5e,0xf3,0xfc,0x8b,0x3a,0xad,0x26,0xcf,0xbf,0xb1,0xfd,0x8b,0x58,0x9b,
    0xc0,0xa4,0x67,0x36,0x32,0xce,0x7f,0x4c,0xec,0xad,0xc4,0xd6,0x9e,0x91,0x20,0x5b,
    0x4d,0xde,0x8e,0x7f,0xbc,0x28,0x97,0x73,0xf5,0xb9,0x36,0x9a,0x5c,0xb2,0x5c,0x98,
    0x23,0x99,0x7f,0xb9,0xd7,0xf9,0xcf,0xe2,0x7f,0x1e,0x09,0xff,0x4f,0xd0,0xf9,0xef,
    0x02,0x47,0x57,0xf3,0xdd,0xac,0x59,0x03,0xdf,0x80,0x9a,0x83,0xeb,0xbc,0xb7,0xe0,
    0x5b,0xcc,0x2c,0x63,0xd3,0xd2,0x05,0x5c,0xcf,0xbc,0x85,0x2e,0x60,0x55,0xe6,0xac,
    0xd1,0xca,0x05,0xae,0x42,0xf3,0x8d,0xa0,0xb5,0x0b,0x79,0xe8,0xb9,0xb8,0x0d,0xdf,
    0x3f,0x6b,0xb1,0x97,0x71,0x0b,0xd6,0xda,0x7c,0x27,0xf8,0x17,0xfa,0x05,0x4b,0x20,
    0xf4,0x1a,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dst
// {
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)buffer src
// {
//     uint srcData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint outputCount;
//
//     uint componentCount;
//
//     uint srcOffset;
//     uint dstOffset;
//
//     uint Ns;
//     uint Bs;
//     uint Ss;
//     uint Es;
//
//     uint Nd;
//     uint Bd;
//     uint Sd;
//     uint Ed;
//
//     uint srcEmulatedAlpha;
//
//     bool isSrcHDR;
//     bool isSrcA2BGR10;
// } params;
//
// uint getSourceComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Ss + component * params . Bs + params . srcOffset;
// }
//
// uint getDestinationComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Sd + component * params . Bd + params . dstOffset;
// }
//
// uint getShiftBits(uint offset, uint B)
// {
//
//     uint shift =(offset % 4)* 8;
//
//     return shift;
// }
//
//       int loadSourceComponent(uint cd)
// {
//
//     uint vertex = cd / params . Nd;
//     uint component = cd % params . Nd;
//
//     if(component >= params . Ns && component < 3)
//     {
//         return 0;
//     }
//
//     uint offset = getSourceComponentOffset(vertex, component);
//     uint block = srcData[offset / 4];
//
//     uint shiftBits;
//     uint valueBits;
//     uint valueMask;
//
//     if(params . isSrcHDR)
//     {
//         valueBits = component == 3 ? 2 : 10;
//         valueMask = component == 3 ? 0x03 : 0x3FF;
//         if(params . isSrcA2BGR10)
//         {
//             shiftBits = 10 * component;
//         }
//         else
//         {
//
//             shiftBits = component == 3 ? 0 :(valueBits *(2 - component)+ 2);
//         }
//     }
//     else
//     {
//         shiftBits = getShiftBits(offset, params . Bs);
//         valueBits = params . Bs * 8;
//         valueMask = valueBits == 32 ? - 1 :(1 << valueBits)- 1;
//     }
//
//     uint valueAsUint;
//
//     if(component >= params . Ns && component == 3)
//     {
//         valueAsUint = params . srcEmulatedAlpha;
//     }
//     else
//     {
//         valueAsUint =(block >> shiftBits)& valueMask;
//     }
//
//     if(valueBits < 32)
//     {
//         bool isNegative =(valueAsUint &(1 <<(valueBits - 1)))!= 0;
//
//         uint signExtension = isNegative ? 0xFFFFFFFF << valueBits : 0;
//         valueAsUint |= signExtension;
//     }
//           int value = int(valueAsUint);
//
//     return value;
// }
//
//        float convertComponent(int srcValue)
// {
//
//     return srcValue;
// }
//
// uint makeDestinationComponent(uint cd, float value)
// {
//
//     uint valueAsUint;
//
//     if(params . Bd == 2)
//     {
//
//         uint shift =((cd & 1)== 0)? 0 : 16;
//         valueAsUint = packHalf2x16(vec2(value, 0.0))<< shift;
//     }
//     else
//     {
//         valueAsUint = floatBitsToInt(value);
//     }
//
//     return valueAsUint;
// }
//
// void storeDestinationComponents(uint valueAsUint)
// {
//
//     destData[gl_GlobalInvocationID . x + params . dstOffset / 4]= valueAsUint;
// }
//
// void main()
// {
//     if(gl_GlobalInvocationID . x >= params . outputCount)
//         return;
//
//     uint valueOut = 0;
//     for(uint i = 0;i < params . Ed;++ i)
//     {
//         uint cd = gl_GlobalInvocationID . x * params . Ed + i;
//         if(cd >= params . componentCount)
//         {
//             break;
//         }
//
//               int srcValue = loadSourceComponent(cd);
//                float destValue = convertComponent(srcValue);
//         valueOut |= makeDestinationComponent(cd, destValue);
//     }
//
//     storeDestinationComponents(valueOut);
// }
