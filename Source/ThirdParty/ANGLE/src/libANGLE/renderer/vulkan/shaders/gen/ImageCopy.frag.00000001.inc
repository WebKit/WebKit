// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000001.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000001[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x7d,0x96,0xdb,0x6f,0x54,0x55,
    0x14,0xc6,0xf7,0x9e,0xe9,0x05,0xca,0xad,0x30,0x28,0x4a,0xc0,0xb4,0x82,0x08,0x16,
    0x4a,0x29,0x77,0xcb,0x14,0x2a,0x4a,0x9b,0x88,0x20,0x6d,0x48,0x10,0x51,0xa9,0x22,
    0x0a,0x44,0x5e,0xf0,0x85,0x04,0xb9,0x28,0x04,0x22,0x88,0x34,0xa2,0x6d,0x8c,0x10,
    0x89,0x3c,0x80,0x48,0x1f,0x04,0xb5,0x55,0x09,0x1a,0xa5,0x46,0x69,0xa2,0x34,0xf0,
    0x17,0x18,0x89,0xc4,0x0b,0x4f,0x0d,0x15,0x82,0xb8,0xd7,0x3e,0xbf,0xd5,0x59,0x4e,
    0xc4,0x49,0x76,0xce,0xd9,0xdf,0x5a,0xdf,0xba,0x7c,0x67,0xed,0x33,0x27,0x9d,0x1a,
    0x57,0xec,0x9c,0x77,0x25,0x6e,0x80,0x7b,0xc8,0xbb,0xf8,0x1b,0xee,0x52,0x4e,0x6e,
    0x07,0xb9,0xa2,0x78,0xad,0x5f,0xdc,0xb4,0xb8,0x72,0xd3,0xcb,0x6b,0x2a,0x67,0xcc,
    0xac,0x12,0xfb,0x50,0x97,0x8e,0x7e,0x62,0x1b,0xe6,0x8a,0x5d,0x41,0xb8,0xca,0x7a,
    0xa9,0x79,0xdd,0x46,0xc1,0x27,0x84,0x75,0x29,0xac,0xd2,0xe0,0x27,0x78,0xb1,0xc4,
    0x08,0x77,0x13,0x62,0x4c,0xe1,0x38,0xd7,0xe0,0x0a,0xdd,0xe4,0x24,0x9d,0x1b,0xc7,
    0x55,0x31,0x0f,0x36,0xc0,0x60,0x29,0xb0,0x52,0x83,0xa5,0xc1,0x46,0x1a,0xac,0x00,
    0xec,0x2e,0x83,0x15,0x82,0x8d,0x31,0x58,0x11,0x58,0x99,0xc1,0x8a,0xc1,0xc6,0x1b,
    0x6c,0x00,0xd8,0x44,0x83,0x0d,0x04,0x9b,0x6c,0xb0,0x12,0xb0,0x2a,0x83,0x0d,0x02,
    0x9b,0x61,0xb0,0xc1,0x60,0x73,0x0c,0x36,0x04,0x6c,0x5e,0xd4,0x29,0xdd,0xdf,0xaf,
    0x68,0xb6,0x32,0x5c,0xef,0x45,0x1f,0xdd,0x97,0x9b,0xbd,0xe8,0x7c,0x0f,0xfb,0x4c,
    0x60,0xa5,0xa2,0x3d,0x1d,0xb5,0x91,0xfb,0x3b,0xc3,0x5d,0x11,0x7d,0x56,0x04,0xff,
    0x22,0xf2,0x8d,0xa9,0x7c,0xac,0x66,0x64,0xf0,0x18,0x6a,0xf0,0x4c,0x58,0x8d,0x1d,
    0x4b,0xea,0x74,0x2f,0x1a,0x2e,0x5f,0x7e,0xa9,0x56,0xf7,0xa3,0xc3,0xca,0x96,0xec,
    0x9e,0xaf,0x7b,0xd1,0xb3,0xbd,0xbe,0x39,0x7b,0x47,0xd8,0x97,0x91,0x43,0x9e,0xdd,
    0xa8,0xb0,0x2f,0x67,0x9f,0x62,0x3f,0x1e,0xcd,0x0b,0x22,0x5e,0xe0,0xee,0xc3,0x57,
    0xf0,0x1a,0xf6,0x13,0x0c,0xff,0x7e,0xfc,0x85,0x2f,0xf1,0x2b,0x88,0xe7,0x62,0xbf,
    0xa5,0x51,0xa3,0x72,0x56,0x59,0x7f,0x7f,0xff,0xbf,0xca,0xfa,0xaf,0x05,0x6e,0x0a,
    0xcf,0x71,0x32,0xf9,0x65,0x5f,0x09,0x56,0x41,0x3f,0x53,0xa9,0x47,0xfc,0xab,0xb0,
    0x95,0x1b,0xfb,0x2c,0xd3,0xcf,0xec,0x7e,0x6e,0x62,0x97,0xeb,0x83,0xd4,0xab,0xfe,
    0x0b,0x99,0x45,0xdd,0x2f,0xe1,0x59,0xdc,0x1d,0x98,0x2b,0xe8,0x97,0x23,0xd8,0xff,
    0xd3,0xbd,0xe4,0x78,0x82,0xfb,0x15,0xd4,0x2c,0xfb,0x95,0x79,0x39,0x56,0xe5,0xed,
    0x9b,0xd1,0x50,0xf8,0xcf,0x52,0x63,0x99,0xb1,0xaf,0x65,0x76,0x75,0xbf,0x85,0x3a,
    0xe4,0x19,0xec,0xe2,0x3e,0x6d,0xec,0xfb,0x38,0x27,0x3a,0x03,0x07,0x4d,0x3e,0xd9,
    0x1f,0x89,0xbb,0x6d,0x0b,0x85,0x7f,0x94,0x5c,0x05,0x86,0x7f,0x9c,0x33,0xa5,0xfb,
    0xd3,0x79,0x9a,0x9f,0xe5,0x8c,0x48,0xbd,0x17,0xc9,0x7d,0x94,0x7e,0x2f,0xf2,0x5e,
    0x49,0x47,0xed,0x0b,0x63,0x5f,0x05,0xe4,0x17,0xac,0x2f,0x20,0xa2,0x6f,0x96,0x79,
    0x9b,0xc8,0x4c,0x2d,0x0d,0x15,0xcb,0x3c,0x4d,0x02,0x9b,0x68,0xb4,0xdd,0xc8,0xac,
    0x3e,0x80,0xbd,0x2e,0x44,0x90,0x67,0x3d,0x8d,0x79,0x98,0x4a,0x3c,0xf1,0xa9,0x06,
    0x7f,0x35,0xf8,0xc8,0x7e,0x3a,0xbc,0x6a,0x78,0xb3,0x39,0xd7,0x95,0xcc,0x46,0x96,
    0x39,0x98,0x0b,0x7e,0x22,0xf8,0x0c,0x8d,0xbd,0x24,0x98,0xcc,0xc7,0xb5,0x50,0x79,
    0x96,0x7a,0xae,0x07,0xff,0x1a,0xde,0x03,0x59,0xfa,0x91,0xfb,0x65,0x81,0x27,0xda,
    0x2c,0x20,0xa7,0xfc,0xb6,0xa2,0x57,0x1d,0x78,0x63,0x50,0x5f,0x6a,0x1a,0xe5,0x13,
    0x4c,0xfd,0xfe,0x0a,0x31,0x34,0x96,0x5c,0x7b,0x83,0x16,0xe2,0x57,0xe5,0x13,0x9f,
    0x42,0x38,0xf3,0x4c,0x0f,0x0f,0xd3,0xc3,0x42,0xd3,0xc3,0x23,0xe0,0xda,0xc3,0x22,
    0x30,0xed,0xa1,0xc1,0xf4,0xb0,0x28,0xbe,0x9b,0x5c,0xc4,0x24,0x6f,0xbd,0xe9,0xe1,
    0x51,0x72,0x7b,0xd3,0xc3,0x62,0x70,0xed,0x61,0xb4,0x4f,0x30,0xf5,0x93,0x1e,0x34,
    0x56,0x83,0xe9,0x61,0x9a,0x4f,0x7c,0xb2,0x70,0xea,0x4d,0x0f,0x4b,0xe9,0x61,0x89,
    0xe9,0xe1,0x71,0x70,0xed,0x61,0x19,0x98,0xf6,0xd0,0x64,0x7a,0x58,0x16,0xeb,0x71,
    0x11,0x93,0xbc,0x8d,0xcc,0x91,0xe4,0x5d,0x4e,0xee,0x69,0x3e,0x77,0x3e,0xa5,0x46,
    0xf5,0x6d,0x32,0x35,0x56,0xe3,0xd7,0x00,0xaf,0x91,0x7a,0xe4,0x0c,0x3f,0xc9,0xf9,
    0xd5,0x99,0x7b,0x8a,0x9a,0x57,0x99,0x99,0x7b,0x1a,0x7c,0x3b,0x33,0xb7,0x1a,0xac,
    0xda,0x27,0x3c,0x39,0xd3,0xcf,0xc1,0x6b,0x86,0x27,0x9a,0xae,0x01,0x7f,0x26,0xd4,
    0x21,0x67,0xe1,0x79,0xf2,0xad,0xe6,0x7d,0xb0,0xc6,0x68,0xf5,0x02,0xfc,0xb5,0x46,
    0xab,0x17,0xc1,0x55,0xab,0x75,0x60,0xaa,0xd5,0x06,0xa3,0x95,0xd8,0xd6,0x87,0xb5,
    0x81,0xfe,0xd7,0xf3,0xbc,0x8b,0xe2,0xf9,0x4a,0x72,0x3b,0x78,0x57,0xb9,0xbf,0x11,
    0xee,0x25,0xd6,0xcf,0x70,0xe4,0xfa,0x25,0xb9,0x7e,0x81,0x37,0x04,0xce,0x9f,0x26,
    0x97,0xd8,0x2e,0x87,0x75,0x05,0xde,0x95,0xf8,0xbe,0x28,0x8e,0xb9,0x7e,0xe3,0x4c,
    0x8f,0x86,0x2f,0xff,0x5f,0xbb,0xa8,0xe3,0x77,0xec,0x62,0x7b,0x0d,0xec,0x0f,0xf0,
    0x31,0x3c,0xbf,0xab,0xc4,0xbc,0x6c,0x78,0xbf,0x12,0x2b,0x93,0xe7,0x23,0x35,0xdd,
    0x0a,0xd9,0xfa,0xc0,0x7a,0xa9,0x61,0xba,0x4f,0xe2,0x5e,0x81,0x7b,0x99,0xb9,0x96,
    0x67,0x30,0xd6,0x27,0x76,0xd5,0x43,0x35,0xda,0x84,0x46,0x9e,0x7e,0xbd,0xff,0xb7,
    0x46,0xbd,0xe4,0xec,0x35,0x1a,0x5d,0x83,0xa7,0x1a,0xe9,0x20,0x8a,0x46,0xd7,0xa2,
    0xbf,0xf0,0x13,0xde,0x0d,0xa3,0xd1,0x4d,0xa3,0xd1,0xa6,0x3c,0x8d,0xfe,0xc6,0x6e,
    0x35,0xba,0x05,0xae,0x1a,0x49,0x6d,0x12,0xb3,0xcf,0xf0,0xae,0x13,0x2b,0x93,0xe7,
    0x23,0x89,0x54,0x23,0xc1,0x54,0xa3,0x99,0x3e,0x89,0x7b,0x03,0x6e,0x9f,0xd1,0xa8,
    0xcc,0x27,0xf6,0xb1,0x9c,0x2d,0xd5,0x68,0x33,0x1a,0xa5,0xe8,0x37,0x93,0xa7,0x51,
    0x31,0x39,0xe5,0xaa,0x1a,0x0d,0xf4,0x09,0x4f,0x35,0x1a,0x61,0x34,0x12,0x5b,0x49,
    0x58,0x43,0xe0,0xc9,0x55,0x35,0x1a,0xe6,0x73,0x1a,0x6d,0xce,0xd3,0xa8,0xd4,0x27,
    0x76,0xab,0xd1,0x70,0x9f,0xe0,0xaa,0x51,0x86,0x98,0x12,0x5f,0x79,0x83,0xa9,0x25,
    0x93,0xe7,0x33,0xc2,0x68,0x94,0x31,0x1a,0xcd,0xf6,0x49,0xdc,0x58,0x17,0xb5,0xaa,
    0x46,0xe3,0x7c,0x62,0x17,0xad,0x52,0xc4,0xd3,0xb3,0xb7,0x81,0x59,0x14,0xbf,0xb9,
    0xcc,0x5a,0x13,0x9c,0x8c,0xcf,0x9d,0xf9,0x57,0x38,0xf3,0x5b,0xcc,0x99,0xdf,0x0a,
    0xae,0x67,0x7e,0x1b,0x98,0x9e,0xf9,0x1d,0xe6,0x1c,0x6e,0x8b,0xef,0x24,0xe7,0xf6,
    0x92,0x77,0xaf,0x79,0x9f,0xbc,0x41,0xec,0x7d,0x26,0xf6,0x7e,0x70,0x8d,0xfd,0x26,
    0x98,0xc6,0x6e,0x31,0xb1,0xc5,0x76,0x20,0xac,0x16,0x62,0x1f,0x30,0x73,0xf0,0x16,
    0x7d,0xc9,0xff,0xfd,0xe7,0xc4,0x7a,0x1b,0xfc,0x20,0x5a,0x28,0xaf,0x05,0x2d,0xc4,
    0xe7,0x1d,0x72,0xee,0xc5,0xff,0x00,0x79,0xdb,0x4c,0x5e,0xf1,0x69,0x0d,0xab,0x0d,
    0x7e,0xab,0xc9,0xfb,0xae,0xc9,0xbb,0x34,0x7c,0xc1,0xc8,0xb7,0xd1,0x7b,0x60,0x73,
    0x7d,0xee,0x7b,0x22,0x15,0xff,0x53,0x8a,0xa2,0xfd,0x10,0x3c,0x5d,0x7b,0x42,0x2c,
    0xc1,0x0f,0xc3,0x3d,0x14,0x63,0x0d,0x8c,0xcf,0xea,0x7d,0x62,0x1d,0xe6,0x9b,0xa6,
    0xd0,0x7c,0x7b,0x49,0x4f,0x5a,0x53,0x9b,0x79,0xbe,0xf3,0xc8,0xdd,0x02,0xbf,0x15,
    0xdf,0x1d,0xf8,0x6e,0x37,0xf5,0xef,0xfc,0x8f,0xfa,0x77,0xdf,0xa6,0xfe,0xfd,0xd4,
    0xb9,0x07,0x9f,0x9d,0xa6,0xce,0xd7,0xe1,0xec,0xb9,0x4d,0x9d,0x9a,0x7b,0x87,0xa9,
    0xb3,0xc6,0x27,0xb5,0xb6,0xc1,0xdf,0x4e,0x0e,0xb1,0x7d,0x80,0xfd,0x08,0xdf,0x62,
    0xf2,0xad,0x77,0x0c,0x5c,0xe7,0xe9,0x43,0xe6,0xe9,0xb8,0x99,0xa7,0x13,0xe0,0x3a,
    0x4f,0x1f,0x81,0xe9,0x3c,0xb5,0x9b,0xe7,0x2a,0xb6,0x93,0x61,0x9d,0xa2,0xb6,0x53,
    0x26,0xf6,0x27,0xc4,0x3e,0x6d,0x62,0x7f,0x0a,0xae,0xb1,0x3f,0x03,0xd3,0xd8,0x9d,
    0x26,0xb6,0xd8,0x3a,0xc2,0x3a,0x43,0xec,0x33,0x2e,0xf7,0xbf,0xfc,0x15,0xb1,0xcf,
    0x9a,0xff,0xe5,0xaf,0xc1,0xbf,0xe3,0x7b,0xe8,0x1b,0xb0,0x66,0x93,0xef,0x5b,0xf0,
    0x55,0xe4,0xeb,0x32,0xf9,0xc4,0x76,0x2e,0xac,0x2e,0xf2,0x9d,0xe3,0xdd,0x29,0xba,
    0x55,0xf8,0x84,0x73,0xcc,0xe5,0xbe,0x9b,0xd4,0xaf,0x8b,0xe7,0x21,0x7e,0x59,0x9f,
    0xf8,0x9c,0x81,0x73,0xce,0xd4,0xf3,0x3d,0xf5,0xcc,0x32,0xf5,0xfc,0x00,0xae,0xf5,
    0x74,0x9b,0x7a,0xc4,0x76,0x3e,0xac,0x6e,0xf2,0x9c,0x37,0xf5,0x4c,0xa1,0x9e,0xac,
    0x79,0x4f,0xa9,0x5f,0xb7,0xa9,0xa7,0xd6,0x27,0x3e,0x5d,0x70,0xce,0x9b,0x7a,0x7e,
    0xa4,0x9e,0xe3,0xa6,0x9e,0x9f,0xc0,0xb5,0x9e,0x1e,0x53,0x8f,0xd8,0x2e,0x84,0xd5,
    0x43,0x9e,0x0b,0xa6,0x9e,0xa9,0x3e,0xf9,0x9e,0xaf,0xf5,0xb9,0x79,0x55,0xbf,0x1e,
    0x53,0x4f,0x9d,0x4f,0x7c,0xba,0xe1,0x5c,0xc0,0xb7,0x13,0xdf,0x0e,0xf3,0x3d,0xfb,
    0x05,0x7a,0xa7,0x4d,0x9e,0x49,0x3e,0x87,0xbb,0x3c,0x6e,0xa7,0xc9,0xb3,0xc0,0x27,
    0xb9,0x7a,0xe0,0x74,0xe0,0xdb,0x8e,0xef,0x49,0xce,0x9d,0xf8,0x7e,0x4c,0xbc,0x63,
    0x9c,0xbb,0x62,0xce,0x6a,0x3a,0x8f,0xd3,0x6e,0xe2,0xcf,0xf7,0x49,0x8e,0x4e,0xf8,
    0x12,0xaf,0x36,0x30,0x2e,0x61,0xbb,0x19,0xa6,0x64,0x4e,0x58,0xff,0x00,0x2a,0xf8,
    0x97,0xf0,0x04,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2D src;
// layout(location = 0)out ivec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, params . srcOffset + srcSubImageCoords, params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            ivec4 dstValue = ivec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
