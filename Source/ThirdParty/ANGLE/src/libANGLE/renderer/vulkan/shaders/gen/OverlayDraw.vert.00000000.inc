// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/OverlayDraw.vert.00000000.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kOverlayDraw_vert_00000000[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x6d,0x95,0xeb,0x4e,0x93,0x41,
    0x10,0x86,0xb7,0x5f,0x6b,0x29,0x54,0x51,0x40,0xf0,0x04,0x28,0x54,0x90,0x5a,0x2d,
    0xad,0x80,0x9a,0x08,0x82,0x68,0xa2,0x01,0x44,0xd1,0x00,0xd1,0xc4,0x78,0x22,0xa8,
    0x31,0x54,0xe3,0x09,0xcf,0x22,0xfc,0xf1,0x8f,0x28,0x7a,0x17,0x7a,0x21,0x5e,0x91,
    0xf1,0x90,0x98,0x38,0xb3,0xdf,0xb3,0xc9,0xa4,0xa9,0xc9,0xba,0xdf,0xbc,0xf3,0xce,
    0xcc,0x3b,0xbb,0xd3,0x25,0x19,0xe5,0xea,0x9c,0x4b,0xb8,0x06,0x97,0x71,0x5f,0x5d,
    0xfc,0xaf,0xc9,0x45,0x82,0x38,0x97,0x75,0x69,0xbf,0x9f,0x9d,0xba,0x3c,0x55,0x7c,
    0xfc,0x64,0xa1,0x38,0x38,0x54,0x52,0x7f,0xa3,0x4b,0x7a,0x9e,0xfa,0xb6,0xba,0x7a,
    0xff,0x9d,0x92,0xb5,0x74,0xf3,0x5e,0x45,0xbf,0x33,0x3e,0xd6,0xb9,0x61,0x59,0x0f,
    0x35,0x5e,0xf8,0x19,0x1f,0xa7,0xdf,0x29,0xff,0xdd,0x49,0x2d,0xb5,0xb3,0xf0,0x0b,
    0xb2,0xce,0xb9,0x4d,0xae,0x19,0x5f,0x8e,0x3d,0x60,0x09,0xb0,0x8c,0xc1,0x22,0xb0,
    0xcd,0xd4,0x09,0x98,0xe6,0xed,0x96,0x3d,0x2d,0x6b,0x1b,0xfc,0x5c,0x8d,0xbc,0x39,
    0x93,0xd7,0xf2,0x42,0xde,0x7d,0x06,0x4b,0x82,0x95,0xc8,0xdf,0x43,0xfe,0x52,0x22,
    0xe6,0xf4,0x56,0xe5,0x57,0x3d,0xbd,0x46,0x4f,0x9f,0xec,0xdd,0xa6,0x6f,0xb5,0xbb,
    0x8c,0x5d,0xaa,0xd2,0x5b,0xae,0xa1,0xb7,0x5c,0x43,0x6f,0xb9,0x86,0xde,0x72,0x0d,
    0xbd,0x47,0x82,0xde,0x54,0xcc,0x19,0xa8,0xa1,0x77,0xc0,0xe8,0x1d,0xaa,0xd2,0x3b,
    0x84,0xde,0x04,0xf6,0x30,0xf7,0x76,0x90,0x9a,0x15,0xb8,0x59,0xa3,0xb7,0x02,0x3f,
    0xcb,0x1e,0xb0,0x08,0x2c,0x69,0xb0,0x24,0x58,0x0a,0x2d,0x81,0xd7,0x22,0xff,0x47,
    0xbe,0x76,0xd2,0x73,0xf4,0xbb,0x55,0x58,0x69,0xfa,0x75,0x7e,0x4f,0xb9,0x3a,0x72,
    0x28,0x7e,0x02,0x3b,0x03,0xa6,0xfc,0x7a,0xf8,0x09,0xf8,0x0d,0x7c,0xd7,0xc3,0x6f,
    0x30,0x3a,0x77,0x88,0xdd,0x48,0xae,0x14,0x76,0x13,0x76,0xe4,0xe7,0x37,0x9e,0xbf,
    0x80,0xa5,0xc9,0xd9,0x42,0xbe,0x66,0x72,0xaa,0xbd,0x1d,0xac,0x80,0x86,0x56,0xa3,
    0xa1,0x0d,0x5f,0xda,0xf3,0x22,0xb7,0x0b,0x9e,0xda,0xbb,0xe9,0xad,0x4d,0x3a,0xd8,
    0x8b,0x76,0xd5,0xa1,0xfb,0x5e,0x74,0x05,0x6e,0x17,0xf3,0xd0,0xce,0xdc,0x37,0x82,
    0x75,0x8a,0x37,0x87,0xbd,0x8f,0xbd,0xdb,0xc4,0xed,0x07,0x6f,0x67,0x9e,0x73,0x60,
    0x9d,0xcc,0x6e,0x0f,0x3a,0x0f,0xd0,0x77,0x2f,0x7d,0xa9,0xdd,0x07,0x16,0xfa,0xca,
    0x9b,0xbb,0x28,0xe0,0x6b,0x34,0xb5,0xfa,0x65,0x8d,0x51,0xab,0x84,0xaf,0x1f,0x8d,
    0xe5,0x2a,0x8d,0x25,0x78,0x3a,0xb3,0x65,0xa3,0x49,0xe7,0xf3,0x08,0x35,0x06,0xa9,
    0x31,0x80,0x26,0xb5,0x87,0xc0,0xc2,0x7d,0x0e,0x73,0xd6,0x41,0xe3,0xb8,0xd1,0xac,
    0x9a,0xe6,0xf1,0x6b,0xad,0x25,0xce,0x75,0x1e,0x4d,0x15,0xf4,0x28,0xb6,0xc4,0xd2,
    0xba,0x0f,0x98,0xa9,0x0a,0x75,0x1e,0xf0,0xce,0x25,0xb9,0x9f,0x47,0xc4,0x44,0xf0,
    0x9f,0x70,0xc7,0x4d,0xd4,0x55,0xdf,0x8b,0xf8,0xa8,0xc6,0x82,0xfd,0xca,0x9b,0x2b,
    0xa3,0xc1,0x7e,0x6b,0xce,0x72,0x95,0xdc,0xaa,0xe5,0x90,0xcc,0x9d,0xe6,0x5f,0x27,
    0x46,0xd7,0x51,0xc1,0x22,0xe6,0xc1,0xc1,0xfd,0x2d,0xc8,0x26,0xd9,0x47,0xe8,0x7b,
    0x33,0xb3,0xfd,0x9a,0xbe,0xb7,0x80,0x9d,0xe4,0x6d,0x56,0xfb,0x94,0x44,0xb4,0xf9,
    0x1e,0xe2,0x99,0x6d,0x25,0x5e,0xf9,0x3b,0xc1,0xbf,0x0b,0x47,0x67,0x74,0x0f,0x98,
    0xce,0xe8,0x2f,0xc9,0x11,0xde,0xf3,0xbf,0xc2,0x57,0x5f,0x87,0xac,0x22,0x3a,0x3a,
    0x4c,0x9e,0x83,0xfc,0x26,0x4f,0xc9,0xaf,0xb3,0xe0,0xfb,0x89,0xe7,0x28,0x8f,0x2f,
    0x0f,0x57,0x67,0xe0,0x30,0xfe,0x3f,0x92,0xa3,0x93,0x5c,0x45,0x93,0xeb,0x68,0x55,
    0xae,0x63,0xdc,0x7f,0x1e,0x9f,0xcd,0x75,0x1c,0xbf,0xcd,0xa5,0xfb,0x4f,0x89,0x55,
    0xff,0x27,0xea,0x75,0xc0,0x2d,0x9a,0xb3,0x1b,0x61,0x8e,0x7e,0x48,0xef,0xf5,0xfe,
    0xcc,0x62,0x4c,0xcf,0xe7,0x1b,0xe7,0x31,0x0a,0x9e,0x37,0xbc,0xd3,0xf0,0xc6,0x0d,
    0xef,0x0c,0x78,0x9e,0x73,0x9b,0x34,0xe7,0xa6,0x39,0x26,0x64,0x4d,0xa3,0x4f,0xbf,
    0x67,0x24,0x4e,0x7b,0x3d,0x8f,0x46,0x47,0x0f,0x93,0x70,0xa6,0x0d,0x67,0x06,0x4e,
    0x54,0xc5,0x99,0xa4,0x4f,0xe5,0x7c,0x26,0xd7,0x04,0xfc,0x69,0x74,0xcc,0x19,0x1d,
    0xaa,0x71,0x56,0xd6,0x55,0xe2,0x67,0x4d,0x8d,0x2b,0xd4,0x48,0x50,0x63,0x0e,0xce,
    0x55,0xc3,0xb9,0x06,0x27,0x59,0xc5,0x99,0x33,0x3a,0x36,0xc8,0x35,0x0b,0x5f,0xe3,
    0x2f,0x4a,0xbc,0xfe,0x46,0xae,0xa3,0x73,0xc3,0xcc,0xe4,0x0d,0x66,0x72,0xdc,0xdc,
    0xff,0x4d,0xf0,0x30,0x93,0xb7,0xc0,0xc2,0x4c,0x2e,0x98,0x9e,0xd4,0x77,0x5b,0xd6,
    0x02,0x5a,0xf4,0xfb,0x82,0x68,0xd1,0x7a,0x8b,0xd4,0xbc,0x4e,0x5f,0xce,0xd7,0x4d,
    0xfb,0xba,0x77,0xa8,0x9b,0x27,0x6f,0xa8,0x7d,0x17,0xdf,0x2a,0x3d,0xdf,0x07,0x53,
    0xcd,0x97,0x04,0xd1,0xbc,0x1f,0xc1,0x17,0xcd,0xbd,0x85,0xfa,0x0b,0x9c,0x85,0xf2,
    0xbe,0x50,0x7b,0x8e,0x98,0xdb,0xfe,0x3d,0x89,0xdf,0x91,0xc7,0xf8,0xf5,0x1c,0xf4,
    0x1d,0x79,0x6a,0xf4,0x8c,0xf0,0x37,0xe9,0x19,0x78,0x88,0x59,0x06,0xfb,0xc0,0x5b,
    0xf1,0x9c,0x3c,0xcb,0xfe,0xdd,0x88,0xb1,0x97,0xe0,0xfa,0x0e,0xad,0x81,0xbd,0x01,
    0x5f,0xe7,0x2e,0xf5,0x1d,0x7a,0x07,0xee,0x0c,0xb6,0x02,0x96,0xf0,0x77,0x56,0xe7,
    0xdf,0xa5,0xf7,0x70,0x57,0x78,0xbb,0x5e,0xa1,0x79,0xd5,0xe7,0x8f,0xdf,0xc7,0x3c,
    0xef,0xcd,0x1a,0xfc,0x7f,0x92,0xe1,0xb8,0xac,0xff,0xb4,0x0b,0x50,0xe7,0x84,0x0a,
    0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_GOOGLE_include_directive : require
//
// #line 1 "shaders/src/OverlayDraw.inc"
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// struct TextWidgetData
// {
//     uvec4 coordinates;
//     vec4 color;
//     uvec4 fontSize;
//     uvec4 text[256 / 16];
// };
//
// struct GraphWidgetData
// {
//     uvec4 coordinates;
//     vec4 color;
//     uvec4 valueWidth;
//     uvec4 values[256 / 4];
// };
//
// layout(set = 0, binding = 0)uniform TextWidgets
// {
//     TextWidgetData textWidgetsData[32];
// };
//
// layout(set = 0, binding = 1)uniform GraphWidgets
// {
//     GraphWidgetData graphWidgetsData[32];
// };
//
// layout(set = 0, binding = 2)uniform texture2DArray font;
//
// layout(push_constant)uniform PushConstants
// {
//     uvec2 viewportSize;
//
//     bool isText;
//
//     bool rotateXY;
// } params;
// #line 17 "shaders/src/OverlayDraw.vert"
//
// layout(location = 0)flat out uint widgetIndex;
//
// void main()
// {
//     widgetIndex = gl_InstanceIndex;
//     const uvec4 widgetCoords = params . isText
//         ? textWidgetsData[widgetIndex]. coordinates
//         : graphWidgetsData[widgetIndex]. coordinates;
//
//     bool isLeft =(gl_VertexIndex & 1)== 0;
//     bool isBottom =(gl_VertexIndex & 2)== 0;
//
//     uvec2 position = uvec2(isLeft ? widgetCoords . x : widgetCoords . z,
//                            isBottom ? widgetCoords . y : widgetCoords . w);
//
//     if(params . rotateXY)
//     {
//
//         position = position . yx;
//         position . x = params . viewportSize . x - position . x;
//     }
//
//     gl_Position = vec4((vec2(position)/ vec2(params . viewportSize))* 2. - 1., 0, 1);
// }
