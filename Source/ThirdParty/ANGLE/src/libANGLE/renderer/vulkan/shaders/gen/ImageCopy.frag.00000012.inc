// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000012.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000012[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x8d,0x77,0xce,0x65,
    0x18,0xc7,0x7f,0x7b,0x9e,0x67,0xcf,0xc3,0xcc,0x4c,0x16,0xd2,0x74,0xb6,0x91,0xd4,
    0x34,0xab,0xe6,0x75,0x1e,0x1a,0x65,0x94,0x11,0xb3,0x48,0x4a,0x2b,0xc5,0xd2,0x14,
    0x53,0x56,0x31,0x4c,0xb2,0x25,0x09,0x15,0xa5,0x28,0x11,0x59,0xb4,0x8a,0x2c,0x54,
    0x54,0x4c,0x6f,0xa8,0x4c,0xe5,0xad,0xfe,0x89,0x4e,0x2f,0xe7,0xf4,0x72,0x5f,0xbf,
    0x7d,0xae,0xa7,0xeb,0xfc,0x8e,0x53,0x3b,0xe7,0x3e,0xbf,0xe7,0xfa,0x5e,0xd7,0xfd,
    0xbd,0xbf,0xd7,0x75,0xdd,0xf7,0xfd,0x7b,0x9e,0x85,0x43,0x3d,0x62,0x9e,0x97,0xe4,
    0xa5,0x78,0x6d,0xbc,0x9f,0xbd,0xd6,0xbf,0x8e,0x5e,0xc8,0x21,0x9e,0xd7,0xce,0x8b,
    0xfa,0xcf,0xe2,0x31,0xa5,0x63,0xf2,0xaa,0xe6,0x4d,0xcf,0x2b,0xe8,0x97,0x2f,0xfe,
    0x34,0x2f,0xec,0xc7,0x89,0xaf,0x83,0x17,0xf3,0x22,0xee,0x29,0xa3,0xb2,0xbc,0x62,
    0xb6,0xe0,0xbd,0xdc,0x38,0xef,0x46,0xba,0x8b,0x13,0x3c,0x26,0x1c,0xee,0x53,0x2f,
    0x9f,0x53,0xe6,0x78,0xde,0x28,0x2f,0xd9,0xeb,0xc3,0x7a,0x3d,0x78,0x2a,0x96,0x04,
    0xd6,0xc6,0x60,0x21,0xb0,0x74,0x83,0x85,0xc1,0x32,0x0c,0x16,0x01,0xeb,0x6a,0xb0,
    0x64,0xb0,0x4c,0x83,0x45,0xc1,0xb2,0x0c,0x16,0x03,0xeb,0x69,0xb0,0x36,0x60,0xbd,
    0x0d,0xd6,0x16,0xac,0x8f,0xc1,0x52,0xc0,0xf2,0x0d,0xd6,0x0e,0xac,0xc0,0x60,0xa9,
    0x60,0x03,0x0d,0xd6,0x1e,0x6c,0x88,0x5f,0xa7,0x70,0x22,0x5f,0xa9,0xd9,0x14,0xf7,
    0xcc,0xa1,0x3e,0x6a,0x67,0x1b,0x5b,0xea,0x7c,0x19,0x76,0x27,0x37,0x2b,0xe4,0xfb,
    0xc3,0x7e,0x6d,0xe4,0x73,0x67,0xf7,0x29,0x4a,0x9e,0x59,0x2e,0x3e,0x46,0x9e,0x51,
    0x3f,0x2e,0xe2,0xe7,0x17,0x05,0xcb,0x75,0x76,0x14,0x3d,0x99,0x79,0x25,0x85,0x19,
    0x8e,0x21,0xcd,0xe0,0x9d,0xdc,0x98,0xd0,0x34,0xb6,0x48,0x6d,0xa9,0x71,0x59,0x59,
    0xcb,0x50,0xb5,0xbb,0xb9,0x11,0x4f,0x59,0x3e,0x4c,0x6d,0xa9,0xf7,0xae,0xe2,0xf2,
    0xf8,0xc5,0xce,0xce,0x42,0x83,0xf4,0xb6,0x8b,0xb3,0xb3,0xb1,0x43,0xe8,0xca,0x41,
    0x43,0x36,0xfe,0x9e,0xe8,0x8a,0xe0,0xbf,0x9c,0xb9,0x82,0x17,0x62,0xf7,0x32,0x7c,
    0x57,0x10,0x2f,0x7c,0xb2,0x5e,0x2e,0xfc,0x9e,0x5f,0x9f,0x74,0xbf,0xa6,0xd9,0x0c,
    0xd5,0x92,0xfb,0x3f,0x23,0x2b,0xf1,0x8c,0x78,0x57,0xd3,0xf7,0x3e,0xac,0x2f,0x76,
    0x1e,0x58,0x2e,0xf9,0xf5,0x45,0x8f,0xc4,0xe7,0xe3,0xcb,0x36,0xfe,0xfe,0x26,0x9f,
    0x01,0x89,0xb9,0xad,0x7e,0x79,0x0e,0x46,0xaf,0xf8,0x87,0x52,0x8f,0x2c,0x33,0x7f,
    0x04,0x7b,0x59,0xe3,0x47,0xb3,0x9e,0xfa,0xc7,0xd2,0x3b,0x99,0x7f,0x2b,0xf3,0xa5,
    0x5e,0x97,0xb8,0x95,0x26,0x53,0x9f,0x24,0xd6,0x08,0x3e,0x65,0xce,0x6d,0x7c,0x9e,
    0x4c,0x8e,0x62,0x4f,0x01,0xd3,0x35,0xa6,0x06,0xec,0x72,0xce,0xa1,0xcc,0xbf,0x9b,
    0x9c,0xb2,0xe8,0xc9,0xbd,0x7c,0x0e,0x9b,0xf8,0x0a,0x7a,0xa4,0x76,0x25,0x67,0x47,
    0x73,0xaa,0x09,0xf8,0x97,0xa2,0x5b,0xfd,0xf5,0xf0,0x09,0xff,0xd3,0xf8,0x2c,0xff,
    0xda,0xc0,0x5e,0xde,0x60,0xf4,0x8a,0xbd,0xdd,0xb7,0x16,0x8d,0x90,0xf9,0x0d,0xd4,
    0x5f,0x7b,0xf2,0x16,0x73,0x1b,0x0c,0x5f,0x23,0x77,0x80,0xc4,0xbf,0x4f,0xbc,0xd5,
    0x77,0x20,0x91,0x73,0xc4,0xfb,0x24,0xb1,0xf6,0xbf,0xfe,0xa3,0x9c,0x79,0xf1,0x9f,
    0x43,0x6b,0x03,0xf5,0x3d,0xc7,0x3d,0x19,0xf6,0xf7,0x46,0xb2,0xcf,0x1b,0x41,0xaf,
    0x60,0xbf,0x39,0x24,0x99,0xd8,0x1c,0xee,0x88,0x98,0xb1,0x0b,0x8c,0x2d,0xfd,0x9e,
    0x64,0x6c,0x79,0x56,0x05,0xec,0xea,0x80,0xbd,0xd0,0xd8,0x92,0xfb,0x4e,0x63,0xcb,
    0xfe,0x6b,0xc6,0x8e,0x73,0x1e,0x7b,0x73,0xe6,0xc6,0x39,0x54,0xce,0xdb,0x95,0x60,
    0xbd,0xcd,0x5e,0x9a,0xcd,0xd9,0xbe,0x0a,0x7f,0x91,0xcb,0x40,0xce,0xc2,0x35,0x9c,
    0x97,0xbe,0xf0,0x49,0xcc,0xb5,0xe0,0xb5,0x2e,0x46,0xec,0xeb,0x98,0x27,0xf8,0x50,
    0x57,0x81,0x1e,0x60,0x1a,0xdf,0x8f,0x1a,0x88,0xaf,0x00,0x5b,0xf8,0x07,0x70,0x9f,
    0xe6,0x71,0xc6,0xe2,0xec,0x95,0x41,0xe0,0x0d,0x2e,0x26,0xcd,0xcf,0xab,0x15,0x93,
    0x73,0xf6,0xab,0xe3,0x88,0xa3,0xfb,0x0f,0x17,0x5f,0xc8,0xfd,0x1b,0xa7,0xee,0x43,
    0xe0,0x96,0x3a,0x0c,0xa3,0xd6,0x83,0xe1,0x96,0xbe,0x5e,0x0f,0x5e,0x83,0x5d,0x04,
    0xa6,0x73,0x86,0x9b,0x39,0xa2,0x77,0x38,0x31,0xbf,0x3b,0x6e,0x5d,0x23,0x6e,0xf4,
    0xdf,0x80,0xfe,0x11,0x46,0xff,0x8d,0xe0,0xaa,0x7f,0x24,0x98,0xea,0x1f,0x65,0xf4,
    0x8f,0xf4,0xdf,0x07,0x9e,0x8f,0x09,0x77,0xb1,0xd1,0x72,0x13,0x5a,0x46,0x1b,0xfd,
    0x37,0x83,0xab,0xfe,0x31,0x60,0x3a,0xa7,0xc4,0xcc,0x11,0xfd,0x25,0xc4,0x88,0x7e,
    0x5d,0x63,0x94,0xd1,0x3f,0x0e,0xfd,0x63,0x8d,0xfe,0x5b,0xc0,0x55,0xff,0x78,0x30,
    0xd5,0x5f,0x6a,0xf4,0x8b,0x6f,0x82,0x1b,0xa5,0x70,0x4f,0x30,0x7d,0x9f,0x88,0x16,
    0xd9,0x77,0x62,0x97,0x81,0x4d,0x34,0xf7,0x97,0xee,0x89,0x32,0x34,0x2a,0x4f,0x29,
    0x3c,0x72,0xa7,0xdd,0xce,0x7d,0xa6,0x7b,0xf2,0x0e,0x34,0x4f,0x35,0x6b,0xdd,0x09,
    0xae,0xf6,0x34,0xd6,0x5e,0xcc,0x1e,0xbd,0x8b,0x98,0x69,0xf0,0xc8,0x9d,0x77,0x0f,
    0x3c,0xe5,0xa6,0xbe,0xd3,0xc1,0xc7,0xbb,0x18,0xb1,0xef,0x63,0xae,0x67,0xb0,0x19,
    0x60,0x49,0x7e,0x5d,0xa2,0xfe,0x7d,0x39,0x93,0xd8,0x19,0x70,0xe8,0x1a,0xf7,0xb3,
    0x46,0x85,0x59,0x63,0x16,0xf8,0x34,0x57,0x17,0x39,0x9f,0x0f,0x90,0xe3,0x4c,0xee,
    0xa8,0x59,0xd4,0x65,0x12,0x3e,0xed,0xd5,0x6c,0xb8,0x2a,0x4d,0xaf,0x1e,0x04,0xd7,
    0x5e,0x3d,0x04,0xa6,0xbd,0x9a,0x6b,0x7a,0x25,0xbe,0x39,0x6e,0xcc,0xa5,0xc6,0x73,
    0xe0,0x96,0xbb,0x62,0x1e,0xf7,0x90,0x9e,0x15,0xb9,0x73,0x1f,0x06,0x17,0x2d,0x55,
    0xd8,0x83,0x5c,0xbc,0xf8,0x1e,0xe1,0xfe,0xaf,0x32,0x1c,0xf3,0x0d,0x87,0xcc,0x99,
    0x4f,0x9c,0xfa,0x1f,0xc5,0x3f,0xda,0xac,0xf1,0x18,0xb8,0xc4,0x57,0x63,0xeb,0x1a,
    0x8f,0xb3,0x46,0xb5,0xe1,0x58,0x60,0x38,0x64,0xce,0x02,0xe2,0xd4,0xbf,0x08,0x7f,
    0x8d,0x59,0x63,0x31,0xb8,0xc4,0x2f,0xc4,0xd6,0x35,0x96,0xb0,0xc6,0x42,0xc3,0x51,
    0x6b,0x38,0x64,0x4e,0x2d,0x71,0xb2,0x3f,0xb5,0x76,0x73,0x4d,0x5f,0x9e,0xa0,0x2f,
    0x4b,0x4d,0x5f,0x96,0x81,0x6b,0x5f,0x9e,0x04,0xd3,0xbe,0xd4,0x99,0xbe,0x88,0x6f,
    0xb9,0x1b,0x6b,0xe0,0x5e,0x6e,0xb4,0x3c,0x85,0x96,0x7a,0x93,0xcf,0x0a,0x70,0xbd,
    0xdf,0x57,0x12,0x33,0xce,0xbd,0xf1,0xe4,0xdd,0xfa,0x0c,0xd8,0x4a,0x73,0xbf,0x87,
    0x7c,0x3c,0xd9,0xf7,0xaf,0x22,0x66,0x85,0xe1,0x78,0x36,0xc1,0xd1,0xd6,0xb7,0x57,
    0x83,0xad,0xe2,0xdd,0x96,0x6c,0xde,0xd9,0xba,0x37,0x57,0x53,0x93,0x3a,0x74,0xaf,
    0x31,0x35,0x79,0x8e,0x9a,0xac,0x35,0x35,0x79,0x1e,0x5c,0x6b,0xf2,0x02,0x98,0xd6,
    0x64,0xbd,0xa9,0x89,0xf8,0xd6,0xb9,0xb1,0x1e,0xee,0x75,0xa6,0x26,0x2f,0x5e,0xa0,
    0x26,0x2f,0x81,0xef,0x83,0xfb,0x65,0xb0,0x0d,0x68,0x54,0x1e,0x79,0xfe,0xe2,0x58,
    0x24,0xe6,0x15,0x34,0xac,0x21,0x7e,0x1d,0x3a,0x36,0x19,0x1d,0x12,0xb3,0xd1,0x8d,
    0x4d,0xcc,0xdf,0x68,0x74,0xbc,0x7a,0x01,0x1d,0xaf,0x81,0x6b,0x5d,0x37,0x07,0x7a,
    0xf3,0x3a,0xd8,0xe6,0x40,0x6f,0xe4,0x1e,0x11,0xff,0x16,0x38,0x74,0xd4,0xd1,0xb3,
    0xad,0xcc,0xdd,0x62,0xb8,0xdf,0x08,0xf4,0x6c,0x1b,0xd8,0xd6,0xff,0xe8,0xd9,0x36,
    0xea,0xa1,0xf9,0x6c,0x0a,0xf4,0xb0,0xce,0xf0,0xbf,0x09,0xbf,0xec,0x1b,0xb1,0x77,
    0x80,0x6d,0x37,0x7c,0x3b,0x4c,0xfc,0x2e,0xe2,0x2b,0xf9,0x8e,0xf6,0x36,0x98,0xc4,
    0xee,0xc4,0xd6,0xfd,0xf1,0x0e,0xfb,0xa3,0xd1,0xec,0x8f,0x77,0xc1,0x75,0x7f,0xbc,
    0x07,0xa6,0xfb,0x63,0x8f,0xe9,0x8b,0xf8,0x76,0xbb,0xb1,0x1f,0xdd,0xbb,0xe1,0x91,
    0x75,0xf7,0xf2,0x9d,0x48,0xde,0x3b,0xf2,0xdd,0xaf,0x09,0x6c,0xaf,0xf9,0x8e,0xa6,
    0xb1,0x1f,0x24,0x62,0xdb,0xfa,0xf6,0x3e,0xb0,0x26,0x53,0xc3,0x90,0xa9,0xe1,0x4e,
    0x62,0xa4,0x66,0x7b,0x58,0x7b,0xbf,0xc9,0xeb,0x43,0xf2,0x3a,0x60,0xf2,0xfa,0x08,
    0x5c,0xf3,0xfa,0x18,0x4c,0xf3,0x3a,0x64,0xf2,0x12,0xdf,0x41,0x37,0x8e,0xc0,0x7d,
    0x10,0x6e,0xf9,0x8e,0xfa,0x29,0x5a,0xeb,0x0d,0xf7,0x67,0xe0,0x1a,0x73,0x98,0x18,
    0xbd,0x83,0x0f,0x13,0x23,0x7a,0x0f,0xc1,0x79,0xc4,0xbc,0x9f,0x3e,0x47,0xef,0x51,
    0xf3,0x7e,0xfa,0x02,0x5c,0xe6,0x37,0x63,0xab,0xef,0x4b,0xbe,0x5f,0x36,0xf3,0x2e,
    0xfc,0x0a,0xac,0xc2,0xe4,0xf7,0x35,0xf8,0x54,0xf2,0x3b,0x6e,0xf2,0x13,0xdf,0x31,
    0x37,0x8e,0xa3,0xe5,0x98,0xd1,0x7e,0x02,0xed,0x7a,0xb7,0x9f,0x20,0x0f,0xd1,0xae,
    0xf1,0xc7,0x8d,0x96,0x6f,0x02,0x5a,0xbe,0x05,0xeb,0x6f,0xb4,0x7c,0x07,0xae,0x5a,
    0x5a,0x8c,0x16,0xf1,0x9d,0x74,0xa3,0x05,0xee,0x93,0x46,0xcb,0x29,0xb4,0xe8,0x3b,
    0xe0,0x94,0xd1,0xa2,0xf1,0x2d,0x46,0xcb,0xf7,0x01,0x2d,0x3f,0x80,0x35,0x1a,0x2d,
    0x3f,0x82,0xab,0x96,0x33,0x46,0x8b,0xf8,0x4e,0xbb,0x71,0x06,0xee,0xd3,0x46,0xcb,
    0x59,0xd3,0x77,0xd1,0x72,0x96,0x1a,0x89,0x16,0x8d,0x3f,0x13,0xe8,0xf1,0xa1,0xc0,
    0x1e,0xdd,0x63,0xf6,0xfc,0x4f,0xf0,0x09,0xd7,0x79,0xec,0x3f,0xdd,0x4d,0x34,0xd0,
    0x8d,0xfe,0xbc,0x17,0x53,0xd0,0x26,0xbf,0xa1,0x06,0xb8,0xb8,0x18,0xbf,0x97,0x84,
    0xab,0x9d,0xb9,0xef,0x52,0xc1,0x0f,0x90,0x63,0x07,0xb0,0xf6,0xe4,0xd8,0xd1,0xe4,
    0xd8,0x81,0xff,0x03,0x75,0x86,0x27,0xdd,0xf0,0x5c,0x04,0xcf,0x32,0xd6,0xcf,0x00,
    0x93,0xff,0x5d,0xfc,0xe5,0x62,0x33,0x98,0xd3,0xd9,0xcc,0xe9,0xc2,0x9c,0x54,0xa7,
    0x2e,0xea,0xff,0x5e,0x6e,0xbd,0x4f,0xbb,0xe1,0xeb,0x6a,0xf8,0x2e,0xc5,0xdf,0xcd,
    0x7f,0x4f,0xb7,0x62,0xdd,0xc1,0x33,0x59,0xa3,0x3b,0x6b,0x88,0xe6,0xbf,0xa9,0xc7,
    0x3f,0x0b,0x19,0x21,0xaa,0x68,0x13,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DArray src;
// layout(location = 0)out uvec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            uvec4 dstValue = uvec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
