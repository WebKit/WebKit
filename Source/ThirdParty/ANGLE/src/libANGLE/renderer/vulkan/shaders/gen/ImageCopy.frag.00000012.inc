// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000012.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000012[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x7d,0x97,0x6b,0x6f,0x55,0x45,
    0x14,0x86,0xf7,0x9c,0x73,0x7a,0xa1,0x08,0x56,0x0b,0x08,0xa5,0x31,0xad,0x60,0x05,
    0xa9,0x05,0x11,0xb9,0x95,0x22,0xd7,0xb6,0x08,0x82,0xb4,0x21,0x41,0xc4,0x4b,0x15,
    0x85,0xca,0x45,0x41,0xfd,0xc2,0x07,0x25,0x22,0x96,0x04,0x03,0x11,0x54,0x1a,0x51,
    0x1a,0x23,0x44,0x62,0x13,0x41,0x85,0xc4,0x08,0x2a,0x4d,0x0c,0xa2,0x51,0x9a,0x28,
    0x4d,0x94,0x06,0x7e,0x01,0x91,0x48,0x44,0xaa,0x46,0x74,0xd6,0xcc,0xb3,0x7a,0x96,
    0x47,0xb1,0xc9,0x64,0xef,0x79,0xd7,0xfd,0x9d,0xb5,0xe6,0xec,0xa6,0x53,0x23,0x0a,
    0x92,0xc4,0x25,0x45,0x49,0x61,0x32,0xdf,0x25,0xe1,0xef,0xba,0x24,0x95,0xc8,0x6b,
    0xff,0x24,0x3f,0x3c,0xeb,0x17,0x34,0x2d,0xa8,0x7e,0xfa,0x99,0x15,0xd5,0x13,0xee,
    0x1c,0x27,0xf2,0x81,0x49,0x3a,0xe8,0x89,0xec,0xda,0xa4,0x20,0xc9,0xf8,0xa7,0xac,
    0xb5,0xcd,0x2d,0xeb,0x04,0xaf,0xf4,0xeb,0x9c,0x5f,0xc5,0x5e,0x4f,0xf0,0x02,0xf1,
    0xe1,0xdf,0x2a,0x83,0x4f,0xb1,0x49,0x92,0x86,0x24,0x2f,0xa9,0x8a,0xe1,0x92,0x11,
    0x3c,0x15,0x73,0x60,0x85,0x06,0x4b,0x81,0x15,0x1b,0x2c,0x0d,0x36,0xc8,0x60,0x19,
    0xb0,0xa1,0x06,0xcb,0x03,0x2b,0x33,0x58,0x3e,0x58,0xb9,0xc1,0x0a,0xc0,0x46,0x1a,
    0xac,0x10,0x6c,0x94,0xc1,0xfa,0x81,0x55,0x19,0xac,0x08,0x6c,0x9c,0xc1,0xfa,0x83,
    0x4d,0x30,0xd8,0x35,0x60,0x93,0x0d,0x36,0x00,0x6c,0x5a,0xe0,0x29,0xdd,0x57,0xaf,
    0x70,0xb6,0xcc,0x3f,0x6f,0x82,0x1f,0xdd,0x57,0x98,0xbd,0xf0,0x7c,0x23,0xfb,0x12,
    0x6f,0x95,0x0a,0xf2,0x74,0xe0,0x46,0xde,0x87,0xf8,0xb7,0x7c,0xea,0x1c,0xe3,0xf5,
    0xf3,0x89,0x57,0x56,0x7d,0x4f,0xcd,0x20,0xaf,0x31,0xd0,0xe0,0x25,0x7e,0x35,0x7e,
    0xbc,0x70,0xa6,0xee,0x85,0xc3,0x25,0x4b,0xba,0xa7,0xeb,0xbe,0xd4,0xaf,0xda,0xa2,
    0xd6,0xbb,0x74,0x2f,0x7c,0xbe,0x5f,0xdf,0x5c,0x3b,0xd8,0xef,0xcb,0x89,0x21,0x67,
    0x77,0x83,0xdf,0x57,0xb0,0x4f,0xb1,0x1f,0x09,0xe7,0x99,0x80,0x67,0x92,0x9b,0xd1,
    0x15,0xbc,0x86,0x7d,0xa5,0xb1,0xbf,0x05,0x7d,0xb1,0x17,0xff,0x63,0xf0,0x97,0x84,
    0x7a,0x8b,0x03,0x47,0x15,0xac,0xf2,0xbe,0xfa,0xfe,0x7f,0x95,0xf7,0x3d,0x33,0xc9,
    0x6d,0x9c,0x63,0x15,0xf1,0x65,0x5f,0x0d,0x36,0x86,0x7a,0xc6,0x92,0x8f,0xe8,0x8f,
    0x43,0x56,0x61,0xe4,0x13,0x4d,0x3d,0x93,0xfa,0x6c,0xa3,0x5c,0x9e,0x53,0xc9,0x57,
    0xf5,0x67,0xd3,0x8b,0x2a,0x9f,0x87,0x7f,0x95,0x2f,0xe4,0x6c,0x86,0x79,0x4f,0x4b,
    0xa9,0x9f,0x91,0xfc,0xd7,0x53,0x62,0xde,0xc7,0xfb,0x52,0x6a,0x90,0xfd,0xb2,0x9c,
    0x98,0xcb,0x73,0xf6,0xcd,0xcc,0x8d,0xd8,0x3f,0x42,0xce,0xe5,0x70,0xfe,0x18,0xef,
    0x69,0xa3,0xdf,0xc2,0x19,0xe8,0x7e,0x2d,0xbd,0xae,0xfb,0xcd,0xe4,0x29,0xf6,0x2f,
    0xf3,0x6e,0xed,0x77,0x31,0x57,0xda,0x33,0x7b,0x4c,0x3e,0xb2,0x3f,0x10,0x76,0xcf,
    0xcf,0x16,0xfb,0x0e,0xf8,0xcb,0x18,0xfb,0x43,0xcc,0xa0,0xee,0x8f,0xe5,0x9c,0xd1,
    0x49,0x66,0x4a,0xea,0x39,0x4b,0xec,0x0e,0xf8,0x38,0xcb,0x3d,0x94,0x0e,0x67,0x95,
    0x17,0xea,0xc8,0x10,0x5f,0xb0,0x5e,0x8f,0xc8,0x79,0xd4,0xd2,0x9f,0xa3,0xe8,0xc1,
    0x45,0x3e,0x63,0xe9,0xbf,0xd1,0x60,0xa3,0x0c,0xf7,0xeb,0xe8,0xed,0x5b,0x91,0xcf,
    0xf4,0x1e,0xa4,0x37,0x6e,0xa7,0x7f,0xc6,0xe2,0x4f,0x74,0xc6,0x83,0xbf,0xe0,0x75,
    0x64,0x7f,0x07,0x76,0xe3,0xb1,0x9b,0xc4,0x3d,0x50,0x4d,0x2f,0xd5,0xd2,0x17,0x53,
    0xc0,0x3b,0xbc,0xce,0xc0,0x50,0x4b,0xc4,0xa4,0x9f,0x2e,0xfb,0xcc,0x6b,0xc9,0xe7,
    0x77,0xaf,0x5f,0xc3,0xbd,0x51,0x4b,0x3d,0xf2,0xbe,0xd8,0xdb,0x09,0x37,0x33,0x88,
    0x29,0x7f,0xcf,0xc1,0xd7,0x4c,0xf0,0x46,0xcf,0x7e,0x98,0x1d,0x17,0x31,0xd5,0xfb,
    0xcd,0xfb,0x50,0x5f,0xf2,0xbc,0xe4,0xb9,0x10,0xbd,0x29,0x2e,0xea,0xe4,0x61,0x33,
    0xcd,0xd4,0x30,0x87,0x1a,0x66,0x9b,0x1a,0xe6,0x82,0x6b,0x0d,0x75,0x60,0x5a,0x43,
    0x83,0xa9,0xa1,0x2e,0xdc,0x65,0x49,0xc0,0x24,0x6e,0xbd,0xa9,0x61,0x3e,0xb1,0x9d,
    0xa9,0x61,0x01,0xb8,0xd6,0x30,0xc2,0x45,0x4c,0xf5,0xa4,0x06,0xf5,0xd5,0x60,0x6a,
    0x98,0xea,0xa2,0x4e,0x2d,0x36,0xf5,0xa6,0x86,0x45,0xd4,0xb0,0xd0,0xd4,0x70,0x2f,
    0xb8,0xd6,0xb0,0x18,0x4c,0x6b,0x68,0x32,0x35,0x2c,0x0e,0xf9,0x24,0x01,0x93,0xb8,
    0x8d,0xf4,0x91,0xc4,0x5d,0x42,0xec,0xa9,0x2e,0x3b,0xbf,0x92,0xa3,0xea,0x36,0x99,
    0x1c,0x6b,0xd0,0x6b,0xc0,0xae,0x91,0x7c,0x64,0xc6,0xef,0x67,0xbe,0xb5,0xe7,0x1e,
    0x20,0xe7,0xe5,0xa6,0xe7,0x1e,0x04,0xdf,0x44,0xcf,0x3d,0x0c,0x56,0xe3,0xa2,0x9d,
    0xcc,0xfc,0xa3,0xd8,0x35,0x63,0x27,0x9c,0xae,0x00,0x57,0xde,0x1f,0xc7,0x36,0x31,
    0xd8,0x4a,0x30,0x17,0x78,0xc8,0x0f,0xf7,0xc5,0x2a,0x74,0x57,0xe2,0x43,0x63,0x3c,
    0x41,0x8c,0x16,0x13,0x63,0x35,0xf8,0x43,0xbe,0x56,0x99,0xb7,0x35,0xd4,0xb4,0x8a,
    0x3b,0x66,0xb5,0x39,0x8f,0x75,0xd8,0xaf,0x35,0xe7,0xf1,0x24,0xb8,0x9e,0xc7,0x53,
    0x60,0x7a,0x1e,0x1b,0xcc,0x79,0x88,0x6c,0xbd,0x5f,0x1b,0xe0,0x78,0x3d,0x75,0xc8,
    0x9d,0xf3,0x2c,0xb1,0x13,0xec,0x7a,0x79,0xff,0xc3,0xbf,0x8b,0xaf,0xf3,0xd8,0x9c,
    0x0f,0xf7,0x4d,0x8c,0xf5,0x13,0x76,0x03,0xb0,0xb9,0x6c,0x62,0x89,0xec,0x82,0x5f,
    0x17,0xb1,0xbb,0x18,0xee,0xa4,0x82,0x10,0xeb,0x17,0xf8,0x2a,0xc5,0x5e,0x7e,0x53,
    0xb7,0x90,0xc7,0x25,0xe4,0xa5,0xe1,0x1e,0x8d,0xd8,0xaf,0xe0,0x65,0xf4,0x48,0x2f,
    0x3e,0x2f,0x18,0xbb,0x9f,0xf1,0x55,0x92,0xa3,0x23,0x39,0xfd,0xe5,0xa3,0xf5,0x82,
    0x5d,0x22,0x87,0x69,0x2e,0xfa,0xbd,0x88,0xed,0x05,0x66,0x47,0xce,0xa0,0xd2,0x45,
    0xf9,0x1a,0x73,0xd6,0x62,0xb3,0x11,0x8e,0x1c,0xf5,0x16,0xb9,0x7f,0x72,0x74,0x85,
    0x98,0x57,0x0c,0x47,0xa2,0xbc,0xd1,0x70,0xd4,0xcf,0x65,0x39,0x12,0x99,0xf3,0x2b,
    0xe3,0xa2,0x9d,0x3c,0x95,0xa3,0x7c,0x97,0xe5,0x68,0x63,0x0e,0x47,0x05,0x2e,0xca,
    0x2d,0x47,0x85,0x2e,0xe2,0xca,0x51,0x11,0x3e,0xc5,0xbf,0xda,0xa5,0xc9,0xa5,0x24,
    0x47,0x47,0x72,0x52,0x8e,0x04,0x53,0x8e,0xa6,0xbb,0xe8,0x57,0xf2,0x4a,0x93,0xab,
    0x72,0x34,0xda,0x45,0x79,0x25,0x79,0x2a,0x47,0x9b,0xe0,0x28,0x45,0xbd,0x65,0x39,
    0x1c,0x15,0x13,0x53,0x9e,0xca,0xd1,0xf5,0x2e,0xda,0x29,0x47,0xc3,0x0d,0x47,0x22,
    0x2b,0xf1,0x6b,0x08,0x76,0x43,0x0c,0x47,0x43,0x0d,0x47,0x9b,0x72,0x38,0x1a,0xe6,
    0xa2,0xdc,0x72,0x54,0xea,0x22,0xae,0x1c,0x95,0xe1,0xb3,0xc4,0x70,0x34,0x98,0x5c,
    0x4a,0x72,0x74,0x86,0x1b,0x8e,0xca,0x0c,0x47,0x33,0x5c,0xf4,0x2b,0x79,0x0d,0x26,
    0x57,0xe5,0xa8,0xca,0x45,0xb9,0x70,0x95,0xc2,0x9f,0xce,0xde,0x06,0x7a,0x51,0xf4,
    0x66,0xd1,0x6b,0x4d,0xd8,0x94,0xb9,0xec,0xcc,0xbf,0xc8,0xcc,0x6f,0x36,0x33,0xbf,
    0x05,0x5c,0x67,0xfe,0x25,0x30,0x9d,0xf9,0xad,0x66,0x0e,0x45,0xd6,0xea,0xd7,0x4e,
    0xe2,0xee,0x34,0xf7,0xc9,0xab,0xf8,0xde,0x65,0x7c,0xbf,0x06,0xae,0xbe,0x5f,0x07,
    0x53,0xdf,0x6d,0xc6,0xb7,0xc8,0x76,0xfb,0xd5,0x86,0xef,0xdd,0xa6,0x0f,0xde,0xa0,
    0x2e,0xf9,0xa6,0xf8,0x04,0x5f,0x6f,0x82,0xef,0x81,0x0b,0xb5,0x6b,0x83,0x0b,0xd1,
    0x79,0x8b,0x98,0x3b,0xd1,0xdf,0x4d,0xdc,0x76,0x13,0x57,0x74,0xf6,0xfa,0xd5,0x8e,
    0xfd,0x5e,0x13,0xf7,0x6d,0x13,0x77,0x91,0xff,0x4a,0x92,0xef,0xaf,0x77,0xc0,0x66,
    0xb9,0xec,0x37,0x4b,0x8a,0xfb,0x5a,0xe4,0xfb,0xb0,0xd3,0xb5,0xd5,0xfb,0x12,0x7c,
    0x3f,0xb6,0xfb,0x82,0xaf,0x7e,0xe1,0xac,0xde,0xc5,0xd7,0x7e,0xbe,0x9b,0xf2,0xcc,
    0xf7,0x9d,0xd4,0xa4,0x39,0xb5,0x9b,0xf3,0x9d,0x4b,0xec,0x36,0xec,0xf7,0xa2,0xbb,
    0x15,0xdd,0x56,0x93,0xff,0xb6,0xff,0xc8,0x7f,0xfb,0x55,0xf2,0xdf,0x4e,0x9e,0x3b,
    0xd0,0xd9,0x66,0xf2,0x7c,0x05,0x9b,0x1d,0x57,0xc9,0x53,0x63,0x6f,0x35,0x79,0xce,
    0x71,0x31,0xd7,0x76,0xec,0x5b,0x89,0x21,0xb2,0xf7,0x90,0x1f,0x08,0xbf,0x3f,0xf1,
    0xbb,0xf4,0x20,0xb8,0xf6,0xd3,0x07,0xf4,0xd3,0x21,0xd3,0x4f,0x1f,0x82,0x6b,0x3f,
    0x7d,0x04,0xa6,0xfd,0x74,0xc4,0x9c,0xab,0xc8,0x0e,0xfb,0x75,0x94,0xdc,0x8e,0x1a,
    0xdf,0x9f,0xe2,0xfb,0x98,0xf1,0xfd,0x19,0xb8,0xfa,0xfe,0x1c,0x4c,0x7d,0x77,0x1a,
    0xdf,0x22,0x3b,0xee,0xd7,0x09,0x7c,0x9f,0x30,0xbf,0xcb,0x5f,0xe1,0xfb,0xa4,0xf9,
    0x5d,0xfe,0x1a,0xfc,0x4b,0x7e,0xe7,0xbf,0x01,0x6b,0x31,0xf1,0xbe,0x05,0x5f,0x4e,
    0xbc,0x2e,0x13,0x4f,0x64,0xa7,0xfc,0xea,0x22,0xde,0x29,0x7e,0x5f,0x84,0xb7,0x09,
    0x2e,0xe6,0x78,0x30,0xc9,0x7e,0x9b,0xa9,0x5e,0x17,0xe7,0x21,0x7a,0x75,0x2e,0xea,
    0x9c,0xc0,0xe6,0x94,0xc9,0xe7,0x3b,0xf2,0x99,0x68,0xf2,0xf9,0x1e,0x5c,0xf3,0xe9,
    0x36,0xf9,0x88,0xec,0xb4,0x5f,0xdd,0xc4,0x39,0x6d,0xf2,0x99,0x48,0x3e,0x75,0xe6,
    0x9e,0x52,0xbd,0x6e,0x93,0x4f,0xbd,0x8b,0x3a,0x5d,0xd8,0x9c,0x36,0xf9,0xfc,0x40,
    0x3e,0x87,0x4c,0x3e,0x3f,0x82,0x6b,0x3e,0x3d,0x26,0x1f,0x91,0x9d,0xf1,0xab,0x87,
    0x38,0x67,0x4c,0x3e,0x93,0x5d,0xfc,0x3f,0xb0,0xde,0x65,0xfb,0x55,0xf5,0x7a,0x4c,
    0x3e,0x77,0xbb,0xa8,0xd3,0x8d,0xcd,0x19,0x74,0x3b,0xd1,0x3d,0xce,0x5c,0x49,0xaf,
    0x7c,0x01,0xdf,0x69,0x13,0x67,0xbc,0xcb,0xe2,0x49,0x8e,0x6d,0xa7,0x89,0x33,0xcf,
    0xc5,0x58,0x3d,0xd8,0x1c,0x47,0xf7,0x08,0xba,0x87,0x99,0xbb,0x8e,0x70,0xd7,0x45,
    0x7f,0x07,0x99,0xbb,0x02,0x66,0x35,0x9d,0x63,0x73,0xc4,0xf8,0x6f,0x70,0x31,0x46,
    0x27,0xf6,0xe2,0x6f,0xba,0xb7,0x38,0x87,0xec,0x4f,0xdf,0x25,0x93,0xfd,0xfa,0x1b,
    0x41,0xa4,0x8e,0x49,0x98,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DArray src;
// layout(location = 0)out uvec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            uvec4 dstValue = uvec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
