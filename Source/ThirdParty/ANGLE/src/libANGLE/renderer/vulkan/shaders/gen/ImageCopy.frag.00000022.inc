// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000022.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000022[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x7d,0x97,0xfd,0x6b,0x96,0x55,
    0x18,0xc7,0xef,0xf3,0x3c,0xcf,0x5e,0x9c,0x69,0xab,0xa9,0xe9,0x1c,0xb1,0xa5,0x2d,
    0xcd,0x35,0xcd,0xcc,0xb7,0x39,0xf3,0x75,0x9b,0x69,0x9a,0x1b,0x82,0x99,0xbd,0xac,
    0x2c,0x5d,0xbe,0x94,0x56,0xbf,0xf8,0x43,0x49,0x66,0x1b,0x18,0x49,0x5a,0x39,0xb2,
    0x1c,0x91,0x92,0x34,0x48,0x2b,0x85,0x48,0x2b,0x07,0x61,0x16,0xe5,0xa0,0x1c,0x94,
    0x43,0xff,0x02,0x49,0x92,0xcc,0x55,0x64,0x9d,0xeb,0x9c,0xcf,0xb5,0xe7,0xea,0x21,
    0x1b,0x1c,0xee,0xfb,0x7c,0xaf,0xf7,0xef,0xb9,0xae,0xf3,0xdc,0x4b,0xa7,0x46,0x15,
    0x24,0x89,0x4b,0x8a,0x92,0xc2,0x64,0xa1,0x4b,0xc2,0xdf,0x75,0x49,0x2a,0x91,0xd7,
    0x81,0x49,0x7e,0x78,0xd6,0x2f,0x6a,0x5a,0x54,0xfd,0xf4,0x33,0xab,0xaa,0x27,0xdd,
    0x39,0x41,0xe4,0x83,0x93,0x74,0xd0,0x13,0xd9,0xb5,0x49,0x41,0x92,0xf1,0x4f,0x59,
    0xeb,0x9b,0x5b,0x36,0x08,0x5e,0xe9,0xd7,0x39,0xbf,0x8a,0xbd,0x9e,0xe0,0x05,0xe2,
    0xc3,0xbf,0x55,0x06,0x9f,0x62,0x93,0x24,0x0d,0x49,0x5e,0x52,0x15,0xc3,0x25,0xa3,
    0x78,0x2a,0xe6,0xc0,0x0a,0x0d,0x96,0x02,0x2b,0x36,0x58,0x1a,0x6c,0x88,0xc1,0x32,
    0x60,0xc3,0x0d,0x96,0x07,0x56,0x66,0xb0,0x7c,0xb0,0x72,0x83,0x15,0x80,0x8d,0x36,
    0x58,0x21,0xd8,0x18,0x83,0x0d,0x00,0xab,0x32,0x58,0x11,0xd8,0x04,0x83,0x0d,0x04,
    0x9b,0x64,0xb0,0x6b,0xc0,0xa6,0x1a,0x6c,0x10,0xd8,0x8c,0xc0,0x53,0xba,0xbf,0x5e,
    0xe1,0x6c,0x85,0x7f,0xde,0x04,0x3f,0xba,0xaf,0x30,0x7b,0xe1,0xf9,0x46,0xf6,0x25,
    0xde,0x2a,0x15,0xe4,0xe9,0xc0,0x8d,0xbc,0x0f,0xf3,0x6f,0xf9,0xd4,0x39,0xce,0xeb,
    0xe7,0x13,0xaf,0xac,0xfa,0x9e,0x9a,0x21,0x5e,0x63,0xb0,0xc1,0x4b,0xfc,0x6a,0xfc,
    0x64,0xf1,0x6c,0xdd,0x0b,0x87,0xcb,0x96,0xf5,0xcc,0xd4,0x7d,0xa9,0x5f,0xb5,0x45,
    0xad,0x77,0xe9,0x5e,0xf8,0xfc,0xa0,0xbe,0xb9,0x76,0xa8,0xdf,0x97,0x13,0x43,0xce,
    0xee,0x06,0xbf,0xaf,0x60,0x9f,0x62,0x3f,0x1a,0xce,0x33,0x01,0xcf,0x24,0x37,0xa3,
    0x2b,0x78,0x0d,0xfb,0x4a,0x63,0x7f,0x0b,0xfa,0x62,0x2f,0xfe,0xc7,0xe1,0x2f,0x09,
    0xf5,0x16,0x07,0x8e,0x2a,0x58,0xe5,0xfd,0xf5,0xfd,0xff,0x2a,0xef,0x7f,0x66,0x92,
    0xdb,0x38,0xc7,0x2a,0xe2,0xcb,0xbe,0x1a,0x6c,0x1c,0xf5,0x8c,0x27,0x1f,0xd1,0x9f,
    0x80,0xac,0xc2,0xc8,0x27,0x9b,0x7a,0xa6,0xf4,0xdb,0x46,0xb9,0x3c,0xa7,0x93,0xaf,
    0xea,0xcf,0xa5,0x17,0x55,0xbe,0x00,0xff,0x2a,0x5f,0xcc,0xd9,0x8c,0xf0,0x9e,0x96,
    0x9b,0xfa,0xed,0x1f,0x23,0x1a,0x62,0xde,0xc7,0xfb,0x72,0x6a,0x90,0xfd,0x8a,0x9c,
    0x98,0x2b,0x73,0xf6,0xcd,0xcc,0x8d,0xd8,0x3f,0x42,0xce,0xe5,0x70,0xfe,0x18,0xef,
    0x69,0xa3,0xdf,0x42,0x0e,0xba,0x5f,0x4f,0xaf,0xeb,0x7e,0x2b,0x79,0x8a,0xfd,0xcb,
    0xbc,0x5b,0xfb,0x5d,0xcc,0x95,0xf6,0xcc,0x1e,0x93,0x8f,0xec,0x0f,0x84,0xdd,0xf3,
    0x73,0xc5,0xbe,0x13,0xfe,0x32,0xc6,0xfe,0x10,0x33,0xa8,0xfb,0x63,0x39,0x67,0x74,
    0x92,0x99,0x92,0x7a,0xce,0x12,0xbb,0x13,0x3e,0xce,0x72,0x0f,0xa5,0xc3,0x59,0xe5,
    0x85,0x3a,0x32,0xc4,0x17,0xac,0xcf,0x23,0x72,0x1e,0xb5,0xf4,0xe7,0x18,0x7a,0x70,
    0x89,0xcf,0x58,0xfa,0x6f,0x2c,0xd8,0x18,0xc3,0xfd,0x06,0x7a,0xfb,0x56,0xe4,0xb3,
    0xbd,0x07,0xe9,0x8d,0xdb,0xe9,0x9f,0xf1,0xf8,0x13,0x9d,0x89,0xe0,0x2f,0x78,0x1d,
    0xd9,0xdf,0x81,0xdd,0x44,0xec,0xa6,0x70,0x0f,0x54,0xd3,0x4b,0xb5,0xf4,0xc5,0x34,
    0xf0,0x4e,0xaf,0x33,0x38,0xd4,0x12,0x31,0xe9,0xa7,0xcb,0x3e,0xf3,0x5a,0xf2,0xf9,
    0xc3,0xeb,0xd7,0x70,0x6f,0xd4,0x52,0x8f,0xbc,0x2f,0xf5,0x76,0xc2,0xcd,0x2c,0x62,
    0xca,0xdf,0x73,0xf0,0x35,0x1b,0xbc,0xd1,0xb3,0x1f,0x66,0xc7,0x45,0x4c,0xf5,0x7e,
    0xf7,0x3e,0xd4,0x97,0x3c,0x2f,0x79,0x2e,0x44,0x6f,0x9a,0x8b,0x3a,0x79,0xd8,0xcc,
    0x30,0x35,0xcc,0xa3,0x86,0xb9,0xa6,0x86,0xf9,0xe0,0x5a,0x43,0x1d,0x98,0xd6,0xd0,
    0x60,0x6a,0xa8,0x0b,0x77,0x59,0x12,0x30,0x89,0x5b,0x6f,0x6a,0x58,0x48,0x6c,0x67,
    0x6a,0x58,0x04,0xae,0x35,0x8c,0x72,0x11,0x53,0x3d,0xa9,0x41,0x7d,0x35,0x98,0x1a,
    0xa6,0xbb,0xa8,0x53,0x8b,0x4d,0xbd,0xa9,0x61,0x09,0x35,0x2c,0x36,0x35,0xdc,0x0b,
    0xae,0x35,0x2c,0x05,0xd3,0x1a,0x9a,0x4c,0x0d,0x4b,0x43,0x3e,0x49,0xc0,0x24,0x6e,
    0x23,0x7d,0x24,0x71,0x97,0x11,0x7b,0xba,0xcb,0xce,0xaf,0xe4,0xa8,0xba,0x4d,0x26,
    0xc7,0x1a,0xf4,0x1a,0xb0,0x6b,0x24,0x1f,0x99,0xf1,0xfb,0x99,0x6f,0xed,0xb9,0x07,
    0xc8,0x79,0xa5,0xe9,0xb9,0x07,0xc1,0xb7,0xd0,0x73,0x0f,0x83,0xd5,0xb8,0x68,0x27,
    0x33,0xff,0x28,0x76,0xcd,0xd8,0x09,0xa7,0xab,0xc0,0x95,0xf7,0xc7,0xb1,0x4d,0x0c,
    0xb6,0x1a,0xcc,0x05,0x1e,0xf2,0xc3,0x7d,0xb1,0x06,0xdd,0xd5,0xf8,0xd0,0x18,0x4f,
    0x10,0xa3,0xc5,0xc4,0x58,0x0b,0xfe,0x90,0xaf,0x55,0xe6,0x6d,0x1d,0x35,0xad,0xe1,
    0x8e,0x59,0x6b,0xce,0x63,0x03,0xf6,0xeb,0xcd,0x79,0x3c,0x09,0xae,0xe7,0xf1,0x14,
    0x98,0x9e,0xc7,0x26,0x73,0x1e,0x22,0xdb,0xe8,0xd7,0x26,0x38,0xde,0x48,0x1d,0x72,
    0xe7,0x3c,0x4b,0xec,0x04,0xbb,0x3e,0xde,0xff,0xf4,0xef,0xe2,0xeb,0x3c,0x36,0xe7,
    0xc3,0x7d,0x13,0x63,0xfd,0x8c,0xdd,0x20,0x6c,0x2e,0x9b,0x58,0x22,0xbb,0xe0,0xd7,
    0x45,0xec,0x2e,0x86,0x3b,0xa9,0x20,0xc4,0xfa,0x15,0xbe,0x4a,0xb1,0x97,0xdf,0xd4,
    0x6d,0xe4,0x71,0x09,0x79,0x69,0xb8,0x47,0x23,0xf6,0x1b,0x78,0x19,0x3d,0xd2,0x87,
    0xcf,0x0b,0xc6,0xee,0x17,0x7c,0x95,0xe4,0xe8,0x48,0x4e,0x7f,0xfb,0x68,0x7d,0x60,
    0x97,0xc8,0x61,0x86,0x8b,0x7e,0x2f,0x62,0x7b,0x81,0xd9,0x91,0x33,0xa8,0x74,0x51,
    0xbe,0xce,0x9c,0xb5,0xd8,0x6c,0x86,0x23,0x47,0xbd,0x45,0xee,0xdf,0x1c,0x5d,0x21,
    0xe6,0x15,0xc3,0x91,0x28,0x6f,0x36,0x1c,0x0d,0x70,0x59,0x8e,0x44,0xe6,0xfc,0xca,
    0xb8,0x68,0x27,0x4f,0xe5,0x28,0xdf,0x65,0x39,0xda,0x9c,0xc3,0x51,0x81,0x8b,0x72,
    0xcb,0x51,0xa1,0x8b,0xb8,0x72,0x54,0x84,0x4f,0xf1,0xaf,0x76,0x69,0x72,0x29,0xc9,
    0xd1,0x91,0x9c,0x94,0x23,0xc1,0x94,0xa3,0x99,0x2e,0xfa,0x95,0xbc,0xd2,0xe4,0xaa,
    0x1c,0x8d,0x75,0x51,0x5e,0x49,0x9e,0xca,0xd1,0x16,0x38,0x4a,0x51,0x6f,0x59,0x0e,
    0x47,0xc5,0xc4,0x94,0xa7,0x72,0x74,0xbd,0x8b,0x76,0xca,0xd1,0x48,0xc3,0x91,0xc8,
    0x4a,0xfc,0x1a,0x86,0xdd,0x30,0xc3,0xd1,0x70,0xc3,0xd1,0x96,0x1c,0x8e,0x46,0xb8,
    0x28,0xb7,0x1c,0x95,0xba,0x88,0x2b,0x47,0x65,0xf8,0x2c,0x31,0x1c,0x0d,0x25,0x97,
    0x92,0x1c,0x9d,0x91,0x86,0xa3,0x32,0xc3,0xd1,0x2c,0x17,0xfd,0x4a,0x5e,0x43,0xc9,
    0x55,0x39,0xaa,0x72,0x51,0x2e,0x5c,0xa5,0xf0,0xa7,0xb3,0xb7,0x89,0x5e,0x14,0xbd,
    0x39,0xf4,0x5a,0x13,0x36,0x65,0x2e,0x3b,0xf3,0x2f,0x32,0xf3,0x5b,0xcd,0xcc,0x6f,
    0x03,0xd7,0x99,0x7f,0x09,0x4c,0x67,0xbe,0xcd,0xcc,0xa1,0xc8,0x5a,0xfd,0xda,0x49,
    0xdc,0x9d,0xe6,0x3e,0x79,0x0d,0xdf,0xbb,0x8c,0xef,0xd7,0xc1,0xd5,0xf7,0x1b,0x60,
    0xea,0xbb,0xdd,0xf8,0x16,0xd9,0x6e,0xbf,0xda,0xf1,0xbd,0xdb,0xf4,0xc1,0x9b,0xd4,
    0x25,0xdf,0x14,0x9f,0xe2,0xeb,0x2d,0xf0,0x3d,0x70,0xa1,0x76,0xed,0x70,0x21,0x3a,
    0x6f,0x13,0x73,0x27,0xfa,0xbb,0x89,0xdb,0x61,0xe2,0x8a,0xce,0x5e,0xbf,0x3a,0xb0,
    0xdf,0x6b,0xe2,0xbe,0x63,0xe2,0x2e,0xf1,0x5f,0x49,0xf2,0xfd,0xf5,0x2e,0xd8,0x1c,
    0x97,0xfd,0x66,0x49,0x71,0x5f,0x8b,0x7c,0x1f,0x76,0xba,0xda,0xbc,0x2f,0xc1,0xf7,
    0x63,0xbb,0x2f,0xf8,0x1a,0x10,0xce,0xea,0x3d,0x7c,0xed,0xe7,0xbb,0x29,0xcf,0x7c,
    0xdf,0x49,0x4d,0x9a,0x53,0x87,0x39,0xdf,0xf9,0xc4,0x6e,0xc7,0x7e,0x2f,0xba,0x6d,
    0xe8,0xb6,0x9a,0xfc,0xb7,0xff,0x47,0xfe,0xaf,0x5c,0x25,0xff,0x57,0xc8,0x73,0x07,
    0x3a,0xdb,0x4d,0x9e,0xaf,0x62,0xb3,0xe3,0x2a,0x79,0x6a,0xec,0x36,0x93,0xe7,0x3c,
    0x17,0x73,0xed,0xc0,0xbe,0x95,0x18,0x22,0x7b,0x1f,0xf9,0x81,0xf0,0xfb,0x13,0xbf,
    0x4b,0x0f,0x82,0x6b,0x3f,0x7d,0x48,0x3f,0x1d,0x32,0xfd,0xf4,0x11,0xb8,0xf6,0xd3,
    0xc7,0x60,0xda,0x4f,0x47,0xcc,0xb9,0x8a,0xec,0xb0,0x5f,0x47,0xc9,0xed,0xa8,0xf1,
    0xfd,0x19,0xbe,0x8f,0x19,0xdf,0x9f,0x83,0xab,0xef,0x2f,0xc0,0xd4,0x77,0x97,0xf1,
    0x2d,0xb2,0xe3,0x7e,0x9d,0xc0,0xf7,0x09,0xf3,0xbb,0xfc,0x35,0xbe,0x4f,0x9a,0xdf,
    0xe5,0x6f,0xc0,0xbf,0xe2,0x77,0xfe,0x5b,0xb0,0x16,0x13,0xef,0x3b,0xf0,0x95,0xc4,
    0xeb,0x36,0xf1,0x44,0x76,0xca,0xaf,0x6e,0xe2,0x9d,0xe2,0xf7,0x45,0x78,0x9b,0xe4,
    0x62,0x8e,0x07,0x93,0xec,0xb7,0x99,0xea,0x75,0x73,0x1e,0xa2,0x57,0xe7,0xa2,0xce,
    0x09,0x6c,0x4e,0x99,0x7c,0xbe,0x27,0x9f,0xc9,0x26,0x9f,0x1f,0xc0,0x35,0x9f,0x1e,
    0x93,0x8f,0xc8,0x4e,0xfb,0xd5,0x43,0x9c,0xd3,0x26,0x9f,0xc9,0xe4,0x53,0x67,0xee,
    0x29,0xd5,0xeb,0x31,0xf9,0xd4,0xbb,0xa8,0xd3,0x8d,0xcd,0x69,0x93,0xcf,0x8f,0xe4,
    0x73,0xc8,0xe4,0xf3,0x13,0xb8,0xe6,0xd3,0x6b,0xf2,0x11,0xd9,0x19,0xbf,0x7a,0x89,
    0x73,0xc6,0xe4,0x33,0xd5,0xc5,0xff,0x03,0xeb,0x5d,0xb6,0x5f,0x55,0xaf,0xd7,0xe4,
    0x73,0xb7,0x8b,0x3a,0x3d,0xd8,0x9c,0x41,0xb7,0x0b,0xdd,0xe3,0xcc,0x95,0xf4,0xca,
    0x97,0xf0,0x9d,0x36,0x71,0x26,0xba,0x2c,0x9e,0xe4,0xd8,0x76,0x99,0x38,0x0b,0x5c,
    0x8c,0xd5,0x8b,0xcd,0x71,0x74,0x8f,0xa0,0x7b,0x98,0xb9,0xeb,0x0c,0x77,0x5d,0xf4,
    0x77,0x90,0xb9,0x2b,0x60,0x56,0xd3,0x39,0x36,0x47,0x8c,0xff,0x06,0x17,0x63,0x74,
    0x61,0x2f,0xfe,0x66,0x7a,0x8b,0x73,0xc8,0xfe,0xf2,0x5d,0x32,0xd5,0xaf,0x7f,0x00,
    0x8c,0x93,0x3d,0xdd,0x98,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture3D src;
// layout(location = 0)out uvec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            uvec4 dstValue = uvec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
