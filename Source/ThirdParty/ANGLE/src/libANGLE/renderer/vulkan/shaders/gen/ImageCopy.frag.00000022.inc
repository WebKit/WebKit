// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000022.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000022[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x8b,0x97,0x8e,0x55,
    0x14,0xc6,0xdf,0xb9,0x7d,0xc3,0xb8,0x8d,0x4c,0x48,0xb4,0x66,0x90,0xd4,0x68,0xa8,
    0xc6,0xdd,0x10,0xca,0xa5,0x5c,0x62,0x4c,0x24,0xa5,0x29,0xc5,0xa4,0x51,0x8c,0xa2,
    0x72,0x97,0x8c,0x24,0xa1,0xa2,0x14,0x25,0x22,0x13,0xa9,0x88,0x50,0x51,0xb9,0x74,
    0x43,0x65,0x54,0x6e,0xf5,0x4f,0xb4,0xba,0xac,0xd5,0xe5,0xec,0x77,0x7e,0x7b,0x7a,
    0xd6,0xb7,0xac,0x9a,0xb5,0xce,0x7a,0xbf,0xfd,0xec,0x7d,0x9e,0xf3,0xec,0xbd,0xcf,
    0x39,0xef,0xf7,0x4d,0x5a,0x6a,0x9b,0xcc,0x28,0x4a,0x89,0xb2,0xa2,0x3a,0xd1,0xcf,
    0x51,0xcd,0x5f,0xe3,0x28,0x35,0x20,0x51,0x54,0x2f,0x4a,0xc4,0xcf,0x81,0x43,0x8a,
    0x87,0x14,0x54,0x4c,0x9f,0x50,0x50,0xd8,0xb9,0x93,0xf9,0x1b,0x46,0x69,0x71,0x9c,
    0xf9,0x1a,0x45,0x99,0x51,0x7a,0x78,0xda,0x28,0x2f,0x2d,0x9b,0x62,0x78,0xbb,0x30,
    0xce,0x87,0x91,0x1d,0xe2,0x0c,0xcf,0x34,0x8e,0xf0,0xa9,0x5d,0xcc,0x69,0x73,0xa2,
    0x68,0x50,0x94,0x11,0x75,0x60,0xbd,0x36,0x3c,0x1d,0x4b,0x01,0xab,0x23,0x58,0x2a,
    0x58,0xb6,0x60,0x69,0x60,0x39,0x82,0xa5,0x83,0x35,0x17,0x2c,0x03,0xac,0xa5,0x60,
    0x09,0xb0,0x5c,0xc1,0x32,0xc1,0xda,0x0a,0x56,0x07,0xac,0xbd,0x60,0x75,0xc1,0x3a,
    0x08,0x96,0x05,0xd6,0x49,0xb0,0x7a,0x60,0x85,0x82,0xd5,0x07,0xeb,0x26,0x58,0x03,
    0xb0,0x5e,0x71,0x9d,0xd2,0x6a,0xf3,0xb5,0x9a,0x8d,0x0d,0xcf,0xd6,0xd4,0xc7,0xed,
    0x3c,0xb1,0xad,0xce,0x97,0x61,0x37,0x09,0xb3,0x52,0x63,0x7f,0x5a,0x5c,0x1b,0xfb,
    0xdc,0x34,0x7c,0x4a,0x90,0x67,0x6e,0x88,0xcf,0x24,0xcf,0x44,0x1c,0x97,0x1e,0xe7,
    0x97,0x00,0xcb,0x0f,0x76,0x02,0x3d,0x2d,0x0b,0x86,0xf6,0xcc,0x09,0x0c,0x0d,0x05,
    0x6f,0x12,0xc6,0xc8,0x3d,0xc3,0xfa,0xba,0x6d,0x35,0x2e,0x29,0xa9,0xee,0xed,0x76,
    0x8b,0x30,0x8a,0xb2,0x16,0xf7,0x71,0xdb,0xea,0xbd,0x7d,0x60,0x69,0xd1,0xc5,0xc1,
    0xce,0x45,0x83,0xf5,0xb6,0x59,0xb0,0xf3,0xb0,0x53,0xd1,0xd5,0x1a,0x0d,0x79,0xf8,
    0xdb,0xa2,0x2b,0x1d,0xff,0xe5,0xcc,0x35,0xbc,0x27,0x76,0x3b,0xe1,0xbb,0x82,0x78,
    0xe3,0xb3,0xf5,0xf2,0xe1,0x8f,0xe2,0xfa,0x64,0xc7,0x35,0xcd,0x63,0xb8,0x96,0xfc,
    0xff,0x19,0xb9,0xb5,0xcf,0xf4,0xe8,0x6a,0xfa,0xde,0x81,0xf5,0xcd,0x2e,0x00,0xcb,
    0x27,0xbf,0x8e,0xe8,0xb1,0xf8,0x4e,0xf8,0xf2,0xc4,0xdf,0x45,0xf2,0xe9,0x5a,0x3b,
    0xb7,0xc6,0x6f,0xcf,0x1e,0xe8,0x35,0x7f,0x6f,0xea,0x91,0x2b,0xf3,0xfb,0xb3,0x97,
    0x3d,0x7e,0x30,0xeb,0xb9,0x7f,0x18,0xbd,0xb3,0xf9,0xb7,0x32,0xdf,0xea,0x75,0x49,
    0x58,0x69,0x8c,0xd4,0x47,0xff,0x52,0x64,0xcd,0xdb,0xf8,0x3c,0x86,0x1c,0xcd,0x1e,
    0x0b,0xe6,0x6b,0x8c,0x4b,0xb2,0x4b,0x39,0x87,0x36,0xff,0x6e,0x72,0xca,0xa5,0x27,
    0xf7,0xf2,0x39,0x4d,0xe2,0xcb,0xd0,0xe0,0x76,0x39,0x67,0xc7,0x73,0x9a,0x93,0xe4,
    0x5f,0x88,0x6e,0xf7,0x2f,0x81,0xcf,0xf8,0x9f,0xc6,0xa7,0xfc,0xab,0x92,0xf6,0xf2,
    0x5a,0xd1,0x6b,0xf6,0x96,0xd8,0x9a,0xdb,0xdf,0xe6,0x57,0x51,0x7f,0xef,0xc9,0x5b,
    0xcc,0xad,0x12,0xbe,0x1d,0xdc,0x01,0x16,0xff,0x3e,0xf1,0xaa,0x6f,0x7f,0x6d,0xce,
    0xe9,0xd1,0x27,0xb5,0x6b,0xff,0xeb,0x3f,0xca,0x99,0x37,0xff,0x39,0xb4,0x56,0x51,
    0xdf,0x73,0xdc,0x93,0x69,0xf1,0xde,0xc8,0x88,0x79,0xd3,0xd1,0x6b,0xd8,0x6f,0x01,
    0xc9,0x20,0xb6,0x35,0x77,0x44,0xa6,0xd8,0x85,0x62,0x5b,0xbf,0x47,0x8b,0x6d,0xcf,
    0x8a,0x24,0x7b,0x66,0x92,0x3d,0x5b,0x6c,0xcb,0x7d,0x9b,0xd8,0xb6,0xff,0x8e,0x60,
    0x17,0x71,0x1e,0xdb,0x73,0xe6,0x86,0x07,0xd4,0xce,0xdb,0x95,0x60,0xed,0x65,0x2f,
    0x4d,0xe1,0x6c,0x5f,0x85,0xbf,0x6f,0xc8,0xc0,0xce,0xc2,0x35,0x9c,0x97,0x8e,0xf0,
    0x59,0xcc,0xb5,0xe0,0x0b,0x42,0x8c,0xd9,0xd7,0x31,0xcf,0xf0,0xde,0xa1,0x02,0x6d,
    0xc0,0x3c,0xbe,0x33,0x35,0x30,0x5f,0x21,0xb6,0xf1,0x77,0xe5,0x3e,0x2d,0xe0,0x8c,
    0x15,0xb1,0x57,0xba,0x83,0x57,0x85,0x98,0x86,0x71,0x5e,0x35,0x98,0x9d,0xb3,0x5f,
    0x03,0x47,0x11,0xba,0xff,0x08,0xf1,0x3d,0xb9,0x7f,0x8b,0xa8,0x7b,0x2f,0xb8,0xad,
    0x0e,0x7d,0xa8,0x75,0x0f,0xb8,0xad,0xaf,0xd7,0x83,0xcf,0xc1,0xee,0x0b,0xe6,0x73,
    0xfa,0xc9,0x1c,0xd3,0xdb,0x8f,0x98,0xdf,0x03,0xb7,0xaf,0x51,0x24,0xfa,0x6f,0x40,
    0x7f,0x7f,0xd1,0x7f,0x23,0xb8,0xeb,0x1f,0x00,0xe6,0xfa,0x07,0x89,0xfe,0x01,0xf1,
    0xfb,0x20,0x8a,0x31,0xe3,0x1e,0x28,0x5a,0x6e,0x42,0xcb,0x60,0xd1,0x7f,0x33,0xb8,
    0xeb,0x1f,0x02,0xe6,0x73,0x86,0xca,0x1c,0xd3,0x3f,0x94,0x18,0xd3,0xef,0x6b,0x0c,
    0x12,0xfd,0xc3,0xd1,0x3f,0x4c,0xf4,0xdf,0x02,0xee,0xfa,0x47,0x80,0xb9,0xfe,0x62,
    0xd1,0x6f,0xbe,0x91,0x61,0x14,0xc3,0x3d,0x52,0xfa,0x3e,0x0a,0x2d,0xb6,0xef,0xcc,
    0x2e,0x01,0x1b,0x25,0xf7,0x97,0xef,0x89,0x12,0x34,0x3a,0x4f,0x31,0x3c,0x76,0xa7,
    0xdd,0xce,0x7d,0xe6,0x7b,0xf2,0x0e,0x34,0x8f,0x93,0xb5,0xee,0x04,0x77,0x7b,0x3c,
    0x6b,0xcf,0x63,0x8f,0xde,0x45,0xcc,0x78,0x78,0xec,0xce,0xbb,0x07,0x9e,0x52,0xa9,
    0xef,0x04,0xf0,0x11,0x21,0xc6,0xec,0xfb,0x98,0x1b,0x09,0x36,0x11,0x2c,0x25,0xae,
    0x4b,0x22,0xbe,0x2f,0x27,0x11,0x3b,0x11,0x0e,0x5f,0xe3,0x7e,0xd6,0x28,0x93,0x35,
    0x26,0x83,0x8f,0x0f,0x75,0xb1,0xf3,0xf9,0x00,0x39,0x4e,0xe2,0x8e,0x9a,0x4c,0x5d,
    0x46,0xe3,0xf3,0x5e,0x4d,0x81,0xab,0x5c,0x7a,0xf5,0x20,0xb8,0xf7,0xea,0x21,0x30,
    0xef,0xd5,0x34,0xe9,0x95,0xf9,0xa6,0x86,0x31,0x8d,0x1a,0x4f,0x85,0xdb,0xee,0x8a,
    0xe9,0xdc,0x43,0x7e,0x56,0xec,0xce,0x7d,0x18,0xdc,0xb4,0x54,0x60,0x77,0x0f,0xf1,
    0xe6,0x7b,0x84,0xfb,0xbf,0x42,0x38,0x66,0x08,0x87,0xcd,0x99,0x41,0x9c,0xfb,0x1f,
    0xc5,0x3f,0x58,0xd6,0x78,0x0c,0xdc,0xe2,0x67,0x62,0xfb,0x1a,0x8f,0xb3,0xc6,0x4c,
    0xe1,0x98,0x25,0x1c,0x36,0x67,0x16,0x71,0xee,0x9f,0x8b,0x7f,0x8e,0xac,0x31,0x0f,
    0xdc,0xe2,0x67,0x63,0xfb,0x1a,0xf3,0x59,0x63,0xb6,0x70,0x2c,0x10,0x0e,0x9b,0xb3,
    0x80,0x38,0xdb,0x9f,0x5e,0xbb,0x69,0xd2,0x97,0x27,0xe8,0xcb,0x42,0xe9,0xcb,0x22,
    0x70,0xef,0xcb,0x93,0x60,0xde,0x97,0x4a,0xe9,0x8b,0xf9,0x16,0x87,0xb1,0x12,0xee,
    0xc5,0xa2,0xe5,0x29,0xb4,0x2c,0x91,0x7c,0x96,0x82,0xfb,0xfd,0xbe,0x8c,0x98,0xe1,
    0xe1,0x8d,0x67,0xef,0xd6,0x67,0xc0,0x96,0xc9,0xfd,0x9e,0x1a,0xe3,0x19,0xb1,0x7f,
    0x39,0x31,0x4b,0x85,0xe3,0xd9,0x5a,0x8e,0xba,0xb1,0xbd,0x02,0x6c,0x39,0xef,0xb6,
    0x0c,0x79,0x67,0xfb,0xde,0x5c,0x41,0x4d,0x2a,0xd1,0xbd,0x52,0x6a,0xf2,0x1c,0x35,
    0x59,0x25,0x35,0x79,0x1e,0xdc,0x6b,0xf2,0x02,0x98,0xd7,0x64,0x8d,0xd4,0xc4,0x7c,
    0xab,0xc3,0x58,0x03,0xf7,0x6a,0xa9,0xc9,0x8b,0x17,0xa8,0xc9,0x4b,0xe0,0x7b,0xe1,
    0x7e,0x19,0x6c,0x2d,0x1a,0x9d,0xc7,0x9e,0xbf,0x04,0x16,0x8b,0x79,0x05,0x0d,0x2b,
    0x89,0x5f,0x8d,0x8e,0xf5,0xa2,0xc3,0x62,0xd6,0x85,0xb1,0x9e,0xf9,0xeb,0x44,0xc7,
    0xab,0x17,0xd0,0xf1,0x1a,0xb8,0xd7,0x75,0x43,0x52,0x6f,0x5e,0x07,0xdb,0x90,0xd4,
    0x1b,0xbb,0x47,0xcc,0xbf,0x11,0x0e,0x1f,0x95,0xf4,0x6c,0x13,0x73,0x37,0x0a,0xf7,
    0x1b,0x49,0x3d,0xdb,0x0c,0xb6,0xe9,0x3f,0x7a,0xb6,0x99,0x7a,0x78,0x3e,0xeb,0x93,
    0x7a,0x58,0x29,0xfc,0x6f,0xc2,0x6f,0xfb,0xc6,0xec,0xad,0x60,0x5b,0x84,0x6f,0xab,
    0xc4,0x6f,0x27,0xbe,0x9c,0xef,0x68,0x6f,0x83,0x59,0xec,0x36,0x6c,0xdf,0x1f,0xef,
    0xb0,0x3f,0x76,0xc8,0xfe,0x78,0x17,0xdc,0xf7,0xc7,0x7b,0x60,0xbe,0x3f,0x76,0x49,
    0x5f,0xcc,0xb7,0x33,0x8c,0x7d,0xe8,0xde,0x09,0x8f,0xad,0xbb,0x9b,0xef,0x44,0xf6,
    0xde,0xb1,0xef,0x7e,0x7b,0xc0,0x76,0xcb,0x77,0x34,0x8f,0xfd,0xa0,0x36,0xb6,0x6e,
    0x6c,0xef,0x05,0xdb,0x23,0x35,0x4c,0x95,0x1a,0x6e,0x23,0xc6,0x6a,0xb6,0x8b,0xb5,
    0xf7,0x49,0x5e,0x1f,0x92,0xd7,0x7e,0xc9,0xeb,0x23,0x70,0xcf,0xeb,0x63,0x30,0xcf,
    0xeb,0xa0,0xe4,0x65,0xbe,0x03,0x61,0x1c,0x86,0xfb,0x00,0xdc,0xf6,0x1d,0xf5,0x53,
    0xb4,0x2e,0x11,0xee,0xcf,0xc0,0x3d,0xe6,0x10,0x31,0x7e,0x07,0x1f,0x22,0xc6,0xf4,
    0x1e,0x84,0xf3,0xb0,0xbc,0x9f,0x3e,0x47,0xef,0x51,0x79,0x3f,0x7d,0x01,0x6e,0xf3,
    0x8f,0x60,0xbb,0xef,0x4b,0xbe,0x5f,0x1e,0xe1,0x5d,0xf8,0x15,0x58,0x99,0xe4,0xf7,
    0x35,0xf8,0x38,0xf2,0x3b,0x2e,0xf9,0x99,0xef,0x58,0x18,0xc7,0xd1,0x72,0x4c,0xb4,
    0x9f,0x40,0xbb,0xdf,0xed,0x27,0xc8,0xc3,0xb4,0x7b,0xfc,0x71,0xd1,0xf2,0x4d,0x92,
    0x96,0x6f,0xc1,0xba,0x88,0x96,0xef,0xc0,0x5d,0x4b,0xb5,0x68,0x31,0xdf,0xc9,0x30,
    0xaa,0xe1,0x3e,0x29,0x5a,0x4e,0xa1,0xc5,0xdf,0x01,0xa7,0x44,0x8b,0xc7,0x57,0x8b,
    0x96,0xef,0x93,0xb4,0xfc,0x00,0xb6,0x43,0xb4,0xfc,0x08,0xee,0x5a,0xce,0x88,0x16,
    0xf3,0x9d,0x0e,0xe3,0x0c,0xdc,0xa7,0x45,0xcb,0x59,0xe9,0xbb,0x69,0x39,0x4b,0x8d,
    0x4c,0x8b,0xc7,0x9f,0x49,0xea,0xf1,0xc1,0xa4,0x3d,0xba,0x4b,0xf6,0xfc,0x4f,0xf0,
    0x19,0xd7,0x79,0xec,0x3f,0xc3,0x4d,0xd4,0x2d,0x8c,0x2e,0xbc,0x17,0xb3,0xd0,0x66,
    0xbf,0xa1,0xba,0x86,0xb8,0x4c,0x7e,0x2f,0x19,0x57,0x3d,0xb9,0xef,0xea,0x83,0xef,
    0x27,0xc7,0x46,0x60,0x0d,0xc8,0xb1,0xb1,0xe4,0xd8,0x88,0xff,0x03,0x35,0x85,0x27,
    0x5b,0x78,0x2e,0x82,0x67,0x11,0xeb,0xe7,0x80,0xd9,0xff,0x2e,0xfe,0x0a,0xb1,0x39,
    0xcc,0x69,0x2a,0x73,0x9a,0x31,0xa7,0x7e,0x50,0x97,0x88,0x7f,0x2f,0xd7,0xdc,0xa7,
    0x2d,0xf0,0x35,0x17,0xbe,0x4b,0xf1,0xb7,0x88,0xdf,0xd3,0x35,0x58,0x2b,0xf0,0x96,
    0xac,0xd1,0x8a,0x35,0x4c,0xf3,0xdf,0xd4,0xe3,0x1f,0xe6,0x97,0xaf,0x6c,0x68,0x13,
    0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture3D src;
// layout(location = 0)out uvec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            uvec4 dstValue = uvec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
