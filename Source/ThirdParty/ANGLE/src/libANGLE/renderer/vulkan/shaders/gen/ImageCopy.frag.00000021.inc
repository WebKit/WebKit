// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000021.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000021[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x7d,0x97,0xfb,0x6f,0x54,0x45,
    0x14,0xc7,0xef,0xec,0x6e,0xbb,0x05,0xa4,0x96,0x6c,0xe5,0xb1,0x21,0xa4,0x95,0x0a,
    0x08,0x58,0x2a,0x22,0x94,0xc7,0x22,0x58,0xa0,0x35,0x22,0x48,0x1b,0x12,0x44,0x7c,
    0x54,0x51,0xa8,0x3c,0x14,0xd4,0x5f,0xf8,0x41,0x89,0x88,0x6d,0x82,0x81,0x08,0x28,
    0x8d,0x28,0x8d,0x11,0x22,0x91,0x44,0x50,0x21,0x51,0x40,0x69,0x0c,0x01,0xa3,0x34,
    0x51,0x1a,0x95,0x06,0xfe,0x02,0x23,0x91,0xa8,0x20,0x2a,0x82,0x73,0xee,0x7c,0x4e,
    0xf7,0xb8,0x11,0x9b,0x4c,0xee,0x9d,0xef,0x9c,0xef,0x79,0x7c,0xe7,0xcc,0xec,0x6d,
    0x32,0x31,0x3c,0x1d,0x45,0x2e,0xea,0x1b,0x95,0x44,0xf7,0xb8,0x28,0xfe,0x1b,0x10,
    0x25,0x22,0x79,0xed,0x17,0x15,0xc7,0xcf,0xfa,0xb9,0x4d,0x73,0xab,0x9f,0x7d,0x6e,
    0x69,0xf5,0x84,0x3b,0x6b,0x64,0xbd,0x34,0x4a,0xc6,0x76,0xb2,0x76,0x63,0x94,0x8e,
    0x52,0xfe,0x29,0x63,0x55,0x73,0xcb,0x6a,0xc1,0x47,0xf8,0x71,0xce,0x8f,0x32,0x6f,
    0x27,0x78,0x5a,0x7c,0xf8,0xb7,0x11,0xb1,0x4f,0xe1,0x44,0x51,0x43,0x54,0x14,0x8d,
    0x0d,0xe1,0xa2,0xe1,0x3c,0x15,0x73,0x60,0x25,0x06,0x4b,0x80,0x95,0x19,0x2c,0x09,
    0x56,0x6e,0xb0,0x14,0xd8,0x60,0x83,0x15,0x81,0x0d,0x35,0x58,0x31,0x58,0x85,0xc1,
    0xd2,0x60,0x55,0x06,0x2b,0x01,0x1b,0x65,0xb0,0x3e,0x60,0x63,0x0d,0xd6,0x17,0xac,
    0xc6,0x60,0xfd,0xc0,0x26,0x18,0xec,0x06,0xb0,0x5a,0x83,0xf5,0x07,0x9b,0x16,0xeb,
    0x94,0xec,0xad,0x57,0x34,0x5b,0xec,0x9f,0x37,0xa3,0x8f,0xce,0x2b,0xcd,0x5c,0x74,
    0x1e,0xc6,0x3c,0xe3,0x59,0x89,0x78,0x3d,0x19,0x6b,0x23,0xef,0x03,0xfd,0x5b,0x31,
    0x75,0x8e,0xf1,0xf6,0xc5,0xc4,0x1b,0x5a,0x7d,0xdf,0xd4,0x72,0x6f,0x51,0x6a,0xf0,
    0x8c,0x1f,0x8d,0x9f,0xcc,0x9b,0xa9,0x73,0xd1,0x70,0xe1,0xc2,0xef,0xa6,0xeb,0x3c,
    0xeb,0x47,0xae,0x6f,0xeb,0x5d,0x3a,0x17,0x3d,0x3f,0xa8,0x6f,0xce,0xdd,0xe4,0xe7,
    0x15,0xc4,0x90,0xbd,0x1b,0xe4,0xe7,0x95,0xcc,0x13,0xcc,0xab,0xd0,0x3c,0x15,0xe3,
    0xa9,0xe8,0x16,0x6c,0x05,0x9f,0xca,0x7c,0x84,0xe1,0x8f,0xc4,0x5e,0xf8,0xe2,0x7f,
    0x0c,0xfe,0xa2,0xb8,0xde,0xb2,0x58,0xa3,0x4a,0x46,0x45,0x6f,0x7d,0xff,0x3f,0x2a,
    0x7a,0x9f,0xa9,0xe8,0x36,0xf6,0x71,0x2c,0xf1,0x65,0x5e,0x0d,0x36,0x86,0x7a,0xc6,
    0x91,0x8f,0xd8,0xd7,0xb0,0x56,0x69,0xd6,0x27,0x9a,0x7a,0x26,0xf5,0x72,0xc3,0xba,
    0x3c,0xa7,0x90,0xaf,0xda,0xd7,0xd1,0x8b,0x3a,0x9f,0xc7,0x5e,0x0c,0xf1,0xcc,0x45,
    0xa6,0x5e,0xfb,0xc7,0x91,0x8c,0x63,0x3c,0xc0,0xfb,0x22,0x72,0x96,0xf9,0xe2,0x82,
    0x18,0x4b,0x0a,0xe6,0xcd,0x9c,0x13,0xe1,0x3f,0x46,0x8e,0x15,0x68,0xfc,0x04,0xef,
    0x49,0x63,0xdf,0x42,0x0e,0x3a,0x5f,0x45,0x6f,0xeb,0x7c,0x03,0x79,0x0a,0xff,0x55,
    0xde,0x2d,0x7f,0x1b,0xe7,0x48,0x7b,0x64,0xa7,0xc9,0x47,0xe6,0x7b,0xe3,0xd9,0x8b,
    0x75,0xc2,0xdf,0x47,0xfc,0x94,0xe1,0x1f,0xe0,0xcc,0xe9,0xfc,0x48,0xc1,0x9e,0x9c,
    0xe0,0x0c,0x49,0x3d,0x67,0x89,0xbd,0x0f,0x3d,0xce,0x72,0xef,0x24,0xe3,0xbd,0x29,
    0x8a,0xeb,0x48,0x11,0x5f,0xb0,0xcb,0x1e,0x11,0xfd,0x73,0xf4,0xe3,0x28,0x7a,0x6e,
    0xbe,0xcf,0x58,0xfa,0xed,0x56,0xb0,0x51,0x46,0xfb,0xd5,0xf4,0xf2,0x68,0xd6,0x67,
    0x7a,0x0f,0xd2,0x0b,0xb7,0xd3,0x2f,0xe3,0xf0,0x27,0x36,0xe3,0xc1,0x5f,0xf2,0x36,
    0x32,0xbf,0x03,0xde,0x78,0x78,0x93,0x38,0xf7,0xd5,0xf4,0x4e,0x8e,0x3e,0x99,0x0c,
    0xbe,0xcf,0xdb,0x94,0xc6,0xb5,0x04,0x4c,0xfa,0xe7,0x77,0x9f,0x79,0x8e,0x7c,0xfe,
    0xf4,0xf6,0x53,0xb9,0x27,0x72,0xd4,0x23,0xef,0x0b,0x3c,0x4f,0xb4,0x99,0x41,0x4c,
    0xf9,0x7b,0x01,0xbd,0x66,0x82,0x37,0x7a,0xf5,0x25,0xa7,0x61,0x2e,0x60,0x6a,0xf7,
    0x87,0xf7,0xa1,0xbe,0xe4,0x79,0xd1,0x6b,0x21,0x76,0x93,0x5c,0xb0,0x29,0x82,0x33,
    0xcd,0xd4,0x30,0x8b,0x1a,0xea,0x4c,0x0d,0xb3,0xc1,0xb5,0x86,0x39,0x60,0x5a,0x43,
    0x83,0xa9,0x61,0x4e,0x7c,0x77,0x45,0x31,0x26,0x71,0xeb,0x4d,0x0d,0xf7,0x12,0xdb,
    0x99,0x1a,0xe6,0x82,0x6b,0x0d,0x95,0x2e,0x60,0x6a,0x27,0x35,0xa8,0xaf,0x06,0x53,
    0x43,0xad,0x0b,0x36,0x39,0x38,0xf5,0xa6,0x86,0xf9,0xd4,0x30,0xcf,0xd4,0x70,0x3f,
    0xb8,0xd6,0xb0,0x00,0x4c,0x6b,0x68,0x32,0x35,0x2c,0x88,0xf3,0x89,0x62,0x4c,0xe2,
    0x36,0xd2,0x47,0x12,0x77,0x21,0xb1,0x6b,0x5d,0xfe,0xfc,0x4a,0x8e,0x6a,0xdb,0x64,
    0x72,0x9c,0x8c,0x5d,0x03,0xbc,0x46,0xf2,0x91,0x33,0xfe,0x20,0xe7,0x5b,0x7b,0xee,
    0x21,0x72,0x5e,0x62,0x7a,0xee,0x61,0xf0,0xf5,0xf4,0xdc,0xa3,0x60,0x93,0x5d,0xe0,
    0xc9,0x99,0x7f,0x1c,0x5e,0x33,0x3c,0xd1,0x74,0x29,0xb8,0xea,0xfe,0x24,0xdc,0xc8,
    0x60,0xcb,0xc0,0x5c,0xac,0x43,0x71,0x7c,0x5f,0x2c,0xc7,0x76,0x19,0x3e,0x34,0xc6,
    0x53,0xc4,0x68,0x31,0x31,0x56,0x80,0x3f,0xe2,0x6b,0x95,0xf3,0xb6,0x92,0x9a,0x96,
    0x73,0xc7,0xac,0x30,0xfb,0xb1,0x1a,0xfe,0x2a,0xb3,0x1f,0x4f,0x83,0xeb,0x7e,0x3c,
    0x03,0xa6,0xfb,0xb1,0xd6,0xec,0x87,0xac,0xad,0xf1,0x63,0x2d,0x1a,0xaf,0xa1,0x0e,
    0xb9,0x73,0x9e,0x27,0x76,0x04,0xef,0x12,0xef,0x7f,0xf9,0x77,0xf1,0xf5,0x23,0x1c,
    0x79,0x1e,0x25,0xd6,0x4f,0xf0,0xfa,0xc3,0xb9,0x68,0x62,0xc9,0xda,0x79,0x3f,0x2e,
    0xc0,0xbb,0x10,0xdf,0x49,0xe9,0x38,0xd6,0x2f,0xe8,0x95,0x85,0x2f,0xbf,0xa1,0x1b,
    0xc9,0xe3,0x57,0xd6,0xb3,0xf1,0x3d,0x1a,0xb0,0xdf,0xc0,0x87,0xd2,0x23,0x97,0xf0,
    0x79,0xde,0xf0,0x7e,0xc6,0x57,0xa6,0xc0,0x46,0x72,0xba,0xe6,0xa3,0x5d,0x06,0xbb,
    0x48,0x0e,0x53,0x5c,0xf0,0x7b,0x01,0xee,0x79,0xce,0x8e,0xec,0x41,0x95,0x0b,0xeb,
    0x2b,0xcd,0x5e,0x0b,0x67,0x1d,0x1a,0x39,0xea,0x2d,0x71,0xff,0xd6,0xe8,0x0a,0x31,
    0xaf,0x18,0x8d,0xae,0xc2,0x53,0x8d,0xd2,0x2e,0xaf,0xd1,0xd5,0x38,0x37,0xbf,0xcf,
    0x2e,0xf0,0xe4,0xa9,0x1a,0xa5,0x5c,0x5e,0xa3,0x75,0x05,0x1a,0x15,0xb9,0xb0,0x6e,
    0x35,0x2a,0x76,0x01,0x57,0x8d,0x4a,0xf0,0x79,0xcd,0xf0,0x9c,0x0b,0xbe,0x32,0x05,
    0x36,0x92,0x93,0x6a,0x24,0x98,0x6a,0x34,0xcd,0x05,0xbf,0x92,0x97,0x73,0x21,0x57,
    0xd5,0x68,0xa4,0x0b,0xeb,0x55,0xe4,0xa9,0x1a,0xad,0x47,0xa3,0x04,0xf5,0x66,0x0b,
    0x34,0x2a,0x25,0xa6,0x3c,0x55,0xa3,0x32,0x17,0x78,0xaa,0xd1,0x10,0xa3,0x91,0xac,
    0x0d,0xf0,0xa3,0x1c,0x5e,0xb9,0xd1,0x68,0xa0,0xd1,0x68,0x7d,0x81,0x46,0x83,0x5c,
    0x58,0xb7,0x1a,0x0d,0x76,0x01,0x57,0x8d,0xb2,0xf8,0x14,0xff,0xca,0xcb,0x90,0x4b,
    0xa6,0xc0,0x66,0x88,0xd1,0x28,0x6b,0x34,0x9a,0xee,0x82,0x5f,0xc9,0x2b,0x43,0xae,
    0xaa,0xd1,0x68,0x17,0xd6,0x45,0xab,0x04,0xfe,0xf4,0xec,0xad,0xa5,0x17,0xc5,0x6e,
    0x06,0xbd,0xd6,0x04,0x27,0xeb,0xf2,0x67,0xfe,0x65,0xce,0xfc,0x06,0x73,0xe6,0x37,
    0x82,0xeb,0x99,0x7f,0x05,0x4c,0xcf,0x7c,0x9b,0x39,0x87,0xb2,0xd6,0xea,0xc7,0x56,
    0xe2,0x6e,0x35,0xf7,0xc9,0x76,0x7c,0x6f,0x33,0xbe,0x5f,0x07,0x57,0xdf,0x6f,0x80,
    0xa9,0xef,0x76,0xe3,0x5b,0xd6,0x76,0xf8,0xd1,0x8e,0xef,0x1d,0xa6,0x0f,0xde,0xa4,
    0x2e,0xf9,0xa6,0x38,0x8c,0xaf,0xb7,0xc0,0x77,0xa2,0x85,0xf2,0xda,0xd1,0x42,0x6c,
    0xde,0x26,0xe6,0x56,0xec,0x77,0x10,0xb7,0xc3,0xc4,0x15,0x9b,0x5d,0x7e,0x74,0xc0,
    0xdf,0x65,0xe2,0xbe,0x63,0xe2,0xce,0xf7,0x5f,0x49,0xf2,0xfd,0xf5,0x2e,0xd8,0x0c,
    0x97,0xff,0x66,0x49,0x70,0x5f,0xcb,0xfa,0x6e,0x78,0x3a,0xda,0xbc,0x2f,0xc1,0xf7,
    0xc0,0xdd,0x1d,0xfb,0xea,0x13,0xef,0xd5,0x7b,0xf8,0xda,0xc3,0x77,0x53,0x91,0xf9,
    0xbe,0x93,0x9a,0x34,0xa7,0x0e,0xb3,0xbf,0x75,0xc4,0x6e,0x87,0xbf,0x0b,0xdb,0x36,
    0x6c,0x5b,0x4d,0xfe,0x9b,0xfe,0x23,0xff,0xcd,0xd7,0xc9,0x7f,0x33,0x79,0x6e,0xc1,
    0x66,0x93,0xc9,0xf3,0x35,0x38,0x5b,0xae,0x93,0xa7,0xc6,0x6e,0x33,0x79,0xde,0xed,
    0x42,0xae,0x1d,0xf0,0x5b,0x89,0x21,0x6b,0xef,0xb3,0xbe,0x97,0xef,0x3d,0xf9,0x9e,
    0xdc,0x0f,0xae,0xfd,0xf4,0x21,0xfd,0x74,0xc0,0xf4,0xd3,0x47,0xe0,0xda,0x4f,0x1f,
    0x83,0x69,0x3f,0x1d,0x32,0xfb,0x2a,0x6b,0x07,0xe3,0x7e,0x09,0xb9,0x1d,0x36,0xbe,
    0x8f,0xe2,0xfb,0x88,0xf1,0xfd,0x19,0xb8,0xfa,0xfe,0x1c,0x4c,0x7d,0x77,0x1a,0xdf,
    0xb2,0x76,0xcc,0x8f,0xe3,0xf8,0x3e,0x6e,0x7e,0x97,0x4f,0xe2,0xfb,0x84,0xf9,0x5d,
    0xfe,0x12,0xfc,0x24,0xbf,0xf3,0x5f,0x81,0xb5,0x98,0x78,0x5f,0x83,0x2f,0x21,0x5e,
    0x97,0x89,0x27,0x6b,0xa7,0xfc,0xe8,0x22,0xde,0x29,0xee,0x4e,0xd1,0x6d,0xbc,0x0b,
    0x9c,0xfd,0x51,0xfe,0xdb,0x4c,0xed,0xba,0xd8,0x0f,0xb1,0x9b,0xe5,0x82,0xcd,0x71,
    0x38,0xa7,0x4c,0x3e,0xdf,0x90,0xcf,0x44,0x93,0xcf,0xb7,0xe0,0x9a,0x4f,0xb7,0xc9,
    0x47,0xd6,0x4e,0xfb,0xd1,0x4d,0x9c,0xd3,0x26,0x9f,0x09,0xe4,0x33,0xcb,0xdc,0x53,
    0x6a,0xd7,0x6d,0xf2,0x99,0xed,0x82,0x4d,0x17,0x9c,0xd3,0x26,0x9f,0xef,0xc9,0xe7,
    0x80,0xc9,0xe7,0x07,0x70,0xcd,0xa7,0xc7,0xe4,0x23,0x6b,0x67,0xfc,0xe8,0x21,0xce,
    0x19,0x93,0xcf,0x44,0x17,0xfe,0x67,0x98,0xed,0xf2,0xfd,0xaa,0x76,0x3d,0x26,0x9f,
    0x06,0x17,0x6c,0xba,0xe1,0x9c,0xc1,0xb6,0x13,0xdb,0x63,0xe6,0x3b,0xed,0x0b,0xf4,
    0x4e,0x9a,0x38,0x35,0x2e,0x8f,0x47,0x05,0xdc,0x4e,0x13,0xa7,0xde,0x85,0x58,0x3d,
    0x70,0x8e,0x61,0x7b,0x08,0xdb,0x83,0x9c,0x3b,0xb1,0xfd,0x14,0x7f,0xfb,0x39,0x77,
    0x69,0xce,0x6a,0xb2,0x80,0x73,0xc8,0xf8,0x9f,0xe3,0x42,0x8c,0x4e,0xf8,0xe2,0x6f,
    0xba,0x67,0x9c,0x63,0xed,0x6f,0xdf,0x25,0xb5,0x7e,0xfc,0x03,0xae,0x53,0x3c,0x67,
    0x88,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture3D src;
// layout(location = 0)out ivec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            ivec4 dstValue = ivec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
