// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000020.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000020[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x0b,0x94,0x8d,0x55,
    0x14,0xc7,0xbf,0x7b,0xef,0xcc,0x9d,0xf1,0x7e,0x13,0x31,0x94,0xbc,0x16,0x4d,0xd6,
    0x32,0x64,0x88,0x41,0x79,0x95,0xb7,0xa8,0x50,0x28,0x6f,0xa1,0xd0,0x0b,0x09,0x19,
    0x44,0x85,0x8a,0xf2,0x48,0x12,0x2a,0x4a,0x51,0x22,0x24,0xa9,0x50,0x51,0x51,0xa8,
    0x3c,0x8a,0x8a,0xf2,0xe8,0x85,0xbc,0x92,0xce,0x3e,0xf7,0xb7,0xa7,0xed,0x5b,0x56,
    0xcd,0x5a,0x67,0xdd,0xbb,0xff,0x7b,0x9f,0xff,0xfe,0x9f,0xbd,0xcf,0x39,0xf7,0x9b,
    0x2f,0x16,0x2d,0x9f,0x12,0x04,0x91,0x20,0x77,0x90,0x1a,0xc4,0x23,0x81,0xff,0x2b,
    0x14,0x44,0x03,0xf9,0x9a,0x27,0x88,0xfb,0xcf,0xa6,0x2d,0xda,0xb7,0x48,0x1f,0x32,
    0xb4,0x47,0x7a,0x46,0xcd,0xea,0xe2,0xcf,0x1f,0xc4,0x7c,0x9c,0xf8,0x0a,0x04,0x29,
    0x41,0x92,0xfb,0x94,0x31,0xa0,0x7b,0xdf,0x81,0x82,0x67,0x8a,0xed,0x9c,0x05,0x5d,
    0x9c,0xe0,0x29,0xc2,0xe1,0xbe,0x65,0x7a,0x4e,0x99,0x13,0x04,0xcd,0x82,0xe4,0x20,
    0x2b,0x91,0x2e,0x28,0xcf,0xa7,0x62,0x11,0xb0,0x54,0x83,0x45,0xc1,0x0a,0x1a,0x2c,
    0x06,0x56,0xd4,0x60,0x49,0x60,0x97,0x18,0x2c,0x19,0xac,0xb4,0xc1,0xe2,0x60,0xe5,
    0x0c,0x96,0x02,0x76,0x85,0xc1,0x52,0xc1,0x2a,0x1b,0x2c,0x17,0x58,0x35,0x83,0xe5,
    0x06,0xab,0x6e,0xb0,0x3c,0x60,0x19,0x06,0xcb,0x0b,0x56,0xdb,0x60,0xf9,0xc0,0xae,
    0xf1,0x75,0x8a,0xe5,0xac,0x57,0x6a,0x36,0xc0,0x7d,0x5e,0x4e,0x7d,0xd4,0xbe,0xcc,
    0xd8,0x52,0xe7,0x34,0xec,0x22,0x6e,0x56,0xd4,0xfb,0x63,0xbe,0x36,0xf2,0xbd,0xb8,
    0xfb,0x16,0x67,0x9d,0xe5,0x5c,0x7c,0x0a,0xeb,0x8c,0xfb,0xb8,0x24,0xbf,0xbe,0x38,
    0x58,0x55,0x67,0xc7,0xa9,0x71,0xe9,0xf4,0x96,0x75,0x8b,0x3a,0x86,0x42,0x06,0x2f,
    0xee,0x46,0xbb,0x95,0xad,0x1a,0xaa,0x7d,0xa9,0x1b,0x1d,0x3a,0x6c,0xaf,0xaf,0x76,
    0x19,0x37,0xea,0xe5,0x1e,0x9f,0xa5,0x76,0x59,0x37,0x96,0x34,0xed,0x5e,0x4f,0x6d,
    0xa9,0xeb,0x81,0x25,0x15,0x72,0xec,0xab,0xdc,0x98,0x39,0xa3,0x64,0x83,0x62,0xce,
    0xae,0x81,0x46,0xe9,0x7d,0x09,0x67,0x4b,0xcd,0x6a,0xb0,0x06,0xd1,0x5d,0x13,0x8d,
    0x19,0xf8,0xaf,0x46,0x77,0x12,0xfe,0xda,0xcc,0x15,0xbc,0x2e,0x76,0xa6,0xe1,0xab,
    0x43,0xbc,0xf0,0x49,0xbe,0xfa,0xe4,0x93,0xbf,0x34,0xb7,0xe2,0x2c,0xb8,0x35,0xaf,
    0x8c,0xfa,0xff,0x33,0x34,0x46,0xf2,0x37,0x60,0x5f,0x64,0x91,0x5f,0xec,0x86,0x60,
    0x55,0x59,0x5f,0x23,0xf4,0x48,0xfc,0xb5,0xf8,0x32,0x8c,0xbf,0xb9,0x59,0xcf,0xf5,
    0xf8,0xeb,0xe3,0x97,0xcf,0x96,0xe8,0x15,0x7f,0x5b,0xea,0x51,0xc3,0xcc,0xef,0xc8,
    0x5e,0xd7,0xf8,0x2e,0xe4,0x53,0x7f,0x77,0xf6,0x9a,0xcc,0xef,0xcb,0x7c,0xa9,0x57,
    0x49,0x97,0xa9,0xbf,0xa9,0x8f,0xfd,0x8b,0x98,0x9c,0x77,0xf2,0xbd,0x3f,0x6b,0x14,
    0x7b,0x00,0x98,0xe6,0x18,0x14,0xb2,0x87,0x72,0x4e,0x65,0xfe,0x3d,0xac,0xa9,0x06,
    0x3d,0xb9,0x9f,0xef,0x31,0x13,0x3f,0x02,0x0d,0x6a,0x8f,0xe2,0x6c,0xe9,0x9a,0xa6,
    0x86,0xfc,0xd3,0xd1,0xad,0xfe,0xd9,0xf0,0x09,0xff,0x73,0xf8,0x2c,0xff,0xc2,0xd0,
    0x5e,0x5f,0x12,0xd2,0xbb,0x9e,0x73,0xab,0xf6,0x4e,0xee,0x00,0xb5,0xf7,0x87,0x7a,
    0x7a,0x94,0x33,0xad,0x7c,0x11,0x5f,0xb0,0x51,0x59,0xb2,0xde,0x58,0x24,0x91,0x5b,
    0xf7,0xa4,0xd8,0x49,0x60,0xb5,0x5c,0xa7,0xa2,0xf4,0x3b,0x40,0xe3,0x29,0x87,0x24,
    0x13,0x5b,0xd3,0xc7,0x24,0xb4,0xaa,0xdd,0xd4,0xd8,0xd2,0xbf,0x7e,0xc6,0x96,0xcf,
    0x71,0x21,0x7b,0x52,0xc8,0x9e,0x12,0x9a,0xbf,0x3a,0xe4,0xdf,0x14,0xb2,0xb7,0x84,
    0xec,0x6d,0xc6,0x96,0xfd,0x77,0x04,0xbb,0x1e,0xe7,0xb1,0x2e,0x67,0xae,0xb5,0x43,
    0xeb,0x70,0x9f,0xd5,0x65,0xe8,0x5e,0x1a,0xc8,0xd9,0xae,0x87,0xbf,0xa1,0x5b,0xb1,
    0x9c,0x85,0xeb,0x38,0x2f,0x8d,0xe0,0x93,0x98,0xc6,0xe0,0x63,0x5c,0x8c,0xd8,0x4d,
    0x98,0xd7,0xd8,0x9f,0x8b,0x98,0xaf,0x4f,0x13,0x13,0xdf,0x8c,0x9a,0x89,0xaf,0x29,
    0xb6,0xf0,0xcb,0x59,0xba,0x01,0xfe,0xe6,0xc4,0xcb,0x5e,0x69,0x01,0xbe,0xd8,0xc5,
    0xc8,0x3d,0xd7,0x0a,0x4c,0xce,0xd9,0x49,0xc7,0xd1,0x06,0xdd,0x67,0x5c,0x7c,0x2b,
    0xbf,0xae,0xc0,0x63,0xd2,0xa7,0xd6,0x70,0x4b,0x1d,0xda,0xd1,0x9b,0x96,0x70,0xcb,
    0xbe,0x68,0x0f,0x3e,0x12,0xfb,0x46,0x30,0x9d,0xd3,0xc1,0xcc,0x11,0xbd,0x1d,0x88,
    0x39,0xed,0xb8,0x35,0x47,0x1b,0xa3,0xff,0x26,0xf4,0x77,0x34,0xfa,0x6f,0x06,0x57,
    0xfd,0xb7,0x80,0xa9,0xfe,0xce,0x46,0xbf,0xf8,0x3a,0xb9,0xd1,0x19,0xee,0x4e,0x46,
    0xcb,0xad,0x68,0xe9,0x62,0xf4,0xdf,0x06,0xae,0xfa,0xbb,0x82,0xe9,0x9c,0x6e,0x66,
    0x8e,0xe8,0xef,0x46,0x8c,0xe8,0xd7,0x1c,0x9d,0x8d,0xfe,0xdb,0xd1,0xdf,0xdd,0xe8,
    0xbf,0x03,0x5c,0xf5,0xf7,0x00,0x53,0xfd,0xbd,0x8c,0x7e,0xf1,0xf5,0x74,0xa3,0x17,
    0xdc,0x3d,0x4d,0xdf,0x7b,0xa3,0x45,0xf6,0x9d,0xd8,0x7d,0xc0,0x7a,0x9b,0xfb,0x4b,
    0xf7,0x44,0x1f,0x34,0x2a,0x4f,0x2f,0x78,0xfa,0xfb,0xbd,0x99,0xb8,0xcf,0x74,0x4f,
    0xde,0x85,0xe6,0x41,0x26,0xd7,0xdd,0xe0,0x6a,0x0f,0x26,0xf7,0x28,0xf6,0xe8,0x10,
    0x62,0x06,0xc3,0x23,0x77,0xde,0xbd,0xf0,0x0c,0x35,0xf5,0xbd,0x0f,0xbc,0xad,0x8b,
    0x11,0xfb,0x01,0xe6,0x06,0x06,0x1b,0x06,0x16,0xf1,0xfb,0x2e,0xee,0xef,0xcb,0xe1,
    0xc4,0x0e,0x83,0x43,0x73,0x3c,0x48,0x8e,0x11,0x26,0xc7,0x48,0xf0,0xae,0xae,0x2e,
    0x72,0x3e,0x1f,0x62,0x8d,0xc3,0xb9,0x43,0x47,0x52,0x97,0x7e,0xf8,0xb4,0x57,0xa3,
    0xe1,0x1a,0x65,0x7a,0x35,0x06,0x5c,0x7b,0xf5,0x30,0x98,0xf6,0x2a,0xdb,0xf4,0x4a,
    0x7c,0x63,0xdd,0xc8,0xa6,0xc6,0x63,0xe1,0x96,0xbb,0x62,0x3c,0xf7,0x96,0x9e,0x15,
    0xb9,0x33,0x27,0x80,0x8b,0x96,0x71,0xd8,0x99,0x2e,0x5e,0x7c,0x8f,0x70,0xff,0x8f,
    0x33,0x1c,0x13,0x0d,0x87,0xcc,0x99,0x48,0x9c,0xfa,0x1f,0xc5,0xdf,0xc5,0xe4,0x78,
    0x0c,0x5c,0xe2,0x27,0x61,0x6b,0x8e,0xc7,0xc9,0x31,0xc9,0x70,0x4c,0x36,0x1c,0x32,
    0x67,0x32,0x71,0xea,0x7f,0x02,0xff,0x54,0x93,0xe3,0x49,0x70,0x89,0x9f,0x82,0xad,
    0x39,0x9e,0x22,0xc7,0x14,0xc3,0x31,0xcd,0x70,0xc8,0x9c,0x69,0xc4,0xc9,0xfe,0xd4,
    0xda,0x65,0x9b,0xbe,0x3c,0x4d,0x5f,0xa6,0x9b,0xbe,0x3c,0x03,0xae,0x7d,0x99,0x01,
    0xa6,0x7d,0x99,0x65,0xfa,0x22,0xbe,0x99,0x6e,0x2c,0x80,0x7b,0xa6,0xd1,0xf2,0x2c,
    0x5a,0x66,0x9b,0xf5,0xcc,0x01,0xd7,0xfb,0x7d,0x2e,0x31,0xad,0xdd,0x2f,0xa2,0xfc,
    0xb6,0x3e,0x0f,0x36,0xd7,0xdc,0xef,0x51,0x5f,0xa7,0x64,0xef,0x9f,0x47,0xcc,0x1c,
    0xc3,0xf1,0x42,0x0e,0x47,0x2e,0x6f,0xcf,0x07,0x9b,0xc7,0x6f,0x61,0xb2,0xf9,0xcd,
    0xd6,0xbd,0x39,0x9f,0x9a,0xcc,0x42,0xf7,0x02,0x53,0x93,0x17,0xa9,0xc9,0x42,0x53,
    0x93,0x97,0xc0,0xb5,0x26,0x2f,0x83,0x69,0x4d,0x16,0x9b,0x9a,0x88,0x6f,0x91,0x8f,
    0x4d,0x70,0x2f,0x32,0x35,0x79,0xe5,0x22,0x35,0x79,0x15,0x7c,0x15,0xdc,0xaf,0x81,
    0x2d,0x41,0xa3,0xf2,0xc8,0xe7,0x09,0xc7,0x22,0x31,0xaf,0xa3,0x61,0x01,0xf1,0x8b,
    0xd0,0xb1,0xcc,0xe8,0x90,0x98,0xa5,0x6e,0x2c,0x63,0xfe,0x52,0xa3,0xe3,0x8d,0x8b,
    0xe8,0x78,0x13,0x5c,0xeb,0xba,0x3c,0xd4,0x9b,0xb7,0xc0,0x96,0x87,0x7a,0x23,0xf7,
    0x88,0xf8,0x57,0xc0,0xa1,0x63,0x02,0x3d,0x5b,0xc9,0xdc,0x15,0x86,0xfb,0xed,0x50,
    0xcf,0x56,0x81,0xad,0xfc,0x8f,0x9e,0xad,0xa2,0x1e,0xba,0x9e,0x65,0xa1,0x1e,0xce,
    0x32,0xfc,0x6b,0xe0,0x6f,0xcb,0x59,0x79,0x07,0x2c,0x30,0xd8,0x5a,0xb0,0x88,0xc1,
    0xde,0x05,0x8b,0x1a,0x6c,0x1d,0x58,0xcc,0xaf,0x35,0x71,0xef,0xbd,0x07,0xe7,0x5a,
    0xe6,0xac,0x43,0xe7,0x6a,0x7c,0xba,0x97,0xde,0x67,0x2f,0xad,0x37,0x7b,0xe9,0x03,
    0x70,0xdd,0x4b,0x1f,0x82,0xe9,0x5e,0xda,0x68,0x7a,0x28,0xbe,0x0d,0x6e,0x6c,0x64,
    0x8d,0x1b,0x4c,0x0f,0x3f,0xe2,0x79,0xcb,0xde,0x7b,0x1f,0x83,0x8b,0x96,0x4d,0xd8,
    0x7a,0x5f,0x7c,0xc2,0xb3,0xfa,0x26,0xc3,0xb1,0xd9,0x70,0xc8,0x9c,0xcd,0xc4,0xa9,
    0xff,0x53,0xfc,0xf6,0xde,0xfb,0x0c,0x5c,0xe2,0xb7,0x60,0x6b,0x8e,0xcf,0xc9,0xb1,
    0xc5,0x70,0x6c,0x35,0x1c,0x32,0x67,0x2b,0x71,0xea,0xff,0x02,0xbf,0xbd,0xf7,0xbe,
    0x04,0x97,0xf8,0x6d,0xd8,0x9a,0x63,0x3b,0x39,0xb6,0x19,0x8e,0x1d,0x86,0x43,0xe6,
    0xec,0x20,0x4e,0xf6,0x87,0xd6,0x6e,0xa3,0xe9,0xcb,0x57,0xf4,0x65,0xa7,0xe9,0xcb,
    0xd7,0xe0,0xda,0x97,0x6f,0xc0,0xb4,0x2f,0xbb,0x4d,0x5f,0xc4,0xb7,0xcb,0x8d,0x7d,
    0x70,0xef,0x32,0x7b,0x6f,0x0f,0x5a,0xf4,0x99,0x75,0x2f,0xd8,0x1e,0xf3,0x5c,0xae,
    0xb1,0xdf,0xe6,0xc4,0x26,0xce,0xc1,0x77,0x60,0x7b,0xcd,0x39,0x88,0x9a,0x73,0xb0,
    0x9a,0x18,0x59,0xd7,0x6e,0x72,0xef,0x33,0xeb,0xfa,0x9e,0x75,0xed,0x37,0xeb,0xfa,
    0x01,0x5c,0xd7,0xf5,0x23,0x98,0xae,0xeb,0xa0,0x59,0x97,0xf8,0x0e,0xb8,0x71,0x18,
    0xee,0x03,0xa6,0xc6,0x3f,0xa1,0xd5,0xde,0x19,0x3f,0x83,0x6b,0xcc,0xa1,0xd0,0x7e,
    0x3a,0x44,0x8c,0xe8,0x3d,0x08,0xe7,0x61,0xf3,0x8c,0xf1,0x0b,0x7a,0x8f,0x9a,0x67,
    0x8c,0x5f,0xc1,0x65,0xfe,0x11,0x6c,0xf5,0xfd,0xc6,0xff,0x08,0x1b,0x79,0x9e,0xf9,
    0x1d,0x6c,0x84,0x59,0xdf,0x1f,0xe0,0x83,0x58,0xdf,0x71,0xb3,0x3e,0xf1,0x1d,0x73,
    0xe3,0x38,0x5a,0x8e,0x19,0xed,0x27,0x42,0xfb,0xf4,0x84,0xb9,0x83,0x35,0xfe,0xb8,
    0xd1,0xf2,0x67,0x48,0xcb,0x49,0xb0,0xe6,0x46,0xcb,0x29,0x70,0xd5,0x72,0xc6,0x68,
    0x39,0xe5,0xb9,0x03,0x8f,0x09,0xf7,0x69,0xa3,0xe5,0x6c,0x68,0x3f,0x9f,0x35,0x5a,
    0x34,0xfe,0x8c,0xd1,0xf2,0x57,0x48,0xcb,0x39,0xb0,0x9d,0x46,0xcb,0xdf,0xe0,0xaa,
    0x45,0x1f,0x64,0x45,0x8b,0xf8,0xce,0x73,0xa9,0x0b,0xf7,0x79,0xa3,0x25,0x1a,0xf9,
    0xb7,0xef,0xa2,0x45,0x6c,0xf9,0x9f,0x54,0xb4,0x68,0x7c,0x10,0xb9,0xb0,0xc7,0x07,
    0x43,0x7b,0x74,0xb7,0xd9,0xf3,0xc9,0xf0,0x09,0x97,0xfc,0xef,0x2a,0xf6,0x39,0x47,
    0x50,0xdb,0x8d,0x5a,0x9c,0xf1,0xdc,0xd4,0x29,0xd5,0xff,0xaf,0x1b,0xf3,0x3a,0x72,
    0xc1,0x95,0xc7,0xec,0xbf,0x02,0xe0,0x6b,0x58,0x63,0x61,0xb0,0x82,0xac,0xb1,0xa8,
    0xa9,0x77,0x61,0xff,0x3e,0x4b,0xde,0x4d,0x24,0x78,0x8a,0x18,0x9e,0x62,0xf0,0x64,
    0x93,0xbf,0x04,0x58,0x71,0x5f,0xb7,0xa8,0xb7,0x65,0x4e,0x49,0x33,0xa7,0x14,0x73,
    0xf2,0x3a,0x75,0x71,0xde,0x05,0x46,0xc0,0x4b,0xf1,0x2e,0x4b,0xf9,0xd2,0xf0,0x97,
    0xf1,0xcf,0xb9,0xc9,0x39,0xef,0xcf,0xd2,0x78,0xa7,0x25,0x39,0xca,0x91,0xa3,0xa8,
    0xef,0xc5,0x85,0xf5,0xc8,0x77,0x91,0x7a,0xe4,0x25,0x3e,0xbf,0xd1,0x54,0x1e,0x5c,
    0xeb,0x51,0xc1,0xbc,0x7f,0x94,0x7a,0x54,0x32,0xf5,0x10,0x5f,0x45,0xff,0x9e,0x21,
    0xc1,0x53,0xd1,0xf0,0x54,0x86,0x67,0x02,0xf9,0xab,0x80,0x69,0x3d,0xaa,0x30,0xa7,
    0xaa,0x99,0x53,0x8d,0x39,0xa3,0x99,0x73,0x25,0x58,0x59,0xc3,0x93,0x0e,0x5e,0xc6,
    0xd4,0xad,0xba,0xa9,0x5b,0x3a,0xef,0xf0,0x24,0x47,0x75,0x72,0x54,0x32,0xf5,0xf8,
    0x07,0xec,0x05,0xca,0x95,0x5c,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture3D src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
