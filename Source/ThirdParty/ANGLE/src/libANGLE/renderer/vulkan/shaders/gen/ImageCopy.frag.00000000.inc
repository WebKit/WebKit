// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000000.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000000[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x58,0x6b,0x4c,0x96,0x65,
    0x18,0x7e,0x9f,0xef,0xe3,0xe0,0xa9,0xc2,0x54,0xf2,0x40,0x59,0x1e,0xa6,0x4b,0x45,
    0x37,0x48,0x05,0xe4,0xa0,0xe5,0x81,0x44,0x50,0x4c,0x33,0x98,0x1a,0x8a,0xac,0x54,
    0xc4,0x04,0x31,0x2d,0x1d,0xe5,0xb2,0x7e,0xb0,0x48,0xa5,0x99,0x27,0xd0,0xa0,0x48,
    0x98,0x07,0xb4,0xd3,0xd2,0xd2,0xad,0x1f,0xf5,0xa7,0xcd,0x4a,0x7e,0xa4,0x95,0xac,
    0x39,0x6b,0x25,0x5b,0xc9,0x4c,0x30,0x5d,0x3d,0xf7,0xfb,0x5c,0x37,0xdf,0xb5,0x77,
    0xb5,0xd8,0x9e,0xbd,0xef,0x73,0xdd,0xa7,0xeb,0xbe,0xde,0xe7,0x79,0xde,0x97,0x2f,
    0x1c,0x1a,0x19,0xeb,0x79,0xc6,0xeb,0xe3,0xf5,0xf2,0x3e,0x32,0x9e,0xff,0xd7,0xdf,
    0x0b,0x79,0x72,0xdb,0xd7,0x8b,0xf1,0xaf,0xb3,0x73,0x16,0xe6,0x24,0x96,0x57,0x14,
    0x27,0x26,0x3f,0x32,0x49,0xec,0x77,0x7b,0x61,0xdf,0x4f,0x6c,0xf7,0x78,0xb1,0x5e,
    0x94,0xbd,0xca,0x28,0x2d,0x7a,0x76,0x9d,0xe0,0x29,0x76,0xdc,0xb1,0x23,0xce,0xfa,
    0x09,0x1e,0x2b,0x39,0xec,0x5d,0x8a,0x9f,0x53,0x62,0x3c,0x6f,0x8e,0x17,0xed,0x65,
    0xba,0x72,0xde,0x48,0x5c,0x15,0x33,0xc0,0x7a,0x11,0x16,0x02,0x16,0x47,0x58,0x18,
    0xd8,0x40,0xc2,0xa2,0x80,0x0d,0x26,0x2c,0x1a,0x58,0x02,0x61,0x31,0xc0,0x1e,0x24,
    0x2c,0x16,0xd8,0x28,0xc2,0x7a,0x01,0x1b,0x4b,0x58,0x6f,0x60,0xe3,0x09,0xeb,0x03,
    0x6c,0x12,0x61,0x7d,0x81,0x25,0x13,0xd6,0x0f,0xd8,0x54,0xc2,0xee,0x02,0x36,0xcd,
    0xd7,0x29,0xdc,0xd3,0xaf,0x68,0x56,0x6a,0xaf,0x23,0xa0,0x8f,0xce,0x1f,0xa2,0xb9,
    0xe8,0xfc,0x00,0xe6,0x03,0x6c,0x54,0xc8,0xb7,0x87,0x7d,0x6d,0xe4,0x3e,0xde,0xde,
    0xc5,0xa0,0xcf,0x71,0xd6,0x3f,0x06,0x1a,0x26,0x24,0xce,0x4b,0x1b,0x68,0x3d,0xfa,
    0x13,0x1e,0x6f,0x47,0xfe,0xc7,0xb9,0xd3,0x75,0x3e,0xcc,0x8e,0x45,0x8b,0xda,0x32,
    0x74,0x7e,0xbf,0x1d,0xe9,0x7d,0x5e,0xcd,0xd4,0xf9,0x70,0x3b,0x8e,0xcd,0x2e,0x4a,
    0xd7,0xb9,0xe8,0x76,0xf5,0xd8,0xe8,0x9e,0xf9,0x44,0x3b,0xf6,0xed,0x1d,0x92,0x35,
    0xc8,0xce,0x93,0xc0,0x41,0x9e,0xed,0x7d,0x76,0x2e,0x9a,0x24,0x81,0xa3,0xcc,0xa7,
    0xe0,0x99,0x44,0xf9,0x7e,0x51,0xbe,0x3e,0xe2,0x2b,0x78,0x1a,0xe6,0x29,0x14,0x9f,
    0x0a,0x7f,0x89,0x97,0xfc,0x19,0xc8,0xef,0xf9,0x7a,0xc4,0xf9,0x1a,0x26,0x63,0x24,
    0x61,0x64,0xfc,0xcf,0x50,0x1f,0xa9,0x9f,0x85,0xe7,0x9c,0x89,0xfa,0x32,0x9f,0x0e,
    0x6c,0x1c,0xfa,0x99,0x01,0x3e,0xe2,0xff,0x28,0x6c,0xc9,0x64,0xcf,0xa6,0x7e,0x1e,
    0x87,0x3d,0x03,0x76,0xb9,0xce,0x03,0x5f,0xf5,0x5f,0x8c,0xb5,0xaa,0xf3,0x22,0xac,
    0x8d,0x21,0x36,0x72,0x0d,0xfa,0xc5,0x16,0xed,0xf9,0xd3,0xb9,0xd4,0x58,0x8b,0xfb,
    0x35,0xe0,0x2c,0xf3,0xd2,0x40,0x8d,0xb2,0xc0,0xbc,0x02,0x1a,0x4a,0xfc,0x46,0x70,
    0x4c,0x22,0xfb,0x66,0xac,0x6d,0x9d,0xd7,0x80,0x87,0x3c,0x83,0xb7,0x70,0x1f,0x26,
    0x7b,0x3d,0xf6,0x91,0xae,0x81,0xa6,0x40,0xbd,0xd3,0xd8,0x17,0x3a,0x3f,0x8f,0x3d,
    0xa6,0xf3,0x4b,0x01,0x8d,0xaf,0x62,0xcf,0x68,0xbe,0x5b,0x7e,0xb6,0xaa,0x4c,0xe1,
    0x7b,0x1b,0xb5,0x75,0x8d,0xdc,0xc6,0xb9,0x13,0x26,0xff,0x03,0x56,0xa0,0xb2,0xa6,
    0x0d,0x3d,0x6b,0xf6,0xa0,0x9d,0xef,0xdc,0x5e,0x97,0x3e,0xd9,0x2a,0x1d,0xc2,0xf3,
    0xf1,0x10,0xd3,0x65,0x11,0xd1,0x3f,0x1d,0xeb,0x31,0x0d,0x6b,0x2e,0xcf,0x76,0x94,
    0x8a,0xfd,0x99,0x86,0xa1,0xda,0xaf,0xc3,0x5a,0x4e,0x87,0x7d,0xba,0xcd,0x20,0x6b,
    0xe1,0x31,0xac,0x97,0x19,0xc8,0x27,0x3e,0x33,0x81,0xbf,0x6c,0x7d,0x64,0x3e,0x0b,
    0x71,0x33,0x11,0x27,0x6b,0x64,0x2e,0xe2,0xb2,0x11,0x27,0xeb,0x24,0x07,0x78,0x8b,
    0xf5,0x91,0xfd,0x9a,0x0b,0x4c,0xd6,0xcf,0x4d,0xcb,0x7c,0x3e,0xf8,0xdc,0xb2,0xfe,
    0xb9,0x3e,0x5f,0xcf,0xc7,0xa4,0x1f,0xb9,0x5f,0x60,0xe3,0x44,0xcb,0x85,0xa8,0x29,
    0x7f,0xdb,0xa0,0xef,0x13,0xc0,0xf3,0xad,0x3a,0xc2,0x69,0x8b,0x71,0x98,0xfa,0x75,
    0xdb,0x1c,0x9a,0x4b,0xae,0x37,0xac,0x16,0xe2,0x57,0x67,0x9c,0x4f,0x34,0x62,0xf2,
    0xa8,0x87,0x27,0xd1,0xc3,0x62,0xea,0x61,0x09,0x70,0xed,0xe1,0x29,0x60,0xda,0x43,
    0x21,0xf5,0x20,0xb6,0x02,0x3b,0x0a,0x51,0xb7,0x80,0x7a,0x58,0x86,0xda,0x86,0x7a,
    0x58,0x0e,0x5c,0x7b,0xd8,0x6a,0x1c,0xa6,0x7e,0xd2,0x83,0xe6,0x2a,0xa4,0x1e,0xea,
    0x8d,0xf3,0x99,0x8f,0x98,0x02,0xea,0x61,0x05,0x7a,0x28,0xa2,0x1e,0x56,0x02,0xd7,
    0x1e,0x8a,0x81,0x69,0x0f,0x25,0xd4,0x83,0xd8,0x56,0xd9,0x51,0x82,0xba,0xab,0xb0,
    0x8e,0xa4,0xee,0x33,0xa8,0x5d,0x6f,0x22,0xfb,0x57,0x38,0xaa,0x6f,0x09,0x71,0x3c,
    0x04,0xbf,0x42,0xc4,0xad,0x02,0x9f,0x35,0xfe,0xda,0x73,0xfb,0x5b,0xd7,0xdc,0x7a,
    0x70,0x2e,0xa3,0x35,0xf7,0x1c,0xf0,0x2a,0xac,0xb9,0x72,0x60,0x92,0x57,0xe2,0x64,
    0xcf,0x57,0x22,0xae,0x02,0x71,0xa2,0xe9,0x26,0xe0,0xcb,0x2d,0x0f,0xd9,0x0b,0xcf,
    0xa3,0x5e,0x39,0xce,0x8b,0x4d,0xa4,0xd5,0x16,0xc4,0x6f,0x26,0xad,0x5e,0x00,0xae,
    0x5a,0xbd,0x08,0x4c,0xb5,0xda,0x46,0x5a,0x89,0x6d,0xab,0xff,0x3c,0x5d,0xff,0x5b,
    0xf1,0xbc,0x65,0xbf,0xbe,0x84,0xda,0x1e,0xe2,0x12,0x20,0xd8,0x5f,0xf6,0x5e,0x72,
    0xc5,0x19,0x17,0x23,0xd7,0x33,0xa8,0x75,0xaf,0x71,0x71,0x71,0x88,0x19,0x66,0x22,
    0xb5,0xc4,0x36,0xc0,0x8e,0x78,0xc4,0xc9,0xb5,0x9f,0xed,0x51,0x6a,0x0d,0xc6,0xf3,
    0x18,0x8a,0xba,0xf2,0xfe,0x7b,0x05,0x3c,0x86,0x18,0x67,0x97,0x77,0xe0,0x76,0x60,
    0x43,0x8d,0xc3,0x87,0xe3,0xf9,0x25,0x20,0xa7,0xe4,0xd7,0xb8,0x41,0xe0,0x12,0x1f,
    0xf0,0x11,0x4e,0x7f,0xdb,0x6a,0x5d,0xc0,0x6e,0x80,0xc3,0x61,0xe3,0xf2,0x0a,0xaf,
    0x41,0xe0,0x2a,0xeb,0x5a,0x9e,0x41,0x95,0x71,0x76,0xd5,0x43,0x35,0xda,0x01,0x8d,
    0x0c,0xfa,0x4d,0x0c,0x68,0x34,0x02,0x35,0x47,0x90,0x46,0xa3,0x8c,0x8b,0x53,0x8d,
    0x26,0x90,0x46,0x62,0x1b,0x6d,0xc7,0x58,0xc4,0x8d,0x25,0x8d,0x1e,0x26,0x8d,0x76,
    0x04,0x34,0x1a,0x67,0x9c,0x9d,0x35,0x1a,0x6f,0x1c,0xae,0x1a,0x25,0x22,0xe7,0x68,
    0xd2,0x68,0x0c,0xb8,0xc4,0x07,0x7c,0x26,0x90,0x46,0x89,0xa4,0x51,0x83,0x71,0x79,
    0x85,0xd7,0x18,0x70,0x55,0x8d,0xb6,0x1b,0x67,0xaf,0x02,0x4f,0xd5,0xa8,0x1a,0x1a,
    0x85,0xd0,0x6f,0x56,0x40,0xa3,0x64,0xd4,0x4c,0x26,0x8d,0x26,0x1b,0x17,0xa7,0x1a,
    0x65,0x92,0x46,0x62,0x9b,0x62,0x47,0x2a,0xe2,0x52,0x49,0xa3,0x69,0xa4,0x51,0x75,
    0x40,0xa3,0x74,0xe3,0xec,0xac,0x51,0x86,0x71,0xb8,0x6a,0x94,0x85,0x9c,0x53,0x48,
    0xa3,0x14,0x70,0x89,0x0f,0xf8,0x64,0x92,0x46,0x59,0xa4,0xd1,0x3b,0xc6,0xe5,0x15,
    0x5e,0x29,0xe0,0xaa,0x1a,0xed,0x30,0xce,0x2e,0x5a,0x85,0x90,0x4f,0xf7,0xde,0x36,
    0x9c,0x3d,0xe2,0xd7,0x84,0xb5,0x56,0x82,0x98,0x2c,0x13,0xd9,0xf3,0x6f,0x60,0xcf,
    0xd7,0xd0,0x9e,0xdf,0x09,0x5c,0xf7,0xfc,0x2e,0x60,0xba,0xe7,0x6b,0x69,0xcf,0x8b,
    0x6d,0xb7,0x9c,0xd1,0xa8,0x5b,0x47,0xe7,0xc9,0x21,0xe4,0xae,0xa7,0xdc,0x87,0x81,
    0x6b,0xee,0xb7,0x81,0x69,0xee,0x46,0xca,0x2d,0xb6,0x06,0x3b,0x1a,0x91,0xbb,0x81,
    0xd6,0xc1,0xbb,0xe8,0x4b,0xde,0xf7,0x9f,0x20,0xd7,0x7b,0x8a,0x43,0x0b,0x8d,0x6b,
    0x84,0x16,0xe2,0x73,0x04,0x35,0xeb,0xe0,0xdf,0x80,0xba,0x2d,0x54,0x57,0x7c,0x9a,
    0x7d,0x8e,0x2e,0xbe,0x99,0xea,0x1e,0xa5,0xba,0x79,0xf6,0x8b,0x47,0xbe,0x9d,0x8e,
    0x03,0x6b,0x32,0x91,0xef,0x89,0x90,0xff,0xee,0x8e,0xf1,0xed,0x27,0x10,0xa7,0xe3,
    0x35,0x9b,0x4b,0xf0,0x56,0xc4,0x9e,0xf0,0x73,0xf5,0xf6,0x9f,0xd5,0x29,0xe4,0x6a,
    0xc5,0x37,0x4d,0x34,0x7d,0x9b,0x49,0x4f,0xca,0xa9,0x85,0x9e,0x6f,0x33,0x6a,0x37,
    0x22,0xbe,0x19,0xbe,0xb5,0xf0,0xdd,0x4d,0xfc,0xf7,0xfc,0x0b,0xff,0x7d,0xff,0xc1,
    0xff,0x75,0xf0,0xdc,0x0f,0x9f,0x3d,0xc4,0xf3,0x20,0x62,0xf6,0xff,0x07,0x4f,0xad,
    0x5d,0x4b,0x3c,0x8f,0x18,0xc7,0xb5,0x05,0xf1,0xbb,0x69,0xad,0x9c,0xc1,0x5a,0x39,
    0x4d,0x6b,0xe5,0x53,0xe0,0xba,0x56,0x3e,0x03,0xa6,0x6b,0xe5,0x1c,0x3d,0x33,0xb1,
    0x9d,0xb5,0xe3,0x1c,0xea,0x9e,0xa5,0x9e,0x3f,0x47,0x6d,0x7d,0xf7,0xe4,0x07,0xce,
    0x8c,0x59,0xd8,0x83,0xb3,0xe8,0xcc,0x98,0x63,0x5c,0xdc,0x28,0xc4,0x2c,0xa0,0x33,
    0x43,0x6c,0xd9,0x76,0xe4,0x20,0x2e,0xc7,0x7f,0x37,0xb8,0x5a,0xb9,0x88,0x1b,0x4e,
    0x67,0x45,0x9e,0x71,0xf8,0x01,0x3a,0x5b,0xe6,0xd3,0xd9,0x22,0xf6,0x89,0xd0,0x2d,
    0x1f,0x39,0xb3,0xe9,0xcc,0x98,0x8b,0x9c,0xf2,0xcd,0xcb,0x3e,0x0b,0xe8,0xcc,0xc8,
    0xa7,0x33,0xa3,0xc5,0xb8,0xfc,0xc2,0x6b,0x2e,0xb8,0xea,0x99,0x51,0x6d,0x9c,0x5d,
    0xf5,0x50,0x8d,0xbe,0x84,0x46,0xfa,0xee,0x29,0x0e,0x68,0xb4,0x04,0x35,0x97,0x90,
    0x46,0x05,0xc6,0xc5,0xa9,0x46,0x2b,0x49,0x23,0xb1,0x15,0xda,0xb1,0x0c,0x71,0xcb,
    0x48,0xa3,0xa7,0x11,0xc7,0x1a,0x15,0x19,0x87,0xb3,0x46,0x2b,0x48,0xa3,0x22,0xd2,
    0xa8,0x18,0x39,0x0b,0x49,0xa3,0xa5,0xc8,0xa9,0x1a,0xa9,0xcf,0x4a,0xd2,0xa8,0x98,
    0x34,0x3a,0x6a,0x5c,0x7e,0xe1,0xb5,0x14,0x5c,0x55,0xa3,0x1a,0xe3,0xec,0xd5,0x81,
    0x77,0xcf,0x57,0xd0,0x48,0xdf,0x3d,0x95,0x01,0x8d,0x56,0xa3,0xe6,0x6a,0xd2,0x68,
    0xad,0x71,0x71,0xaa,0xd1,0x46,0xd2,0x48,0x6c,0xa5,0x76,0xac,0x47,0xdc,0x7a,0xd2,
    0x68,0x03,0xe2,0x58,0xa3,0x72,0xe3,0x70,0xd6,0xa8,0x82,0x34,0x2a,0x27,0x8d,0x2a,
    0x91,0xb3,0x94,0x34,0x2a,0x43,0x4e,0xd5,0x48,0x7d,0x36,0x92,0x46,0x95,0xa4,0xd1,
    0x71,0xe3,0xf2,0x0b,0xaf,0x32,0x70,0x55,0x8d,0x76,0x19,0x67,0xaf,0xa1,0x77,0x8f,
    0xee,0xbd,0x73,0xb4,0xe7,0x5b,0xb1,0xd6,0x6a,0x11,0x53,0x49,0xef,0x9e,0xaf,0xb1,
    0xe7,0xcf,0xd3,0x9e,0xff,0x06,0xb8,0xee,0xf9,0x6f,0x81,0xe9,0x9e,0x6f,0xa3,0x3d,
    0x2f,0xb6,0x0b,0x76,0x5c,0x44,0xdd,0x8b,0x74,0x9e,0x7c,0x8f,0xdc,0x97,0x28,0xf7,
    0x0f,0xc0,0x35,0xf7,0x8f,0xc0,0x34,0x77,0x3b,0xe5,0x16,0xdb,0x65,0x3b,0xae,0x20,
    0xf7,0x15,0x2f,0xf2,0x9d,0xfd,0x33,0x72,0x5f,0xa5,0xef,0xec,0x5f,0x80,0x7f,0x81,
    0xff,0x6f,0x7e,0x05,0x56,0x41,0xf5,0x7e,0x03,0x5e,0x86,0x7a,0x1d,0x54,0x4f,0x6c,
    0xd7,0xec,0xe8,0x40,0xbd,0x6b,0x5e,0x44,0xeb,0x3d,0xc6,0xbd,0xd3,0x5a,0xe9,0xff,
    0x20,0xf5,0xeb,0x20,0xad,0x4f,0x1a,0xe7,0x73,0x05,0x31,0xd7,0x88,0xcf,0xef,0xe0,
    0x93,0x4d,0x7c,0xfe,0x00,0xae,0x7c,0x3a,0x89,0x8f,0xd8,0xae,0xdb,0xd1,0x89,0x3a,
    0xd7,0x89,0xcf,0x5e,0xf0,0x39,0x49,0xcf,0x5e,0xfd,0x3a,0x89,0xcf,0x29,0xe3,0x7c,
    0x3a,0x10,0x73,0x9d,0xf8,0xfc,0x09,0x3e,0xe7,0x89,0xcf,0x4d,0xe0,0xca,0xa7,0x9b,
    0xf8,0xdc,0xf4,0xf3,0x7b,0x3e,0x26,0x75,0xba,0x88,0xcf,0x7e,0xe3,0x7e,0x4f,0x38,
    0x65,0x22,0xef,0x1f,0xf5,0xeb,0x26,0x3e,0x1f,0x1a,0xe7,0xd3,0x89,0x98,0x2e,0xf8,
    0xb6,0xc3,0xf7,0x32,0xed,0xf5,0x9f,0xa0,0x77,0x98,0xea,0xbc,0x69,0x22,0xb8,0x17,
    0x88,0x6d,0xa7,0x3a,0x1f,0x18,0x57,0xab,0x1b,0x31,0x97,0xe1,0xdb,0x06,0xdf,0x0b,
    0xf4,0x1e,0xfd,0x0e,0xf9,0x64,0xe8,0x6f,0xac,0x21,0x7a,0x8f,0x6a,0x4c,0x1b,0xe5,
    0x7f,0xdf,0xb8,0x1a,0xed,0x88,0xbf,0xe0,0xff,0x1e,0x15,0xf6,0x7f,0x33,0x11,0xdb,
    0x1d,0xbb,0x4a,0xa6,0xda,0xf1,0x0f,0xf1,0x30,0xc6,0x39,0x14,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2D src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, params . srcOffset + srcSubImageCoords, params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
