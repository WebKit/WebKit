// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolve.frag.00000009.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolve_frag_00000009[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x94,0xdb,0x4f,0x94,0x67,
    0x10,0xc6,0xdf,0xdd,0x6f,0xd9,0x45,0x8b,0x96,0x82,0x08,0xb5,0xe2,0x89,0xaa,0x05,
    0x5b,0xb2,0x6d,0xd9,0xc6,0x86,0xa2,0xa8,0x89,0x78,0x58,0x6d,0x11,0x0f,0xf5,0x5c,
    0x2b,0x68,0x9a,0x16,0xf6,0x02,0x2b,0x5c,0xa8,0x90,0xd4,0x03,0x5c,0x78,0x80,0x0b,
    0x0f,0x70,0x61,0x55,0x2e,0x4c,0xac,0xed,0x9f,0xe1,0x5f,0xd4,0xf4,0x90,0x34,0xe9,
    0xcc,0xfb,0xfd,0xc6,0x4c,0xbe,0x4d,0x26,0xdf,0xce,0xf3,0xcc,0xcc,0x33,0xf3,0x9e,
    0x92,0x7c,0x47,0x29,0x84,0x5c,0x58,0x1e,0xea,0xc3,0x1f,0x21,0xfd,0xbd,0x17,0xf2,
    0x82,0x84,0xf0,0x4e,0x28,0xc6,0xef,0x40,0x75,0xa8,0xda,0x3d,0x7e,0x65,0xb8,0xbb,
    0xa7,0x52,0x56,0x7e,0x65,0x48,0x62,0x9c,0x72,0xef,0x8a,0x57,0x90,0xaf,0xda,0xe8,
    0x85,0x1f,0xc6,0x14,0x6f,0x10,0xbb,0x2c,0x56,0x13,0x9b,0x14,0x9b,0x16,0x9b,0x15,
    0x9b,0x17,0x5b,0x14,0x5b,0x12,0x6b,0x94,0x1a,0x9a,0x53,0xd2,0xfa,0xf2,0xaf,0x21,
    0xea,0x69,0xbd,0x10,0xf6,0x85,0xba,0xb0,0x8a,0x5e,0x3a,0xf8,0x1a,0x96,0x03,0xab,
    0x77,0x58,0x1e,0xac,0xd1,0x61,0x09,0x58,0x9b,0xc3,0x0a,0x60,0x6b,0x1d,0x56,0x07,
    0xb6,0xc1,0x61,0x45,0xb0,0x0f,0x1d,0x56,0x02,0xfb,0xc8,0x61,0xf5,0x60,0x1f,0x3b,
    0x6c,0x19,0x58,0x39,0xce,0x95,0xbc,0xed,0x4f,0x67,0xdc,0x27,0xdf,0x4d,0xcc,0x63,
    0xfe,0x46,0xe7,0x57,0x33,0x7c,0x15,0xde,0xf2,0x75,0x4d,0xd7,0x39,0xbe,0x86,0x9f,
    0xc3,0x9f,0xc4,0xb7,0xf8,0x69,0xfc,0x04,0x7f,0x16,0xbf,0x80,0x3f,0x8f,0x5f,0x87,
    0xbf,0x88,0x5f,0xc4,0x5f,0xc2,0xd7,0xd9,0x9b,0xa5,0x6a,0x3e,0xf6,0x93,0xc4,0x7a,
    0xfa,0x7f,0xb5,0xfc,0x2b,0xb2,0x76,0xad,0x12,0x5f,0x22,0x37,0x8f,0xbf,0x1c,0xbf,
    0x10,0x63,0x0a,0x71,0x7f,0xb5,0x57,0xc5,0x7b,0xf1,0x1b,0xc0,0x5a,0xc4,0x6f,0xa2,
    0x96,0xf9,0xcd,0xf8,0x21,0xf6,0xd1,0xf0,0x76,0x1f,0xcc,0x9a,0xb0,0x22,0xdf,0x66,
    0x67,0xaa,0xd7,0xc2,0x7e,0xac,0x42,0xaf,0x25,0xf6,0x9c,0x62,0xdb,0xd0,0x6b,0x45,
    0x4f,0xe3,0xdb,0xe0,0x4a,0x8e,0x6f,0x47,0xdf,0xfc,0x4d,0xf0,0x1a,0xdf,0x41,0x7c,
    0x73,0xd4,0xc8,0x87,0x2d,0xc4,0xa9,0xbf,0x35,0x93,0x57,0xe6,0xbc,0x98,0xdf,0x4b,
    0xae,0xae,0xd3,0x1e,0x6a,0xe8,0x3a,0xbd,0x2f,0xe8,0x5e,0xfc,0x1c,0x35,0xb2,0x5f,
    0xd5,0x1e,0xe0,0xff,0x5e,0x66,0x1b,0x88,0x67,0x30,0xfd,0xad,0x91,0x5e,0x0e,0x10,
    0x77,0x10,0xec,0x00,0x71,0xea,0x57,0xc1,0x3e,0x90,0xfd,0x3b,0x4c,0x0d,0xeb,0x6b,
    0x90,0xfd,0x33,0xff,0x18,0xe7,0x47,0x6b,0x1d,0xa7,0xe7,0x26,0xfa,0x3e,0xc5,0xda,
    0x27,0x2e,0xfe,0x3c,0x98,0xc6,0x5f,0x82,0xdb,0x83,0xf6,0x25,0xde,0x85,0xc4,0xf9,
    0xb5,0x4c,0xfe,0x38,0xeb,0x60,0xfc,0x64,0x26,0x7e,0x3a,0x13,0x7f,0x93,0x7b,0x6f,
    0xfc,0x6c,0x86,0xbf,0xcb,0x19,0x32,0x7e,0x3e,0xc3,0x3f,0x14,0xeb,0x77,0xfc,0x62,
    0x86,0x7f,0x8a,0xa6,0xf1,0x4b,0xf0,0x5f,0xc8,0xad,0xc9,0xd3,0x6b,0x00,0xfb,0x5b,
    0x10,0xbd,0x4b,0x7d,0x9c,0xfd,0x15,0x9c,0xef,0x41,0x41,0x8b,0xbc,0x6d,0x2b,0x88,
    0x37,0xac,0x11,0x4c,0xf7,0xf6,0x1b,0xc1,0x4a,0xf1,0xfd,0x4d,0x63,0x95,0xdb,0x25,
    0x58,0x5b,0x3c,0x17,0xe9,0xd9,0x6d,0xa5,0x7e,0x29,0xee,0x73,0x8a,0xdf,0x22,0x6f,
    0x2d,0xb9,0x6b,0x5c,0xde,0x3a,0xf2,0xda,0x5d,0xde,0x7a,0xf0,0x5f,0xc8,0xdb,0x48,
    0xee,0x7a,0xf2,0xec,0xed,0x5b,0xcd,0x79,0xef,0xe3,0x4c,0x6f,0x06,0x7f,0x25,0x31,
    0x5b,0x78,0x0b,0x37,0x73,0xd6,0xff,0x92,0x15,0xe8,0x62,0xb6,0x7f,0x25,0x5e,0xb9,
    0x4e,0xb1,0x2e,0xd6,0xa5,0xd3,0xcd,0xfc,0x89,0x7b,0xf7,0xa6,0x24,0x56,0xb1,0x6e,
    0xf0,0x23,0xe2,0x69,0x4f,0x2f,0xc1,0x2c,0xee,0x1f,0xa9,0x61,0xb5,0xf4,0xfb,0xa7,
    0x44,0x69,0xdc,0x6f,0xc4,0xd4,0x91,0xd3,0xe9,0x66,0xf8,0x94,0x19,0xca,0x6e,0x86,
    0xcf,0xc0,0x6d,0x86,0xcf,0xc1,0x6c,0x86,0x8a,0x9b,0x41,0xb9,0x1e,0xb1,0x0a,0xba,
    0x3d,0x6e,0x86,0xed,0x68,0xe7,0xdc,0x0c,0x5f,0x82,0xdb,0x0c,0xaf,0xc0,0x2c,0x4e,
    0x67,0xb0,0x5a,0x15,0x37,0xc3,0x6b,0x62,0xba,0xc8,0xe9,0x71,0x33,0x7c,0xc5,0x0c,
    0xbd,0x6e,0x86,0x3e,0x70,0x9b,0x61,0x07,0x98,0xcd,0xd0,0xef,0x66,0x50,0x6e,0x27,
    0x67,0x5c,0x75,0xf5,0xff,0xd7,0xe8,0xee,0x46,0xfb,0xb5,0x7b,0x5b,0xb4,0x47,0x8b,
    0xed,0x77,0x3d,0xfe,0x4e,0x5c,0x85,0xbc,0x9d,0xf4,0xa3,0x6f,0xc7,0x7e,0xde,0x1e,
    0xf5,0xf5,0x9d,0x39,0xc4,0x1b,0x73,0x5c,0xfa,0x3b,0x1c,0xf5,0xd2,0x98,0x43,0xee,
    0x5c,0x1e,0x61,0xae,0x41,0x77,0x2e,0x87,0xc0,0xed,0x3c,0x1f,0x45,0x77,0x88,0x3c,
    0x7d,0x7f,0x4e,0x90,0x77,0x8c,0x3c,0xbd,0xa3,0xdf,0x82,0xd7,0xd8,0x87,0x93,0x60,
    0xb6,0x57,0xa7,0xa9,0xe5,0xef,0xdd,0x19,0xb0,0xf4,0xde,0x15,0xe3,0x5b,0x76,0x96,
    0xd8,0x33,0xd4,0x38,0x21,0xb1,0xfa,0x76,0x9d,0x63,0x86,0xb3,0xae,0x8f,0xef,0xe8,
    0xe3,0xbc,0xeb,0xe3,0x02,0xf8,0x1b,0x89,0x51,0xff,0x7b,0xb0,0x56,0xb7,0x57,0x17,
    0xc1,0xdb,0xd9,0xab,0x11,0xb7,0x57,0xca,0x0d,0x8b,0x8d,0xb0,0xfe,0xc3,0x71,0x6f,
    0x93,0xf8,0x66,0x9e,0x63,0x6f,0x8c,0x1b,0x71,0x3a,0x3f,0xa2,0x33,0xe8,0x74,0x7e,
    0x02,0x37,0x9d,0x31,0xa7,0xa3,0xdc,0xa8,0xd8,0x18,0xb5,0x46,0xd1,0xa9,0x39,0x1d,
    0xe3,0xc6,0x9c,0xce,0x15,0x74,0xc6,0x9d,0xce,0xcf,0xe0,0xa6,0x33,0xe1,0x74,0x94,
    0xbb,0x2a,0x36,0x41,0xad,0xab,0xe8,0x4c,0x3a,0x1d,0xe3,0x26,0x9c,0xce,0x35,0x74,
    0xca,0x4e,0xe7,0x3a,0xb8,0xe9,0x4c,0x39,0x1d,0xe5,0x6e,0xc4,0x7b,0x98,0xd6,0xba,
    0x81,0xce,0xb4,0xd3,0x31,0x6e,0xca,0xe9,0xdc,0x42,0xe7,0xa6,0xd3,0xb9,0x0d,0x6e,
    0x3a,0x33,0x4e,0x47,0xb9,0x3b,0x62,0x33,0xd4,0xba,0x83,0xce,0xac,0xd3,0x31,0x6e,
    0xc6,0xe9,0xdc,0x43,0xe7,0xae,0xd3,0xb9,0x0f,0x6e,0x3a,0x73,0x4e,0x47,0xb9,0x07,
    0x62,0x73,0xd4,0x7a,0x80,0xce,0xbc,0xd3,0x31,0x6e,0xce,0xe9,0x3c,0x42,0xe7,0xa1,
    0xd3,0x79,0x0c,0x6e,0x3a,0x0b,0x4e,0x47,0xb9,0x27,0x62,0x0b,0xd4,0x7a,0x82,0xce,
    0xa2,0xd3,0x31,0x6e,0xc1,0xe9,0xfc,0x8a,0xce,0x53,0xa7,0xf3,0x0c,0xdc,0x74,0x5e,
    0x38,0x1d,0xe5,0x9e,0x8b,0xbd,0xa0,0xd6,0x73,0x74,0x96,0x9c,0x8e,0x71,0xfa,0xfd,
    0x4f,0x6e,0xe5,0x76,0xb1,0xff,0x01,0xab,0x46,0xd1,0xdd,0x9c,0x0c,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(push_constant)uniform PushConstants {
//
//             vec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int samples;
//     float invSamples;
//
//     int outputMask;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
// } params;
//
// layout(set = 0, binding = 0)uniform utexture2DArray color;
//
// layout(location = 0)out uvec4 colorOut0;
// layout(location = 1)out uvec4 colorOut1;
// layout(location = 2)out uvec4 colorOut2;
// layout(location = 3)out uvec4 colorOut3;
// layout(location = 4)out uvec4 colorOut4;
// layout(location = 5)out uvec4 colorOut5;
// layout(location = 6)out uvec4 colorOut6;
// layout(location = 7)out uvec4 colorOut7;
//
// layout(set = 0, binding = 2)uniform sampler blitSampler;
//
// void main()
// {
//
//             vec2 srcImageCoords = vec2(gl_FragCoord . xy);
//
//     srcImageCoords *= params . stretch;
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//         srcImageCoords . x = - srcImageCoords . x;
//     if(params . flipY)
//         srcImageCoords . y = - srcImageCoords . y;
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//             uvec4 colorValue = texture(usampler2DArray(color, blitSampler), vec3(srcImageCoords * params . invSrcExtent, params . srcLayer));
//
//     if((params . outputMask &(1 << 0))!= 0)
//     {
//         colorOut0 = colorValue;
//     }
//     if((params . outputMask &(1 << 1))!= 0)
//     {
//         colorOut1 = colorValue;
//     }
//     if((params . outputMask &(1 << 2))!= 0)
//     {
//         colorOut2 = colorValue;
//     }
//     if((params . outputMask &(1 << 3))!= 0)
//     {
//         colorOut3 = colorValue;
//     }
//     if((params . outputMask &(1 << 4))!= 0)
//     {
//         colorOut4 = colorValue;
//     }
//     if((params . outputMask &(1 << 5))!= 0)
//     {
//         colorOut5 = colorValue;
//     }
//     if((params . outputMask &(1 << 6))!= 0)
//     {
//         colorOut6 = colorValue;
//     }
//     if((params . outputMask &(1 << 7))!= 0)
//     {
//         colorOut7 = colorValue;
//     }
//
// }
