// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000011.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000011[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x7d,0x97,0xfb,0x6f,0x54,0x45,
    0x14,0xc7,0xef,0xec,0x6e,0xbb,0x05,0xa4,0x96,0x6c,0xe5,0xb1,0x21,0xa4,0x95,0x0a,
    0x08,0x58,0x2a,0x22,0x94,0xc7,0x22,0x58,0xa0,0x35,0x22,0x48,0x1b,0x12,0x44,0x7c,
    0x54,0x51,0xa8,0x3c,0x14,0xd4,0x5f,0xf8,0x41,0x89,0x88,0x6d,0x82,0x81,0x08,0x2a,
    0x8d,0x28,0x8d,0x11,0x22,0x91,0x44,0x50,0x21,0x51,0x40,0x69,0x0c,0x01,0xa3,0x34,
    0x51,0x1a,0x95,0x06,0xfe,0x02,0x23,0x91,0xa8,0x20,0x2a,0x82,0x73,0xee,0x7c,0x4e,
    0xf7,0xb8,0x8a,0x4d,0x26,0xf7,0xce,0x77,0xce,0xf7,0x3c,0xbe,0x73,0x66,0xf6,0x36,
    0x99,0x18,0x9e,0x8e,0x22,0x17,0xf5,0x8d,0x4a,0xa2,0xbb,0x5c,0x14,0xff,0x0d,0x88,
    0x12,0x91,0xbc,0xf6,0x8b,0x8a,0xe3,0x67,0xfd,0xdc,0xa6,0xb9,0xd5,0x4f,0x3f,0xb3,
    0xb4,0x7a,0xc2,0xed,0x35,0xb2,0x5e,0x1a,0x25,0x63,0x3b,0x59,0xbb,0x3e,0x4a,0x47,
    0x29,0xff,0x94,0xb1,0xaa,0xb9,0x65,0xb5,0xe0,0x23,0xfc,0x38,0xeb,0x47,0x99,0xb7,
    0x13,0x3c,0x2d,0x3e,0xfc,0xdb,0x88,0xd8,0xa7,0x70,0xa2,0xa8,0x21,0x2a,0x8a,0xc6,
    0x86,0x70,0xd1,0x70,0x9e,0x8a,0x39,0xb0,0x12,0x83,0x25,0xc0,0xca,0x0c,0x96,0x04,
    0x2b,0x37,0x58,0x0a,0x6c,0xb0,0xc1,0x8a,0xc0,0x86,0x1a,0xac,0x18,0xac,0xc2,0x60,
    0x69,0xb0,0x2a,0x83,0x95,0x80,0x8d,0x32,0x58,0x1f,0xb0,0xb1,0x06,0xeb,0x0b,0x56,
    0x63,0xb0,0x7e,0x60,0x13,0x0c,0x76,0x1d,0x58,0xad,0xc1,0xfa,0x83,0x4d,0x8b,0x75,
    0x4a,0xf6,0xd6,0x2b,0x9a,0x2d,0xf6,0xcf,0x1b,0xd1,0x47,0xe7,0x95,0x66,0x2e,0x3a,
    0x0f,0x63,0x9e,0xf1,0xac,0x44,0xbc,0x9e,0x8c,0xb5,0x91,0xf7,0x81,0xfe,0xad,0x98,
    0x3a,0xc7,0x78,0xfb,0x62,0xe2,0x0d,0xad,0xbe,0x67,0x6a,0xb9,0xb7,0x28,0x35,0x78,
    0xc6,0x8f,0xc6,0x8f,0xe7,0xcd,0xd4,0xb9,0x68,0xb8,0x70,0xe1,0xb7,0xd3,0x75,0x9e,
    0xf5,0x23,0xd7,0xb7,0xf5,0x0e,0x9d,0x8b,0x9e,0xef,0xd7,0x37,0xe7,0x6e,0xf0,0xf3,
    0x0a,0x62,0xc8,0xde,0x0d,0xf2,0xf3,0x4a,0xe6,0x09,0xe6,0x55,0x68,0x9e,0x8a,0xf1,
    0x54,0x74,0x13,0xb6,0x82,0x4f,0x65,0x3e,0xc2,0xf0,0x47,0x62,0x2f,0x7c,0xf1,0x3f,
    0x06,0x7f,0x51,0x5c,0x6f,0x59,0xac,0x51,0x25,0xa3,0xa2,0xb7,0xbe,0xff,0x1f,0x15,
    0xbd,0xcf,0x54,0x74,0x0b,0xfb,0x38,0x96,0xf8,0x32,0xaf,0x06,0x1b,0x43,0x3d,0xe3,
    0xc8,0x47,0xec,0x6b,0x58,0xab,0x34,0xeb,0x13,0x4d,0x3d,0x93,0x7a,0xb9,0x61,0x5d,
    0x9e,0x53,0xc8,0x57,0xed,0xeb,0xe8,0x45,0x9d,0xcf,0x63,0x2f,0x86,0x78,0xe6,0x22,
    0xea,0xe5,0x08,0xfe,0xeb,0x29,0x31,0xee,0xe3,0x7d,0x11,0x39,0xcb,0x7c,0x71,0x41,
    0x8c,0x25,0x05,0xf3,0x66,0xce,0x89,0xf0,0x1f,0x21,0xc7,0x0a,0x34,0x7e,0x8c,0xf7,
    0xa4,0xb1,0x6f,0x41,0x73,0x9d,0xaf,0xa2,0xb7,0x75,0xbe,0x81,0x3c,0x85,0xff,0x32,
    0xef,0x96,0xbf,0x8d,0x73,0xa4,0x3d,0xb2,0xc3,0xe4,0x23,0xf3,0x3d,0xf1,0xec,0xf9,
    0x3a,0xe1,0xef,0x25,0x7e,0xca,0xf0,0xf7,0x73,0xe6,0x74,0x7e,0xb8,0x60,0x4f,0x8e,
    0x73,0x86,0xa4,0x9e,0x33,0xc4,0xde,0x8b,0x1e,0x67,0xb8,0x77,0x92,0xf1,0xde,0x14,
    0xc5,0x75,0xa4,0x88,0x2f,0xd8,0x25,0x8f,0x88,0xfe,0x39,0xfa,0x71,0x14,0x3d,0x37,
    0xdf,0x67,0x2c,0xfd,0x76,0x33,0xd8,0x28,0xa3,0xfd,0x6a,0x7a,0x79,0x34,0xeb,0x33,
    0xbd,0x07,0xe9,0x85,0x5b,0xe9,0x97,0x71,0xf8,0x13,0x9b,0xf1,0xe0,0x2f,0x78,0x1b,
    0x99,0xdf,0x06,0x6f,0x3c,0xbc,0x49,0x9c,0xfb,0x6a,0x7a,0x27,0x47,0x9f,0x4c,0x06,
    0xdf,0xeb,0x6d,0x4a,0xe3,0x5a,0x02,0x26,0xfd,0xf3,0x9b,0xcf,0x3c,0x47,0x3e,0x7f,
    0x78,0xfb,0xa9,0xdc,0x13,0x39,0xea,0x91,0xf7,0x05,0x9e,0x27,0xda,0xcc,0x20,0xa6,
    0xfc,0x3d,0x87,0x5e,0x33,0xc1,0x1b,0xbd,0xfa,0x92,0xd3,0x30,0x17,0x30,0xb5,0xfb,
    0xdd,0xfb,0x50,0x5f,0xf2,0xbc,0xe0,0xb5,0x10,0xbb,0x49,0x2e,0xd8,0x14,0xc1,0x99,
    0x66,0x6a,0x98,0x45,0x0d,0x75,0xa6,0x86,0xd9,0xe0,0x5a,0xc3,0x1c,0x30,0xad,0xa1,
    0xc1,0xd4,0x30,0x27,0xbe,0xbb,0xa2,0x18,0x93,0xb8,0xf5,0xa6,0x86,0xbb,0x89,0xed,
    0x4c,0x0d,0x73,0xc1,0xb5,0x86,0x4a,0x17,0x30,0xb5,0x93,0x1a,0xd4,0x57,0x83,0xa9,
    0xa1,0xd6,0x05,0x9b,0x1c,0x9c,0x7a,0x53,0xc3,0x7c,0x6a,0x98,0x67,0x6a,0xb8,0x17,
    0x5c,0x6b,0x58,0x00,0xa6,0x35,0x34,0x99,0x1a,0x16,0xc4,0xf9,0x44,0x31,0x26,0x71,
    0x1b,0xe9,0x23,0x89,0xbb,0x90,0xd8,0xb5,0x2e,0x7f,0x7e,0x25,0x47,0xb5,0x6d,0x32,
    0x39,0x4e,0xc6,0xae,0x01,0x5e,0x23,0xf9,0xc8,0x19,0xbf,0x9f,0xf3,0xad,0x3d,0xf7,
    0x00,0x39,0x2f,0x31,0x3d,0xf7,0x20,0xf8,0x7a,0x7a,0xee,0x61,0xb0,0xc9,0x2e,0xf0,
    0xe4,0xcc,0x3f,0x0a,0xaf,0x19,0x9e,0x68,0xba,0x14,0x5c,0x75,0x7f,0x1c,0x6e,0x64,
    0xb0,0x65,0x60,0x2e,0xd6,0xa1,0x38,0xbe,0x2f,0x96,0x63,0xbb,0x0c,0x1f,0x1a,0xe3,
    0x09,0x62,0xb4,0x98,0x18,0x2b,0xc0,0x1f,0xf2,0xb5,0xca,0x79,0x5b,0x49,0x4d,0xcb,
    0xb9,0x63,0x56,0x98,0xfd,0x58,0x0d,0x7f,0x95,0xd9,0x8f,0x27,0xc1,0x75,0x3f,0x9e,
    0x02,0xd3,0xfd,0x58,0x6b,0xf6,0x43,0xd6,0xd6,0xf8,0xb1,0x16,0x8d,0xd7,0x50,0x87,
    0xdc,0x39,0xcf,0x12,0x3b,0x82,0x77,0x91,0xf7,0x3f,0xfd,0xbb,0xf8,0xfa,0x01,0x8e,
    0x3c,0x8f,0x10,0xeb,0x47,0x78,0xfd,0xe1,0x5c,0x30,0xb1,0x64,0xed,0x9c,0x1f,0xe7,
    0xe1,0x9d,0x8f,0xef,0xa4,0x74,0x1c,0xeb,0x67,0xf4,0xca,0xc2,0x97,0xdf,0xd0,0x8d,
    0xe4,0xf1,0x0b,0xeb,0xd9,0xf8,0x1e,0x0d,0xd8,0xaf,0xe0,0x43,0xe9,0x91,0x8b,0xf8,
    0x3c,0x67,0x78,0x3f,0xe1,0x2b,0x53,0x60,0x23,0x39,0x5d,0xf5,0xd1,0x2e,0x81,0x5d,
    0x20,0x87,0x29,0x2e,0xf8,0x3d,0x0f,0xf7,0x1c,0x67,0x47,0xf6,0xa0,0xca,0x85,0xf5,
    0x95,0x66,0xaf,0x85,0xb3,0x0e,0x8d,0x1c,0xf5,0x96,0xb8,0x7f,0x6a,0x74,0x99,0x98,
    0x97,0x8d,0x46,0x57,0xe0,0xa9,0x46,0x69,0x97,0xd7,0xe8,0x4a,0x9c,0x9b,0xdf,0x67,
    0x17,0x78,0xf2,0x54,0x8d,0x52,0x2e,0xaf,0xd1,0xba,0x02,0x8d,0x8a,0x5c,0x58,0xb7,
    0x1a,0x15,0xbb,0x80,0xab,0x46,0x25,0xf8,0xbc,0x6a,0x78,0xce,0x05,0x5f,0x99,0x02,
    0x1b,0xc9,0x49,0x35,0x12,0x4c,0x35,0x9a,0xe6,0x82,0x5f,0xc9,0xcb,0xb9,0x90,0xab,
    0x6a,0x34,0xd2,0x85,0xf5,0x2a,0xf2,0x54,0x8d,0xd6,0xa3,0x51,0x82,0x7a,0xb3,0x05,
    0x1a,0x95,0x12,0x53,0x9e,0xaa,0x51,0x99,0x0b,0x3c,0xd5,0x68,0x88,0xd1,0x48,0xd6,
    0x06,0xf8,0x51,0x0e,0xaf,0xdc,0x68,0x34,0xd0,0x68,0xb4,0xbe,0x40,0xa3,0x41,0x2e,
    0xac,0x5b,0x8d,0x06,0xbb,0x80,0xab,0x46,0x59,0x7c,0x8a,0x7f,0xe5,0x65,0xc8,0x25,
    0x53,0x60,0x33,0xc4,0x68,0x94,0x35,0x1a,0x4d,0x77,0xc1,0xaf,0xe4,0x95,0x21,0x57,
    0xd5,0x68,0xb4,0x0b,0xeb,0xa2,0x55,0x02,0x7f,0x7a,0xf6,0xd6,0xd2,0x8b,0x62,0x37,
    0x83,0x5e,0x6b,0x82,0x93,0x75,0xf9,0x33,0xff,0x22,0x67,0x7e,0x83,0x39,0xf3,0x1b,
    0xc1,0xf5,0xcc,0xbf,0x04,0xa6,0x67,0xbe,0xcd,0x9c,0x43,0x59,0x6b,0xf5,0x63,0x2b,
    0x71,0xb7,0x9a,0xfb,0xe4,0x55,0x7c,0x6f,0x33,0xbe,0x5f,0x03,0x57,0xdf,0xaf,0x83,
    0xa9,0xef,0x76,0xe3,0x5b,0xd6,0xb6,0xfb,0xd1,0x8e,0xef,0xed,0xa6,0x0f,0xde,0xa0,
    0x2e,0xf9,0xa6,0x38,0x84,0xaf,0x37,0xc1,0x77,0xa0,0x85,0xf2,0xda,0xd1,0x42,0x6c,
    0xde,0x22,0xe6,0x56,0xec,0xb7,0x13,0xb7,0xc3,0xc4,0x15,0x9b,0x9d,0x7e,0x74,0xc0,
    0xdf,0x69,0xe2,0xbe,0x6d,0xe2,0xce,0xf7,0x5f,0x49,0xf2,0xfd,0xf5,0x0e,0xd8,0x0c,
    0x97,0xff,0x66,0x49,0x70,0x5f,0xcb,0xfa,0x2e,0x78,0x3a,0xda,0xbc,0x2f,0xc1,0x77,
    0xc3,0xdd,0x15,0xfb,0xea,0x13,0xef,0xd5,0xbb,0xf8,0xda,0xcd,0x77,0x53,0x91,0xf9,
    0xbe,0x93,0x9a,0x34,0xa7,0x0e,0xb3,0xbf,0x75,0xc4,0x6e,0x87,0xbf,0x13,0xdb,0x36,
    0x6c,0x5b,0x4d,0xfe,0x9b,0xfe,0x23,0xff,0xcd,0xd7,0xc8,0x7f,0x33,0x79,0x6e,0xc1,
    0x66,0x93,0xc9,0xf3,0x15,0x38,0x5b,0xae,0x91,0xa7,0xc6,0x6e,0x33,0x79,0xde,0xe9,
    0x42,0xae,0x1d,0xf0,0x5b,0x89,0x21,0x6b,0xef,0xb1,0xbe,0x87,0xef,0x3d,0xf9,0x9e,
    0xdc,0x07,0xae,0xfd,0xf4,0x01,0xfd,0xb4,0xdf,0xf4,0xd3,0x87,0xe0,0xda,0x4f,0x1f,
    0x81,0x69,0x3f,0x1d,0x34,0xfb,0x2a,0x6b,0x07,0xe2,0x7e,0x09,0xb9,0x1d,0x32,0xbe,
    0x8f,0xe0,0xfb,0xb0,0xf1,0xfd,0x29,0xb8,0xfa,0xfe,0x0c,0x4c,0x7d,0x77,0x1a,0xdf,
    0xb2,0x76,0xd4,0x8f,0x63,0xf8,0x3e,0x66,0x7e,0x97,0x4f,0xe0,0xfb,0xb8,0xf9,0x5d,
    0xfe,0x02,0xfc,0x04,0xbf,0xf3,0x5f,0x82,0xb5,0x98,0x78,0x5f,0x81,0x2f,0x21,0x5e,
    0x97,0x89,0x27,0x6b,0x27,0xfd,0xe8,0x22,0xde,0x49,0xee,0x4e,0xd1,0x6d,0xbc,0x0b,
    0x9c,0x7d,0x51,0xfe,0xdb,0x4c,0xed,0xba,0xd8,0x0f,0xb1,0x9b,0xe5,0x82,0xcd,0x31,
    0x38,0x27,0x4d,0x3e,0x5f,0x93,0xcf,0x44,0x93,0xcf,0x37,0xe0,0x9a,0x4f,0xb7,0xc9,
    0x47,0xd6,0x4e,0xf9,0xd1,0x4d,0x9c,0x53,0x26,0x9f,0x09,0xe4,0x33,0xcb,0xdc,0x53,
    0x6a,0xd7,0x6d,0xf2,0x99,0xed,0x82,0x4d,0x17,0x9c,0x53,0x26,0x9f,0xef,0xc8,0x67,
    0xbf,0xc9,0xe7,0x7b,0x70,0xcd,0xa7,0xc7,0xe4,0x23,0x6b,0xa7,0xfd,0xe8,0x21,0xce,
    0x69,0x93,0xcf,0x44,0x17,0xfe,0x67,0x98,0xed,0xf2,0xfd,0xaa,0x76,0x3d,0x26,0x9f,
    0x06,0x17,0x6c,0xba,0xe1,0x9c,0xc6,0xb6,0x13,0xdb,0xa3,0xe6,0x3b,0xed,0x73,0xf4,
    0x4e,0x9a,0x38,0x35,0x2e,0x8f,0x47,0x05,0xdc,0x4e,0x13,0xa7,0xde,0x85,0x58,0x3d,
    0x70,0x8e,0x62,0x7b,0x10,0xdb,0x03,0x9c,0x3b,0xb1,0xfd,0x04,0x7f,0xfb,0x38,0x77,
    0x69,0xce,0x6a,0xb2,0x80,0x73,0xd0,0xf8,0x9f,0xe3,0x42,0x8c,0x4e,0xf8,0xe2,0x6f,
    0xba,0x67,0x9c,0x65,0xed,0x2f,0xdf,0x25,0xb5,0x7e,0xfc,0x0d,0x63,0x64,0x8f,0xf3,
    0x88,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DArray src;
// layout(location = 0)out ivec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            ivec4 dstValue = ivec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
