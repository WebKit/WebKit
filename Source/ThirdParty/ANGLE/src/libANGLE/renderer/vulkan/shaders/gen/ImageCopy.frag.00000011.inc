// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000011.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000011[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x89,0x53,0xd5,0x55,
    0x14,0xc7,0x7f,0xbc,0x07,0xef,0x21,0x2a,0x62,0x12,0x9a,0x61,0x03,0x62,0x66,0x61,
    0x48,0x85,0xbb,0x0f,0x53,0x4b,0xa4,0x5c,0x52,0x24,0xcd,0x2c,0xa3,0x2c,0x25,0x93,
    0x12,0x2c,0xa9,0x14,0xb7,0x4c,0xcc,0xcc,0xd4,0x4a,0xcb,0xd2,0x32,0x4d,0x93,0x34,
    0x2b,0xb7,0xd4,0x92,0x72,0x6b,0x51,0x2b,0x97,0x72,0xab,0xff,0xa2,0x69,0x99,0x69,
    0xb9,0xe7,0xf2,0x39,0xcc,0x99,0xdf,0x38,0xc5,0xcc,0x9d,0xdf,0x3b,0xdf,0x73,0xee,
    0xf7,0x7e,0xcf,0x39,0xf7,0xde,0xdf,0x7b,0x44,0x23,0x79,0xf1,0x20,0x48,0x0a,0xd2,
    0x82,0xd4,0xe0,0x97,0xa0,0xe9,0xaf,0x6d,0x10,0x71,0x48,0x10,0xb4,0x0c,0x62,0xfe,
    0x59,0x32,0xbc,0x6c,0x78,0x41,0xcd,0xcc,0xc9,0x05,0x45,0x3d,0x0b,0xc5,0x9f,0x1e,
    0x44,0x7d,0x9c,0xf8,0xda,0x04,0xf1,0x20,0xd9,0x3d,0x65,0x4c,0xaf,0xa8,0xac,0x12,
    0xbc,0xab,0x1b,0x97,0xdc,0xc8,0x70,0x71,0x82,0xc7,0x85,0xc3,0x7d,0xea,0xea,0x39,
    0x65,0x4e,0x10,0x0c,0x0b,0x52,0x82,0xee,0xac,0x97,0xc7,0x53,0xb1,0x24,0xb0,0x54,
    0x83,0x45,0xc0,0x32,0x0c,0x16,0x05,0xcb,0x34,0x58,0x32,0x58,0x07,0x83,0xa5,0x80,
    0x65,0x1b,0x2c,0x06,0x96,0x63,0xb0,0x38,0x58,0x17,0x83,0xa5,0x82,0x75,0x33,0x58,
    0x0b,0xb0,0xee,0x06,0x4b,0x03,0x2b,0x34,0x58,0x4b,0xb0,0x22,0x83,0xb5,0x02,0xeb,
    0x63,0xb0,0xd6,0x60,0x03,0x7c,0x9d,0xa2,0xcd,0xf9,0x4a,0xcd,0x26,0xb8,0x67,0x67,
    0xea,0xa3,0x76,0xae,0xb1,0xa5,0xce,0xd7,0x60,0xb7,0x73,0xb3,0x22,0xde,0x1f,0xf5,
    0xb5,0x91,0xcf,0x59,0xee,0x53,0x8c,0x3c,0x73,0x5c,0x7c,0x9c,0x3c,0x63,0x3e,0x2e,
    0xd9,0xe7,0x17,0x03,0xcb,0x77,0x76,0x0c,0x3d,0xd9,0x05,0x23,0xfa,0x67,0x3a,0x86,
    0x74,0x83,0xb7,0x73,0x63,0xcc,0xde,0x91,0x83,0xd4,0x96,0x1a,0x97,0x97,0x9f,0x2d,
    0x56,0xbb,0xa3,0x1b,0x89,0xb4,0xc5,0x03,0xd5,0x96,0x7a,0x6f,0x2f,0xa9,0x48,0x5c,
    0xe9,0xec,0x1c,0x34,0x48,0x6f,0xdb,0x3b,0x3b,0x17,0x3b,0x82,0xae,0xce,0x68,0xc8,
    0xc5,0xdf,0x05,0x5d,0xc9,0xf8,0xaf,0x65,0xae,0xe0,0xfd,0xb1,0xbb,0x1a,0xbe,0xeb,
    0x88,0x17,0x3e,0x59,0x2f,0x1f,0xfe,0xc0,0xd7,0x27,0xc3,0xd7,0x34,0x97,0xa1,0x5a,
    0xf2,0xff,0x67,0xe4,0x34,0x3f,0x93,0x83,0x1b,0xe9,0x7b,0x77,0xd6,0x17,0xbb,0x00,
    0x2c,0x9f,0xfc,0x7a,0xa0,0x47,0xe2,0x0b,0xf1,0xe5,0x1a,0x7f,0x2f,0x93,0x4f,0xef,
    0xe6,0xb9,0x4d,0x7e,0x79,0xf6,0x43,0xaf,0xf8,0x8b,0xa9,0x47,0x8e,0x99,0x3f,0x84,
    0xbd,0xac,0xf1,0xa5,0xac,0xa7,0xfe,0x91,0xf4,0x4e,0xe6,0xdf,0xcd,0x7c,0xa9,0xd7,
    0x55,0x6e,0xa5,0xf1,0xd4,0x27,0x89,0x35,0xc2,0x4f,0x99,0x73,0x0f,0x9f,0xc7,0x93,
    0xa3,0xd8,0x13,0xc0,0x74,0x8d,0x89,0x21,0xbb,0x82,0x73,0x28,0xf3,0x1f,0x24,0xa7,
    0x1c,0x7a,0xf2,0x30,0x9f,0xa3,0x26,0xbe,0x92,0x1e,0xa9,0x3d,0x9d,0xb3,0xa3,0x39,
    0xd5,0x85,0xfc,0x0b,0xd1,0xad,0xfe,0x25,0xf0,0x09,0xff,0x8b,0xf8,0x2c,0xff,0xaa,
    0xd0,0x5e,0x5e,0x6b,0xf4,0x8a,0xbd,0xc5,0x5b,0x73,0x87,0xc8,0xfc,0x06,0xf4,0x69,
    0x4f,0x3e,0x60,0x6e,0x83,0xe1,0xdb,0xc1,0x1d,0xa0,0xf6,0xfe,0x50,0xcf,0x8f,0x72,
    0xa6,0x65,0xfe,0x45,0xb4,0x34,0x50,0xbf,0x8b,0xdc,0x83,0x51,0xdf,0xfb,0x14,0x9f,
    0x57,0x32,0x7a,0x04,0xfb,0xdd,0x21,0x29,0xc4,0x76,0xe6,0x0e,0x88,0x1b,0xbb,0xc8,
    0xd8,0xd2,0xcf,0x71,0xc6,0x96,0x67,0x4d,0xc8,0xae,0x0d,0xd9,0x73,0x8c,0x2d,0xb9,
    0x6d,0x33,0xb6,0xec,0xaf,0x23,0xd8,0x09,0xce,0x5b,0x37,0xce,0xd4,0x28,0x87,0xca,
    0x79,0xba,0x1e,0xac,0x9b,0xd9,0x2b,0x55,0x9c,0xdd,0x1b,0xf0,0x0f,0x72,0x19,0xc8,
    0x5e,0xbf,0x89,0xf3,0xd0,0x03,0x3e,0x89,0xb9,0x19,0x7c,0x81,0x8b,0x11,0xfb,0x16,
    0xe6,0x09,0x5e,0xec,0x2a,0x90,0x07,0xa6,0xf1,0x3d,0xa9,0x81,0xf8,0x8a,0xb0,0x85,
    0xbf,0x37,0xf7,0x65,0x01,0x67,0x28,0xc1,0x5e,0xe8,0x0b,0xde,0xe0,0x62,0xd2,0x7d,
    0x5e,0x4d,0x98,0x9c,0xa3,0xdf,0x1c,0x47,0x02,0xdd,0x7f,0xba,0xf8,0xfe,0xdc,0xaf,
    0x09,0xea,0x3e,0x00,0x6e,0xa9,0xc3,0x40,0x6a,0xdd,0x0f,0x6e,0xe9,0xeb,0xad,0xe0,
    0x75,0xd8,0x83,0xc0,0x74,0xce,0x60,0x33,0x47,0xf4,0x0e,0x26,0xe6,0x0f,0xc7,0xad,
    0x6b,0x24,0x8c,0xfe,0xdb,0xd0,0x3f,0xc4,0xe8,0xbf,0x1d,0x5c,0xf5,0x0f,0x05,0x53,
    0xfd,0xc3,0x8c,0xfe,0xa1,0xfe,0xbe,0x0f,0x3c,0x26,0xdc,0x25,0x46,0xcb,0x1d,0x68,
    0x29,0x35,0xfa,0xef,0x04,0x57,0xfd,0xc3,0xc1,0x74,0xce,0x08,0x33,0x47,0xf4,0x8f,
    0x20,0x46,0xf4,0xeb,0x1a,0xc3,0x8c,0xfe,0x51,0xe8,0x1f,0x69,0xf4,0xdf,0x05,0xae,
    0xfa,0x47,0x83,0xa9,0xfe,0x32,0xa3,0x5f,0x7c,0x63,0xdc,0x28,0x83,0x7b,0x8c,0xe9,
    0xfb,0x58,0xb4,0xc8,0xbe,0x13,0xbb,0x1c,0x6c,0xac,0xb9,0x9f,0x74,0x4f,0x94,0xa3,
    0x51,0x79,0xca,0xe0,0x91,0x3b,0xeb,0x5e,0xee,0x2b,0xdd,0x93,0xf7,0xa1,0x79,0xa2,
    0x59,0xeb,0x7e,0x70,0xb5,0x27,0xb1,0xf6,0x3c,0xf6,0xe8,0x03,0xc4,0x4c,0x82,0x47,
    0xee,0xb4,0x87,0xe0,0xa9,0x30,0xf5,0x9d,0x0c,0x3e,0xda,0xc5,0x88,0xfd,0x08,0x73,
    0x03,0x83,0x4d,0x01,0x4b,0xf2,0x75,0x89,0xf9,0xfb,0x70,0x2a,0xb1,0x53,0xe0,0xd0,
    0x35,0x1e,0x65,0x8d,0x4a,0xb3,0xc6,0x34,0xf0,0x49,0xae,0x2e,0x72,0x3e,0x1f,0x23,
    0xc7,0xa9,0xdc,0x91,0xd3,0xa8,0xcb,0x38,0x7c,0xda,0xab,0x2a,0xb8,0xa6,0x9b,0x5e,
    0x3d,0x0e,0xae,0xbd,0x7a,0x02,0x4c,0x7b,0x55,0x6d,0x7a,0x25,0xbe,0x19,0x6e,0x54,
    0x53,0xe3,0x19,0x70,0xcb,0x5d,0x31,0x93,0x7b,0x48,0xcf,0x8a,0xdc,0xa9,0x4f,0x82,
    0x8b,0x96,0x1a,0xec,0xbe,0x2e,0x5e,0x7c,0x4f,0x71,0xbf,0xd7,0x18,0x8e,0x59,0x86,
    0x43,0xe6,0xcc,0x22,0x4e,0xfd,0x4f,0xe3,0x2f,0x35,0x6b,0x3c,0x03,0x2e,0xf1,0xb5,
    0xd8,0xba,0xc6,0xb3,0xac,0x51,0x6b,0x38,0x66,0x1b,0x0e,0x99,0x33,0x9b,0x38,0xf5,
    0xcf,0xc5,0x5f,0x67,0xd6,0x98,0x07,0x2e,0xf1,0x73,0xb0,0x75,0x8d,0xf9,0xac,0x31,
    0xc7,0x70,0x2c,0x30,0x1c,0x32,0x67,0x01,0x71,0xb2,0x3f,0xb5,0x76,0xd5,0xa6,0x2f,
    0xcf,0xd1,0x97,0x85,0xa6,0x2f,0x8b,0xc0,0xb5,0x2f,0xcf,0x83,0x69,0x5f,0xea,0x4d,
    0x5f,0xc4,0xb7,0xd8,0x8d,0x95,0x70,0x2f,0x36,0x5a,0x5e,0x40,0xcb,0x12,0x93,0xcf,
    0x52,0x70,0xbd,0xdf,0x97,0x11,0x33,0xca,0xbd,0xd1,0xe4,0xdd,0xf9,0x12,0xd8,0x32,
    0x73,0xbf,0x47,0x3c,0x9e,0xe2,0xfd,0xcb,0x89,0x59,0x6a,0x38,0x5e,0x6e,0xe6,0x68,
    0xe1,0xed,0x15,0x60,0xcb,0x79,0xb7,0xa5,0x98,0x77,0xb2,0xee,0xcd,0x15,0xd4,0xa4,
    0x1e,0xdd,0x2b,0x4d,0x4d,0x5e,0xa1,0x26,0xab,0x4c,0x4d,0x5e,0x05,0xd7,0x9a,0xbc,
    0x06,0xa6,0x35,0x59,0x63,0x6a,0x22,0xbe,0xd5,0x6e,0xac,0x81,0x7b,0xb5,0xa9,0xc9,
    0xeb,0x97,0xa9,0xc9,0x1b,0xe0,0xfb,0xe0,0x7e,0x13,0x6c,0x2d,0x1a,0x95,0x47,0x9e,
    0xbf,0x3a,0x16,0x89,0x79,0x0b,0x0d,0x2b,0x89,0x5f,0x8d,0x8e,0xf5,0x46,0x87,0xc4,
    0xac,0x73,0x63,0x3d,0xf3,0xd7,0x19,0x1d,0x6f,0x5f,0x46,0xc7,0x3b,0xe0,0x5a,0xd7,
    0x0d,0xa1,0xde,0xbc,0x0b,0xb6,0x21,0xd4,0x1b,0xb9,0x47,0xc4,0xbf,0x11,0x0e,0x1d,
    0xf5,0xf4,0x6c,0x13,0x73,0x37,0x1a,0xee,0xf7,0x42,0x3d,0xdb,0x0c,0xb6,0xe9,0x3f,
    0x7a,0xb6,0x99,0x7a,0x68,0x3e,0xeb,0x43,0x3d,0xac,0x37,0xfc,0xef,0xc3,0x2f,0xfb,
    0x46,0xec,0xad,0x60,0x5b,0x0c,0xdf,0x56,0x13,0xbf,0x9d,0xf8,0x2a,0xbe,0x83,0x7d,
    0x08,0x26,0xb1,0xdb,0xb0,0x75,0x7f,0x7c,0xc4,0xfe,0xd8,0x61,0xf6,0xc7,0xc7,0xe0,
    0xba,0x3f,0x3e,0x01,0xd3,0xfd,0xb1,0xcb,0xf4,0x45,0x7c,0x3b,0x7d,0xbf,0x9b,0x74,
    0xef,0x84,0x47,0xd6,0xdd,0xcd,0x77,0x22,0x7d,0xef,0xec,0x01,0xdb,0x6d,0xbe,0xa3,
    0x69,0xec,0xde,0xe6,0xd8,0x16,0xde,0xfe,0x14,0x6c,0x8f,0xa9,0x61,0xc4,0xd4,0x70,
    0x1b,0x31,0x52,0xb3,0x5d,0xac,0xbd,0xcf,0xe4,0x75,0x80,0xbc,0xf6,0x9b,0xbc,0x3e,
    0x03,0xd7,0xbc,0x3e,0x07,0xd3,0xbc,0x1a,0x4d,0x5e,0xe2,0x3b,0xe8,0xc6,0x61,0xb8,
    0x0f,0x9a,0x77,0xfb,0x17,0x68,0x5d,0x62,0xde,0x25,0x5f,0x82,0x6b,0xcc,0x21,0x62,
    0xf4,0x0e,0x3e,0x44,0x8c,0xe8,0x6d,0x84,0xf3,0xb0,0x79,0x3f,0x1d,0x43,0xef,0x51,
    0xc3,0xf9,0x15,0xb8,0xcc,0x3f,0x82,0xad,0xbe,0xaf,0xf9,0x7e,0x79,0x8c,0x77,0xe1,
    0x37,0x60,0x95,0x26,0xbf,0x6f,0xc1,0x27,0x92,0xdf,0x09,0x93,0x9f,0xf8,0x8e,0xbb,
    0x71,0x02,0x2d,0xc7,0x8d,0xf6,0x93,0x68,0xd7,0xbb,0xfd,0x24,0x1c,0xa2,0x5d,0xe3,
    0x4f,0x18,0x2d,0xdf,0x85,0xb4,0x7c,0x0f,0xd6,0xcb,0x68,0xf9,0x01,0x5c,0xb5,0x9c,
    0x36,0x5a,0xc4,0x77,0xca,0x8d,0xd3,0x70,0x9f,0x32,0x5a,0xce,0xa0,0x45,0xdf,0x01,
    0x67,0x8c,0x16,0x8d,0x3f,0x6d,0xb4,0x9c,0x0d,0x69,0xf9,0x11,0x6c,0x87,0xd1,0xf2,
    0x13,0xb8,0x6a,0x39,0x6f,0xb4,0x88,0xef,0x9c,0x1b,0xe7,0xe1,0x3e,0x67,0xb4,0x5c,
    0x30,0x7d,0x17,0x2d,0x17,0xf8,0x3e,0x2e,0x5a,0x34,0xfe,0x7c,0xa8,0xc7,0x8d,0xa1,
    0x3d,0xba,0xcb,0xec,0xf9,0x9f,0xe1,0x13,0xae,0x4b,0xd8,0x7f,0xb9,0x9b,0xa8,0x8f,
    0x1b,0xbd,0x78,0x2f,0xa6,0xa1,0x4d,0x7e,0x23,0xf5,0x76,0x71,0x71,0x7e,0x1f,0x09,
    0x57,0x4b,0x73,0xdf,0xb5,0x02,0x3f,0x40,0x8e,0x6d,0xc0,0x5a,0x93,0x63,0x5b,0x93,
    0x63,0x1b,0xfe,0xcf,0x93,0x05,0x4f,0x86,0xe1,0xb9,0x02,0x9e,0x45,0xac,0x9f,0x09,
    0x26,0xff,0x9b,0xf8,0xdb,0xc5,0x66,0x32,0x27,0xcb,0xcc,0x69,0xcf,0x9c,0x56,0x4e,
    0x5d,0xcc,0xff,0x1e,0x6e,0xba,0x4f,0x3b,0xe2,0xeb,0x60,0xf8,0xae,0xc6,0xdf,0xd1,
    0xbf,0xa7,0x9b,0xb0,0x4e,0xe0,0xd9,0xac,0xd1,0x89,0x35,0x44,0xf3,0x3f,0xd4,0xe3,
    0x5f,0x85,0x99,0xd1,0xe2,0x48,0x13,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DArray src;
// layout(location = 0)out ivec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            ivec4 dstValue = ivec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
