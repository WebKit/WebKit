105 instructions

[immutable slots]
i0 = 0
i1 = 0x41200000 (10.0)
i2 = 0x3F800000 (1.0)
i3 = 0x40000000 (2.0)
i4 = 0x40400000 (3.0)
i5 = 0x40800000 (4.0)

store_src_rg                   coords = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
splat_3_constants              sumA, sumB, a = 0
copy_constant                  b = 0x41200000 (10.0)
store_loop_mask                $0 = LoopMask
jump                           jump +16 (label 1 at #22)
label                          label 0x00000002
copy_slot_unmasked             $1 = sumA
copy_slot_unmasked             $2 = a
add_float                      $1 += $2
copy_slot_masked               sumA = Mask($1)
copy_slot_unmasked             $1 = sumB
copy_slot_unmasked             $2 = b
add_float                      $1 += $2
copy_slot_masked               sumB = Mask($1)
copy_slot_unmasked             $1 = a
add_imm_float                  $1 += 0x3F800000 (1.0)
copy_slot_masked               a = Mask($1)
copy_slot_unmasked             $1 = b
add_imm_float                  $1 += 0xBF800000 (-1.0)
copy_slot_masked               b = Mask($1)
label                          label 0x00000001
copy_slot_unmasked             $1 = a
cmplt_imm_float                $1 = lessThan($1, 0x41200000 (10.0))
copy_constant                  $2 = 0
copy_slot_unmasked             $3 = b
cmplt_float                    $2 = lessThan($2, $3)
bitwise_and_int                $1 &= $2
merge_loop_mask                LoopMask &= $1
stack_rewind
branch_if_any_lanes_active     branch_if_any_lanes_active -24 (label 2 at #7)
label                          label 0
load_loop_mask                 LoopMask = $0
store_condition_mask           $0 = CondMask
copy_slot_unmasked             $1 = sumA
cmpne_imm_float                $1 = notEqual($1, 0x42340000 (45.0))
copy_slot_unmasked             $2 = sumB
cmpne_imm_float                $2 = notEqual($2, 0x425C0000 (55.0))
bitwise_or_int                 $1 |= $2
merge_condition_mask           CondMask = $0 & $1
copy_4_uniforms                $2..5 = colorRed
copy_4_slots_masked            [main].result = Mask($2..5)
mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
load_condition_mask            CondMask = $0
splat_2_constants              sumC, c = 0
store_loop_mask                $0 = LoopMask
jump                           jump +8 (label 4 at #55)
label                          label 0x00000005
copy_2_slots_unmasked          $1..2 = sumC, c
add_int                        $1 += $2
copy_slot_masked               sumC = Mask($1)
copy_slot_unmasked             $1 = c
add_imm_int                    $1 += 0x00000001
copy_slot_masked               c = Mask($1)
label                          label 0x00000004
copy_slot_unmasked             $1 = c
cmplt_imm_int                  $1 = lessThan($1, 0x0000000A)
merge_loop_mask                LoopMask &= $1
stack_rewind
branch_if_any_lanes_active     branch_if_any_lanes_active -12 (label 5 at #48)
label                          label 0x00000003
load_loop_mask                 LoopMask = $0
store_condition_mask           $0 = CondMask
copy_slot_unmasked             $1 = sumC
cmpne_imm_int                  $1 = notEqual($1, 0x0000002D)
merge_condition_mask           CondMask = $0 & $1
copy_4_uniforms                $2..5 = colorRed
copy_4_slots_masked            [main].result = Mask($2..5)
mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
load_condition_mask            CondMask = $0
copy_constant                  sumE = 0
copy_2_immutables_unmasked     d[0], d[1] = i0..1 [0, 0x41200000 (10.0)]
store_loop_mask                $0 = LoopMask
jump                           jump +9 (label 7 at #83)
label                          label 0x00000008
copy_slot_unmasked             $1 = sumE
copy_constant                  $2 = 0x3F800000 (1.0)
add_float                      $1 += $2
copy_slot_masked               sumE = Mask($1)
copy_slot_unmasked             $1 = d[0]
add_imm_float                  $1 += 0x3F800000 (1.0)
copy_slot_masked               d[0] = Mask($1)
label                          label 0x00000007
copy_2_slots_unmasked          $1..2 = d[0], d[1]
cmplt_float                    $1 = lessThan($1, $2)
merge_loop_mask                LoopMask &= $1
stack_rewind
branch_if_any_lanes_active     branch_if_any_lanes_active -13 (label 8 at #75)
label                          label 0x00000006
load_loop_mask                 LoopMask = $0
store_condition_mask           $0 = CondMask
copy_slot_unmasked             $1 = sumE
cmpne_imm_float                $1 = notEqual($1, 0x41200000 (10.0))
merge_condition_mask           CondMask = $0 & $1
copy_4_uniforms                $2..5 = colorRed
copy_4_slots_masked            [main].result = Mask($2..5)
mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
load_condition_mask            CondMask = $0
store_loop_mask                $0 = LoopMask
jump                           jump +4 (label 10 at #104)
label                          label 0x0000000B
branch_if_all_lanes_active     branch_if_all_lanes_active +5 (label 9 at #107)
mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
label                          label 0x0000000A
stack_rewind
branch_if_any_lanes_active     branch_if_any_lanes_active -5 (label 11 at #101)
label                          label 0x00000009
load_loop_mask                 LoopMask = $0
store_loop_mask                $0 = LoopMask
jump                           jump +5 (label 13 at #115)
label                          label 0x0000000E
copy_4_uniforms                $1..4 = colorGreen
copy_4_slots_masked            [main].result = Mask($1..4)
mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
label                          label 0x0000000D
stack_rewind
branch_if_any_lanes_active     branch_if_any_lanes_active -6 (label 14 at #111)
label                          label 0x0000000C
load_loop_mask                 LoopMask = $0
load_src                       src.rgba = [main].result
