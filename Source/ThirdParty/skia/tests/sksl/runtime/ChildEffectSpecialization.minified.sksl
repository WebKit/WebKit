uniform shader s1;uniform shader s2;uniform colorFilter cf1;uniform colorFilter cf2;uniform blender b;uniform float2 position;uniform half4 color1;uniform half4 color2;noinline half4 a(shader c,float2 d){return c.eval(d);}noinline half4 c(shader d){return a(d,0..xx);}noinline half4 d(colorFilter e,half4 f){return e.eval(f);}noinline half4 e(blender f,half4 g,half4 h){return f.eval(g,h);}noinline half4 f(shader g,shader h,float2 i){return g.eval(i)*a(h,i);}inline half4 g(shader h,colorFilter i,blender j){return(h.eval(position)+i.eval(color1))-j.eval(color2,color1);}half4 main(float2 h){half4 i;i+=a(s1,position);i+=a(s2,position);i+=d(cf1,color1);i+=e(b,color1,color2);i+=d(cf1,color2)*d(cf2,color1);i=c(s1);i+=f(s1,s2,position);i+=e(b,c(s2),d(cf2,color2));i+=g(s1,cf1,b);return i;}
