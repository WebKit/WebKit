load("//bazel:skia_rules.bzl", "generate_cpp_files_for_headers", "skia_filegroup", "split_srcs_and_hdrs")

package(
    default_applicable_licenses = ["//:license"],
)

licenses(["notice"])

TESSELLATE_FILES = [
    "GrPathTessellationShader.cpp",
    "GrPathTessellationShader.h",
    "GrStrokeTessellationShader.cpp",
    "GrStrokeTessellationShader.h",
    "GrTessellationShader.cpp",
    "GrTessellationShader.h",
    "PathTessellator.cpp",
    "PathTessellator.h",
    "StrokeTessellator.cpp",
    "StrokeTessellator.h",
    "VertexChunkPatchAllocator.h",
]

split_srcs_and_hdrs(
    name = "tessellate",
    files = TESSELLATE_FILES,
)

skia_filegroup(
    name = "srcs",
    srcs = [":tessellate_srcs"],
    visibility = ["//src/gpu/ganesh:__pkg__"],
)

skia_filegroup(
    name = "private_hdrs",
    srcs = [":tessellate_hdrs"],
    visibility = ["//src/gpu/ganesh:__pkg__"],
)

generate_cpp_files_for_headers(
    name = "headers_to_compile",
    headers = [
        "VertexChunkPatchAllocator.h",
    ],
)
