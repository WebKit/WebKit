load("//bazel:skia_rules.bzl", "skia_filegroup", "split_srcs_and_hdrs")

package(
    default_applicable_licenses = ["//:license"],
)

licenses(["notice"])

ANALYSIS_FILES = [
    "SkSLCanExitWithoutReturningValue.cpp",
    "SkSLCheckProgramStructure.cpp",
    "SkSLCheckSymbolTableCorrectness.cpp",
    "SkSLFinalizationChecks.cpp",
    "SkSLGetLoopControlFlowInfo.cpp",
    "SkSLGetLoopUnrollInfo.cpp",
    "SkSLGetReturnComplexity.cpp",
    "SkSLHasSideEffects.cpp",
    "SkSLIsConstantExpression.cpp",
    "SkSLIsDynamicallyUniformExpression.cpp",
    "SkSLIsSameExpressionTree.cpp",
    "SkSLIsTrivialExpression.cpp",
    "SkSLNoOpErrorReporter.h",
    "SkSLProgramUsage.cpp",
    "SkSLProgramUsage.h",
    "SkSLProgramVisitor.h",
    "SkSLReturnsInputAlpha.cpp",
    "SkSLSpecialization.cpp",
    "SkSLSpecialization.h",
    "SkSLSwitchCaseContainsExit.cpp",
    "SkSLSymbolTableStackBuilder.cpp",
]

split_srcs_and_hdrs(
    name = "analysis",
    files = ANALYSIS_FILES,
)

skia_filegroup(
    name = "srcs",
    srcs = [":analysis_srcs"],
    visibility = ["//src/sksl:__pkg__"],
)

skia_filegroup(
    name = "private_hdrs",
    srcs = [":analysis_hdrs"],
    visibility = ["//src/sksl:__pkg__"],
)
