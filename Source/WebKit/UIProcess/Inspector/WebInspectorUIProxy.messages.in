# Copyright (C) 2010-2020 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

messages -> WebInspectorUIProxy {
    OpenLocalInspectorFrontend(bool canAttach, bool underTest)
    SetFrontendConnection(IPC::Connection::Handle connectionHandle)

    SendMessageToBackend(String message)

    FrontendLoaded()
    DidClose()
    BringToFront()
    Reopen()
    ResetState()

    SetForcedAppearance(WebCore::InspectorFrontendClient::Appearance appearance)
    OpenURLExternally(String url)
    RevealFileExternally(String path)

    InspectedURLChanged(String urlString)
    ShowCertificate(WebCore::CertificateInfo certificateInfo)
    ElementSelectionChanged(bool active)
    TimelineRecordingChanged(bool active)

    SetDeveloperPreferenceOverride(WebCore::InspectorClient::DeveloperPreference developerPreference, std::optional<bool> overrideValue)
#if ENABLE(INSPECTOR_NETWORK_THROTTLING)
    SetEmulatedConditions(std::optional<int64_t> bytesPerSecondLimit)
#endif

    Save(Vector<WebCore::InspectorFrontendClient::SaveData> saveDatas, bool forceSaveAs)
    Load(String path) -> (String content)
    PickColorFromScreen() -> (std::optional<WebCore::Color> color)

    AttachBottom()
    AttachRight()
    AttachLeft()
    Detach()

    AttachAvailabilityChanged(bool available)

    SetAttachedWindowHeight(unsigned height)
    SetAttachedWindowWidth(unsigned width)

    SetSheetRect(WebCore::FloatRect rect)

    StartWindowDrag()

    SetInspectorPageDeveloperExtrasEnabled(bool enabled)
}
