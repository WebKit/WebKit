/*
 * Copyright (C) 2022 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

[
    Conditional=WK_WEB_EXTENSIONS,
    ReturnsPromiseWhenCallbackIsOmitted,
] interface WebExtensionAPITest {

    // Notifies that test failed.
    [NeedsScriptContext] void notifyFail([Optional] DOMString message);

    // Notifies that test passed.
    [NeedsScriptContext] void notifyPass([Optional] DOMString message);

    // Yields the running of the extension for external testing.
    [NeedsScriptContext] void yield([Optional] DOMString message);

    // Logs a message during testing.
    [NeedsScriptContext] void log(DOMString message);

    // Alias for `assertTrue(false, message)`.
    [NeedsScriptContext] void fail([Optional] DOMString message);

    // Alias for `assertTrue(true, message)`.
    [NeedsScriptContext] void succeed([Optional] DOMString message);

    // Asserts the test value is `true`.
    [NeedsScriptContext] void assertTrue(boolean actualValue, [Optional] DOMString message);

    // Asserts the test value is `false`.
    [NeedsScriptContext] void assertFalse(boolean actualValue, [Optional] DOMString message);

    // Asserts the test value is deeply equal to the expected value.
    [NeedsScriptContext] void assertDeepEq([ValuesAllowed] any expectedValue, [ValuesAllowed] any actualValue, [Optional] DOMString message);

    // Asserts the test value is equal to the expected value.
    [NeedsScriptContext] void assertEq([ValuesAllowed] any expectedValue, [ValuesAllowed] any actualValue, [Optional] DOMString message);

    // Asserts the promise is rejected.
    [NeedsScriptContext, ProcessArgumentsLeftToRight] any assertRejects(any promise, [Optional, ValuesAllowed] any expectedError, [Optional] DOMString message);

    // Asserts the function throws an exception.
    [NeedsScriptContext, ProcessArgumentsLeftToRight] void assertThrows(any function, [Optional, ValuesAllowed] any expectedError, [Optional] DOMString message);

    // Temporary webNavigation event for bring-up.
    // FIXME: Remove this.
    readonly attribute WebExtensionAPIWebNavigationEvent testWebNavigationEvent;
    void fireTestWebNavigationEvent(DOMString targetUrl);

    // FIXME: Temporary Event for bring-up. Remove this.
    readonly attribute WebExtensionAPIEvent testEvent;
    void fireTestEvent();
};
