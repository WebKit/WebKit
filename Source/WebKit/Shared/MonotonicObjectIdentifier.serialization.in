# Copyright (C) 2024 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


additional_forward_declaration: namespace WebKit { struct EditorStateIdentifierType; }
additional_forward_declaration: namespace WebKit { struct RenderingUpdateIDType; }
additional_forward_declaration: namespace WebKit { struct TransactionIDType; }
additional_forward_declaration: namespace WebKit { struct FocusedElementInformationIdentifierType; }

header: "MonotonicObjectIdentifier.h"
[Alias=class MonotonicObjectIdentifier<EditorStateIdentifierType>, AdditionalEncoder=StreamConnectionEncoder, CustomHeader] alias WebKit::EditorStateIdentifier {
    [Validator='WebKit::MonotonicObjectIdentifier<WebKit::EditorStateIdentifierType>::isValidIdentifier(*toUInt64)'] uint64_t toUInt64();
};

header: "MonotonicObjectIdentifier.h"
[Alias=class MonotonicObjectIdentifier<RenderingUpdateIDType>, AdditionalEncoder=StreamConnectionEncoder, CustomHeader] alias WebKit::RenderingUpdateID {
    [Validator='WebKit::MonotonicObjectIdentifier<WebKit::RenderingUpdateIDType>::isValidIdentifier(*toUInt64)'] uint64_t toUInt64();
};

header: "MonotonicObjectIdentifier.h"
[Alias=class MonotonicObjectIdentifier<TransactionIDType>, AdditionalEncoder=StreamConnectionEncoder, CustomHeader] alias WebKit::TransactionID {
    [Validator='WebKit::MonotonicObjectIdentifier<WebKit::TransactionIDType>::isValidIdentifier(*toUInt64)'] uint64_t toUInt64();
};

header: "MonotonicObjectIdentifier.h"
[Alias=class MonotonicObjectIdentifier<FocusedElementInformationIdentifierType>, AdditionalEncoder=StreamConnectionEncoder, CustomHeader] alias WebKit::FocusedElementInformationIdentifier {
    [Validator='WebKit::MonotonicObjectIdentifier<WebKit::FocusedElementInformationIdentifierType>::isValidIdentifier(*toUInt64)'] uint64_t toUInt64();
};
