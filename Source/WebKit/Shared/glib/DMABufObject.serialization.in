# Copyright (C) 2024 Igalia S.L.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

header: <WebCore/DMABufColorSpace.h>
enum class WebCore::DMABufColorSpace : uint32_t {
    Invalid,
    SRGB,
    BT601,
    BT709,
    BT2020,
    SMPTE240M,
};

header: <WebCore/DMABufFormat.h>
struct WebCore::DMABufFormat {
    WebCore::DMABufFormat::FourCC fourcc;
    unsigned numPlanes;

    std::array<WebCore::DMABufFormat::Plane, 4> planes;
};

[Nested] enum class WebCore::DMABufFormat::FourCC : uint32_t {
    Invalid,
    R8,
    GR88,
    R16,
    GR32,
    XRGB8888,
    XBGR8888,
    RGBX8888,
    BGRX8888,
    ARGB8888,
    ABGR8888,
    RGBA8888,
    BGRA8888,
    RGB888,
    BGR888,
    I420,
    YV12,
    A420,
    NV12,
    NV21,
    YUY2,
    YVYU,
    UYVY,
    VYUY,
    VUYA,
    AYUV,
    Y444,
    Y41B,
    Y42B,
    P010,
    P016,
};

[Nested] struct WebCore::DMABufFormat::Plane {
    WebCore::DMABufFormat::FourCC fourcc;
    unsigned horizontalSubsampling;
    unsigned verticalSubsampling;
};

[Nested] enum class WebCore::DMABufFormat::Modifier : uint64_t {
    Invalid,
};

header: <WebCore/DMABufReleaseFlag.h>
struct WebCore::DMABufReleaseFlag {
    UnixFileDescriptor fd;
};

header: <WebCore/DMABufObject.h>
[CustomHeader] class WebCore::DMABufObject {
    uintptr_t handle;
    WebCore::DMABufFormat format;
    WebCore::DMABufColorSpace colorSpace;
    uint32_t width;
    uint32_t height;
    WebCore::DMABufReleaseFlag releaseFlag;
    std::array<UnixFileDescriptor, WebCore::DMABufFormat::c_maxPlanes> fd;
    std::array<size_t, WebCore::DMABufFormat::c_maxPlanes> offset;
    std::array<uint32_t, WebCore::DMABufFormat::c_maxPlanes> stride;
    std::array<bool, WebCore::DMABufFormat::c_maxPlanes> modifierPresent;
    std::array<uint64_t, WebCore::DMABufFormat::c_maxPlanes> modifierValue;
}
