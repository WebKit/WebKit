# Copyright (C) 2023 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#if USE(PASSKIT) // Gating these classes on USE(PASSKIT) seems weird, but these types are only needed to support PASSKIT types

webkit_platform_headers: "CoreIPCContacts.h"

[CustomHeader, WebKitPlatform] class WebKit::CoreIPCCNPostalAddress {
    String m_street;
    String m_subLocality;
    String m_city;
    String m_subAdministrativeArea;
    String m_state;
    String m_postalCode;
    String m_country;
    String m_isoCountryCode;
    String m_formattedAddress;
}

[CustomHeader, WebKitPlatform] class WebKit::CoreIPCCNPhoneNumber {
    String m_digits;
    String m_countryCode;
}

[CustomHeader, WebKitPlatform] struct WebKit::CoreIPCContactLabeledValue {
    String identifier;
    String label;
    std::variant<WebKit::CoreIPCDateComponents, WebKit::CoreIPCCNPhoneNumber, WebKit::CoreIPCCNPostalAddress, WebKit::CoreIPCString> value;
}

[CustomHeader, WebKitPlatform, LegacyPopulateFromEmptyConstructor] class WebKit::CoreIPCCNContact {
    String m_identifier;
    [Validator='WebKit::CoreIPCCNContact::isValidCNContactType(*m_contactType)'] NSInteger m_contactType;

    String m_namePrefix;
    String m_givenName;
    String m_middleName;
    String m_familyName;
    String m_previousFamilyName;
    String m_nameSuffix;
    String m_nickname;
    String m_organizationName;
    String m_departmentName;
    String m_jobTitle;
    String m_phoneticGivenName;
    String m_phoneticMiddleName;
    String m_phoneticFamilyName;
    String m_phoneticOrganizationName;
    String m_note;

    std::optional<WebKit::CoreIPCDateComponents> m_birthday;
    std::optional<WebKit::CoreIPCDateComponents> m_nonGregorianBirthday;

    [Validator='WebKit::CoreIPCContactLabeledValue::allValuesAreOfType<WebKit::CoreIPCDateComponents>(*m_dates)'] Vector<WebKit::CoreIPCContactLabeledValue> m_dates;
    [Validator='WebKit::CoreIPCContactLabeledValue::allValuesAreOfType<WebKit::CoreIPCCNPhoneNumber>(*m_phoneNumbers)'] Vector<WebKit::CoreIPCContactLabeledValue> m_phoneNumbers;
    [Validator='WebKit::CoreIPCContactLabeledValue::allValuesAreOfType<WebKit::CoreIPCString>(*m_emailAddresses)'] Vector<WebKit::CoreIPCContactLabeledValue> m_emailAddresses;
    [Validator='WebKit::CoreIPCContactLabeledValue::allValuesAreOfType<WebKit::CoreIPCCNPostalAddress>(*m_postalAddresses)'] Vector<WebKit::CoreIPCContactLabeledValue> m_postalAddresses;
    [Validator='WebKit::CoreIPCContactLabeledValue::allValuesAreOfType<WebKit::CoreIPCString>(*m_urlAddresses)'] Vector<WebKit::CoreIPCContactLabeledValue> m_urlAddresses;
}

#endif // USE(PASSKIT)
