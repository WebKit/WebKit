# Copyright (C) 2023 Apple Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#if PLATFORM(IOS_FAMILY)

[Nested] enum class WebKit::DocumentEditingContextRequest::Options : uint8_t {
    Text,
    AttributedText,
    Rects,
    Spatial,
    Annotation,
    MarkedTextRects,
    SpatialAndCurrentSelection,
    AutocorrectedRanges,
};

[Nested,OptionSet] enum class WebKit::DocumentEditingContextRequest::Options : uint8_t {
    Text,
    AttributedText,
    Rects,
    Spatial,
    Annotation,
    MarkedTextRects,
    SpatialAndCurrentSelection,
    AutocorrectedRanges,
};

[Nested] struct WebKit::DocumentEditingContext::Range {
    uint64_t location;
    [Validator='!(CheckedUint64 { *location } + *length).hasOverflowed()'] uint64_t length;
}

[Nested] struct WebKit::DocumentEditingContext::TextRectAndRange {
    WebCore::FloatRect rect;
    WebKit::DocumentEditingContext::Range range;
}

header: "DocumentEditingContext.h"
[CustomHeader] struct WebKit::DocumentEditingContextRequest {
    OptionSet<WebKit::DocumentEditingContextRequest::Options> options;
    WebCore::TextGranularity surroundingGranularity;
    int64_t granularityCount;
    WebCore::FloatRect rect;
    std::optional<WebCore::ElementContext> textInputContext;
}

header: "DocumentEditingContext.h"
[CustomHeader] struct WebKit::DocumentEditingContext {
    WebCore::AttributedString contextBefore;
    WebCore::AttributedString selectedText;
    WebCore::AttributedString contextAfter;
    WebCore::AttributedString markedText;
    WebCore::AttributedString annotatedText;
    WebKit::DocumentEditingContext::Range selectedRangeInMarkedText;
    Vector<WebKit::DocumentEditingContext::TextRectAndRange> textRects;
    Vector<WebKit::DocumentEditingContext::Range> autocorrectedRanges;
}

#endif // PLATFORM(IOS_FAMILY)
