#!/usr/bin/env python3

# Based on libxkbcommon script makeheader and GDK script gdkkeysyms-update.pl

import http
import os
import re
from urllib import request

output_file = os.path.join(os.path.dirname(__file__), '..', 'wpe', 'WPEKeysyms.h')
output = open(output_file, 'wt', encoding='utf-8')
output.write('''/*
 * Copyright (C) 2023 Igalia S.L.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef WPEKeysyms_h
#define WPEKeysyms_h

#if !defined(__WPE_PLATFORM_H_INSIDE__) && !defined(BUILDING_WEBKIT)
#error "Only <wpe/wpe-platform.h> can be included directly."
#endif

/* This file is autogenerated from script https://github.com/WebKit/WebKit/tree/main/Source/WebKit/WPEPlatform/scripts/update-keysyms-header */
''')

def openFile(filename):
    try:
        url = 'http://cgit.freedesktop.org/xorg/proto/x11proto/plain/' + filename
        print('Downloading ' + url)
        return request.urlopen(url)
    except:
        path = '/usr/include/X11/' + filename
        print('Failed to download ' + url + ', using ' + path)
        return open(path)


def readFile(header):
    if isinstance(header, http.client.HTTPResponse):
        return header.read().decode(header.headers.get_content_charset())

    return header.read()


with openFile('keysymdef.h') as header:
    for line in readFile(header).split('\n'):
        if not line.startswith('#define '):
            continue

        tokens = re.split(r'\s+', line)
        tokens[1] = re.sub(r'^XK_', 'WPE_KEY_', tokens[1])
        tokens[-1] = tokens[-1] + '\n'
        output.write(' '.join(token for token in tokens if token))

with openFile('XF86keysym.h') as header:
    for line in readFile(header).split('\n'):
        if not line.startswith('#define '):
            continue

        # Ignore lines using macro _EVDEVK
        if '_EVDEVK' in line:
            continue

        tokens = re.split(r'\s+', line)

        # Ignore XF86XK_Q
        if tokens[1] == 'XF86XK_Q':
            continue

        # XF86XK_Calculater is misspelled, and a dupe
        if tokens[1] == 'XF86XK_Calculater':
            continue

        # XF86XK_Clear and XF86XK_Select could end up a dupe of XK_Clear and XK_Select.
        if tokens[1] == 'XF86XK_Clear':
            tokens[1] = 'XF86XK_WindowClear'
        elif tokens[1] == 'XF86XK_Select':
            tokens[1] = 'XF86XK_SelectButton'

        tokens[1] = re.sub(r'^XF86XK_', 'WPE_KEY_', tokens[1])
        tokens[-1] = tokens[-1] + '\n'
        output.write(' '.join(token for token in tokens if token))

output.write('''
#endif /* WPEKeysyms_h */
''')
output.close()
