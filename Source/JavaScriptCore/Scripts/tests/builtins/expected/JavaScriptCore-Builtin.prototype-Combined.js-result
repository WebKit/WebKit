### Begin File: JSCBuiltins.h
/*
 * Copyright (c) 2014, 2015, 2016 Apple Inc. All rights reserved.
 * Copyright (c) 2015 Yusuke Suzuki <utatane.tea@gmail.com>.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */

// DO NOT EDIT THIS FILE. It is automatically generated from JavaScript files for
// builtins by the script: Source/JavaScriptCore/Scripts/generate-js-builtins.py

#pragma once

namespace JSC {
class FunctionExecutable;
class VM;

enum class ConstructAbility : uint8_t;
enum class ConstructorKind : uint8_t;
}

namespace JSC {

extern const char s_JSCCombinedCode[];

extern const unsigned s_JSCCombinedCodeLength;

/* Builtin.prototype */
extern const char* const s_builtinPrototypeEveryCode;
extern const int s_builtinPrototypeEveryCodeLength;
extern const JSC::ConstructAbility s_builtinPrototypeEveryCodeConstructAbility;
extern const JSC::ConstructorKind s_builtinPrototypeEveryCodeConstructorKind;
extern const char* const s_builtinPrototypeForEachCode;
extern const int s_builtinPrototypeForEachCodeLength;
extern const JSC::ConstructAbility s_builtinPrototypeForEachCodeConstructAbility;
extern const JSC::ConstructorKind s_builtinPrototypeForEachCodeConstructorKind;
extern const char* const s_builtinPrototypeMatchCode;
extern const int s_builtinPrototypeMatchCodeLength;
extern const JSC::ConstructAbility s_builtinPrototypeMatchCodeConstructAbility;
extern const JSC::ConstructorKind s_builtinPrototypeMatchCodeConstructorKind;
extern const char* const s_builtinPrototypeTestCode;
extern const int s_builtinPrototypeTestCodeLength;
extern const JSC::ConstructAbility s_builtinPrototypeTestCodeConstructAbility;
extern const JSC::ConstructorKind s_builtinPrototypeTestCodeConstructorKind;

#define JSC_FOREACH_BUILTINPROTOTYPE_BUILTIN_DATA(macro) \
    macro(every, builtinPrototypeEvery, 1) \
    macro(forEach, builtinPrototypeForEach, 1) \
    macro(match, builtinPrototypeMatch, 1) \
    macro(test, builtinPrototypeTest, 1) \

#define JSC_FOREACH_BUILTIN_CODE(macro) \
    macro(builtinPrototypeEveryCode, every, static_cast<const char*>(nullptr), s_builtinPrototypeEveryCodeLength) \
    macro(builtinPrototypeForEachCode, forEach, static_cast<const char*>(nullptr), s_builtinPrototypeForEachCodeLength) \
    macro(builtinPrototypeMatchCode, match, "[Symbol.match]", s_builtinPrototypeMatchCodeLength) \
    macro(builtinPrototypeTestCode, test, static_cast<const char*>(nullptr), s_builtinPrototypeTestCodeLength) \

#define JSC_FOREACH_BUILTIN_FUNCTION_NAME(macro) \
    macro(every) \
    macro(forEach) \
    macro(match) \
    macro(test) \

#define JSC_FOREACH_BUILTIN_FUNCTION_PRIVATE_GLOBAL_NAME(macro) \

#define DECLARE_BUILTIN_GENERATOR(codeName, functionName, overriddenName, argumentCount) \
    JSC::FunctionExecutable* codeName##Generator(JSC::VM&);

JSC_FOREACH_BUILTIN_CODE(DECLARE_BUILTIN_GENERATOR)
#undef DECLARE_BUILTIN_GENERATOR

} // namespace JSC
### End File: JSCBuiltins.h

### Begin File: JSCBuiltins.cpp
/*
 * Copyright (c) 2014, 2015, 2016 Apple Inc. All rights reserved.
 * Copyright (c) 2015 Yusuke Suzuki <utatane.tea@gmail.com>.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */

// DO NOT EDIT THIS FILE. It is automatically generated from JavaScript files for
// builtins by the script: Source/JavaScriptCore/Scripts/generate-js-builtins.py

#include "config.h"
#include "JSCBuiltins.h"

#include "BuiltinExecutables.h"
#include "HeapInlines.h"
#include "IdentifierInlines.h"
#include "Intrinsic.h"
#include "JSCellInlines.h"
#include "UnlinkedFunctionExecutable.h"
#include "VM.h"

namespace JSC {

const char s_JSCCombinedCode[] = { 40, 102, 117, 110, 99, 116, 105, 111, 110, 32, 40, 99, 97, 108, 108, 98, 97, 99, 107, 32, 41, 10, 123, 10, 32, 32, 32, 32, 34, 117, 115, 101, 32, 115, 116, 114, 105, 99, 116, 34, 59, 10, 10, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 32, 61, 61, 61, 32, 110, 117, 108, 108, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 64, 84, 121, 112, 101, 69, 114, 114, 111, 114, 40, 34, 65, 114, 114, 97, 121, 46, 112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 101, 118, 101, 114, 121, 32, 114, 101, 113, 117, 105, 114, 101, 115, 32, 116, 104, 97, 116, 32, 124, 116, 104, 105, 115, 124, 32, 110, 111, 116, 32, 98, 101, 32, 110, 117, 108, 108, 34, 41, 59, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 32, 61, 61, 61, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 64, 84, 121, 112, 101, 69, 114, 114, 111, 114, 40, 34, 65, 114, 114, 97, 121, 46, 112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 101, 118, 101, 114, 121, 32, 114, 101, 113, 117, 105, 114, 101, 115, 32, 116, 104, 97, 116, 32, 124, 116, 104, 105, 115, 124, 32, 110, 111, 116, 32, 98, 101, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100, 34, 41, 59, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 118, 97, 114, 32, 97, 114, 114, 97, 121, 32, 61, 32, 64, 79, 98, 106, 101, 99, 116, 40, 116, 104, 105, 115, 41, 59, 10, 32, 32, 32, 32, 118, 97, 114, 32, 108, 101, 110, 103, 116, 104, 32, 61, 32, 64, 116, 111, 76, 101, 110, 103, 116, 104, 40, 97, 114, 114, 97, 121, 46, 108, 101, 110, 103, 116, 104, 41, 59, 10, 10, 32, 32, 32, 32, 105, 102, 32, 40, 116, 121, 112, 101, 111, 102, 32, 99, 97, 108, 108, 98, 97, 99, 107, 32, 33, 61, 61, 32, 34, 102, 117, 110, 99, 116, 105, 111, 110, 34, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 64, 84, 121, 112, 101, 69, 114, 114, 111, 114, 40, 34, 65, 114, 114, 97, 121, 46, 112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 101, 118, 101, 114, 121, 32, 99, 97, 108, 108, 98, 97, 99, 107, 32, 109, 117, 115, 116, 32, 98, 101, 32, 97, 32, 102, 117, 110, 99, 116, 105, 111, 110, 34, 41, 59, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 118, 97, 114, 32, 116, 104, 105, 115, 65, 114, 103, 32, 61, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104, 32, 62, 32, 49, 32, 63, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 91, 49, 93, 32, 58, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100, 59, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 102, 111, 114, 32, 40, 118, 97, 114, 32, 105, 32, 61, 32, 48, 59, 32, 105, 32, 60, 32, 108, 101, 110, 103, 116, 104, 59, 32, 105, 43, 43, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 40, 105, 32, 105, 110, 32, 97, 114, 114, 97, 121, 41, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 111, 110, 116, 105, 110, 117, 101, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 99, 97, 108, 108, 98, 97, 99, 107, 46, 64, 99, 97, 108, 108, 40, 116, 104, 105, 115, 65, 114, 103, 44, 32, 97, 114, 114, 97, 121, 91, 105, 93, 44, 32, 105, 44, 32, 97, 114, 114, 97, 121, 41, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101, 59, 10, 32, 32, 32, 32, 125, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116, 114, 117, 101, 59, 10, 125, 41, 10, 40, 102, 117, 110, 99, 116, 105, 111, 110, 32, 40, 99, 97, 108, 108, 98, 97, 99, 107, 32, 41, 10, 123, 10, 32, 32, 32, 32, 34, 117, 115, 101, 32, 115, 116, 114, 105, 99, 116, 34, 59, 10, 10, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 32, 61, 61, 61, 32, 110, 117, 108, 108, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 64, 84, 121, 112, 101, 69, 114, 114, 111, 114, 40, 34, 65, 114, 114, 97, 121, 46, 112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 102, 111, 114, 69, 97, 99, 104, 32, 114, 101, 113, 117, 105, 114, 101, 115, 32, 116, 104, 97, 116, 32, 124, 116, 104, 105, 115, 124, 32, 110, 111, 116, 32, 98, 101, 32, 110, 117, 108, 108, 34, 41, 59, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 105, 102, 32, 40, 116, 104, 105, 115, 32, 61, 61, 61, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 64, 84, 121, 112, 101, 69, 114, 114, 111, 114, 40, 34, 65, 114, 114, 97, 121, 46, 112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 102, 111, 114, 69, 97, 99, 104, 32, 114, 101, 113, 117, 105, 114, 101, 115, 32, 116, 104, 97, 116, 32, 124, 116, 104, 105, 115, 124, 32, 110, 111, 116, 32, 98, 101, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100, 34, 41, 59, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 118, 97, 114, 32, 97, 114, 114, 97, 121, 32, 61, 32, 64, 79, 98, 106, 101, 99, 116, 40, 116, 104, 105, 115, 41, 59, 10, 32, 32, 32, 32, 118, 97, 114, 32, 108, 101, 110, 103, 116, 104, 32, 61, 32, 64, 116, 111, 76, 101, 110, 103, 116, 104, 40, 97, 114, 114, 97, 121, 46, 108, 101, 110, 103, 116, 104, 41, 59, 10, 10, 32, 32, 32, 32, 105, 102, 32, 40, 116, 121, 112, 101, 111, 102, 32, 99, 97, 108, 108, 98, 97, 99, 107, 32, 33, 61, 61, 32, 34, 102, 117, 110, 99, 116, 105, 111, 110, 34, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 116, 104, 114, 111, 119, 32, 110, 101, 119, 32, 64, 84, 121, 112, 101, 69, 114, 114, 111, 114, 40, 34, 65, 114, 114, 97, 121, 46, 112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 102, 111, 114, 69, 97, 99, 104, 32, 99, 97, 108, 108, 98, 97, 99, 107, 32, 109, 117, 115, 116, 32, 98, 101, 32, 97, 32, 102, 117, 110, 99, 116, 105, 111, 110, 34, 41, 59, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 118, 97, 114, 32, 116, 104, 105, 115, 65, 114, 103, 32, 61, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 108, 101, 110, 103, 116, 104, 32, 62, 32, 49, 32, 63, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 91, 49, 93, 32, 58, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100, 59, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 102, 111, 114, 32, 40, 118, 97, 114, 32, 105, 32, 61, 32, 48, 59, 32, 105, 32, 60, 32, 108, 101, 110, 103, 116, 104, 59, 32, 105, 43, 43, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 105, 32, 105, 110, 32, 97, 114, 114, 97, 121, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 99, 97, 108, 108, 98, 97, 99, 107, 46, 64, 99, 97, 108, 108, 40, 116, 104, 105, 115, 65, 114, 103, 44, 32, 97, 114, 114, 97, 121, 91, 105, 93, 44, 32, 105, 44, 32, 97, 114, 114, 97, 121, 41, 59, 10, 32, 32, 32, 32, 125, 10, 125, 41, 10, 40, 102, 117, 110, 99, 116, 105, 111, 110, 32, 40, 115, 116, 114, 65, 114, 103, 41, 10, 123, 10, 32, 32, 32, 32, 34, 117, 115, 101, 32, 115, 116, 114, 105, 99, 116, 34, 59, 10, 10, 32, 32, 32, 32, 105, 102, 32, 40, 33, 64, 105, 115, 79, 98, 106, 101, 99, 116, 40, 116, 104, 105, 115, 41, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 64, 116, 104, 114, 111, 119, 84, 121, 112, 101, 69, 114, 114, 111, 114, 40, 34, 82, 101, 103, 69, 120, 112, 46, 112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 64, 64, 109, 97, 116, 99, 104, 32, 114, 101, 113, 117, 105, 114, 101, 115, 32, 116, 104, 97, 116, 32, 124, 116, 104, 105, 115, 124, 32, 98, 101, 32, 97, 110, 32, 79, 98, 106, 101, 99, 116, 34, 41, 59, 10, 10, 32, 32, 32, 32, 108, 101, 116, 32, 114, 101, 103, 101, 120, 112, 32, 61, 32, 116, 104, 105, 115, 59, 10, 10, 32, 32, 32, 32, 47, 47, 10, 32, 32, 32, 32, 105, 102, 32, 40, 33, 64, 104, 97, 115, 79, 98, 115, 101, 114, 118, 97, 98, 108, 101, 83, 105, 100, 101, 69, 102, 102, 101, 99, 116, 115, 70, 111, 114, 82, 101, 103, 69, 120, 112, 77, 97, 116, 99, 104, 40, 114, 101, 103, 101, 120, 112, 41, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 64, 114, 101, 103, 69, 120, 112, 77, 97, 116, 99, 104, 70, 97, 115, 116, 46, 64, 99, 97, 108, 108, 40, 114, 101, 103, 101, 120, 112, 44, 32, 115, 116, 114, 65, 114, 103, 41, 59, 10, 10, 32, 32, 32, 32, 108, 101, 116, 32, 115, 116, 114, 32, 61, 32, 64, 116, 111, 83, 116, 114, 105, 110, 103, 40, 115, 116, 114, 65, 114, 103, 41, 59, 10, 10, 32, 32, 32, 32, 105, 102, 32, 40, 33, 114, 101, 103, 101, 120, 112, 46, 103, 108, 111, 98, 97, 108, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 64, 114, 101, 103, 69, 120, 112, 69, 120, 101, 99, 40, 114, 101, 103, 101, 120, 112, 44, 32, 115, 116, 114, 41, 59, 10, 32, 32, 32, 32, 10, 32, 32, 32, 32, 108, 101, 116, 32, 117, 110, 105, 99, 111, 100, 101, 32, 61, 32, 114, 101, 103, 101, 120, 112, 46, 117, 110, 105, 99, 111, 100, 101, 59, 10, 32, 32, 32, 32, 114, 101, 103, 101, 120, 112, 46, 108, 97, 115, 116, 73, 110, 100, 101, 120, 32, 61, 32, 48, 59, 10, 32, 32, 32, 32, 108, 101, 116, 32, 114, 101, 115, 117, 108, 116, 76, 105, 115, 116, 32, 61, 32, 91, 93, 59, 10, 10, 32, 32, 32, 32, 47, 47, 10, 32, 32, 32, 32, 47, 47, 10, 32, 32, 32, 32, 47, 47, 10, 32, 32, 32, 32, 99, 111, 110, 115, 116, 32, 109, 97, 120, 105, 109, 117, 109, 82, 101, 97, 115, 111, 110, 97, 98, 108, 101, 77, 97, 116, 99, 104, 83, 105, 122, 101, 32, 61, 32, 49, 48, 48, 48, 48, 48, 48, 48, 48, 59, 10, 10, 32, 32, 32, 32, 119, 104, 105, 108, 101, 32, 40, 116, 114, 117, 101, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 108, 101, 116, 32, 114, 101, 115, 117, 108, 116, 32, 61, 32, 64, 114, 101, 103, 69, 120, 112, 69, 120, 101, 99, 40, 114, 101, 103, 101, 120, 112, 44, 32, 115, 116, 114, 41, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 114, 101, 115, 117, 108, 116, 32, 61, 61, 61, 32, 110, 117, 108, 108, 41, 32, 123, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 114, 101, 115, 117, 108, 116, 76, 105, 115, 116, 46, 108, 101, 110, 103, 116, 104, 32, 61, 61, 61, 32, 48, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 110, 117, 108, 108, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 114, 101, 115, 117, 108, 116, 76, 105, 115, 116, 59, 10, 32, 32, 32, 32, 32, 32, 32, 32, 125, 10, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 114, 101, 115, 117, 108, 116, 76, 105, 115, 116, 46, 108, 101, 110, 103, 116, 104, 32, 62, 32, 109, 97, 120, 105, 109, 117, 109, 82, 101, 97, 115, 111, 110, 97, 98, 108, 101, 77, 97, 116, 99, 104, 83, 105, 122, 101, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 64, 116, 104, 114, 111, 119, 79, 117, 116, 79, 102, 77, 101, 109, 111, 114, 121, 69, 114, 114, 111, 114, 40, 41, 59, 10, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 64, 105, 115, 79, 98, 106, 101, 99, 116, 40, 114, 101, 115, 117, 108, 116, 41, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 64, 116, 104, 114, 111, 119, 84, 121, 112, 101, 69, 114, 114, 111, 114, 40, 34, 82, 101, 103, 69, 120, 112, 46, 112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 64, 64, 109, 97, 116, 99, 104, 32, 99, 97, 108, 108, 32, 116, 111, 32, 82, 101, 103, 69, 120, 112, 46, 101, 120, 101, 99, 32, 100, 105, 100, 110, 39, 116, 32, 114, 101, 116, 117, 114, 110, 32, 110, 117, 108, 108, 32, 111, 114, 32, 97, 110, 32, 111, 98, 106, 101, 99, 116, 34, 41, 59, 10, 10, 32, 32, 32, 32, 32, 32, 32, 32, 108, 101, 116, 32, 114, 101, 115, 117, 108, 116, 83, 116, 114, 105, 110, 103, 32, 61, 32, 64, 116, 111, 83, 116, 114, 105, 110, 103, 40, 114, 101, 115, 117, 108, 116, 91, 48, 93, 41, 59, 10, 10, 32, 32, 32, 32, 32, 32, 32, 32, 105, 102, 32, 40, 33, 114, 101, 115, 117, 108, 116, 83, 116, 114, 105, 110, 103, 46, 108, 101, 110, 103, 116, 104, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 103, 101, 120, 112, 46, 108, 97, 115, 116, 73, 110, 100, 101, 120, 32, 61, 32, 64, 97, 100, 118, 97, 110, 99, 101, 83, 116, 114, 105, 110, 103, 73, 110, 100, 101, 120, 40, 115, 116, 114, 44, 32, 114, 101, 103, 101, 120, 112, 46, 108, 97, 115, 116, 73, 110, 100, 101, 120, 44, 32, 117, 110, 105, 99, 111, 100, 101, 41, 59, 10, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 115, 117, 108, 116, 76, 105, 115, 116, 46, 64, 112, 117, 115, 104, 40, 114, 101, 115, 117, 108, 116, 83, 116, 114, 105, 110, 103, 41, 59, 10, 32, 32, 32, 32, 125, 10, 125, 41, 10, 40, 102, 117, 110, 99, 116, 105, 111, 110, 32, 40, 115, 116, 114, 65, 114, 103, 41, 10, 123, 10, 32, 32, 32, 32, 34, 117, 115, 101, 32, 115, 116, 114, 105, 99, 116, 34, 59, 10, 10, 32, 32, 32, 32, 108, 101, 116, 32, 114, 101, 103, 101, 120, 112, 32, 61, 32, 116, 104, 105, 115, 59, 10, 10, 32, 32, 32, 32, 47, 47, 10, 32, 32, 32, 32, 105, 102, 32, 40, 64, 105, 115, 82, 101, 103, 69, 120, 112, 79, 98, 106, 101, 99, 116, 40, 114, 101, 103, 101, 120, 112, 41, 32, 38, 38, 32, 64, 116, 114, 121, 71, 101, 116, 66, 121, 73, 100, 40, 114, 101, 103, 101, 120, 112, 44, 32, 34, 101, 120, 101, 99, 34, 41, 32, 61, 61, 61, 32, 64, 114, 101, 103, 69, 120, 112, 66, 117, 105, 108, 116, 105, 110, 69, 120, 101, 99, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 64, 114, 101, 103, 69, 120, 112, 84, 101, 115, 116, 70, 97, 115, 116, 46, 64, 99, 97, 108, 108, 40, 114, 101, 103, 101, 120, 112, 44, 32, 115, 116, 114, 65, 114, 103, 41, 59, 10, 10, 32, 32, 32, 32, 47, 47, 10, 32, 32, 32, 32, 47, 47, 10, 32, 32, 32, 32, 105, 102, 32, 40, 33, 64, 105, 115, 79, 98, 106, 101, 99, 116, 40, 114, 101, 103, 101, 120, 112, 41, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 64, 116, 104, 114, 111, 119, 84, 121, 112, 101, 69, 114, 114, 111, 114, 40, 34, 82, 101, 103, 69, 120, 112, 46, 112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 116, 101, 115, 116, 32, 114, 101, 113, 117, 105, 114, 101, 115, 32, 116, 104, 97, 116, 32, 124, 116, 104, 105, 115, 124, 32, 98, 101, 32, 97, 110, 32, 79, 98, 106, 101, 99, 116, 34, 41, 59, 10, 10, 32, 32, 32, 32, 47, 47, 10, 32, 32, 32, 32, 108, 101, 116, 32, 115, 116, 114, 32, 61, 32, 64, 116, 111, 83, 116, 114, 105, 110, 103, 40, 115, 116, 114, 65, 114, 103, 41, 59, 10, 10, 32, 32, 32, 32, 47, 47, 10, 32, 32, 32, 32, 108, 101, 116, 32, 109, 97, 116, 99, 104, 32, 61, 32, 64, 114, 101, 103, 69, 120, 112, 69, 120, 101, 99, 40, 114, 101, 103, 101, 120, 112, 44, 32, 115, 116, 114, 41, 59, 10, 10, 32, 32, 32, 32, 47, 47, 10, 32, 32, 32, 32, 105, 102, 32, 40, 109, 97, 116, 99, 104, 32, 33, 61, 61, 32, 110, 117, 108, 108, 41, 10, 32, 32, 32, 32, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 116, 114, 117, 101, 59, 10, 32, 32, 32, 32, 114, 101, 116, 117, 114, 110, 32, 102, 97, 108, 115, 101, 59, 10, 125, 41, 10 };

const unsigned s_JSCCombinedCodeLength = 3198;

const JSC::ConstructAbility s_builtinPrototypeEveryCodeConstructAbility = JSC::ConstructAbility::CannotConstruct;
const JSC::ConstructorKind s_builtinPrototypeEveryCodeConstructorKind = JSC::ConstructorKind::None;
const int s_builtinPrototypeEveryCodeLength = 762;
static const JSC::Intrinsic s_builtinPrototypeEveryCodeIntrinsic = JSC::NoIntrinsic;
const char* const s_builtinPrototypeEveryCode =
s_JSCCombinedCode + 0
;

const JSC::ConstructAbility s_builtinPrototypeForEachCodeConstructAbility = JSC::ConstructAbility::CannotConstruct;
const JSC::ConstructorKind s_builtinPrototypeForEachCodeConstructorKind = JSC::ConstructorKind::None;
const int s_builtinPrototypeForEachCodeLength = 694;
static const JSC::Intrinsic s_builtinPrototypeForEachCodeIntrinsic = JSC::NoIntrinsic;
const char* const s_builtinPrototypeForEachCode =
s_JSCCombinedCode + 762
;

const JSC::ConstructAbility s_builtinPrototypeMatchCodeConstructAbility = JSC::ConstructAbility::CannotConstruct;
const JSC::ConstructorKind s_builtinPrototypeMatchCodeConstructorKind = JSC::ConstructorKind::None;
const int s_builtinPrototypeMatchCodeLength = 1238;
static const JSC::Intrinsic s_builtinPrototypeMatchCodeIntrinsic = JSC::NoIntrinsic;
const char* const s_builtinPrototypeMatchCode =
s_JSCCombinedCode + 1456
;

const JSC::ConstructAbility s_builtinPrototypeTestCodeConstructAbility = JSC::ConstructAbility::CannotConstruct;
const JSC::ConstructorKind s_builtinPrototypeTestCodeConstructorKind = JSC::ConstructorKind::None;
const int s_builtinPrototypeTestCodeLength = 504;
static const JSC::Intrinsic s_builtinPrototypeTestCodeIntrinsic = JSC::RegExpTestIntrinsic;
const char* const s_builtinPrototypeTestCode =
s_JSCCombinedCode + 2694
;


#define DEFINE_BUILTIN_GENERATOR(codeName, functionName, overriddenName, argumentCount) \
JSC::FunctionExecutable* codeName##Generator(JSC::VM& vm) \
{\
    return vm.builtinExecutables()->codeName##Executable()->link(vm, nullptr, vm.builtinExecutables()->codeName##Source(), std::nullopt, s_##codeName##Intrinsic); }
JSC_FOREACH_BUILTIN_CODE(DEFINE_BUILTIN_GENERATOR)
#undef DEFINE_BUILTIN_GENERATOR


} // namespace JSC
### End File: JSCBuiltins.cpp
