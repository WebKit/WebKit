/*
 * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

cpp_quote("#define WebURLResponseUnknownLength -1")

#ifndef DO_NO_IMPORTS
import "oaidl.idl";
import "ocidl.idl";
#endif

[
    object,
    oleautomation,
    uuid(9814930B-E037-4477-8DF1-4D898B648995),
    pointer_default(unique)
]

interface IWebURLResponse : IUnknown
{
    /*
        - (long long)expectedContentLength
    */
    HRESULT expectedContentLength([out, retval] long long *result); 

    /*
        - (id)initWithURL:(NSURL *)URL MIMEType:(NSString *)MIMEType expectedContentLength:(int)length textEncodingName:(NSString *)name
    */
    HRESULT initWithURL([in] BSTR url, [in] BSTR mimeType, [in] int expectedContentLength, [in] BSTR textEncodingName);

    /*
        - (NSString *)MIMEType
    */
    HRESULT MIMEType([out, retval] BSTR* result);

    /*
        - (NSString *)suggestedFilename
    */
    HRESULT suggestedFilename([out, retval] BSTR* result);

    /*
        - (NSString *)textEncodingName
    */
    HRESULT textEncodingName([out, retval] BSTR* result);

    /*
        - (NSURL *)URL
    */
    HRESULT URL([out, retval] BSTR* result);
}
