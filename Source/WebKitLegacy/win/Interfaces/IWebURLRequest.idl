/*
 * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

#ifndef DO_NO_IMPORTS
import "oaidl.idl";
import "ocidl.idl";
#endif

typedef enum _WebURLRequestCachePolicy
{
    WebURLRequestUseProtocolCachePolicy,
    WebURLRequestReloadIgnoringCacheData,
    WebURLRequestReturnCacheDataElseLoad,
    WebURLRequestReturnCacheDataDontLoad
} WebURLRequestCachePolicy;

[
    object,
    oleautomation,
    hidden,
    uuid(F4B85F1D-F3B2-493d-B786-0930E804A3BA),
    pointer_default(unique)
]
interface IWebURLRequest : IUnknown
{
    /*
        + (id)requestWithURL:(NSURL *)theURL
        + (id)requestWithURL:(NSURL *)theURL cachePolicy:(NSURLRequestCachePolicy)cachePolicy timeoutInterval:(NSTimeInterval)timeoutInterval
    */
    HRESULT requestWithURL([in] BSTR theURL, [in] WebURLRequestCachePolicy cachePolicy, [in] double timeoutInterval);

    /*
        - (NSDictionary *)allHTTPHeaderFields
    */
    HRESULT allHTTPHeaderFields([out, retval] IPropertyBag** result);

    /*
        - (NSURLRequestCachePolicy)cachePolicy
    */
    HRESULT cachePolicy([out, retval] WebURLRequestCachePolicy* result);

    /*
        - (NSData *)HTTPBody
    */
    HRESULT HTTPBody([out, retval] IStream** result);

    /*
        - (NSInputStream *)HTTPBodyStream
    */
    HRESULT HTTPBodyStream([out, retval] IStream** result);

    /*
        - (NSString *)HTTPMethod
    */
    HRESULT HTTPMethod([out, retval] BSTR *result);

    /*
        - (BOOL)HTTPShouldHandleCookies
    */
    HRESULT HTTPShouldHandleCookies([out, retval] BOOL *result);

    /*
        - (id)initWithURL:(NSURL *)theURL
        - (id)initWithURL:(NSURL *)theURL cachePolicy:(NSURLRequestCachePolicy)cachePolicy timeoutInterval:(NSTimeInterval)timeoutInterval
    */
    HRESULT initWithURL([in] BSTR url, [in] WebURLRequestCachePolicy cachePolicy, [in] double timeoutInterval);

    /*
        - (NSURL *)mainDocumentURL
    */
    HRESULT mainDocumentURL([out, retval] BSTR* result);

    /*
        -(NSTimeInterval)timeoutInterval
    */
    HRESULT timeoutInterval([out, retval] double* result);

    /*
        -(NSURL *)URL
    */
    HRESULT URL([out, retval] BSTR* result);

    /*
        -(NSString *)valueForHTTPHeaderField:(NSString *)field
    */
    HRESULT valueForHTTPHeaderField([in] BSTR field, [out, retval] BSTR* result);

    HRESULT isEmpty([out, retval] BOOL* result);

    HRESULT mutableCopy([out, retval] IWebMutableURLRequest** result);

    HRESULT isEqual([in] IWebURLRequest* other, [out, retval] BOOL* result);
}
