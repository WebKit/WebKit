/*
 * Copyright (C) 2006 Apple Inc.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

[
    Exposed=Window
] interface UIEvent : Event {
    constructor([AtomString] DOMString type, optional UIEventInit eventInitDict);

    readonly attribute WindowProxy view;
    readonly attribute long detail;
    
    undefined initUIEvent([AtomString] DOMString type, optional boolean canBubble = false, optional boolean cancelable = false, optional WindowProxy? view = null, optional long detail = 0);

    readonly attribute long layerX;
    readonly attribute long layerY;
    readonly attribute long pageX;
    readonly attribute long pageY;

    // FIXME: This should be on KeyboardEvent only as per the specification but Firefox and Chrome
    // still have this attribute on UIEvent as of December 2016.
    readonly attribute long which;
};
