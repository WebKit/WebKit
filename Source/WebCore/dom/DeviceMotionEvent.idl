/*
 * Copyright (C) 2010-2024 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

// https://w3c.github.io/deviceorientation/#device-motion-event-api

[
    Conditional=DEVICE_ORIENTATION,
    Exposed=Window,
    SecureContext
] interface DeviceMotionEvent : Event {
    // FIXME: Add `constructor` by uncommenting below.
    // constructor([AtomString] DOMString type, optional DeviceMotionEventInit eventInitDict = {});
    readonly attribute Acceleration? acceleration;
    readonly attribute Acceleration? accelerationIncludingGravity;
    readonly attribute RotationRate? rotationRate;
    readonly attribute unrestricted double interval;

    [CallWith=CurrentDocument, EnabledBySetting=DeviceOrientationPermissionAPIEnabled] static Promise<DeviceOrientationOrMotionPermissionState> requestPermission();
};

[
    Conditional=DEVICE_ORIENTATION,
    JSGenerateToJSObject,
    JSGenerateToNativeObject
] dictionary Acceleration {
    double? x = null;
    double? y = null;
    double? z = null;
};

[
    Conditional=DEVICE_ORIENTATION,
    JSGenerateToJSObject,
    JSGenerateToNativeObject
] dictionary RotationRate {
    double? alpha = null;
    double? beta = null;
    double? gamma = null;
};
