/*
 * Copyright (C) 2019 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

[
    ImplementationLacksVTable,
    JSGenerateToJSObject,
    LegacyNoInterfaceObject,
] interface InspectorAuditAccessibilityObject {
    [CallWith=Document] sequence<Node> getElementsByComputedRole(DOMString role, optional Node? container);

    Node? getActiveDescendant(Node node);
    sequence<Node>? getChildNodes(Node node);
    ComputedProperties? getComputedProperties(Node node);
    sequence<Node>? getControlledNodes(Node node);
    sequence<Node>? getFlowedNodes(Node node);
    Node? getMouseEventNode(Node node);
    sequence<Node>? getOwnedNodes(Node node);
    Node? getParentNode(Node node);
    sequence<Node>? getSelectedChildNodes(Node node);
};

[
    JSGenerateToJSObject,
] dictionary ComputedProperties {
    boolean? busy;
    DOMString? checked;
    DOMString? currentState;
    boolean? disabled;
    boolean? expanded;
    boolean? focused;
    long? headingLevel;
    boolean? hidden;
    long? hierarchicalLevel;
    boolean? ignored;
    boolean? ignoredByDefault;
    DOMString? invalidStatus;
    boolean? isPopUpButton;
    DOMString? label;
    boolean? liveRegionAtomic;
    sequence<DOMString>? liveRegionRelevant;
    DOMString? liveRegionStatus;
    boolean? pressed;
    boolean? readonly;
    boolean? required;
    DOMString? role;
    boolean? selected;
};