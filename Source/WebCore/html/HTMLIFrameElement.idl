/*
 * Copyright (C) 2006, 2007, 2009, 2010 Apple Inc. All rights reserved.
 * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

[
    Exposed=Window
] interface HTMLIFrameElement : HTMLElement {
    [Reflect, CEReactions=NotNeeded] attribute DOMString align;
    [Reflect, CEReactions=NotNeeded] attribute DOMString frameBorder;
    [Reflect, CEReactions=NotNeeded] attribute DOMString height;
    [Reflect, URL, CEReactions=NotNeeded] attribute USVString longDesc;
    [Reflect, CEReactions=NotNeeded] attribute [LegacyNullToEmptyString] DOMString marginHeight;
    [Reflect, CEReactions=NotNeeded] attribute [LegacyNullToEmptyString] DOMString marginWidth;
    [Reflect, CEReactions=NotNeeded] attribute DOMString name;

    [PutForwards=value] readonly attribute DOMTokenList sandbox;
    [Reflect, CEReactions=NotNeeded] attribute boolean allowFullscreen;
    [Reflect, CEReactions=NotNeeded] attribute DOMString allow;

    [Reflect, CEReactions=NotNeeded] attribute DOMString scrolling;
    [Reflect, URL, CEReactions=NotNeeded] attribute USVString src;
    [Reflect, CEReactions=NotNeeded] attribute DOMString srcdoc;
    [Reflect, CEReactions=NotNeeded] attribute DOMString width;

    [CheckSecurityForNode] readonly attribute Document contentDocument;

    readonly attribute WindowProxy contentWindow;

    [CheckSecurityForNode] Document getSVGDocument();

    [EnabledBySetting=ReferrerPolicyAttribute, ImplementedAs=referrerPolicyForBindings, CEReactions=NotNeeded] attribute DOMString referrerPolicy;

    [CEReactions, EnabledBySetting=LazyIframeLoading, ImplementedAs=loadingForBindings] attribute DOMString loading;
};
