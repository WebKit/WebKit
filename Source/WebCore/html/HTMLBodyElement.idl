/*
 * Copyright (C) 2006, 2009, 2010 Apple Inc. All rights reserved.
 * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

[
    Exposed=Window,
    GenerateForEachWindowEventHandlerContentAttribute,
] interface HTMLBodyElement : HTMLElement {
    [CEReactions=NotNeeded, Reflect] attribute [LegacyNullToEmptyString] DOMString aLink;
    [CEReactions=NotNeeded, Reflect] attribute DOMString background;
    [CEReactions=NotNeeded, Reflect] attribute [LegacyNullToEmptyString] DOMString bgColor;
    [CEReactions=NotNeeded, Reflect] attribute [LegacyNullToEmptyString] DOMString link;
    [CEReactions=NotNeeded, Reflect] attribute [LegacyNullToEmptyString] DOMString text;
    [CEReactions=NotNeeded, Reflect] attribute [LegacyNullToEmptyString] DOMString vLink;

    [WindowEventHandler] attribute EventHandler onblur;
    [WindowEventHandler] attribute EventHandler onerror;
    [WindowEventHandler] attribute EventHandler onfocus;
    [WindowEventHandler] attribute EventHandler onload;
    [WindowEventHandler] attribute EventHandler onresize;
    [WindowEventHandler] attribute EventHandler onscroll;

    // See these 2 issues for onfocusin and onfocusout.
    // https://github.com/w3c/uievents/issues/88
    // https://github.com/whatwg/html/issues/3514
    [WindowEventHandler] attribute EventHandler onfocusin;
    [WindowEventHandler] attribute EventHandler onfocusout;

    // Non-standard
    [NotEnumerable, WindowEventHandler, Conditional=MOUSE_FORCE_EVENTS] attribute EventHandler onwebkitmouseforcechanged;
    [NotEnumerable, WindowEventHandler, Conditional=MOUSE_FORCE_EVENTS] attribute EventHandler onwebkitmouseforcedown;
    [NotEnumerable, WindowEventHandler, Conditional=MOUSE_FORCE_EVENTS] attribute EventHandler onwebkitmouseforcewillbegin;
    [NotEnumerable, WindowEventHandler, Conditional=MOUSE_FORCE_EVENTS] attribute EventHandler onwebkitmouseforceup;
};

HTMLBodyElement includes WindowEventHandlers;
