{
    "instructions": [
        "CSS Properties",
        "",
        "Some properties are used internally, but are not part of CSS. They are used to get",
        "HTML4 compatibility in the rendering engine.",
        "",
        "Microsoft extensions are documented here:",
        "http://msdn.microsoft.com/workshop/author/css/reference/attributes.asp",
        "",
        "1. Possible Keys",
        "",
        "Keys that control CSS behavior:",
        "",
        "* inherited:",
        "Whether the property is inherited.",
        "",
        "* animatable:",
        "Indicates that this CSS property is an animation / transition property.",
        "It must have corresponding methods on the Animation class.",
        "",
        "Keys that control code generation:",
        "",
        "* initial:",
        "Overrides the method name on RenderStyle to get the initial value for",
        "the property. By default, \"initial\" + PropertyId is used (e.g.",
        "initialBorderCollapse()).",
        "",
        "* getter:",
        "Overrides the method name on RenderStyle to get the current value for",
        "the property. By default, the PropertyId with first letter lowercased",
        "is used (e.g. borderCollapse()).",
        "",
        "* setter:",
        "Overrides the method name on RenderStyle to set the current value for",
        "the property. By default, \"set\" + PropertyId is used (e.g.",
        "setBorderCollapse()).",
        "",
        "* name-for-methods:",
        "Overrides the getter / setter / initial method names on RenderStyle.",
        "For example, '\"name-for-methods\": \"OverflowWrap\"' will use",
        "\"overflowWrap() / setOverflowWrap() / initialOverflowWrap()\".",
        "",
        "* converter:",
        "The name of the converter helper function in css/StyleBuilderConverter.h",
        "to use. The converter helper function takes ",
        "If converting the input CSSValue into the setter method argument type",
        "is not trivial (i.e. the CSSPrimitiveValue cannot be implicitly converted",
        "to the expected type), then you can indicate that a converter helper",
        "function in css/StyleBuilderConverter.h should be used.",
        "",
        "* conditional-converter:",
        "Similar to property converter, but the converter function returns a",
        "std::optional<> to indicate if the property setter should be called",
        "or not.",
        "",
        "* custom:",
        "A string that is \"All\", \"Initial\", \"Inherit\", or \"Value\" or some combination",
        "of the latter three separated by '|' (e.g. \"Inherit|Value\"). These options",
        "are described as follows:",
        "",
        "All - the CSS property requires special handling to set its initial value,",
        "inherit value, and its value. Prefer this option over listing the individual",
        "options.",
        "",
        "Initial - the CSS property requires special handling to set its initial value.",
        "",
        "Inherit - the CSS property requires special handling to set its inherit value.",
        "",
        "Value - the CSS property requires special handling to set its value, and a",
        "regular converter helper cannot be used.",
        "",
        "The custom code for the property should be located in css/StyleBuilderCustom.h",
        "and named applyValue[CSSPropertyName]().",
        "",
        "* svg:",
        "Indicates that this is an SVG CSS property and that the corresponding",
        "methods are on SVGRenderStyle instead of RenderStyle.",
        "",
        "* auto-functions:",
        "Indicates that this CSS property requires handling of \"auto\" and has",
        "corresponding hasAutoXXX() / setHasAutoXXX() methods on RenderStyle.",
        "",
        "* visited-link-color-support:",
        "Indicates that this CSS property is a color property with a",
        "\"setVisitedLinkXXX()\" setter on RenderStyle to be called when",
        "StyleResolver::applyPropertyToVisitedLinkStyle() return true.",
        "The regular setter on RenderStyle will only be called if",
        "StyleResolver::applyPropertyToRegularStyle() returns true.",
        "",
        "* color-property:",
        "Indicates that this CSS property is color-related (populates",
        "CSSProperty::isColorProperty().",
        "",
        "* fast-path-inherited:",
        "Indicates that this CSS property can use the fast-path inheritance mechanism.",
        "This generates code that disables the mechanism if the property is explicitly mutated.",
        "",
        "* logical-property-group:",
        "Indicates that this CSS property belongs to a logical property group",
        "(https://drafts.csswg.org/css-logical/#logical-property-group)",
        "This is used for both logical properties that depend on writing-mode",
        "and/or text-direction (for which CSSProperty::isDirectionAwareProperty()",
        "returns true), and also for their physical counterparts.",
        "If set, the value must be an object with these properties:",
        " - name: a string identifying the logical property group. All logical",
        "   and physical properties in the same group should have the same name.",
        "   Examples: \"border-radius\", \"margin\", \"min-size\".",
        " - resolver: a string with the mapping that will be used to convert to",
        "   the equivalent physical or logical property within the same group.",
        "   Also identifies the mapping logic of the group",
        "   (https://drafts.csswg.org/css-logical-1/#mapping-logic).",
        "   Examples: \"top-left\", \"block-start\", \"horizontal\".",
        "",
        "* font-property:",
        "Indicates that this CSS property is font-related. It must have corresponding",
        "methods on the FontDescription class.",
        "",
        "* fill-layer-property:",
        "Indicates that this CSS property is a FillLayer property. It must have",
        "corresponding methods on the FillLayer class.",
        "",
        "* separator:",
        "Indicates separator for list-valued CSS property (populates",
        "CSSProperty::listPropertySeparator().",
        "",
        "* skip-builder:",
        "Ignore this property in the StyleBuilder.",
        "",
        "* longhands:",
        "Indicated the array longhand property names associated with this shorthand",
        "property. Shorthand properties should not use the StyleBuilder. An",
        "ASSERT_NOT_REACHED() will be generated for this property in the StyleBuilder.",
        "property1, property2, ... are the longhands for this shorthand property. A",
        "corresponding \"StylePropertyShorthand propertyIdShorthand()\" function will be",
        "generated in StylePropertyShorthandFunctions.h header.",
        "",
        "* top-priority:",
        "Whether the property needs to be applied before high-priority properties",
        "in CSS cascading order. Please justify usage with a comment field.",
        "",
        "* high-priority:",
        "Whether the property needs to be applied before non-high-priority properties",
        "in CSS cascading order. High priority properties must not accept <length>",
        "values. All font-properties must be high-priority.",
        "",
        "* sink-priority:",
        "Whether the property needs to be applied at the end of its priority bucket",
        "in CSS cascading order.",
        "",
        "* related-property:",
        "Indicates another property which shares a computed style with the current one.",
        "Typically used for the prefixed or unprefixed version of the same property, e.g.",
        "-webkit-box-shadow has box-shadow as the related property, and vice versa.",
        "Properties with this flag can't be high-priority, they are deferred to be applied",
        "after low-priority ones, and they are specially handled to apply in parse order.",
        "So if a declaration block contains both properties, they will be applied in the",
        "specified order, not alphabetically within their priority bucket as usual.",
        "",
        "* aliases:",
        "An array of the alternative names for this property. Aliases are folded at",
        "parse time and don't have their own CSSPropertyID.",
        "",
        "* synonym:",
        "An alternative name for this property that gets its own CSSPropertyID.",
        "This allows parsing code to handle differences in allowed values.",
        "Style builder code is shared with the original property.",
        "",
        "* enable-if:",
        "Indicates that code should only be generated for this property/value if the",
        "specified macro define is enabled. Prefix the macro define with '!' to",
        "generate code when the macro define is not enabled.",
        "",
        "* settings-flag:",
        "The name of the flag on Settings (e.g. \"CSSOMViewSmoothScrolling\")",
        "that conditionally enables the property.",
        "",
        "* computable:",
        "Whether the property should be indexed on computed styles.",
        "If omitted, the property will be computable by default,",
        "except if it has \"skip-builder\" and is not logical,",
        "or if it's a shorthand with multiple indexed longhands.",
        "Internal properties (\"internal-only\") are never computable,",
        "and setting this flag to true is an error.",
        "",
        "* parser-function-allows-number-or-integer-input:",
        "Indicates that the properties allows <number> or <integer> as input. We'd",
        "normally rely on the grammar to detect this but it is not available when using",
        "custom parsing",
        "",
        "* parser-function:",
        "Indicates that the property requires a custom parser and that the parser function",
        "will be named whatever string is provided as the value.",
        "",
        "* parser-function-requires-additional-parameters:",
        "An array of strings to pass as arguments to a custom parser. 'parser-function' must",
        "also be specified for this to be valid.",
        "",
        "* parser-function-requires-context:",
        "Indicates that the CSSPropertyContext is required by the custom parser. 'parser-function'",
        "must also be specified for this to be valid.",
        "",
        "* parser-function-requires-context-mode:",
        "Indicates that the CSSPropertyContext's mode property is required by the custom",
        "parser. 'parser-function' must also be specified for this to be valid.",
        "",
        "* parser-function-requires-current-shorthand:",
        "Indicates that the current shorthand being parsed is required by the custom",
        "parser. 'parser-function' must also be specified for this to be valid.",
        "",
        "* parser-function-requires-current-property:",
        "Indicates that the current property being parsed is required by the custom",
        "parser. 'parser-function' must also be specified for this to be valid.",
        "",
        "* parser-function-requires-quirks-mode:",
        "Indicates that the current state of quirks mode is required by the custom parser.",
        "'parser-function' must also be specified for this to be valid.",
        "",
        "* parser-function-requires-value-pool:",
        "Indicates that a CSSValuePool is required by the custom parser. 'parser-function'",
        "must also be specified for this to be valid.",
        "",
        "* parser-grammar:",
        "An array of terms that define the grammar for the property.",
        "",
        "* parser-grammar-comment:",
        "A comment specific to the `parser-grammar` value.",
        "",
        "2. Lesser known capabilities of this file format",
        "",
        "Conditional CSS keyword value:",
        "",
        "Typically the value of key \"values\" is an array of strings that represent the",
        "CSS keyword values that are recognized by a CSS property. This array may also",
        "contain objects of the form:",
        "",
        "    {",
        "        \"value\": \"awesome\",",
        "        \"enable-if\": \"ENABLE_AWESOME_FEATURE\"",
        "    }",
        "",
        "The key \"value\" is the name of the conditional keyword and key \"enable-if\"",
        "describes the code generation criterion. See the documentation for \"enable-if\"",
        "above for more details.",
        "",
        "Conditonal CSS property definition:",
        "",
        "A CSS property can have more than one definition so long as the key \"enable-if\"",
        "differs in each definition. For example, ",
        "",
        "    \"awesome-property\": [",
        "        {",
        "            \"inherited\": true,",
        "            ...,",
        "            \"codegen-properties\": {",
        "                ...",
        "                \"enable-if\": \"ENABLE_AWESOME_FEATURE\"",
        "            }",
        "        },",
        "        {",
        "            \"inherited\": false,",
        "            ...,",
        "            \"codegen-properties\": {",
        "                ...",
        "                \"enable-if\": \"!ENABLE_AWESOME_FEATURE\"",
        "            }",
        "        },",
        "        ...",
        "    ],",
        "",
        "The first definition in parse order whose \"enable-if\" criterion evaluates",
        "to true is chosen for code generation."
    ],
    "properties": {
        "accent-color": {
            "inherited": true,
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "auto-functions": true,
                "color-property": true,
                "settings-flag": "accentColorEnabled",
                "parser-grammar": "auto | <color>"
            },
            "specification": {
                "category": "css-ui",
                "url": "https://www.w3.org/TR/css-ui-4/#widget-accent"
            }
        },
        "align-tracks": {
            "values": [
                "normal",
                "first",
                "last",
                "baseline",
                "space-between",
                "space-around",
                "space-evenly",
                "stretch",
                "unsafe",
                "safe",
                "center",
                "start",
                "end",
                "flex-start",
                "flex-end"
            ],
            "codegen-properties": {
                "initial": "initialAlignTracks",
                "converter": "ContentAlignmentDataList",
                "settings-flag": "masonryTrackAlignmentEnabled",
                "parser-function": "consumeAlignTracks",
                "parser-grammar-unused": "normal | <baseline-position> | <content-distribution> | [ <overflow-position>? <content-position> ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups and optionals",
                "comment": "Alternate defintion in css-flexbox - flex-start | flex-end | center | space-between | space-around | stretch"
            },
            "specification": {
                "category": "css-grid",
                "url": "https://drafts.csswg.org/css-grid-3/#tracks-alignment"
            },
            "status": "in development"
        },
        "block-step-size": {
            "codegen-properties": {
                "settings-flag": "cssRhythmicSizingEnabled",
                "converter": "BlockStepSize",
                "parser-grammar": "none | <length [0,inf]>"
            },
            "specification": {
                "category": "css-rhythm",
                "url": "https://drafts.csswg.org/css-rhythm/#block-step-size"
            },
            "status": "in development"
        },
        "block-step-insert": {
            "values": [
                "margin",
                "padding"
            ],
            "codegen-properties": {
                "settings-flag": "cssRhythmicSizingEnabled",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-rhythm",
                "url": "https://drafts.csswg.org/css-rhythm/#block-step-size"
            },
            "status": "in development"
        },
        "caret-color": {
            "inherited": true,
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "visited-link-color-support": true,
                "color-property": true,
                "custom": "All",
                "parser-grammar": "auto | <color>"
            },
            "specification": {
                "category": "css-ui",
                "url": "https://drafts.csswg.org/css-ui-3/#propdef-caret-color"
            }
        },
        "color": {
            "inherited": true,
            "codegen-properties": {
                "visited-link-color-support": true,
                "color-property": true,
                "custom": "Value",
                "high-priority": true,
                "fast-path-inherited": true,
                "parser-grammar": "<color accept-quirky-colors-in-quirks-mode>"
            },
            "status": {
                "comment": "All the values from CSS Color Level 3 are supported, as well as the 8- and 4-digit forms of hex color, and the color() function."
            },
            "specification": {
                "category": "css-color",
                "url": "https://www.w3.org/TR/css-color-4/#the-color-property"
            }
        },
        "direction": {
            "inherited": true,
            "values": [
                "ltr",
                "rtl"
            ],
            "codegen-properties": {
                "custom": "Value",
                "high-priority": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-writing-modes",
                "url": "https://www.w3.org/TR/css-writing-modes-3/#propdef-direction"
            }
        },
        "display": {
            "values": [
                "inline",
                "block",
                "flow",
                "flow-root",
                "list-item",
                "inline-block",
                "table",
                "inline-table",
                "table-row-group",
                "table-header-group",
                "table-footer-group",
                "table-row",
                "table-column-group",
                "table-column",
                "table-cell",
                "table-caption",
                "flex",
                "inline-flex",
                "grid",
                "inline-grid",
                {
                    "value": "ruby",
                    "status": "unimplemented"
                },
                {
                    "value": "ruby-text-container",
                    "status": "unimplemented"
                },
                {
                    "value": "ruby-base",
                    "status": "unimplemented"
                },
                {
                    "value": "ruby-text",
                    "status": "unimplemented"
                },
                {
                    "value": "ruby-base-container",
                    "status": "unimplemented"
                },
                "contents",
                "none",
                {
                    "value": "-webkit-box",
                    "status": "obsolete",
                    "url": "https://compat.spec.whatwg.org/#css-keyword-mappings"
                },
                {
                    "value": "-webkit-inline-box",
                    "status": "obsolete",
                    "url": "https://compat.spec.whatwg.org/#css-keyword-mappings"
                },
                {
                    "value": "-webkit-flex",
                    "status": "obsolete"
                },
                {
                    "value": "-webkit-inline-flex",
                    "status": "obsolete"
                },
                {
                    "value": "compact",
                    "status": "removed",
                    "url": "https://www.w3.org/TR/REC-CSS2/visuren.html#compact",
                    "comment": "Removed in https://commits.webkit.org/r253917"
                },
                {
                    "value": "run-in",
                    "status": "removed",
                    "url": "https://www.w3.org/TR/css-display-3/#valdef-display-run-in",
                    "comment": "Removed in https://commits.webkit.org/r163560"
                }
            ],
            "codegen-properties": {
                "high-priority": true,
                "parser-function": "consumeDisplay",
                "parser-grammar-unused": "[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy> | <-webkit-display>",
                "parser-grammar-unused-reason": "Needs support for '||' groups and '&& groups."
            },
            "specification": {
                "category": "css-display",
                "url": "https://www.w3.org/TR/css-display-3/#the-display-properties"
            }
        },
        "font-family": {
            "inherited": true,
            "values": [
                "serif",
                "sans-serif",
                "cursive",
                "fantasy",
                "monospace",
                {
                    "value": "system-ui",
                    "status": "unimplemented"
                },
                {
                    "value": "emoji",
                    "status": "unimplemented"
                },
                {
                    "value": "math",
                    "status": "unimplemented"
                },
                {
                    "value": "fangsong",
                    "status": "unimplemented"
                },
                {
                    "value": "ui-serif",
                    "status": "unimplemented"
                },
                {
                    "value": "ui-sans-serif",
                    "status": "unimplemented"
                },
                {
                    "value": "ui-monospace",
                    "status": "unimplemented"
                },
                {
                    "value": "ui-rounded",
                    "status": "unimplemented"
                },
                {
                    "value": "-webkit-body",
                    "status": "non-standard"
                }
            ],
            "codegen-properties": {
                "custom": "All",
                "high-priority": true,
                "parser-function": "consumeFontFamily",
                "parser-grammar-unused": "[ <family-name> | <generic-family> | <-webkit-generic-family> ]#",
                "parser-grammar-unused-reason": "Needs support for special 'family-name' processing."
            },
            "specification": {
                "category": "css-fonts",
                "url": "https://www.w3.org/TR/css-fonts-3/#font-family-prop"
            }
        },
        "font-size": {
            "inherited": true,
            "values": [
                "x-small",
                "xx-small",
                "small",
                "medium",
                "large",
                "x-large",
                "xx-large",
                "xxx-large",
                "smaller",
                "larger",
                {
                    "value": "-webkit-xxx-large",
                    "status": "non-standard"
                },
                {
                    "value": "-webkit-ruby-text",
                    "status": "non-standard"
                }
            ],
            "codegen-properties": {
                "custom": "All",
                "high-priority": true,
                "parser-grammar": "<absolute-size> | <relative-size> | <length-percentage [0,inf] unitless-allowed> | <-webkit-absolute-size> | <-webkit-relative-size>",
                "parser-exported": true
            },
            "specification": {
                "category": "css-fonts",
                "url": "https://www.w3.org/TR/css-fonts-3/#font-size-prop"
            }
        },
        "font-size-adjust": {
            "inherited": true,
            "values": [
                "none",
                "ex-height",
                "cap-height",
                "ch-width",
                "ic-width",
                "ic-height",
                "from-font"
            ],
            "codegen-properties": {
                "converter": "FontSizeAdjust",
                "custom": "Value",
                "font-property": true,
                "high-priority": true,
                "separator": " ",
                "parser-function": "consumeFontSizeAdjust",
                "parser-function-allows-number-or-integer-input": true,
                "parser-grammar-unused": "none | [ [ ex-height | cap-height | ch-width | ic-width | ic-height ]? [ from-font | <number [0,inf]> ] ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups and optionals."
            },
            "specification": {
                "category": "css-fonts",
                "url": "https://www.w3.org/TR/css-fonts-4/#font-size-adjust-prop"
            }
        },
        "font-style": {
            "inherited": true,
            "values": [
                "normal",
                "italic",
                "oblique"
            ],
            "codegen-properties": {
                "custom": "All",
                "font-property": true,
                "high-priority": true,
                "parser-function-requires-context-mode": true,
                "parser-function": "consumeFontStyle",
                "parser-grammar-unused": "normal | italic | [ oblique <angle>? ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups and optionals."
            },
            "specification": {
                "category": "css-fonts",
                "url": "https://www.w3.org/TR/css-fonts-4/#font-style-prop"
            }
        },
        "font-weight": {
            "inherited": true,
            "values": [
                "normal",
                "bold",
                "bolder",
                "lighter"
            ],
            "codegen-properties": {
                "name-for-methods": "Weight",
                "font-property": true,
                "high-priority": true,
                "converter": "FontWeight",
                "parser-function": "consumeFontWeight",
                "parser-function-allows-number-or-integer-input": true,
                "parser-grammar-unused": "<font-weight-absolute> | bolder | lighter",
                "parser-grammar-unused-reason": "Needs support for arbitrary ranges on <number>."
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://www.w3.org/TR/css-fonts-4/#font-weight-prop"
            }
        },
        "font-stretch": {
            "inherited": true,
            "values": [
                "normal",
                "ultra-condensed",
                "extra-condensed",
                "condensed",
                "semi-condensed",
                "semi-expanded",
                "expanded",
                "extra-expanded",
                "ultra-expanded"
            ],
            "codegen-properties": [
                {
                    "enable-if": "ENABLE_VARIATION_FONTS",
                    "name-for-methods": "Stretch",
                    "font-property": true,
                    "high-priority": true,
                    "converter": "FontStretch",
                    "parser-grammar": "<font-stretch-absolute> | <percentage [0,inf]>"
                },
                {
                    "enable-if": "!ENABLE_VARIATION_FONTS",
                    "name-for-methods": "Stretch",
                    "font-property": true,
                    "high-priority": true,
                    "converter": "FontStretch",
                    "parser-grammar": "<font-stretch-absolute>"
                }
            ],
            "specification": {
                "category": "css-fonts",
                "url": "https://www.w3.org/TR/css-fonts-4/#font-stretch-prop"
            }
        },
        "text-box-edge": {
            "values": [
                "leading",
                "text",
                "ex",
                "ideographic",
                "ideographic-ink",
                "alphabetic",
                "cap"
            ],
            "codegen-properties": {
                "converter": "TextBoxEdge",
                "settings-flag": "cssTextBoxTrimEnabled",
                "parser-function": "consumeTextBoxEdge",
                "parser-grammar-unused": "leading | [ [ text | cap | ex | ideographic | ideographic-ink ] [ text | alphabetic | ideographic | ideographic-ink ]? ]",
                "parser-grammar-unused-reason": "Needs support for 'groups' and 'optional'."
            },
            "specification": {
                "category": "css-inline",
                "url": "https://www.w3.org/TR/css-inline-3/#text-edges"
            },
            "status": "experimental"
        },
        "text-box-trim": {
            "values": [
                "none",
                "start",
                "end",
                "both"
            ],
            "codegen-properties": {
                "settings-flag": "cssTextBoxTrimEnabled",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-inline",
                "url": "https://www.w3.org/TR/css-inline-3/#leading-trim"
            },
            "status": "experimental"
        },
        "text-rendering": {
            "inherited": true,
            "values": [
                "auto",
                "optimizeSpeed",
                "optimizeLegibility",
                "geometricPrecision"
            ],
            "codegen-properties": {
                "name-for-methods": "TextRenderingMode",
                "font-property": true,
                "high-priority": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/painting.html#TextRenderingProperty"
            }
        },
        "font-feature-settings": {
            "inherited": true,
            "values": [
                "normal"
            ],
            "codegen-properties": {
                "name-for-methods": "FeatureSettings",
                "converter": "FontFeatureSettings",
                "custom": "Initial|Inherit",
                "font-property": true,
                "high-priority": true,
                "parser-grammar": "normal | <feature-tag-value>#@(no-single-item-opt)"
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#propdef-font-feature-settings"
            }
        },
        "font-variation-settings": {
            "inherited": true,
            "values": [
                "normal"
            ],
            "codegen-properties": {
                "name-for-methods": "VariationSettings",
                "converter": "FontVariationSettings",
                "custom": "Initial|Inherit",
                "font-property": true,
                "high-priority": true,
                "enable-if": "ENABLE_VARIATION_FONTS",
                "parser-grammar": "normal | <variation-tag-value>#@(no-single-item-opt)"
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#font-variation-settings-def"
            }
        },
        "font-kerning": {
            "inherited": true,
            "values": [
                "auto",
                "normal",
                "none"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-font-kerning"
                ],
                "name-for-methods": "Kerning",
                "font-property": true,
                "high-priority": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#font-kerning-prop"
            }
        },
        "font-palette": {
            "inherited": true,
            "codegen-properties": {
                "converter": "FontPalette",
                "font-property": true,
                "high-priority": true,
                "parser-grammar": "normal | light | dark | <palette-identifier>"
            },
            "specification": {
                "category": "css-fonts",
                "url": "https://drafts.csswg.org/css-fonts/#font-palette-prop"
            }
        },
        "-webkit-font-smoothing": {
            "inherited": true,
            "values": [
                "auto",
                "none",
                "antialiased",
                "subpixel-antialiased"
            ],
            "codegen-properties": {
                "font-property": true,
                "high-priority": true,
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "font-variant-ligatures": {
            "inherited": true,
            "values": [
                "normal",
                "none",
                "common-ligatures",
                "no-common-ligatures",
                "discretionary-ligatures",
                "no-discretionary-ligatures",
                "historical-ligatures",
                "no-historical-ligatures",
                "contextual",
                "no-contextual"
            ],
            "codegen-properties": {
                "name-for-methods": "VariantLigatures",
                "custom": "All",
                "font-property": true,
                "high-priority": true,
                "parser-function": "consumeFontVariantLigatures",
                "parser-grammar-unused": "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#font-variant-ligatures-prop"
            }
        },
        "font-variant-position": {
            "inherited": true,
            "values": [
                "normal",
                "sub",
                "super"
            ],
            "codegen-properties": {
                "name-for-methods": "VariantPosition",
                "font-property": true,
                "high-priority": true,
                "parser-grammar": "<<values>>",
                "parser-exported": true
            },
            "specification": {
                "category": "css-fonts",
                "url": "https://drafts.csswg.org/css-fonts-3/#propdef-font-variant-position"
            }
        },
        "font-variant-caps": {
            "inherited": true,
            "values": [
                "normal",
                "small-caps",
                "all-small-caps",
                "petite-caps",
                "all-petite-caps",
                "unicase",
                "titling-caps"
            ],
            "codegen-properties": {
                "name-for-methods": "VariantCaps",
                "font-property": true,
                "high-priority": true,
                "parser-grammar": "<<values>>",
                "parser-exported": true
            },
            "specification": {
                "category": "css-fonts",
                "url": "https://drafts.csswg.org/css-fonts-3/#font-variant-caps-prop"
            }
        },
        "font-variant-numeric": {
            "inherited": true,
            "values": [
                "normal",
                "lining-nums",
                "oldstyle-nums",
                "proportional-nums",
                "tabular-nums",
                "diagonal-fractions",
                "stacked-fractions",
                "ordinal",
                "slashed-zero"
            ],
            "codegen-properties": {
                "name-for-methods": "VariantNumeric",
                "custom": "All",
                "font-property": true,
                "high-priority": true,
                "parser-function": "consumeFontVariantNumeric",
                "parser-grammar-unused": "normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-fonts",
                "url": "https://drafts.csswg.org/css-fonts-3/#font-variant-numeric-prop"
            }
        },
        "font-variant-alternates": {
            "inherited": true,
            "codegen-properties": {
                "name-for-methods": "VariantAlternates",
                "custom": "All",
                "font-property": true,
                "high-priority": true,
                "parser-function": "consumeFontVariantAlternates",
                "parser-grammar-unused": "normal | [ stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups and function notation."
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#font-variant-alternates-prop"
            }
        },
        "font-variant-east-asian": {
            "inherited": true,
            "values": [
                "normal",
                "jis78",
                "jis83",
                "jis90",
                "jis04",
                "simplified",
                "traditional",
                "diagonal-fractions",
                "stacked-fractions",
                "ruby"
            ],
            "codegen-properties": {
                "name-for-methods": "VariantEastAsian",
                "custom": "All",
                "font-property": true,
                "high-priority": true,
                "parser-function": "consumeFontVariantEastAsian",
                "parser-grammar-unused": "normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#font-variant-east-asian-prop"
            }
        },
        "font-synthesis": {
            "inherited": true,
            "codegen-properties": {
                "longhands": [
                    "font-synthesis-weight",
                    "font-synthesis-style",
                    "font-synthesis-small-caps"
                ]
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#font-synthesis"
            }
        },
        "font-synthesis-weight": {
            "inherited": true,
            "values": [
                "auto",
                "none"
            ],
            "codegen-properties": {
                "font-property": true,
                "high-priority": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#font-synthesis-weight"
            }
        },
        "font-synthesis-style": {
            "inherited": true,
            "values": [
                "auto",
                "none"
            ],
            "codegen-properties": {
                "font-property": true,
                "high-priority": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#font-synthesis-style"
            }
        },
        "font-synthesis-small-caps": {
            "inherited": true,
            "values": [
                "auto",
                "none"
            ],
            "codegen-properties": {
                "font-property": true,
                "high-priority": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#font-synthesis-small-caps"
            }
        },
        "font-optical-sizing": {
            "inherited": true,
            "values": [
                "auto",
                "none"
            ],
            "codegen-properties": {
                "name-for-methods": "OpticalSizing",
                "font-property": true,
                "high-priority": true,
                "enable-if": "ENABLE_VARIATION_FONTS",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#font-optical-sizing-def"
            }
        },
        "font": {
            "inherited": true,
            "codegen-properties": {
                "longhands": [
                    "font-style",
                    "font-variant-caps",
                    "font-weight",
                    "font-stretch",
                    "font-size",
                    "line-height",
                    "font-family",
                    "font-size-adjust",
                    "font-kerning",
                    "font-variant-alternates",
                    "font-variant-ligatures",
                    "font-variant-numeric",
                    "font-variant-east-asian",
                    "font-variant-position",
                    "font-feature-settings",
                    {
                        "value": "font-optical-sizing",
                        "enable-if": "ENABLE_VARIATION_FONTS"
                    },
                    {
                        "value": "font-variation-settings",
                        "enable-if": "ENABLE_VARIATION_FONTS"
                    }
                ]
            },
            "specification": {
                "category": "css-fonts",
                "url": "https://www.w3.org/TR/css-fonts-3/#font-prop"
            }
        },
        "font-variant": {
            "inherited": true,
            "codegen-properties": {
                "longhands": [
                    "font-variant-ligatures",
                    "font-variant-caps",
                    "font-variant-alternates",
                    "font-variant-numeric",
                    "font-variant-east-asian",
                    "font-variant-position"
                ]
            },
            "specification": {
                "category": "css-fonts",
                "url": "https://www.w3.org/TR/css-fonts-3/#propdef-font-variant"
            }
        },
        "justify-tracks": {
            "values": [
                "normal",
                "space-between",
                "space-around",
                "space-evenly",
                "stretch",
                "unsafe",
                "safe",
                "center",
                "start",
                "end",
                "flex-start",
                "flex-end",
                "left",
                "right"
            ],
            "codegen-properties": {
                "initial": "initialJustifyTracks",
                "converter": "ContentAlignmentDataList",
                "settings-flag": "masonryTrackAlignmentEnabled",
                "parser-function": "consumeJustifyTracks",
                "parser-grammar-unused": "normal | <content-distribution> | [ <overflow-position>? [ <content-position> | left | right ] ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups and optionals.",
                "comment": "Alternate defintion in css-flexbox - flex-start | flex-end | center | space-between | space-around"
            },
            "specification": {
                "category": "css-grid",
                "url": "https://drafts.csswg.org/css-grid-3/#tracks-alignment"
            },
            "status": "in development"
        },
        "-webkit-locale": {
            "inherited": true,
            "codegen-properties": {
                "custom": "Value",
                "font-property": true,
                "high-priority": true,
                "name-for-methods": "SpecifiedLocale",
                "parser-grammar": "auto | <string>"
            },
            "status": "non-standard"
        },
        "text-orientation": {
            "inherited": true,
            "values": [
                "sideways",
                "mixed",
                "upright"
            ],
            "codegen-properties": {
                "custom": "Value",
                "high-priority": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-writing-modes",
                "url": "https://www.w3.org/TR/css-writing-modes-3/#text-orientation"
            }
        },
        "-webkit-text-orientation": {
            "inherited": true,
            "values": [
                "sideways",
                {
                    "value": "sideways-right",
                    "status": "deprecated"
                },
                "mixed",
                "upright"
            ],
            "codegen-properties": {
                "aliases": [
                    "-epub-text-orientation"
                ],
                "longhands": [
                    "text-orientation"
                ]
            },
            "specification": {
                "category": "css-writing-modes",
                "url": "https://www.w3.org/TR/css-writing-modes-3/#text-orientation"
            }
        },
        "-webkit-text-size-adjust": {
            "inherited": true,
            "codegen-properties": {
                "custom": "Value",
                "high-priority": true,
                "enable-if": "ENABLE_TEXT_AUTOSIZING",
                "settings-flag": "textAutosizingEnabled",
                "parser-grammar": "auto | none | <percentage [0,inf]>"
            },
            "status": "experimental",
            "specification": {
                "non-canonical-url": "https://drafts.csswg.org/css-size-adjust/#adjustment-control"
            }
        },
        "text-spacing-trim": {
            "inherited": true,
            "values": [
                "auto",
                "space-all"
            ],
            "codegen-properties": {
                "settings-flag": "cssTextSpacingEnabled",
                "converter": "TextSpacingTrim",
                "parser-function": "consumeTextSpacingTrim",
                "parser-grammar-unused": "auto | space-all | trim-all | [ allow-end || space-first ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "status": "in development",
            "specification": {
                "category": "css-text",
                "non-canonical-url": "https://www.w3.org/TR/css-text-4/#text-spacing-property"
            }
        },
        "text-autospace": {
            "inherited": true,
            "values": [
                "auto",
                "no-autospace"
            ],
            "codegen-properties": {
                "settings-flag": "cssTextSpacingEnabled",
                "converter": "TextAutospace",
                "parser-function": "consumeTextAutospace",
                "parser-grammar-unused": "normal | auto | no-autospace | [ [ ideograph-alpha || ideograph-numeric || punctuation ] || [ insert | replace ] ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "status": "in development",
            "specification": {
                "category": "css-text",
                "non-canonical-url": "https://www.w3.org/TR/css-text-4/#text-spacing-property"
            }
        },
        "writing-mode": {
            "inherited": true,
            "values": [
                "horizontal-tb",
                "vertical-lr",
                "vertical-rl",
                {
                    "value": "sideways-lr",
                    "status": "unimplemented",
                    "url": "https://w3c.github.io/csswg-drafts/css-writing-modes/#block-flow"
                },
                {
                    "value": "sideways-rl",
                    "status": "unimplemented",
                    "url": "https://w3c.github.io/csswg-drafts/css-writing-modes/#block-flow"
                },
                {
                    "value": "lr-tb",
                    "status": "deprecated"
                },
                {
                    "value": "rl-tb",
                    "status": "deprecated"
                },
                {
                    "value": "tb-rl",
                    "status": "deprecated"
                },
                {
                    "value": "lr",
                    "status": "deprecated"
                },
                {
                    "value": "rl",
                    "status": "deprecated"
                },
                {
                    "value": "tb",
                    "status": "deprecated"
                },
                {
                    "value": "horizontal-bt",
                    "status": "non-standard"
                }
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-writing-mode",
                    "-epub-writing-mode"
                ],
                "custom": "Value",
                "comment": "This is top priority because vi/vb units (depending on writing-mode) may be used by other properties",
                "top-priority": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-writing-modes",
                "non-canonical-url": "https://www.w3.org/TR/css-writing-modes-3/#propdef-writing-mode"
            }
        },
        "-webkit-text-zoom": {
            "inherited": true,
            "values": [
                "normal",
                "reset"
            ],
            "codegen-properties": {
                "custom": "Value",
                "high-priority": true,
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard",
            "specification": {
                "description": "Used to reset the text zoom level.",
                "comment": "Used to reset the size of text affected by the zoom property."
            }
        },
        "zoom": {
            "values": [
                "normal",
                "reset",
                "document"
            ],
            "codegen-properties": {
                "custom": "All",
                "high-priority": true,
                "parser-grammar": "normal | reset | document | <percentage [0,inf]> | <number [0,inf]>"
            },
            "status": "non-standard",
            "specification": {
                "url": "https://msdn.microsoft.com/en-us/library/ms531189(v=vs.85).aspx"
            }
        },
        "-webkit-ruby-position": {
            "inherited": true,
            "values": [
                {
                    "value": "before",
                    "status": "deprecated"
                },
                {
                    "value": "after",
                    "status": "deprecated"
                },
                "inter-character",
                {
                    "value": "over",
                    "status": "unimplemented"
                },
                {
                    "value": "under",
                    "status": "unimplemented"
                }
            ],
            "codegen-properties": {
                "top-priority": true,
                "comment": "This is a top priority property to ensure that its value can be checked when determining a smart default font size', (<https://trac.webkit.org/browser/trunk/Source/WebCore/ChangeLog?rev=172861>).",
                "parser-grammar": "<<values>>"
            },
            "status": "experimental",
            "specification": {
                "category": "css-ruby",
                "url": "https://www.w3.org/TR/css-ruby-1/#rubypos"
            }
        },
        "alignment-baseline": {
            "values": [
                "auto",
                "baseline",
                "before-edge",
                "text-before-edge",
                "middle",
                "central",
                "after-edge",
                "text-after-edge",
                "ideographic",
                "alphabetic",
                "hanging",
                "mathematical"
            ],
            "codegen-properties": {
                "svg": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/text.html#AlignmentBaselineProperty"
            }
        },
        "all": {
            "codegen-properties": {
                "computable": false,
                "longhands": [
                    "all"
                ]
            },
            "specification": {
                "category": "css-cascade",
                "url": "https://www.w3.org/TR/css-cascade-3/#all-shorthand"
            }
        },
        "animation": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-animation"
                ],
                "longhands": [
                    "animation-duration",
                    "animation-timing-function",
                    "animation-delay",
                    "animation-iteration-count",
                    "animation-direction",
                    "animation-fill-mode",
                    "animation-play-state",
                    "animation-name"
                ]
            },
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css3-animations/#animation-shorthand-property",
                "keywords": ["animation"],
                "description": "Used to animate elements"
            }
        },
        "animation-composition": {
            "values": [
                "add",
                "accumulate",
                "replace"
            ],
            "animatable": true,
            "codegen-properties": {
                "name-for-methods": "CompositeOperation",
                "settings-flag": "webAnimationsCompositeOperationsEnabled",
                "parser-grammar": "<single-animation-composition>#"
            },
            "specification": {
                "category": "css-animations",
                "url": "https://drafts.csswg.org/css-animations-2/#animation-composition"
            }
        },
        "animation-delay": {
            "animatable": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-animation-delay"
                ],
                "name-for-methods": "Delay",
                "separator": ",",
                "parser-grammar": "<time>#"
            },
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css3-animations/#animation-delay-property"
            }
        },
        "animation-direction": {
            "values": [
                "normal",
                "reverse",
                "alternate",
                "alternate-reverse"
            ],
            "animatable": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-animation-direction"
                ],
                "name-for-methods": "Direction",
                "separator": ",",
                "parser-grammar": "<single-animation-direction>#"
            },
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css3-animations/#animation-direction-property"
            }
        },
        "animation-duration": {
            "animatable": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-animation-duration"
                ],
                "name-for-methods": "Duration",
                "separator": ",",
                "parser-grammar": "<time [0,inf]>#"
            },
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css3-animations/#animation-duration-property",
                "documentation-url": "https://developer.mozilla.org/en-US/docs/Web/CSS/animation-duration"
            }
        },
        "animation-fill-mode": {
            "values": [
                "none",
                "forwards",
                "backwards",
                "both"
            ],
            "animatable": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-animation-fill-mode"
                ],
                "name-for-methods": "FillMode",
                "separator": ",",
                "parser-grammar": "<single-animation-fill-mode>#"
            },
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css3-animations/#animation-fill-mode-property"
            }
        },
        "animation-iteration-count": {
            "animatable": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-animation-iteration-count"
                ],
                "name-for-methods": "IterationCount",
                "separator": ",",
                "parser-grammar": "<single-animation-iteration-count>#"
            },
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css3-animations/#animation-iteration-count-property"
            }
        },
        "animation-name": {
            "animatable": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-animation-name"
                ],
                "name-for-methods": "Name",
                "separator": ",",
                "parser-grammar": "<single-animation-name>#"
            },
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css3-animations/#animation-name-property"
            }
        },
        "animation-play-state": {
            "values": [
                "running",
                "paused"
            ],
            "animatable": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-animation-play-state"
                ],
                "name-for-methods": "PlayState",
                "separator": ",",
                "parser-grammar": "<single-animation-play-state>#"
            },
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css3-animations/#animation-play-state-property"
            }
        },
        "animation-timing-function": {
            "animatable": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-animation-timing-function"
                ],
                "name-for-methods": "TimingFunction",
                "separator": ",",
                "parser-grammar": "<timing-function>#"
            },
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css3-animations/#animation-timing-function-property"
            }
        },
        "background": {
            "codegen-properties": {
                "longhands": [
                    "background-image",
                    "background-position-x",
                    "background-position-y",
                    "background-size",
                    "background-repeat",
                    "background-attachment",
                    "background-origin",
                    "background-clip",
                    "background-color"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-background"
            }
        },
        "background-attachment": {
            "values": [
                "scroll",
                "fixed",
                "local"
            ],
            "codegen-properties": {
                "name-for-methods": "Attachment",
                "fill-layer-property": true,
                "separator": ",",
                "parser-grammar": "<single-background-attachment>#"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-background-attachment"
            }
        },
        "background-blend-mode": {
            "values" : [
                "normal",
                "multiply",
                "screen",
                "overlay",
                "darken",
                "lighten",
                "color-dodge",
                "color-burn",
                "hard-light",
                "soft-light",
                "difference",
                "exclusion",
                "hue",
                "saturation",
                "color",
                "luminosity",
                {
                    "value": "plus-darker",
                    "status": "unimplemented"
                },
                {
                    "value": "plus-lighter",
                    "status": "unimplemented"
                }
            ],
            "codegen-properties": {
                "name-for-methods": "BlendMode",
                "fill-layer-property": true,
                "separator": ",",
                "parser-grammar": "<single-background-blend-mode>#"
            },
            "specification": {
                "category": "css-compositing",
                "url": "https://www.w3.org/TR/compositing-1/#background-blend-mode"
            }
        },
        "background-clip": {
            "values": [
                "border-box",
                "padding-box",
                "content-box",
                {
                    "value": "border",
                    "status": "unimplemented",
                    "url": "https://drafts.csswg.org/css-backgrounds-4/#background-clip"
                },
                {
                    "value": "text",
                    "url": "https://drafts.csswg.org/css-backgrounds-4/#background-clip"
                },
                {
                    "value": "-webkit-text",
                    "status": "non-standard"
                }
            ],
            "codegen-properties": {
                "related-property": "-webkit-background-clip",
                "name-for-methods": "Clip",
                "fill-layer-property": true,
                "separator": " ",
                "parser-grammar": "<single-background-clip>#"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-background-clip"
            }
        },
        "background-color": {
            "codegen-properties": {
                "visited-link-color-support": true,
                "color-property": true,
                "parser-grammar": "<color accept-quirky-colors-in-quirks-mode>"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-background-color"
            }
        },
        "background-image": {
            "codegen-properties": {
                "name-for-methods": "Image",
                "fill-layer-property": true,
                "separator": " ",
                "parser-grammar": "<single-background-image>#"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-background-image"
            }
        },
        "background-origin": {
            "codegen-properties": {
                "related-property": "-webkit-background-origin",
                "name-for-methods": "Origin",
                "fill-layer-property": true,
                "separator": " ",
                "parser-grammar": "<single-background-origin>#"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-background-origin"
            }
        },
        "background-position": {
            "codegen-properties": {
                "longhands": [
                    "background-position-x",
                    "background-position-y"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#background-position"
            }
        },
        "background-position-x": {
            "codegen-properties": {
                "name-for-methods": "XPosition",
                "fill-layer-property": true,
                "parser-grammar": "<single-background-position-x>#"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://drafts.csswg.org/css-backgrounds-4/#propdef-background-position-x"
            }
        },
        "background-position-y": {
            "codegen-properties": {
                "name-for-methods": "YPosition",
                "fill-layer-property": true,
                "parser-grammar": "<single-background-position-y>#"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://drafts.csswg.org/css-backgrounds-4/#propdef-background-position-y"
            }
        },
        "background-repeat": {
            "codegen-properties": {
                "name-for-methods": "Repeat",
                "fill-layer-property": true,
                "parser-grammar": "<single-background-repeat>#"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#background-repeat"
            }
        },
        "background-size": {
            "codegen-properties": {
                "name-for-methods": "Size",
                "fill-layer-property": true,
                "separator": " ",
                "parser-grammar": "<single-background-size>#"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#background-size"
            }
        },
        "baseline-shift": {
            "values": [
                "baseline",
                "sub",
                "super"
            ],
            "codegen-properties": {
                "custom": "Inherit|Value",
                "svg": true,
                "parser-grammar": "baseline | sub | super | <length-percentage>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/text.html#BaselineShiftProperty"
            }
        },
        "block-size": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-logical-height"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "size",
                    "resolver": "block"
                },
                "parser-grammar": "<width-or-height>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#dimension-properties"
            }
        },
        "border": {
            "codegen-properties": {
                "longhands": [
                    "border-top-width",
                    "border-right-width",
                    "border-bottom-width",
                    "border-left-width",
                    "border-top-style",
                    "border-right-style",
                    "border-bottom-style",
                    "border-left-style",
                    "border-top-color",
                    "border-right-color",
                    "border-bottom-color",
                    "border-left-color",
                    "border-image-source",
                    "border-image-slice",
                    "border-image-width",
                    "border-image-outset",
                    "border-image-repeat"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-shorthands"
            }
        },
        "border-block": {
            "codegen-properties": {
                "longhands": [
                    "border-block-start-width",
                    "border-block-end-width",
                    "border-block-start-style",
                    "border-block-end-style",
                    "border-block-start-color",
                    "border-block-end-color"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-shorthands"
            }
        },
        "border-block-color": {
            "codegen-properties": {
                "longhands": [
                    "border-block-start-color",
                    "border-block-end-color"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-color"
            }
        },
        "border-block-end": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-after"
                ],
                "longhands": [
                    "border-block-end-width",
                    "border-block-end-style",
                    "border-block-end-color"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-shorthands"
            }
        },
        "border-block-end-color": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-after-color"
                ],
                "skip-builder": true,
                "color-property": true,
                "logical-property-group": {
                    "name": "border-color",
                    "resolver": "block-end"
                },
                "parser-grammar": "<color>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-color"
            }
        },
        "border-block-end-style": {
            "values": [
                "none",
                "hidden",
                "inset",
                "groove",
                "outset",
                "ridge",
                "dotted",
                "dashed",
                "solid",
                "double"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-after-style"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-style",
                    "resolver": "block-end"
                },
                "parser-grammar": "<line-style>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-style"
            }
        },
        "border-block-end-width": {
            "values": [
                "thin",
                "medium",
                "thick"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-after-width"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-width",
                    "resolver": "block-end"
                },
                "parser-grammar": "<line-width>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-width"
            }
        },
        "border-block-start": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-before"
                ],
                "longhands": [
                    "border-block-start-width",
                    "border-block-start-style",
                    "border-block-start-color"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-shorthands"
            }
        },
        "border-block-start-color": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-before-color"
                ],
                "skip-builder": true,
                "color-property": true,
                "logical-property-group": {
                    "name": "border-color",
                    "resolver": "block-start"
                },
                "parser-grammar": "<color>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-color"
            }
        },
        "border-block-start-style": {
            "values": [
                "none",
                "hidden",
                "inset",
                "groove",
                "outset",
                "ridge",
                "dotted",
                "dashed",
                "solid",
                "double"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-before-style"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-style",
                    "resolver": "block-start"
                },
                "parser-grammar": "<line-style>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-style"
            }
        },
        "border-block-start-width": {
            "values": [
                "thin",
                "medium",
                "thick"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-before-width"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-width",
                    "resolver": "block-start"
                },
                "parser-grammar": "<line-width>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-width"
            }
        },
        "border-block-style": {
            "codegen-properties": {
                "longhands": [
                    "border-block-start-style",
                    "border-block-end-style"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-style"
            }
        },
        "border-block-width": {
            "codegen-properties": {
                "longhands": [
                    "border-block-start-width",
                    "border-block-end-width"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-width"
            }
        },
        "border-bottom": {
            "codegen-properties": {
                "longhands": [
                    "border-bottom-width",
                    "border-bottom-style",
                    "border-bottom-color"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-shorthands"
            }
        },
        "border-bottom-color": {
            "codegen-properties": {
                "initial": "currentColor",
                "visited-link-color-support": true,
                "color-property": true,
                "logical-property-group": {
                    "name": "border-color",
                    "resolver": "bottom"
                },
                "parser-function": "consumeBorderColor",
                "parser-function-requires-context": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<color accept-quirky-colors-in-quirks-mode>",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-color"
            }
        },
        "border-bottom-left-radius": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-bottom-left-radius"
                ],
                "custom": "All",
                "logical-property-group": {
                    "name": "border-radius",
                    "resolver": "bottom-left"
                },
                "parser-function": "consumeBorderRadiusCorner",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "<length-percentage [0,inf]>{1,2}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-radius"
            }
        },
        "border-bottom-right-radius": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-bottom-right-radius"
                ],
                "custom": "All",
                "logical-property-group": {
                    "name": "border-radius",
                    "resolver": "bottom-right"
                },
                "parser-function": "consumeBorderRadiusCorner",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "<length-percentage [0,inf]>{1,2}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-radius"
            }
        },
        "border-bottom-style": {
            "values": [
                "none",
                "hidden",
                "inset",
                "groove",
                "outset",
                "ridge",
                "dotted",
                "dashed",
                "solid",
                "double"
            ],
            "codegen-properties": {
                "initial": "initialBorderStyle",
                "logical-property-group": {
                    "name": "border-style",
                    "resolver": "bottom"
                },
                "parser-grammar": "<line-style>"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-style"
            }
        },
        "border-bottom-width": {
            "values": [
                "thin",
                "medium",
                "thick"
            ],
            "codegen-properties": {
                "initial": "initialBorderWidth",
                "converter": "LineWidth<float>",
                "logical-property-group": {
                    "name": "border-width",
                    "resolver": "bottom"
                },
                "parser-function": "consumeBorderWidth",
                "parser-function-requires-context": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<line-width>",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-width"
            }
        },
        "border-collapse": {
            "inherited": true,
            "values": [
                "collapse",
                "separate"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/tables.html#borders"
            }
        },
        "border-color": {
            "codegen-properties": {
                "longhands": [
                    "border-top-color",
                    "border-right-color",
                    "border-bottom-color",
                    "border-left-color"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-color"
            }
        },
        "border-end-end-radius": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-radius",
                    "resolver": "end-end"
                },
                "parser-function": "consumeBorderRadiusCorner",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "<length-percentage [0,inf]>{1,2}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://drafts.csswg.org/css-logical-1/#border-radius-properties"
            }
        },
        "border-end-start-radius": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-radius",
                    "resolver": "end-start"
                },
                "parser-function": "consumeBorderRadiusCorner",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "<length-percentage [0,inf]>{1,2}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://drafts.csswg.org/css-logical-1/#border-radius-properties"
            }
        },
        "border-image": {
            "codegen-properties": {
                "longhands": [
                    "border-image-source",
                    "border-image-slice",
                    "border-image-width",
                    "border-image-outset",
                    "border-image-repeat"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-image"
            }
        },
        "border-image-outset": {
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeBorderImageOutset",
                "parser-function-allows-number-or-integer-input": true,
                "parser-grammar-unused": "[ <length [0,inf]> | <number [0,inf]> ]{1,4}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-image-outset"
            }
        },
        "border-image-repeat": {
            "values": [
                "stretch",
                "repeat",
                "round",
                "space"
            ],
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeBorderImageRepeat",
                "parser-grammar-unused": "[ stretch | repeat | round | space ]{1,2}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-image-repeat"
            }
        },
        "border-image-slice": {
            "values": [
                "fill"
            ],
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeBorderImageSlice",
                "parser-function-allows-number-or-integer-input": true,
                "parser-function-requires-current-property": true,
                "parser-grammar-unused": "[ <number [0,inf]> | <percentage [0,inf]> ]{1,4} && fill?",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers, '&&' groups and optionals."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-image-slice"
            }
        },
        "border-image-source": {
            "values": [
                "none"
            ],
            "codegen-properties": {
                "converter": "StyleImage<CSSPropertyBorderImageSource>",
                "parser-grammar": "none | <image>"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-image-source"
            }
        },
        "border-image-width": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeBorderImageWidth",
                "parser-function-allows-number-or-integer-input": true,
                "parser-function-requires-current-property": true,
                "parser-grammar-unused": "[ <length-percentage [0,inf]> | <number [0,inf]> | auto ]{1,4}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-image-width"
            }
        },
        "border-inline": {
            "codegen-properties": {
                "longhands": [
                    "border-inline-start-width",
                    "border-inline-end-width",
                    "border-inline-start-style",
                    "border-inline-end-style",
                    "border-inline-start-color",
                    "border-inline-end-color"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-shorthands"
            }
        },
        "border-inline-color": {
            "codegen-properties": {
                "longhands": [
                    "border-inline-start-color",
                    "border-inline-end-color"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-color"
            }
        },
        "border-inline-end": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-end"
                ],
                "longhands": [
                    "border-inline-end-width",
                    "border-inline-end-style",
                    "border-inline-end-color"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-shorthands"
            }
        },
        "border-inline-end-color": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-end-color"
                ],
                "skip-builder": true,
                "color-property": true,
                "logical-property-group": {
                    "name": "border-color",
                    "resolver": "inline-end"
                },
                "parser-grammar": "<color>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-color"
            }
        },
        "border-inline-end-style": {
            "values": [
                "none",
                "hidden",
                "inset",
                "groove",
                "outset",
                "ridge",
                "dotted",
                "dashed",
                "solid",
                "double"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-end-style"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-style",
                    "resolver": "inline-end"
                },
                "parser-grammar": "<line-style>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-style"
            }
        },
        "border-inline-end-width": {
            "values": [
                "thin",
                "medium",
                "thick"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-end-width"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-width",
                    "resolver": "inline-end"
                },
                "parser-grammar": "<line-width>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-width"
            }
        },
        "border-inline-start": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-start"
                ],
                "longhands": [
                    "border-inline-start-width",
                    "border-inline-start-style",
                    "border-inline-start-color"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-shorthands"
            }
        },
        "border-inline-start-color": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-start-color"
                ],
                "skip-builder": true,
                "color-property": true,
                "logical-property-group": {
                    "name": "border-color",
                    "resolver": "inline-start"
                },
                "parser-grammar": "<color>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-color"
            }
        },
        "border-inline-start-style": {
            "values": [
                "none",
                "hidden",
                "inset",
                "groove",
                "outset",
                "ridge",
                "dotted",
                "dashed",
                "solid",
                "double"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-start-style"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-style",
                    "resolver": "inline-start"
                },
                "parser-grammar": "<line-style>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-style"
            }
        },
        "border-inline-start-width": {
            "values": [
                "thin",
                "medium",
                "thick"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-start-width"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-width",
                    "resolver": "inline-start"
                },
                "parser-grammar": "<line-width>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-width"
            }
        },
        "border-inline-style": {
            "codegen-properties": {
                "longhands": [
                    "border-inline-start-style",
                    "border-inline-end-style"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-style"
            }
        },
        "border-inline-width": {
            "codegen-properties": {
                "longhands": [
                    "border-inline-start-width",
                    "border-inline-end-width"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#border-width"
            }
        },
        "border-left": {
            "codegen-properties": {
                "longhands": [
                    "border-left-width",
                    "border-left-style",
                    "border-left-color"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-shorthands"
            }
        },
        "border-left-color": {
            "codegen-properties": {
                "initial": "currentColor",
                "visited-link-color-support": true,
                "color-property": true,
                "logical-property-group": {
                    "name": "border-color",
                    "resolver": "left"
                },
                "parser-function": "consumeBorderColor",
                "parser-function-requires-context": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<color accept-quirky-colors-in-quirks-mode>",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-color"
            }
        },
        "border-left-style": {
            "values": [
                "none",
                "hidden",
                "inset",
                "groove",
                "outset",
                "ridge",
                "dotted",
                "dashed",
                "solid",
                "double"
            ],
            "codegen-properties": {
                "initial": "initialBorderStyle",
                "logical-property-group": {
                    "name": "border-style",
                    "resolver": "left"
                },
                "parser-grammar": "<line-style>"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-style"
            }
        },
        "border-left-width": {
            "values": [
                "thin",
                "medium",
                "thick"
            ],
            "codegen-properties": {
                "initial": "initialBorderWidth",
                "converter": "LineWidth<float>",
                "logical-property-group": {
                    "name": "border-width",
                    "resolver": "left"
                },
                "parser-function": "consumeBorderWidth",
                "parser-function-requires-context": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<line-width>",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-width"
            }
        },
        "border-radius": {
            "codegen-properties": {
                "longhands": [
                    "border-top-left-radius",
                    "border-top-right-radius",
                    "border-bottom-right-radius",
                    "border-bottom-left-radius"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-radius"
            }
        },
        "border-right": {
            "codegen-properties": {
                "longhands": [
                    "border-right-width",
                    "border-right-style",
                    "border-right-color"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-shorthands"
            }
        },
        "border-right-color": {
            "codegen-properties": {
                "initial": "currentColor",
                "visited-link-color-support": true,
                "color-property": true,
                "logical-property-group": {
                    "name": "border-color",
                    "resolver": "right"
                },
                "parser-function": "consumeBorderColor",
                "parser-function-requires-context": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<color accept-quirky-colors-in-quirks-mode>",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-color"
            }
        },
        "border-right-style": {
            "values": [
                "none",
                "hidden",
                "inset",
                "groove",
                "outset",
                "ridge",
                "dotted",
                "dashed",
                "solid",
                "double"
            ],
            "codegen-properties": {
                "initial": "initialBorderStyle",
                "logical-property-group": {
                    "name": "border-style",
                    "resolver": "right"
                },
                "parser-grammar": "<line-style>"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-style"
            }
        },
        "border-right-width": {
            "values": [
                "thin",
                "medium",
                "thick"
            ],
            "codegen-properties": {
                "initial": "initialBorderWidth",
                "converter": "LineWidth<float>",
                "logical-property-group": {
                    "name": "border-width",
                    "resolver": "right"
                },
                "parser-function": "consumeBorderWidth",
                "parser-function-requires-context": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<line-width>",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-width"
            }
        },
        "border-spacing": {
            "inherited": true,
            "codegen-properties": {
                "longhands": [
                    "-webkit-border-horizontal-spacing",
                    "-webkit-border-vertical-spacing"
                ]
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/tables.html#separated-borders"
            }
        },
        "border-start-end-radius": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-radius",
                    "resolver": "start-end"
                },
                "parser-function": "consumeBorderRadiusCorner",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "<length-percentage [0,inf]>{1,2}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://drafts.csswg.org/css-logical-1/#border-radius-properties"
            }
        },
        "border-start-start-radius": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "border-radius",
                    "resolver": "start-start"
                },
                "parser-function": "consumeBorderRadiusCorner",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "<length-percentage [0,inf]>{1,2}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://drafts.csswg.org/css-logical-1/#border-radius-properties"
            }
        },
        "border-style": {
            "codegen-properties": {
                "longhands": [
                    "border-top-style",
                    "border-right-style",
                    "border-bottom-style",
                    "border-left-style"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-style"
            }
        },
        "border-top": {
            "codegen-properties": {
                "longhands": [
                    "border-top-width",
                    "border-top-style",
                    "border-top-color"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-shorthands"
            }
        },
        "border-top-color": {
            "codegen-properties": {
                "initial": "currentColor",
                "visited-link-color-support": true,
                "color-property": true,
                "logical-property-group": {
                    "name": "border-color",
                    "resolver": "top"
                },
                "parser-function": "consumeBorderColor",
                "parser-function-requires-context": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<color accept-quirky-colors-in-quirks-mode>",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-color"
            }
        },
        "border-top-left-radius": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-top-left-radius"
                ],
                "custom": "All",
                "logical-property-group": {
                    "name": "border-radius",
                    "resolver": "top-left"
                },
                "parser-function": "consumeBorderRadiusCorner",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "<length-percentage [0,inf]>{1,2}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-radius"
            }
        },
        "border-top-right-radius": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-border-top-right-radius"
                ],
                "custom": "All",
                "logical-property-group": {
                    "name": "border-radius",
                    "resolver": "top-right"
                },
                "parser-function": "consumeBorderRadiusCorner",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "<length-percentage [0,inf]>{1,2}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-radius"
            }
        },
        "border-top-style": {
            "values": [
                "none",
                "hidden",
                "inset",
                "groove",
                "outset",
                "ridge",
                "dotted",
                "dashed",
                "solid",
                "double"
            ],
            "codegen-properties": {
                "initial": "initialBorderStyle",
                "logical-property-group": {
                    "name": "border-style",
                    "resolver": "top"
                },
                "parser-grammar": "<line-style>"
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-style"
            }
        },
        "border-top-width": {
            "values": [
                "thin",
                "medium",
                "thick"
            ],
            "codegen-properties": {
                "initial": "initialBorderWidth",
                "converter": "LineWidth<float>",
                "logical-property-group": {
                    "name": "border-width",
                    "resolver": "top"
                },
                "parser-function": "consumeBorderWidth",
                "parser-function-requires-context": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<line-width>",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-width"
            }
        },
        "border-width": {
            "codegen-properties": {
                "longhands": [
                    "border-top-width",
                    "border-right-width",
                    "border-bottom-width",
                    "border-left-width"
                ]
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-border-width"
            }
        },
        "bottom": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "initial": "initialOffset",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "inset",
                    "resolver": "bottom"
                },
                "parser-function": "consumeSide",
                "parser-function-requires-context-mode": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<length-percentage> | auto",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visuren.html#propdef-bottom"
            }
        },
        "box-shadow": {
            "values": [
                "none",
                "inset"
            ],
            "codegen-properties": {
                "related-property": "-webkit-box-shadow",
                "custom": "All",
                "parser-function": "consumeBoxShadow",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "none | <shadow>#",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups, {A} multipliers and optionals."
            },
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css3-background/#the-box-shadow"
            }
        },
        "box-sizing": {
            "values": [
                "border-box",
                "content-box"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-box-sizing"
                ],
                "parser-grammar": "<<values>>"
            },
            "status": {
                "comment": "-webkit-box-sizing worked in Safari 4 and earlier."
            },
            "specification": {
                "category": "css-ui",
                "url": "https://www.w3.org/TR/css-ui-3/#box-sizing"
            }
        },
        "break-after": {
            "values": [
                "auto",
                "avoid",
                "avoid-page",
                "page",
                "left",
                "right",
                "recto",
                "verso",
                "avoid-column",
                "column",
                {
                    "value": "avoid-region",
                    "status": "unimplemented"
                },
                {
                    "value": "region",
                    "status": "unimplemented"
                }
            ],
            "codegen-properties": {
                "initial": "initialBreakBetween",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-break",
                "url": "https://www.w3.org/TR/css-break-3/#break-between"
            }
        },
        "break-before": {
            "values": [
                "auto",
                "avoid",
                "avoid-page",
                "page",
                "left",
                "right",
                "recto",
                "verso",
                "avoid-column",
                "column",
                {
                    "value": "avoid-region",
                    "status": "unimplemented"
                },
                {
                    "value": "region",
                    "status": "unimplemented"
                }
            ],
            "codegen-properties": {
                "initial": "initialBreakBetween",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-break",
                "url": "https://www.w3.org/TR/css-break-3/#break-between"
            }
        },
        "break-inside": {
            "values": [
                "auto",
                "avoid",
                "avoid-page",
                "avoid-column",
                {
                    "value": "avoid-region",
                    "status": "unimplemented"
                }
            ],
            "codegen-properties": {
                "initial": "initialBreakInside",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-break",
                "url": "https://www.w3.org/TR/css-break-3/#break-within"
            }
        },
        "buffered-rendering": {
            "values": [
                "auto",
                "dynamic",
                "static"
            ],
            "codegen-properties": {
                "svg": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVGTiny12/painting.html#BufferedRenderingProperty"
            }
        },
        "caption-side": {
            "inherited": true,
            "values": [
                "top",
                "bottom",
                {
                    "value": "inline-start",
                    "status": "unimplemented",
                    "url": "https://w3c.github.io/csswg-drafts/css-logical/#caption-side"
                },
                {
                    "value": "inline-end",
                    "status": "unimplemented",
                    "url": "https://w3c.github.io/csswg-drafts/css-logical/#caption-side"
                }
            ],
            "codegen-properties": {
                "aliases": [
                    "-epub-caption-side"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/tables.html#propdef-caption-side"
            }
        },
        "clear": {
            "values": [
                "none",
                "left",
                "right",
                "both",
                {
                    "value": "inline-start",
                    "url": "https://www.w3.org/TR/css-logical/#float-clear"
                },
                {
                    "value": "inline-end",
                    "url": "https://www.w3.org/TR/css-logical/#float-clear"
                }
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visuren.html#propdef-clear"
            }
        },
        "clip": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeClip",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "<rect()> | auto",
                "parser-grammar-unused-reason": "Needs support for function notation."
            },
            "specification": {
                "category": "css-masking",
                "url": "https://drafts.fxtf.org/css-masking/#clip-property",
                "obsolete-category": "css-22",
                "obsolete-url": "https://www.w3.org/TR/CSS22/visufx.html#propdef-clip"
            }
        },
        "clip-path": {
            "values": [
                "none",
                "content-box",
                "margin-box",
                "stroke-box",
                "border-box",
                "fill-box",
                "view-box",
                "padding-box"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-clip-path"
                ],
                "converter": "PathOperation",
                "parser-function": "consumePathOperation",
                "parser-function-requires-context": true,
                "parser-function-requires-additional-parameters": ["ConsumeRay::Exclude"],
                "parser-grammar-unused": "<clip-source> | [ <basic-shape> || <geometry-box> ] | none",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-masking",
                "url": "https://drafts.fxtf.org/css-masking/#propdef-clip-path"
            }
        },
        "clip-rule": {
            "inherited": true,
            "values": [
                "nonzero",
                "evenodd"
            ],
            "codegen-properties": {
                "svg": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://drafts.fxtf.org/css-masking/#propdef-clip-rule",
                "obsolete-category": "svg",
                "obsolete-url": "https://www.w3.org/TR/SVG11/masking.html#ClipRuleProperty"
            }
        },
        "color-interpolation": {
            "inherited": true,
            "values": [
                "auto",
                "sRGB",
                "linearRGB"
            ],
            "codegen-properties": {
                "svg": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/painting.html#ColorInterpolationProperty"
            }
        },
        "color-interpolation-filters": {
            "inherited": true,
            "values": [
                "auto",
                "sRGB",
                "linearRGB"
            ],
            "codegen-properties": {
                "svg": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/painting.html#ColorInterpolationFiltersProperty"
            }
        },
        "content": {
            "codegen-properties": {
                "custom": "All",
                "separator": ",",
                "parser-function": "consumeContent",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "none | normal | [ <image> | open-quote | close-quote | no-open-quote | no-close-quote | attr(<custom-ident>) | counter(<counter-name>, <counter-style>?) | counters(<counter-name>, <string>, <counter-style>?) ]+",
                "parser-grammar-unused-reason": "consumeContent is quite different than current spec"
            },
            "specification": {
                "category": "css-content",
                "url": "https://www.w3.org/TR/css-content-3/#content-property"
            }
        },
        "counter-increment": {
            "values": [
                "none"
            ],
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeCounterIncrement",
                "parser-grammar-unused": "[ <counter-name> <integer>? ]+ | none",
                "parser-grammar-unused-reason": "Needs support for '+' multipliers and optionals."
            },
            "specification": {
                "category": "css-lists",
                "url": "https://www.w3.org/TR/css-lists-3/#propdef-counter-increment"
            }
        },
        "counter-reset": {
            "values": [
                "none"
            ],
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeCounterReset",
                "parser-grammar-unused": "[ <counter-name> <integer>? ]+ | none",
                "parser-grammar-unused-reason": "Needs support for '+' multipliers and optionals."
            },
            "specification": {
                "category": "css-lists",
                "url": "https://www.w3.org/TR/css-lists-3/#counter-properties"
            }
        },
        "cursor": {
            "inherited": true,
            "values": [
                "auto",
                "default",
                "none",
                "context-menu",
                "help",
                "pointer",
                "progress",
                "wait",
                "cell",
                "crosshair",
                "text",
                "vertical-text",
                "alias",
                "copy",
                "move",
                "no-drop",
                "not-allowed",
                "grab",
                "grabbing",
                "e-resize",
                "n-resize",
                "ne-resize",
                "nw-resize",
                "s-resize",
                "se-resize",
                "sw-resize",
                "w-resize",
                "ew-resize",
                "ns-resize",
                "nesw-resize",
                "nwse-resize",
                "col-resize",
                "row-resize",
                "all-scroll",
                "zoom-in",
                "zoom-out",
                {
                    "value": "-webkit-grab",
                    "status": "non-standard"
                },
                {
                    "value": "-webkit-grabbing",
                    "status": "non-standard"
                },
                {
                    "value": "-webkit-zoom-in",
                    "status": "non-standard"
                },
                {
                    "value": "-webkit-zoom-out",
                    "status": "non-standard"
                }
            ],
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeCursor",
                "parser-function-requires-context": true,
                "parser-function-requires-quirks-mode": true,
                "parser-grammar-unused": "[ [ <url> [ <x> <y> ]? ]#{0,} [ <<values>> ] ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '#{A,}' multipliers and optionals."
            },
            "specification": {
                "category": "css-ui",
                "url": "https://www.w3.org/TR/css-ui-3/#cursor"
            }
        },
        "-webkit-cursor-visibility": {
            "inherited": true,
            "values": [
                "auto",
                "auto-hide"
            ],
            "codegen-properties": {
                "enable-if": "ENABLE_CURSOR_VISIBILITY",
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "cx": {
            "codegen-properties": {
                "initial": "zeroLength",
                "converter": "Length",
                "parser-grammar": "<length-percentage>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/shapes.html"
            }
        },
        "cy": {
            "codegen-properties": {
                "initial": "zeroLength",
                "converter": "Length",
                "parser-grammar": "<length-percentage>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/shapes.html"
            }
        },
        "dominant-baseline": {
            "inherited": true,
            "values": [
                "auto",
                "use-script",
                "no-change",
                "reset-size",
                "ideographic",
                "alphabetic",
                "hanging",
                "mathematical",
                "central",
                "middle",
                "text-before-edge",
                "text-after-edge"
            ],
            "codegen-properties": {
                "svg": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/text.html#DominantBaselineProperty"
            }
        },
        "empty-cells": {
            "inherited": true,
            "values": [
                "show",
                "hide"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS2/tables.html#empty-cells"
            }
        },
        "fill": {
            "values": [
                "none",
                {
                    "value": "context-fill",
                    "status": "unimplemented"
                },
                {
                    "value": "context-stroke",
                    "status": "unimplemented"
                }
            ],
            "inherited": true,
            "codegen-properties": {
                "custom": "All",
                "svg": true,
                "color-property": true,
                "parser-function": "consumePaintStroke",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "none | <color> | [ <url> [ none | <color> ]? ] | context-fill | context-stroke",
                "parser-grammar-unused-reason": "Needs support for ordered groups and optionals. Also spec grammar does not match the current implemenation.",
                "comment": "Also specified (with different grammar) in CSS Fill and Stroke Module Level 3"
            },
            "specification": {
                "category": "svg",
                "url": "https://svgwg.org/svg2-draft/painting.html#SpecifyingFillPaint"
            }
        },
        "fill-opacity": {
            "inherited": true,
            "codegen-properties": {
                "converter": "Opacity",
                "svg": true,
                "parser-grammar": "<alpha-value>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/painting.html#FillOpacityProperty"
            }
        },
        "fill-rule": {
            "inherited": true,
            "values": [
                "nonzero",
                "evenodd"
            ],
            "codegen-properties": {
                "svg": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/painting.html#FillRuleProperty"
            }
        },
        "float": {
            "values": [
                "left",
                "right",
                "none",
                {
                    "value": "inline-start",
                    "url": "https://www.w3.org/TR/css-logical/#float-clear"
                },
                {
                    "value": "inline-end",
                    "url": "https://www.w3.org/TR/css-logical/#float-clear"
                }
            ],
            "codegen-properties": {
                "name-for-methods": "Floating",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visuren.html#float-position"
            }
        },
        "flood-color": {
            "codegen-properties": {
                "svg": true,
                "color-property": true,
                "parser-grammar": "<color>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/filters.html#FloodColorProperty"
            }
        },
        "flood-opacity": {
            "codegen-properties": {
                "converter": "Opacity",
                "svg": true,
                "parser-grammar": "<alpha-value>"
            },
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#FloodOpacityProperty"
            }
        },
        "glyph-orientation-horizontal": {
            "inherited": true,
            "codegen-properties": {
                "converter": "GlyphOrientation",
                "svg": true,
                "parser-grammar": "<angle unitless-allowed unitless-zero-allowed>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/text.html#GlyphOrientationHorizontalProperty"
            }
        },
        "glyph-orientation-vertical": {
            "inherited": true,
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "converter": "GlyphOrientationOrAuto",
                "svg": true,
                "parser-grammar": "auto | <angle unitless-allowed unitless-zero-allowed>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/text.html#GlyphOrientationVerticalProperty"
            }
        },
        "hanging-punctuation": {
            "inherited": true,
            "values": [
                "none",
                "first",
                "force-end",
                "allow-end",
                "last"
            ],
            "codegen-properties": {
                "converter": "HangingPunctuation",
                "parser-function": "consumeHangingPunctuation",
                "parser-grammar-unused": "none | [ first || [ force-end | allow-end ] || last ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-3/#hanging-punctuation"
            }
        },
        "height": {
            "codegen-properties": {
                "initial": "initialSize",
                "converter": "LengthSizing",
                "logical-property-group": {
                    "name": "size",
                    "resolver": "vertical"
                },
                "parser-grammar": "<width-or-height-unitless-allowed>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visudet.html#the-height-property"
            }
        },
        "image-orientation": {
            "inherited": true,
            "values": [
                "from-image",
                "none"
            ],
            "codegen-properties": {
                "initial": "initialImageOrientation",
                "converter": "ImageOrientation",
                "parser-grammar": "<<values>>",
                "parser-grammar-comment": "Current spec grammar is 'from-image | none | [ <angle> || flip ]'"
            },
            "specification": {
                "category": "css-images",
                "url": "https://www.w3.org/TR/css3-images/#the-image-orientation"
            }
        },
        "image-rendering": {
            "inherited": true,
            "values": [
                "auto",
                {
                    "value": "smooth",
                    "status": "unimplemented"
                },
                {
                    "value": "high-quality",
                    "status": "unimplemented"
                },
                "pixelated",
                "crisp-edges",
                {
                    "value": "optimizeSpeed",
                    "url": "https://www.w3.org/TR/SVG11/painting.html#ImageRenderingProperty"
                },
                {
                    "value": "optimizeQuality",
                    "url": "https://www.w3.org/TR/SVG11/painting.html#ImageRenderingProperty"
                },
                {
                    "value": "-webkit-crisp-edges",
                    "status": "non-standard"
                },
                {
                    "value": "-webkit-optimize-contrast",
                    "status": "non-standard"
                }
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-images",
                "url": "https://drafts.csswg.org/css-images-3/#propdef-image-rendering"
            }
        },
        "inline-size": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-logical-width"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "size",
                    "resolver": "inline"
                },
                "parser-grammar": "<width-or-height>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#dimension-properties"
            }
        },
        "input-security": {
            "values": [
                "auto",
                "none"
            ],
            "codegen-properties": {
                "settings-flag": "cssInputSecurityEnabled",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-ui",
                "url": "https://drafts.csswg.org/css-ui-4/#input-security"
            }
        },
        "inset": {
            "codegen-properties": {
                "longhands": [
                    "top",
                    "right",
                    "bottom",
                    "left"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#inset-properties"
            }
        },
        "inset-block": {
            "codegen-properties": {
                "longhands": [
                    "inset-block-start",
                    "inset-block-end"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#inset-properties"
            }
        },
        "inset-block-end": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "inset",
                    "resolver": "block-end"
                },
                "parser-grammar": "<inset-logical-start-end>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#inset-properties"
            }
        },
        "inset-block-start": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "inset",
                    "resolver": "block-start"
                },
                "parser-grammar": "<inset-logical-start-end>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#inset-properties"
            }
        },
        "inset-inline": {
            "codegen-properties": {
                "longhands": [
                    "inset-inline-start",
                    "inset-inline-end"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#inset-properties"
            }
        },
        "inset-inline-end": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "inset",
                    "resolver": "inline-end"
                },
                "parser-grammar": "<inset-logical-start-end>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#inset-properties"
            }
        },
        "inset-inline-start": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "inset",
                    "resolver": "inline-start"
                },
                "parser-grammar": "<inset-logical-start-end>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#inset-properties"
            }
        },
        "kerning": {
            "inherited": true,
            "codegen-properties": {
                "converter": "SVGLengthValue",
                "svg": true,
                "parser-grammar": "auto | normal | <length unitless-allowed>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/text.html#KerningProperty"
            }
        },
        "left": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "initial": "initialOffset",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "inset",
                    "resolver": "left"
                },
                "parser-function": "consumeSide",
                "parser-function-requires-context-mode": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<length-percentage> | auto",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visuren.html#propdef-left"
            }
        },
        "letter-spacing": {
            "inherited": true,
            "codegen-properties": {
                "custom": "All",
                "font-property": true,
                "high-priority": true,
                "sink-priority": true,
                "converter": "Spacing",
                "parser-grammar": "normal | <length unitless-allowed>"
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-3/#letter-spacing-property"
            }
        },
        "lighting-color": {
            "codegen-properties": {
                "svg": true,
                "color-property": true,
                "parser-grammar": "<color>"
            }
        },
        "line-height": {
            "inherited": true,
            "codegen-properties": [
                {
                    "custom": "All",
                    "enable-if": "ENABLE_TEXT_AUTOSIZING",
                    "parser-grammar": "normal | <number [0,inf]> | <length-percentage [0,inf]>",
                    "parser-exported": true
                },
                {
                    "getter": "specifiedLineHeight",
                    "converter": "LineHeight",
                    "enable-if": "!ENABLE_TEXT_AUTOSIZING",
                    "parser-grammar": "normal | <number [0,inf]> | <length-percentage [0,inf]>",
                    "parser-exported": true
                }
            ],
            "specification": {
                "category": "css-inline",
                "url": "https://www.w3.org/TR/css-inline-3/#line-height-property"
            }
        },
        "list-style": {
            "inherited": true,
            "codegen-properties": {
                "longhands": [
                    "list-style-position",
                    "list-style-image",
                    "list-style-type"
                ]
            },
            "specification": {
                "category": "css-lists",
                "url": "https://www.w3.org/TR/css-lists-3/#list-style-property"
            }
        },
        "list-style-image": {
            "inherited": true,
            "codegen-properties": {
                "converter": "StyleImage<CSSPropertyListStyleImage>",
                "parser-grammar": "none | <image>"
            },
            "specification": {
                "category": "css-lists",
                "url": "https://www.w3.org/TR/css-lists-3/#propdef-list-style-image"
            }
        },
        "list-style-position": {
            "inherited": true,
            "values": [
                "inside",
                "outside"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-lists",
                "url": "https://www.w3.org/TR/css-lists-3/#propdef-list-style-position"
            }
        },
        "list-style-type": {
            "inherited": true,
            "values": [
                "disc",
                "circle",
                "square",
                "decimal",
                "decimal-leading-zero",
                "arabic-indic",
                "binary",
                "bengali",
                "cambodian",
                "khmer",
                "devanagari",
                "gujarati",
                "gurmukhi",
                "kannada",
                "lower-hexadecimal",
                "lao",
                "malayalam",
                "mongolian",
                "myanmar",
                "octal",
                "oriya",
                "persian",
                "urdu",
                "telugu",
                "tibetan",
                "thai",
                "upper-hexadecimal",
                "lower-roman",
                "upper-roman",
                "lower-greek",
                "lower-alpha",
                "lower-latin",
                "upper-alpha",
                "upper-latin",
                "afar",
                "ethiopic-halehame-aa-et",
                "ethiopic-halehame-aa-er",
                "amharic",
                "ethiopic-halehame-am-et",
                "amharic-abegede",
                "ethiopic-abegede-am-et",
                "cjk-earthly-branch",
                "cjk-heavenly-stem",
                "ethiopic",
                "ethiopic-halehame-gez",
                "ethiopic-abegede",
                "ethiopic-abegede-gez",
                "hangul-consonant",
                "hangul",
                "lower-norwegian",
                "oromo",
                "ethiopic-halehame-om-et",
                "sidama",
                "ethiopic-halehame-sid-et",
                "somali",
                "ethiopic-halehame-so-et",
                "tigre",
                "ethiopic-halehame-tig",
                "tigrinya-er",
                "ethiopic-halehame-ti-er",
                "tigrinya-er-abegede",
                "ethiopic-abegede-ti-er",
                "tigrinya-et",
                "ethiopic-halehame-ti-et",
                "tigrinya-et-abegede",
                "ethiopic-abegede-ti-et",
                "upper-greek",
                "upper-norwegian",
                "asterisks",
                "footnotes",
                "hebrew",
                "armenian",
                "lower-armenian",
                "upper-armenian",
                "georgian",
                "cjk-ideographic",
                "hiragana",
                "katakana",
                "hiragana-iroha",
                "katakana-iroha",
                "cjk-decimal",
                "tamil",
                "disclosure-open",
                "disclosure-closed",
                "japanese-informal",
                "japanese-formal",
                "korean-hangul-formal",
                "korean-hanja-informal",
                "korean-hanja-formal",
                "simp-chinese-informal",
                "simp-chinese-formal",
                "trad-chinese-informal",
                "trad-chinese-formal",
                "ethiopic-numeric",
                "none"
            ],
            "codegen-properties": {
                "converter": "ListStyleType",
                "parser-function": "consumeListStyleType",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "<<values>> | <string> | <custom-ident>",
                "parser-grammar-unused-reason": "custom-ident should be consumed depending on settings."
            },
            "specification": {
                "category": "css-lists",
                "url": "https://www.w3.org/TR/css-lists-3/#propdef-list-style-type"
            }
        },
        "margin": {
            "codegen-properties": {
                "longhands": [
                    "margin-top",
                    "margin-right",
                    "margin-bottom",
                    "margin-left"
                ]
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/box.html#propdef-margin"
            }
        },
        "margin-block": {
            "codegen-properties": {
                "longhands": [
                    "margin-block-start",
                    "margin-block-end"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#margin-properties"
            }
        },
        "margin-block-end": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-margin-after"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "margin",
                    "resolver": "block-end"
                },
                "parser-grammar": "<margin-logical-start-end>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#margin-properties"
            }
        },
        "margin-block-start": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-margin-before"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "margin",
                    "resolver": "block-start"
                },
                "parser-grammar": "<margin-logical-start-end>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#margin-properties"
            }
        },
        "margin-bottom": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "initial": "initialMargin",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "margin",
                    "resolver": "bottom"
                },
                "parser-function": "consumeMarginSide",
                "parser-function-requires-context-mode": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<length-percentage> | auto",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/box.html#propdef-margin-bottom"
            }
        },
        "margin-inline": {
            "codegen-properties": {
                "longhands": [
                    "margin-inline-start",
                    "margin-inline-end"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#margin-properties"
            }
        },
        "margin-inline-end": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-margin-end"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "margin",
                    "resolver": "inline-end"
                },
                "parser-grammar": "<margin-logical-start-end>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#margin-properties"
            }
        },
        "margin-inline-start": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-margin-start"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "margin",
                    "resolver": "inline-start"
                },
                "parser-grammar": "<margin-logical-start-end>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#margin-properties"
            }
        },
        "margin-left": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "initial": "initialMargin",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "margin",
                    "resolver": "left"
                },
                "parser-function": "consumeMarginSide",
                "parser-function-requires-context-mode": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<length-percentage> | auto",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/box.html#propdef-margin-left"
            }
        },
        "margin-right": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "initial": "initialMargin",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "margin",
                    "resolver": "right"
                },
                "parser-function": "consumeMarginSide",
                "parser-function-requires-context-mode": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<length-percentage> | auto",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/box.html#propdef-margin-right"
            }
        },
        "margin-top": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "initial": "initialMargin",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "margin",
                    "resolver": "top"
                },
                "parser-function": "consumeMarginSide",
                "parser-function-requires-context-mode": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<length-percentage> | auto",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/box.html#propdef-margin-top"
            }
        },
        "margin-trim": {
            "values": [
                "none",
                "block",
                "inline",
                "block-start",
                "inline-start",
                "block-end",
                "inline-end"
            ],
            "codegen-properties": {
                "settings-flag": "cssMarginTrimEnabled",
                "converter": "MarginTrim",
                "parser-function": "consumeMarginTrim",
                "parser-grammar-unused": "none | block | inline | [ block-start || inline-start || block-end || inline-end ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-box-4",
                "url": "https://www.w3.org/TR/css-box-4/#margin-trim"
            }
        },
        "marker": {
            "inherited": true,
            "codegen-properties": {
                "longhands": [
                    "marker-start",
                    "marker-mid",
                    "marker-end"
                ]
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/painting.html#MarkerProperty"
            }
        },
        "marker-end": {
            "inherited": true,
            "values": [
                "none"
            ],
            "codegen-properties": {
                "name-for-methods": "MarkerEndResource",
                "converter": "SVGURIReference",
                "svg": true,
                "parser-grammar": "none | <marker-ref>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/painting.html#MarkerEndProperty"
            }
        },
        "marker-mid": {
            "inherited": true,
            "values": [
                "none"
            ],
            "codegen-properties": {
                "name-for-methods": "MarkerMidResource",
                "converter": "SVGURIReference",
                "svg": true,
                "parser-grammar": "none | <marker-ref>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/painting.html#MarkerMidProperty"
            }
        },
        "marker-start": {
            "inherited": true,
            "values": [
                "none"
            ],
            "codegen-properties": {
                "name-for-methods": "MarkerStartResource",
                "converter": "SVGURIReference",
                "svg": true,
                "parser-grammar": "none | <marker-ref>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/painting.html#MarkerStartProperty"
            }
        },
        "mask": {
            "codegen-properties": {
                "longhands": [
                    "mask-image",
                    "-webkit-mask-position-x",
                    "-webkit-mask-position-y",
                    "mask-size",
                    "mask-repeat",
                    "mask-origin",
                    "mask-clip",
                    "mask-composite",
                    "mask-mode"
                ]
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask"
            }
        },
        "mask-clip": {
            "codegen-properties": {
                "related-property": "-webkit-mask-clip",
                "name-for-methods": "Clip",
                "fill-layer-property": true,
                "parser-grammar": "<single-mask-clip>#"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-clip"
            }
        },
        "mask-composite": {
            "codegen-properties": {
                "related-property": "-webkit-mask-composite",
                "name-for-methods": "Composite",
                "fill-layer-property": true,
                "parser-grammar": "<single-mask-composite>#"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-composite"
            }
        },
        "mask-image": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-mask-image"
                ],
                "name-for-methods": "Image",
                "fill-layer-property": true,
                "parser-grammar": "<single-mask-image>#"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-image"
            }
        },
        "mask-mode": {
            "codegen-properties": {
                "related-property": "-webkit-mask-source-type",
                "name-for-methods": "MaskMode",
                "fill-layer-property": true,
                "parser-grammar": "<single-mask-mode>#"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-mode"
            }
        },
        "mask-origin": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-mask-origin"
                ],
                "name-for-methods": "Origin",
                "fill-layer-property": true,
                "parser-grammar": "<single-mask-origin>#"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-origin"
            }
        },
        "mask-position": {
            "codegen-properties": {
                "longhands": [
                    "-webkit-mask-position-x",
                    "-webkit-mask-position-y"
                ]
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-position"
            }
        },
        "-webkit-mask-position": {
            "codegen-properties": {
                "longhands": [
                    "-webkit-mask-position-x",
                    "-webkit-mask-position-y"
                ]
            },
            "status": "non-standard",
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-position"
            }
        },
        "-webkit-mask-position-x": {
            "codegen-properties": {
                "name-for-methods": "XPosition",
                "fill-layer-property": true,
                "parser-grammar": "<single-webkit-mask-position-x>#"
            },
            "status": {
                "status": "non-standard",
                "comment": "The unprefixed property should be internal-only"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-position"
            }
        },
        "-webkit-mask-position-y": {
            "codegen-properties": {
                "name-for-methods": "YPosition",
                "fill-layer-property": true,
                "parser-grammar": "<single-webkit-mask-position-y>#"
            },
            "status": {
                "status": "non-standard",
                "comment": "The unprefixed property should be internal-only"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-position"
            }
        },
        "mask-repeat": {
            "codegen-properties": {
                "aliases":[
                    "-webkit-mask-repeat"
                ],
                "name-for-methods": "Repeat",
                "fill-layer-property": true,
                "parser-grammar": "<single-mask-repeat>#"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-repeat"
            }
        },
        "mask-size": {
            "codegen-properties": {
                "aliases":[
                    "-webkit-mask-size"
                ],
                "name-for-methods": "Size",
                "fill-layer-property": true,
                "parser-grammar": "<single-mask-size>#"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-size"
            }
        },
        "mask-type": {
            "values": [
                "luminance",
                "alpha"
            ],
            "codegen-properties": {
                "svg": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://drafts.fxtf.org/css-masking-1/#propdef-mask-type"
            }
        },
        "masonry-auto-flow": {
            "values": [
                "pack",
                "next",
                "definite-first",
                "ordered"
            ],
            "codegen-properties": {
                "converter": "MasonryAutoFlow",
                "settings-flag": "masonryEnabled",
                "parser-function": "consumeMasonryAutoFlow",
                "parser-grammar-unused": "[ pack | next ] || [ definite-first | ordered ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-grid",
                "url": "https://drafts.csswg.org/css-grid-3/#masonry-auto-flow"
            },
            "status": "experimental"
        },
        "math-style": {
            "values": [
                "normal",
                "compact"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-fonts",
                "url": "https://mathml-refresh.github.io/mathml-core/#dfn-math-style"
            }
        },
        "max-block-size": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-max-logical-height"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "max-size",
                    "resolver": "block"
                },
                "parser-grammar": "<max-width-or-height>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#dimension-properties"
            }
        },
        "max-height": {
            "codegen-properties": {
                "initial": "initialMaxSize",
                "converter": "LengthMaxSizing",
                "logical-property-group": {
                    "name": "max-size",
                    "resolver": "vertical"
                },
                "parser-grammar": "<max-width-or-height-unitless-allowed>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visudet.html#propdef-max-height"
            }
        },
        "max-inline-size": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-max-logical-width"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "max-size",
                    "resolver": "inline"
                },
                "parser-grammar": "<max-width-or-height>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#dimension-properties"
            }
        },
        "max-width": {
            "codegen-properties": {
                "initial": "initialMaxSize",
                "converter": "LengthMaxSizing",
                "logical-property-group": {
                    "name": "max-size",
                    "resolver": "horizontal"
                },
                "parser-grammar": "<max-width-or-height-unitless-allowed>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visudet.html#propdef-max-width"
            }
        },
        "min-block-size": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-min-logical-height"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "min-size",
                    "resolver": "block"
                },
                "parser-grammar": "<width-or-height>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#dimension-properties"
            }
        },
        "min-height": {
            "codegen-properties": {
                "initial": "initialMinSize",
                "converter": "LengthSizing",
                "logical-property-group": {
                    "name": "min-size",
                    "resolver": "vertical"
                },
                "parser-grammar": "<width-or-height-unitless-allowed>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visudet.html#propdef-min-height"
            }
        },
        "min-inline-size": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-min-logical-width"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "min-size",
                    "resolver": "inline"
                },
                "parser-grammar": "<width-or-height>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#dimension-properties"
            }
        },
        "min-width": {
            "codegen-properties": {
                "initial": "initialMinSize",
                "converter": "LengthSizing",
                "logical-property-group": {
                    "name": "min-size",
                    "resolver": "horizontal"
                },
                "parser-grammar": "<width-or-height-unitless-allowed>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visudet.html#propdef-min-width"
            }
        },
        "object-fit": {
            "values": [
                "fill",
                "contain",
                "cover",
                "none",
                "scale-down"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-images",
                "url": "https://www.w3.org/TR/css-images-3/#the-object-fit"
            }
        },
        "object-position": {
            "codegen-properties": {
                "converter": "Position",
                "parser-grammar": "<position>"
            },
            "specification": {
                "category": "css-images",
                "url": "https://www.w3.org/TR/css3-images/#object-position"
            }
        },
        "offset-path": {
            "values": [
                "none"
            ],
            "codegen-properties": {
                "converter": "PathOperation",
                "settings-flag": "cssMotionPathEnabled",
                "parser-function": "consumePathOperation",
                "parser-function-requires-context": true,
                "parser-function-requires-additional-parameters": ["ConsumeRay::Include"],
                "parser-grammar-unused": "none | <ray()> | <path()> | <url> | [ <basic-shape> && <coord-box>? ] | <coord-box>",
                "parser-grammar-unused-reason": "Needs support for '||' groups, '&&' groups, optionals and function notation."
            },
            "specification": {
                "category": "css-motion-path",
                "url": "https://drafts.fxtf.org/motion-1/#offset-path-property"
            }
        },
        "offset-distance": {
            "codegen-properties": {
                "converter": "Length",
                "settings-flag": "cssMotionPathEnabled",
                "parser-grammar": "<length-percentage>"
            },
            "specification": {
                "category": "css-motion-path",
                "url": "https://drafts.fxtf.org/motion-1/#offset-distance-property"
            }
        },
        "offset-position": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "converter": "PositionOrAuto",
                "settings-flag": "cssMotionPathEnabled",
                "parser-grammar": "auto | <position>"
            },
            "specification": {
                "category": "css-motion-path",
                "url": "https://drafts.fxtf.org/motion-1/#offset-position-property"
            }
        },
        "offset-anchor": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "converter": "PositionOrAuto",
                "settings-flag": "cssMotionPathEnabled",
                "parser-grammar": "auto | <position>"
            },
            "specification": {
                "category": "css-motion-path",
                "url": "https://drafts.fxtf.org/motion-1/#offset-anchor-property"
            }
        },
        "offset-rotate": {
            "values": [
                "auto",
                "reverse"
            ],
            "codegen-properties": {
                "converter": "OffsetRotate",
                "settings-flag": "cssMotionPathEnabled",
                "parser-function": "consumeOffsetRotate",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "[ auto | reverse ] || <angle>",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-motion-path",
                "url": "https://drafts.fxtf.org/motion-1/#offset-rotate-property"
            }
        },
        "offset": {
            "codegen-properties": {
                "longhands": [
                    "offset-position",
                    "offset-path",
                    "offset-distance",
                    "offset-rotate",
                    "offset-anchor"
                ],
                "settings-flag": "cssMotionPathEnabled"
            },
            "specification": {
                "category": "css-motion-path",
                "url": "https://drafts.fxtf.org/motion-1/#offset-shorthand"
            }
        },
        "opacity": {
            "codegen-properties": {
                "converter": "Opacity",
                "aliases": [
                    "-webkit-opacity"
                ],
                "parser-grammar": "<alpha-value>"
            },
            "status": {
                "comment": "Honor -webkit-opacity as a synonym for opacity. This was the only syntax that worked in Safari 1.1, and may be in use on some websites and widgets."
            },
            "specification": {
                "category": "css-color",
                "url": "https://www.w3.org/TR/css-color-4/#propdef-opacity"
            }
        },
        "orphans": {
            "inherited": true,
            "codegen-properties": {
                "auto-functions": true,
                "parser-grammar": "<integer [1,inf]>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/page.html#propdef-orphans"
            }
        },
        "outline": {
            "codegen-properties": {
                "longhands": [
                    "outline-color",
                    "outline-style",
                    "outline-width"
                ]
            },
            "specification": {
                "category": "css-ui",
                "url": "https://www.w3.org/TR/css-ui-3/#propdef-outline"
            }
        },
        "outline-color": {
            "codegen-properties": {
                "initial": "currentColor",
                "visited-link-color-support": true,
                "color-property": true,
                "parser-grammar": "-webkit-focus-ring-color | <color>"
            },
            "specification": {
                "category": "css-ui",
                "url": "https://www.w3.org/TR/css-ui-3/#propdef-outline-color"
            }
        },
        "outline-offset": {
            "codegen-properties": {
                "converter": "ComputedLength<float>",
                "parser-grammar": "<length>"
            },
            "specification": {
                "category": "css-ui",
                "url": "https://www.w3.org/TR/css-ui-3/#propdef-outline-offset"
            }
        },
        "outline-style": {
            "values": [
                "auto",
                "none",
                "inset",
                "groove",
                "outset",
                "ridge",
                "dotted",
                "dashed",
                "solid",
                "double"
            ],
            "codegen-properties": {
                "custom": "All",
                "parser-grammar": "auto | <outline-line-style>"
            },
            "specification": {
                "category": "css-ui",
                "url": "https://drafts.csswg.org/css-ui/#typedef-outline-line-style"
            }
        },
        "outline-width": {
            "values": [
                "thin",
                "medium",
                "thick"
            ],
            "codegen-properties": {
                "converter": "LineWidth<float>",
                "parser-grammar": "<line-width>"
            },
            "specification": {
                "category": "css-ui",
                "url": "https://www.w3.org/TR/css-ui-3/#propdef-outline-width"
            }
        },
        "overflow": {
            "codegen-properties": {
                "longhands": [
                    "overflow-x",
                    "overflow-y"
                ]
            },
            "specification": {
                "category": "css-overflow",
                "url": "https://www.w3.org/TR/css-overflow-3/#propdef-overflow"
            }
        },
        "overflow-anchor": {
            "values": [
                "none",
                "auto"
            ],
            "codegen-properties": {
                "settings-flag": "cssScrollAnchoringEnabled",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-scroll-anchoring",
                "url": "https://www.w3.org/TR/css-scroll-anchoring-1/#propdef-overflow-anchor"
            },
            "status": "in development"
        },
        "overflow-wrap": {
            "inherited": true,
            "values": [
                "normal",
                "break-word",
                "anywhere"
            ],
            "codegen-properties": {
                "aliases": [
                    "word-wrap"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-3/#overflow-wrap"
            }
        },
        "overflow-x": {
            "values": [
                "visible",
                "hidden",
                {
                    "value": "clip",
                    "settings-flag": "overflowClipEnabled"
                },
                "scroll",
                "auto",
                {
                    "value": "overlay",
                    "status": "non-standard"
                }
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-overflow",
                "url": "https://www.w3.org/TR/css-overflow-3/#propdef-overflow-x"
            }
        },
        "overflow-y": {
            "values": [
                "visible",
                "hidden",
                {
                    "value": "clip",
                    "settings-flag": "overflowClipEnabled"
                },
                "scroll",
                "auto",
                {
                    "value": "overlay",
                    "status": "non-standard"
                },
                {
                    "value": "-webkit-paged-x",
                    "status": "non-standard"
                },
                {
                    "value": "-webkit-paged-y",
                    "status": "non-standard"
                }
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-overflow",
                "url": "https://www.w3.org/TR/css-overflow-3/#propdef-overflow-y"
            }
        },
        "overscroll-behavior": {
            "codegen-properties": {
                "longhands": [
                    "overscroll-behavior-x",
                    "overscroll-behavior-y"
                ],
                "settings-flag": "overscrollBehaviorEnabled"
            },
            "specification": {
                "url": "https://drafts.csswg.org/css-overscroll-1/#propdef-overscroll-behavior"
            }
        },
        "overscroll-behavior-x": {
            "values": [
                "contain",
                "none",
                "auto"
            ],
            "codegen-properties": {
                "settings-flag": "overscrollBehaviorEnabled",
                "logical-property-group": {
                    "name": "overscroll-behavior",
                    "resolver": "horizontal"
                },
                "parser-grammar": "<<values>>",
                "parser-exported": true
            },
            "specification": {
                "url": "https://drafts.csswg.org/css-overscroll-1/#propdef-overscroll-behavior-x"
            }
        },
        "overscroll-behavior-y": {
            "values": [
                "contain",
                "none",
                "auto"
            ],
            "codegen-properties": {
                "settings-flag": "overscrollBehaviorEnabled",
                "logical-property-group": {
                    "name": "overscroll-behavior",
                    "resolver": "vertical"
                },
                "parser-grammar": "<<values>>",
                "parser-exported": true
            },
            "specification": {
                "url": "https://drafts.csswg.org/css-overscroll-1/#propdef-overscroll-behavior-y"
            }
        },
        "overscroll-behavior-inline": {
            "values": [
                "contain",
                "none",
                "auto"
            ],
            "codegen-properties": {
                "settings-flag": "overscrollBehaviorEnabled",
                "skip-builder": true,
                "logical-property-group": {
                    "name": "overscroll-behavior",
                    "resolver": "inline"
                },
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "url": "https://drafts.csswg.org/css-overscroll-1/#propdef-overscroll-behavior-x"
            }
        },
        "overscroll-behavior-block": {
            "values": [
                "contain",
                "none",
                "auto"
            ],
            "codegen-properties": {
                "settings-flag": "overscrollBehaviorEnabled",
                "skip-builder": true,
                "logical-property-group": {
                    "name": "overscroll-behavior",
                    "resolver": "block"
                },
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "url": "https://drafts.csswg.org/css-overscroll-1/#propdef-overscroll-behavior-x"
            }
        },
        "padding": {
            "codegen-properties": {
                "longhands": [
                    "padding-top",
                    "padding-right",
                    "padding-bottom",
                    "padding-left"
                ]
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/box.html#propdef-padding"
            }
        },
        "padding-block": {
            "codegen-properties": {
                "longhands": [
                    "padding-block-start",
                    "padding-block-end"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#padding-properties"
            }
        },
        "padding-block-end": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-padding-after"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "padding",
                    "resolver": "block-end"
                },
                "parser-grammar": "<length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#padding-properties"
            }
        },
        "padding-block-start": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-padding-before"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "padding",
                    "resolver": "block-start"
                },
                "parser-grammar": "<length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#padding-properties"
            }
        },
        "padding-bottom": {
            "codegen-properties": {
                "initial": "initialPadding",
                "converter": "Length",
                "logical-property-group": {
                    "name": "padding",
                    "resolver": "bottom"
                },
                "parser-grammar": "<length-percentage [0,inf] unitless-allowed>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/box.html#propdef-padding-bottom"
            }
        },
        "padding-inline": {
            "codegen-properties": {
                "longhands": [
                    "padding-inline-start",
                    "padding-inline-end"
                ]
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#padding-properties"
            }
        },
        "padding-inline-end": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-padding-end"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "padding",
                    "resolver": "inline-end"
                },
                "parser-grammar": "<length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#padding-properties"
            }
        },
        "padding-inline-start": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-padding-start"
                ],
                "skip-builder": true,
                "logical-property-group": {
                    "name": "padding",
                    "resolver": "inline-start"
                },
                "parser-grammar": "<length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#padding-properties"
            }
        },
        "padding-left": {
            "codegen-properties": {
                "initial": "initialPadding",
                "converter": "Length",
                "logical-property-group": {
                    "name": "padding",
                    "resolver": "left"
                },
                "parser-grammar": "<length-percentage [0,inf] unitless-allowed>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/box.html#propdef-padding-left"
            }
        },
        "padding-right": {
            "codegen-properties": {
                "initial": "initialPadding",
                "converter": "Length",
                "logical-property-group": {
                    "name": "padding",
                    "resolver": "right"
                },
                "parser-grammar": "<length-percentage [0,inf] unitless-allowed>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/box.html#propdef-padding-right"
            }
        },
        "padding-top": {
            "codegen-properties": {
                "initial": "initialPadding",
                "converter": "Length",
                "logical-property-group": {
                    "name": "padding",
                    "resolver": "top"
                },
                "parser-grammar": "<length-percentage [0,inf] unitless-allowed>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/box.html#propdef-padding-top"
            }
        },
        "page": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "skip-builder": true,
                "parser-grammar": "auto | <custom-ident>"
            },
            "specification": {
                "category": "css-page",
                "url": "https://www.w3.org/TR/css3-page/#page"
            }
        },
        "page-break-after": {
            "codegen-properties": {
                "longhands": [
                    "break-after"
                ]
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/page.html#propdef-page-break-after"
            }
        },
        "page-break-before": {
            "codegen-properties": {
                "longhands": [
                    "break-before"
                ]
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/page.html#propdef-page-break-before"
            }
        },
        "page-break-inside": {
            "codegen-properties": {
                "longhands": [
                    "break-inside"
                ]
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/page.html#propdef-page-break-inside"
            }
        },
        "paint-order": {
            "codegen-properties": {
                "converter": "PaintOrder",
                "parser-function": "consumePaintOrder",
                "parser-grammar-unused": "normal | [ fill || stroke || markers ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "status": "supported",
            "specification": {
                "category": "css-text-fill-and-stroke",
                "obsolete-category": "svg",
                "obsolete-url": "https://www.w3.org/TR/SVG2/painting.html#PaintOrderProperty"
            }
        },
        "pointer-events": {
            "inherited": true,
            "values": [
                "visiblePainted",
                "visibleFill",
                "visibleStroke",
                "visible",
                "painted",
                "fill",
                "stroke",
                "all",
                "none",
                {
                    "value": "auto",
                    "url": "https://svgwg.org/svg2-draft/interact.html#PointerEventsProperty"
                },
                {
                    "value": "bounding-box",
                    "url": "https://svgwg.org/svg2-draft/interact.html#PointerEventsProperty"
                }
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/interact.html#PointerEventsProperty"
            }
        },
        "position": {
            "values": [
                "static",
                "relative",
                "absolute",
                "fixed",
                {
                    "value": "sticky",
                    "url": "https://www.w3.org/TR/css-position-3/#valdef-position-sticky"
                },
                {
                    "value": "-webkit-sticky",
                    "status": "deprecated"
                }
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS2/visuren.html#propdef-position"
            }
        },
        "quotes": {
            "inherited": true,
            "values": [
                "auto",
                "none"
            ],
            "codegen-properties": {
                "converter": "Quotes",
                "parser-function": "consumeQuotes",
                "parser-grammar-unused": "auto | none | [ <string> <string> ]+",
                "parser-grammar-unused-reason": "Needs support for ordered groups and the '+' multiplier."
            },
            "specification": {
                "category": "css-content",
                "url": "https://www.w3.org/TR/css-content-3/#quotes-property",
                "obsolete-category": "css-22",
                "obsolete-url": "https://www.w3.org/TR/CSS22/generate.html#propdef-quotes"
            }
        },
        "r": {
            "codegen-properties": {
                "initial": "zeroLength",
                "converter": "Length",
                "parser-grammar": "<length-percentage [0,inf]>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/shapes.html"
            }
        },
        "resize": {
            "values": [
                "none",
                "both",
                "horizontal",
                "vertical",
                {
                    "value": "block",
                    "url": "https://www.w3.org/TR/css-logical/#resize"
                },
                {
                    "value": "inline",
                    "url": "https://www.w3.org/TR/css-logical/#resize"
                },
                {
                    "value": "auto",
                    "status": "non-standard"
                }
            ],
            "codegen-properties": {
                "converter": "Resize",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-ui",
                "url": "https://www.w3.org/TR/css-ui-3/#propdef-resize"
            }
        },
        "right": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "initial": "initialOffset",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "inset",
                    "resolver": "right"
                },
                "parser-function": "consumeSide",
                "parser-function-requires-context-mode": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<length-percentage> | auto",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visuren.html#propdef-right"
            }
        },
        "rx": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "initial": "initialRadius",
                "converter": "LengthOrAuto",
                "parser-grammar": "auto | <length-percentage [0,inf]>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/shapes.html"
            }
        },
        "ry": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "initial": "initialRadius",
                "converter": "LengthOrAuto",
                "parser-grammar": "auto | <length-percentage [0,inf]>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/shapes.html"
            }
        },
        "shape-rendering": {
            "inherited": true,
            "values": [
                "auto",
                "optimizeSpeed",
                "crispedges",
                "geometricPrecision"
            ],
            "codegen-properties": {
                "svg": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/painting.html#ShapeRenderingProperty"
            }
        },
        "size": {
            "codegen-properties": {
                "computable": false,
                "custom": "All",
                "parser-function": "consumeSize",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "<length>{1,2} | auto | [ <page-size> || [ portrait | landscape ] ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups and the '{A,B}' multiplier."
            },
            "specification": {
                "category": "css-page",
                "url": "https://www.w3.org/TR/css3-page/#page-size-prop"
            }
        },
        "stop-color": {
            "codegen-properties": {
                "svg": true,
                "color-property": true,
                "parser-grammar": "<color>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/pservers.html#StopColorProperty"
            }
        },
        "stop-opacity": {
            "codegen-properties": {
                "converter": "Opacity",
                "svg": true,
                "parser-grammar": "<alpha-value>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/pservers.html#StopOpacityProperty"
            }
        },
        "stroke": {
            "inherited": true,
            "codegen-properties": {
                "custom": "All",
                "svg": true,
                "color-property": true,
                "parser-function": "consumePaintStroke",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "none | <color> | [ <url> [ none | <color> ]? ] | context-fill | context-stroke",
                "parser-grammar-unused-reason": "Needs support for ordered groups and optionals. Also spec grammar does not match the current implemenation.",
                "comment": "Also specified (with different grammar) in CSS Fill and Stroke Module Level 3"
            },
            "specification": {
                "category": "svg",
                "url": "https://svgwg.org/svg2-draft/painting.html#SpecifyingStrokePaint"
            }
        },
        "stroke-dasharray": {
            "inherited": true,
            "codegen-properties": {
                "name-for-methods": "StrokeDashArray",
                "converter": "StrokeDashArray",
                "svg": true,
                "parser-function": "consumeStrokeDasharray",
                "parser-function-allows-number-or-integer-input": true,
                "parser-grammar-unused": "none | [ [ <length-percentage> | <number> ]+ ]#",
                "parser-grammar-unused-reason": "Needs support for '+' and stacked multipliers.",
                "comment": "Also specified (with different grammar) in CSS Fill and Stroke Module Level 3"
            },
            "specification": {
                "category": "svg",
                "url": "https://svgwg.org/svg2-draft/painting.html#StrokeDashing"
            }
        },
        "stroke-dashoffset": {
            "inherited": true,
            "codegen-properties": {
                "initial": "zeroLength",
                "name-for-methods": "StrokeDashOffset",
                "converter": "LengthAllowingNumber",
                "parser-grammar": "<length-percentage> | <number>"
            },
            "specification": {
                "category": "svg",
                "url": "https://svgwg.org/svg2-draft/painting.html#StrokeDashoffsetProperty"
            }
        },
        "stroke-linecap": {
            "inherited": true,
            "values": [
                "butt",
                "round",
                "square"
            ],
            "codegen-properties": {
                "name-for-methods": "CapStyle",
                "parser-grammar": "<<values>>"
            },
            "status": "supported",
            "specification": {
                "category": "css-text-fill-and-stroke",
                "url": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-linecap",
                "obsolete-category": "svg",
                "obsolete-url": "https://www.w3.org/TR/SVG11/painting.html#StrokeLinecapProperty"
            }
        },
        "stroke-linejoin": {
            "inherited": true,
            "values": [
                "miter",
                "round",
                "bevel"
            ],
            "codegen-properties": {
                "name-for-methods": "JoinStyle",
                "parser-grammar": "<<values>>",
                "comment": "FIXME: Does not match the specification in either SVG2 or CSS Fill and Stroke Module Level 3"
            },
            "status": "supported",
            "specification": {
                "category": "css-text-fill-and-stroke",
                "url": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-linejoin",
                "obsolete-category": "svg",
                "obsolete-url": "https://www.w3.org/TR/SVG11/painting.html#StrokeLinejoinProperty"
            }
        },
        "stroke-miterlimit": {
            "inherited": true,
            "codegen-properties": {
                "name-for-methods": "StrokeMiterLimit",
                "converter": "Number<float>",
                "parser-grammar": "<number [0,inf]>"
            },
            "status": "supported",
            "specification": {
                "category": "css-text-fill-and-stroke",
                "url": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-miterlimit",
                "obsolete-category": "svg",
                "obsolete-url": "https://www.w3.org/TR/SVG11/painting.html#StrokeMiterlimitProperty"
            }
        },
        "stroke-opacity": {
            "inherited": true,
            "codegen-properties": {
                "converter": "Opacity",
                "svg": true,
                "parser-grammar": "<alpha-value>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG11/painting.html#StrokeOpacityProperty"
            }
        },
        "stroke-color": {
            "inherited": true,
            "codegen-properties": {
                "custom": "Value",
                "visited-link-color-support": true,
                "color-property": true,
                "parser-grammar": "<color>"
            },
            "status": "supported",
            "specification": {
                "category": "css-text-fill-and-stroke",
                "url": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-color"
            }
        },
        "stroke-width": {
            "inherited": true,
            "codegen-properties": {
                "custom": "Value",
                "initial": "oneLength",
                "converter": "LengthAllowingNumber",
                "parser-grammar": "<length-percentage [0,inf]> | <number [0,inf]>"
            },
            "status": "supported",
            "specification": {
                "category": "css-text-fill-and-stroke",
                "url": "https://drafts.fxtf.org/fill-stroke-3/#propdef-stroke-width",
                "obsolete-category": "svg",
                "obsolete-url": "https://www.w3.org/TR/SVG11/painting.html#StrokeWidthProperty"
            }
        },
        "speak-as": {
            "inherited": true,
            "values": [
                "normal",
                "spell-out",
                "digits",
                "literal-punctuation",
                "no-punctuation"
            ],
            "codegen-properties": {
                "converter": "SpeakAs",
                "parser-function": "consumeSpeakAs",
                "parser-grammar-unused": "normal | [ spell-out || digits || [ literal-punctuation | no-punctuation ] ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-speech",
                "url": "https://www.w3.org/TR/css3-speech/#speak-as"
            }
        },
        "table-layout": {
            "values": [
                "auto",
                "fixed"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/tables.html#propdef-table-layout"
            }
        },
        "tab-size": {
            "inherited": true,
            "codegen-properties": {
                "converter": "TabSize",
                "parser-grammar": "<number [0,inf]> | <length [0,inf]>"
            },
            "specification": {
                "category": "css-text",
                "url": "https://drafts.csswg.org/css-text-3/#tab-size-property"
            }
        },
        "text-align": {
            "inherited": true,
            "values": [
                {
                    "value": "-webkit-auto",
                    "status": "non-standard"
                },
                "left",
                "right",
                "center",
                "justify",
                {
                    "value": "match-parent",
                    "url": "https://www.w3.org/TR/css-text-3/#text-align"
                },
                {
                    "value": "justify-all",
                    "status": "unimplemented",
                    "url": "https://www.w3.org/TR/css-text-3/#text-align"
                },
                {
                    "value": "-webkit-left",
                    "status": "non-standard"
                },
                {
                    "value": "-webkit-right",
                    "status": "non-standard"
                },
                {
                    "value": "-webkit-center",
                    "status": "non-standard"
                },
                {
                    "value": "-webkit-match-parent",
                    "status": "non-standard"
                },
                {
                    "value": "-internal-th-center",
                    "status": "internal"
                },
                {
                    "value": "start",
                    "url": "https://www.w3.org/TR/css-text-3/#text-align"
                },
                {
                    "value": "end",
                    "url": "https://www.w3.org/TR/css-text-3/#text-align"
                }
            ],
            "codegen-properties": {
                "converter": "TextAlign",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/text.html#propdef-text-align"
            }
        },
        "text-align-last": {
            "inherited": true,
            "values": [
                "auto",
                "start",
                "end",
                "left",
                "right",
                "center",
                "justify",
                "match-parent"
            ],
            "codegen-properties": {
                "converter": "TextAlignLast",
                "settings-flag": "cssTextAlignLastEnabled",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-3/#text-align-last-property"
            }
        },
        "text-anchor": {
            "inherited": true,
            "values": [
                "start",
                "middle",
                "end"
            ],
            "codegen-properties": {
                "svg": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/text.html#TextAnchorProperty"
            }
        },
        "text-decoration": {
            "codegen-properties": {
                "longhands": [
                    "text-decoration-line"
                ]
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS2/text.html#propdef-text-decoration"
            }
        },
        "text-group-align": {
            "values": [
                "none",
                "start",
                "end",
                "left",
                "right",
                "center"
            ],
            "codegen-properties": {
                "settings-flag": "cssTextGroupAlignEnabled",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-text",
                "url": "https://drafts.csswg.org/css-text-4/#text-group-align-property"
            },
            "status": "in development"
        },
        "text-indent": {
            "inherited": true,
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeTextIndent",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "[ <length-percentage> ] && hanging? && each-line?",
                "parser-grammar-unused-reason": "Needs support for '&&' groups and optionals."
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-3/#text-indent-property",
                "obsolete-category": "css-22",
                "obsolete-url": "https://www.w3.org/TR/CSS22/text.html#propdef-text-indent"
            }
        },
        "text-justify": {
            "inherited": true,
            "values": [
                "auto",
                "none",
                "inter-word",
                "inter-character",
                {
                    "value": "distribute",
                    "status": "deprecated",
                    "comment": "computes to -inter-character",
                    "url": "https://www.w3.org/TR/css-text-3/#valdef-text-justify-distribute"
                }
            ],
            "codegen-properties": {
                "settings-flag": "cssTextJustifyEnabled",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-3/#text-justify"
            }
        },
        "text-overflow": {
            "values": [
                "clip",
                "ellipsis"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-ui",
                "url": "https://www.w3.org/TR/css-ui-3/#propdef-text-overflow"
            }
        },
        "text-shadow": {
            "inherited": true,
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeTextShadow",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "none | [ <color>? && <length>{2,3} ]#",
                "parser-grammar-unused-reason": "Needs support for '&&' groups, '{A,B} multipliers and optionals.",
                "comment": "FIXME: Current implementation is a bit closer to box-shadow, where the third (and optional) length representing blur radius is non-negative."
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-3/#text-shadow-property"
            }
        },
        "text-transform": {
            "inherited": true,
            "values": [
                "capitalize",
                "uppercase",
                "lowercase",
                "full-size-kana",
                "full-width",
                "none"
            ],
            "codegen-properties": {
                "converter": "TextTransform",
                "parser-function": "consumeTextTransform",
                "parser-grammar-unused": "none | [[capitalize | uppercase | lowercase ] || full-width || full-size-kana]",
                "parser-grammar-unused-reason": "Needs support for '||' groups.",
                "aliases": [
                    "-epub-text-transform"
                ]
            },
            "specification": {
                "category": "css-text",
                "url": "https://drafts.csswg.org/css-text/#text-transform-property"
            }
        },
        "text-wrap": {
            "inherited": true,
            "values": [
                "wrap",
                "nowrap",
                {
                    "value": "balance",
                    "settings-flag": "cssTextWrapNewValuesEnabled"
                },
                {
                    "value": "stable",
                    "settings-flag": "cssTextWrapNewValuesEnabled"
                },
                {
                    "value": "pretty",
                    "settings-flag": "cssTextWrapNewValuesEnabled"
                }
            ],
            "codegen-properties": {
                "settings-flag": "cssWhiteSpaceLonghandsEnabled",
                "parser-grammar": "<<values>>",
                "parser-exported": true
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-4/#text-wrap"
            },
            "status": "in development"
        },
        "top": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "initial": "initialOffset",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "inset",
                    "resolver": "top"
                },
                "parser-function": "consumeSide",
                "parser-function-requires-context-mode": true,
                "parser-function-requires-current-shorthand": true,
                "parser-grammar-unused": "<length-percentage> | auto",
                "parser-grammar-unused-reason": "Needs support for different parsing based on the current shorthand."
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visuren.html#propdef-top"
            }
        },
        "transition": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-transition"
                ],
                "longhands": [
                    "transition-property",
                    "transition-duration",
                    "transition-timing-function",
                    "transition-delay"
                ]
            },
            "specification": {
                "category": "css-transitions",
                "url": "https://www.w3.org/TR/css3-transitions/#transition-shorthand-property"
            }
        },
        "transition-delay": {
            "animatable": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-transition-delay"
                ],
                "name-for-methods": "Delay",
                "separator": ",",
                "parser-grammar": "<time>#"
            },
            "specification": {
                "category": "css-transitions",
                "url": "https://www.w3.org/TR/css3-transitions/#transition-delay"
            }
        },
        "transition-duration": {
            "animatable": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-transition-duration"
                ],
                "name-for-methods": "Duration",
                "separator": ",",
                "parser-grammar": "<time [0,inf]>#"
            },
            "specification": {
                "category": "css-transitions",
                "url": "https://www.w3.org/TR/css3-transitions/#transition-duration"
            }
        },
        "transition-property": {
            "animatable": true,
            "values": [
                "none"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-transition-property"
                ],
                "name-for-methods": "Property",
                "parser-grammar": "none  | <single-transition-property>#"
            },
            "specification": {
                "category": "css-transitions",
                "url": "https://www.w3.org/TR/css3-transitions/#transition-property"
            }
        },
        "transition-timing-function": {
            "animatable": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-transition-timing-function"
                ],
                "name-for-methods": "TimingFunction",
                "parser-grammar": "<timing-function>#"
            },
            "specification": {
                "category": "css-transitions",
                "url": "https://www.w3.org/TR/css3-transitions/#transition-timing-function"
            }
        },
        "unicode-bidi": {
            "values": [
                "normal",
                "embed",
                "bidi-override",
                {
                    "value": "isolate",
                    "url": "https://www.w3.org/TR/css-writing-modes-3/#valdef-unicode-bidi-isolate"
                },
                {
                    "value": "isolate-override",
                    "url": "https://www.w3.org/TR/css-writing-modes-3/#valdef-unicode-bidi-isolate-override"
                },
                {
                    "value": "plaintext",
                    "url": "https://www.w3.org/TR/css-writing-modes-3/#valdef-unicode-bidi-plaintext"
                },
                {
                    "value": "-webkit-isolate",
                    "status": "deprecated"
                },
                {
                    "value": "-webkit-isolate-override",
                    "status": "deprecated"
                },
                {
                    "value": "-webkit-plaintext",
                    "status": "deprecated"
                }
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visuren.html#propdef-unicode-bidi"
            }
        },
        "vector-effect": {
            "values": [
                "none",
                "non-scaling-stroke"
            ],
            "codegen-properties": {
                "svg": true,
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVGTiny12/painting.html#VectorEffectProperty"
            }
        },
        "vertical-align": {
            "codegen-properties": {
                "custom": "Inherit|Value",
                "parser-grammar": "baseline | sub | super | top | text-top | middle | bottom | text-bottom | -webkit-baseline-middle | <length-percentage unitless-allowed>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visudet.html#propdef-vertical-align"
            }
        },
        "visibility": {
            "inherited": true,
            "values": [
                "visible",
                "hidden",
                "collapse"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>",
                "fast-path-inherited": true
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visufx.html#propdef-visibility"
            }
        },
        "white-space": {
            "inherited": true,
            "codegen-properties": {
                "longhands": [
                    "white-space-collapse",
                    "text-wrap"
                ]
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-4/#white-space-property"
            }
        },
        "white-space-collapse": {
            "inherited": true,
            "values": [
                "collapse",
                "preserve",
                "preserve-breaks",
                "break-spaces"
            ],
            "codegen-properties": {
                "settings-flag": "cssWhiteSpaceLonghandsEnabled",
                "parser-grammar": "<<values>>",
                "parser-exported": true
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-4/#white-space-collapsing"
            },
            "status": "in development"
        },
        "widows": {
            "inherited": true,
            "codegen-properties": {
                "auto-functions": true,
                "parser-grammar": "<integer [1,inf]>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/page.html#propdef-orphans"
            }
        },
        "width": {
            "codegen-properties": {
                "initial": "initialSize",
                "converter": "LengthSizing",
                "logical-property-group": {
                    "name": "size",
                    "resolver": "horizontal"
                },
                "parser-grammar": "<width-or-height-unitless-allowed>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visudet.html#the-width-property"
            }
        },
        "will-change": {
            "codegen-properties": {
                "custom": "Value",
                "parser-function": "consumeWillChange",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "auto | [ scroll-position | contents | <custom-ident> ]#",
                "parser-grammar-unused-reason": "Needs support for applying restrictions to <custom-ident>. Specifically 'The <custom-ident> production used here excludes the keywords will-change, none, all, auto, scroll-position, and contents'. Maybe something like <custom-ident exclude='will-change none all auto scroll-position contents'>"
            },
            "specification": {
                "category": "css-will-change",
                "url": "https://www.w3.org/TR/css-will-change/#propdef-will-change"
            }
        },
        "word-boundary-detection": {
            "inherited": true,
            "codegen-properties": {
                "settings-flag": "wordBoundaryDetectionEnabled",
                "converter": "WordBoundaryDetection",
                "parser-function": "consumeWordBoundaryDetection",
                "parser-grammar-unused": "normal | auto(<lang>)",
                "parser-grammar-unused-reason": "Only KeywordTerm, ReferenceTerm and UnboundedRepetitionTerm terms are supported inside MatchOneTerm at this time: '[ normal | auto(<lang>) ]' - auto(<lang>)",
                "parser-grammar-comment": "There is also a 'manual' value which we don't implement yet."
            },
            "specification": {
                "category": "css-text",
                "url": "https://drafts.csswg.org/css-text-4/#propdef-word-boundary-detection"
            },
            "status": "in development"
        },
        "word-break": {
            "inherited": true,
            "values": [
                "normal",
                "break-all",
                "keep-all",
                "break-word"
            ],
            "codegen-properties": {
                "aliases": [
                    "-epub-word-break"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-3/#word-break"
            }
        },
        "word-spacing": {
            "inherited": true,
            "values": [
                "normal"
            ],
            "codegen-properties": {
                "conditional-converter": "WordSpacing",
                "parser-grammar": "normal | <length-percentage unitless-allowed>",
                "parser-grammar-comment": "The current specification has a <length>, not a <length-percentage>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/text.html#propdef-word-spacing"
            }
        },
        "x": {
            "codegen-properties": {
                "initial": "zeroLength",
                "converter": "Length",
                "parser-grammar": "<length-percentage>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/"
            }
        },
        "y": {
            "codegen-properties": {
                "initial": "zeroLength",
                "converter": "Length",
                "parser-grammar": "<length-percentage>"
            },
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/"
            }
        },
        "z-index": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "auto-functions": true,
                "name-for-methods": "SpecifiedZIndex",
                "parser-grammar": "auto | <integer>"
            },
            "specification": {
                "category": "css-22",
                "url": "https://www.w3.org/TR/CSS22/visuren.html#propdef-z-index"
            }
        },
        "alt": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-alt"
                ],
                "name-for-methods": "ContentAltText",
                "custom": "Value",
                "parser-function": "consumeAlt",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "<string> | <attr()>",
                "parser-grammar-unused-reason": "Needs support for function notation."
            },
            "status": "non-standard"
        },
        "appearance": {
            "values": [
                "checkbox",
                "radio",
                "push-button",
                "square-button",
                "button",
                "listbox",
                "menulist",
                "menulist-button",
                "meter",
                "progress-bar",
                "slider-horizontal",
                "slider-vertical",
                "searchfield",
                "textfield",
                "textarea",
                "auto",
                "none",
                {
                    "value": "-apple-pay-button",
                    "status": "non-standard",
                    "enable-if": "ENABLE_APPLE_PAY"
                },
                {
                    "value": "default-button",
                    "status": "non-standard",
                    "settings-flag": "useSystemAppearance"
                },
                {
                    "value": "attachment",
                    "status": "non-standard",
                    "settings-flag": "DeprecatedGlobalSettings::attachmentElementEnabled()",
                    "enable-if": "ENABLE_ATTACHMENT_ELEMENT"
                },
                {
                    "value": "borderless-attachment",
                    "settings-flag": "DeprecatedGlobalSettings::attachmentElementEnabled()",
                    "enable-if": "ENABLE_ATTACHMENT_ELEMENT"
                }
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-appearance"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-ui",
                "url": "https://www.w3.org/TR/css-ui-4/#propdef-appearance"
            }
        },
        "aspect-ratio": {
            "values": [
                "auto"
            ],
            "codegen-properties": {
                "custom": "All",
                "settings-flag": "aspectRatioEnabled",
                "parser-function": "consumeAspectRatio",
                "parser-grammar-unused": "auto || <ratio>",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-sizing",
                "url": "https://drafts.csswg.org/css-sizing-4/#aspect-ratio"
            }
        },
        "contain-intrinsic-size": {
            "codegen-properties": {
                "longhands": [
                    "contain-intrinsic-width",
                    "contain-intrinsic-height"
                ],
                "settings-flag": "cssContainIntrinsicSizeEnabled"
            },
            "specification": {
                "category": "css-sizing",
                "url": "https://www.w3.org/TR/css-sizing-4/#intrinsic-size-override"
            }
        },
        "contain-intrinsic-height": {
            "codegen-properties": {
                "custom": "All",
                "settings-flag": "cssContainIntrinsicSizeEnabled",
                "logical-property-group": {
                    "name": "contain-intrinsic-size",
                    "resolver": "vertical"
                },
                "parser-function": "consumeContainIntrinsicSize",
                "parser-grammar-unused": "none | <length> | [ auto && <length> ]",
                "parser-grammar-unused-reason": "Needs support for '&&' groups.",
                "comment": "Should ensure generator simplifies to 'none | [ <length> && auto? ]"
            },
            "specification": {
                "category": "css-sizing",
                "url": "https://www.w3.org/TR/css-sizing-4/#intrinsic-size-override"
            }
        },
        "contain-intrinsic-width": {
            "codegen-properties": {
                "custom": "All",
                "settings-flag": "cssContainIntrinsicSizeEnabled",
                "logical-property-group": {
                    "name": "contain-intrinsic-size",
                    "resolver": "horizontal"
                },
                "parser-function": "consumeContainIntrinsicSize",
                "parser-grammar-unused": "auto? [none | <<length>>]",
                "parser-grammar-unused-reason": "Needs support for '&&' groups.",
                "comment": "Should ensure generator simplifies to 'none | [ <length> && auto? ]"
            },
            "specification": {
                "category": "css-sizing",
                "url": "https://www.w3.org/TR/css-sizing-4/#intrinsic-size-override"
            }
        },
        "contain-intrinsic-block-size": {
            "codegen-properties": {
                "skip-builder": true,
                "settings-flag": "cssContainIntrinsicSizeEnabled",
                "logical-property-group": {
                    "name": "contain-intrinsic-size",
                    "resolver": "block"
                },
                "parser-function": "consumeContainIntrinsicSize",
                "parser-grammar-unused": "auto? [none | <<length>>]",
                "parser-grammar-unused-reason": "Needs support for '&&' groups.",
                "comment": "Should ensure generator simplifies to 'none | [ <length> && auto? ]"
            },
            "specification": {
                "category": "css-sizing",
                "url": "https://www.w3.org/TR/css-sizing-4/#intrinsic-size-override"
            }
        },
        "contain-intrinsic-inline-size": {
            "codegen-properties": {
                "skip-builder": true,
                "settings-flag": "cssContainIntrinsicSizeEnabled",
                "logical-property-group": {
                    "name": "contain-intrinsic-size",
                    "resolver": "inline"
                },
                "parser-function": "consumeContainIntrinsicSize",
                "parser-grammar-unused": "none | <length> | [ auto && <length> ]",
                "parser-grammar-unused-reason": "Needs support for '&&' groups.",
                "comment": "Should ensure generator simplifies to 'none | [ <length> && auto? ]"
            },
            "specification": {
                "category": "css-sizing",
                "url": "https://www.w3.org/TR/css-sizing-4/#intrinsic-size-override"
            }
        },
        "contain": {
            "codegen-properties": {
                "custom": "All",
                "settings-flag": "cssContainmentEnabled",
                "parser-function": "consumeContain",
                "parser-grammar-unused": "none | strict | content | [ size || layout || paint ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups.",
                "comment": "Implementation also supports 'inline-size' and 'style'"
            },
            "specification": {
                "category": "css-contain",
                "url": "https://drafts.csswg.org/css-contain-1/"
            }
        },
        "container": {
            "codegen-properties": {
                "longhands": [
                    "container-name",
                    "container-type"
                ]
            },
            "specification": {
                "category": "css-contain",
                "url": "https://drafts.csswg.org/css-contain-3/#container-queries"
            }
        },
        "container-name": {
            "codegen-properties": {
                "settings-flag": "cssContainerQueriesEnabled",
                "converter": "ContainerName",
                "name-for-methods": "ContainerNames",
                "parser-function": "consumeContainerName",
                "parser-grammar-unused": "none | <custom-ident>+",
                "parser-grammar-unused-reason": "Needs support for '+' multipliers and applying restrictions to <custom-ident>."
            },
            "specification": {
                "category": "css-contain",
                "url": "https://drafts.csswg.org/css-contain-3/#container-name"
            }
        },
        "container-type": {
            "values": [
                "normal",
                "size",
                "inline-size"
            ],
            "codegen-properties": {
                "settings-flag": "cssContainerQueriesEnabled",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-contain",
                "url": "https://drafts.csswg.org/css-contain-3/#container-queries"
            }
        },
        "content-visibility": {
            "values": [
                "visible",
                "hidden",
                "auto"
            ],
            "codegen-properties": {
                "settings-flag": "cssContentVisibilityEnabled",
                "parser-grammar": "<<values>>"
            },
            "status": {
                "status": "in development"
            },
            "specification": {
                "category": "css-content-visibility",
                "url": "https://www.w3.org/TR/css-contain-2/#content-visibility"
            }
        },
        "backface-visibility": {
            "values": [
                "visible",
                "hidden"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-backface-visibility"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#propdef-backface-visibility"
            }
        },
        "-webkit-background-clip": {
            "codegen-properties": {
                "related-property": "background-clip",
                "name-for-methods": "Clip",
                "fill-layer-property": true,
                "parser-grammar": "<single-webkit-background-clip>#"
            }
        },
        "-webkit-background-origin": {
            "codegen-properties": {
                "related-property": "background-origin",
                "name-for-methods": "Origin",
                "fill-layer-property": true,
                "parser-grammar": "<single-webkit-background-origin>#"
            }
        },
        "-webkit-background-size": {
            "codegen-properties": {
                "longhands": [
                    "background-size"
                ]
            },
            "status": {
                "comment": "Differs from background-size only in the interpretation of a single value: '-webkit-background-size: l;' is equivalent to 'background-size: l l;' whereas 'background-size: l;' is equivalent to 'background-size: l auto;'"
            }
        },
        "-webkit-border-horizontal-spacing": {
            "inherited": true,
            "codegen-properties": {
                "name-for-methods": "HorizontalBorderSpacing",
                "converter": "ComputedLength<float>",
                "parser-grammar": "<length [0,inf]>"
            },
            "status": "non-standard"
        },
        "-webkit-border-image": {
            "codegen-properties": {
                "longhands": [
                    "border-image-source",
                    "border-image-slice",
                    "border-image-width",
                    "border-image-outset",
                    "border-image-repeat"
                ]
            },
            "status": {
                "comment": "Differs from border-image in that it always includes the 'fill' keyword in 'border-image-slice', and makes length values in 'border-image-width' override the corresponding 'border-*-width'."
            }
        },
        "-webkit-border-radius": {
            "codegen-properties": {
                "longhands": [
                    "border-top-left-radius",
                    "border-top-right-radius",
                    "border-bottom-right-radius",
                    "border-bottom-left-radius"
                ]
            },
            "status": {
                "comment": "Differs from border-radius only in the interpretation of a value consisting of two lengths: '-webkit-border-radius: l1 l2;' is equivalent to 'border-radius: l1 / l2;'."
            }
        },
        "-webkit-border-vertical-spacing": {
            "inherited": true,
            "codegen-properties": {
                "name-for-methods": "VerticalBorderSpacing",
                "converter": "ComputedLength<float>",
                "parser-grammar": "<length [0,inf]>"
            },
            "status": "non-standard"
        },
        "-webkit-box-align": {
            "values": [
                "stretch",
                "start",
                "end",
                "center",
                "baseline"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": "obsolete",
            "specification":  {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#propdef-box-align"
            }
        },
        "-webkit-box-direction": {
            "inherited": true,
            "values": [
                "normal",
                "reverse"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": "obsolete",
            "specification":  {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#propdef-box-direction"
            }
        },
        "-webkit-box-flex": {
            "codegen-properties": {
                "parser-grammar": "<number>"
            },
            "status": "obsolete",
            "specification":  {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#propdef-box-flex"
            }
        },
        "-webkit-box-flex-group": {
            "codegen-properties": {
                "parser-grammar": "<integer [0,inf]>"
            },
            "status": "obsolete",
            "specification":  {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#propdef-box-flex-group"
            }
        },
        "-webkit-box-lines": {
            "values": [
                "single",
                "multiple"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": "obsolete",
            "specification":  {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#propdef-box-lines"
            }
        },
        "-webkit-box-ordinal-group": {
            "codegen-properties": {
                "parser-grammar": "<integer [1,inf]>"
            },
            "status": "obsolete",
            "specification":  {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#propdef-box-ordinal-group"
            }
        },
        "-webkit-box-orient": {
            "values": [
                "horizontal",
                "vertical",
                "inline-axis",
                "block-axis"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": "obsolete",
            "specification":  {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#propdef-box-orient"
            }
        },
        "-webkit-box-pack": {
            "values": [
                "start",
                "end",
                "center",
                "justify"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": "obsolete",
            "specification":  {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/2009/WD-css3-flexbox-20090723/#propdef-box-pack"
            }
        },
        "-webkit-box-reflect": {
            "codegen-properties": {
                "converter": "Reflection",
                "parser-function": "consumeReflect",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "none | [ [ above | below | left | right ] <length-percentage>? <border-image>? ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups and optionals."
                
            },
            "status": "non-standard"
        },
        "-webkit-box-shadow": {
            "codegen-properties": {
                "related-property": "box-shadow",
                "custom": "All",
                "parser-function": "consumeWebkitBoxShadow",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "none | <shadow>#",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups, {A} multipliers and optionals.",
                "comment": "Implementation does not actually differ from box-shadow as described in status."
            },
            "status": {
                "comment": "Differs from box-shadow in its treatement of blur radii > 8px. Let -webkit-box-shadow blur, radius be w_r and box-shadow blur radius be b_r. For w_r > 8px, b_r = 8 + 4 * sqrt((w_r - 8) / 2)."
            }
        },
        "-webkit-column-axis": {
            "values": [
                "horizontal",
                "vertical",
                "auto"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": {
                "status": "non-standard",
                "comment": "Added in https://bugs.webkit.org/show_bug.cgi?id=71028"
            }
        },
        "-webkit-column-break-after": {
            "codegen-properties": {
                "longhands": [
                    "break-after"
                ]
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#break-after"
            },
            "status": {
                "status": "non-standard",
                "comment": "Use break-after instead."
            }
        },
        "-webkit-column-break-before": {
            "codegen-properties": {
                "longhands": [
                    "break-before"
                ]
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#break-before"
            },
            "status": {
                "status": "non-standard",
                "comment": "Use break-before instead."
            }
        },
        "-webkit-column-break-inside": {
            "codegen-properties": {
                "longhands": [
                    "break-inside"
                ]
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#break-inside"
            },
            "status": {
                "status": "non-standard",
                "comment": "Use break-inside instead."
            }
        },
        "column-count": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-column-count"
                ],
                "auto-functions": true,
                "parser-grammar": "auto | <integer [1,inf]>",
                "parser-exported": true
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#column-count"
            }
        },
        "column-fill": {
            "values": [
                "auto",
                "balance"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-column-fill"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#column-fill"
            }
        },
        "column-gap": {
            "codegen-properties": {
                "aliases": [
                    "grid-column-gap",
                    "-webkit-column-gap"
                ],
                "converter": "GapLength",
                "parser-grammar": "<gap-gutter>",
                "parser-exported": true
            },
            "specification": {
                "category": "css-align",
                "url": "https://drafts.csswg.org/css-align/#column-row-gap"
            }
        },
        "row-gap": {
            "codegen-properties": {
                "aliases": [
                    "grid-row-gap"
                ],
                "converter": "GapLength",
                "parser-grammar": "<gap-gutter>",
                "parser-exported": true
            },
            "specification": {
                "category": "css-align",
                "url": "https://drafts.csswg.org/css-align/#column-row-gap"
            }
        },
        "gap": {
            "codegen-properties": {
                "aliases": [
                    "grid-gap"
                ],
                "longhands": [
                    "row-gap",
                    "column-gap"
                ]
            },
            "specification": {
                "category": "css-align",
                "url": "https://drafts.csswg.org/css-align/#gap-shorthand"
            }
        },
        "-webkit-column-progression": {
            "values": [
                "normal",
                "reverse"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": {
                "status": "non-standard",
                "comment": "Added in https://bugs.webkit.org/show_bug.cgi?id=89315"
            }
        },
        "column-rule": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-column-rule"
                ],
                "longhands": [
                    "column-rule-width",
                    "column-rule-style",
                    "column-rule-color"
                ]
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#column-rule"
            }
        },
        "column-rule-color": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-column-rule-color"
                ],
                "initial": "currentColor",
                "visited-link-color-support": true,
                "color-property": true,
                "parser-grammar": "<color>"
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#column-rule-color"
            }
        },
        "column-rule-style": {
            "values": [
                "none",
                "hidden",
                "inset",
                "groove",
                "outset",
                "ridge",
                "dotted",
                "dashed",
                "solid",
                "double"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-column-rule-style"
                ],
                "initial": "initialBorderStyle",
                "parser-grammar": "<line-style>"
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#column-rule-style"
            }
        },
        "column-rule-width": {
            "values": [
                "thin",
                "medium",
                "thick"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-column-rule-width"
                ],
                "converter": "LineWidth<unsigned short>",
                "parser-grammar": "<line-width>"
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#column-rule-width"
            }
        },
        "column-span": {
            "values": [
                "none",
                "all"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-column-span"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#column-span0"
            }
        },
        "column-width": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-column-width"
                ],
                "converter": "ComputedLength<float>",
                "auto-functions": true,
                "parser-grammar": "auto | <length [0,inf] strict>",
                "parser-exported": true
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#column-width"
            }
        },
        "columns": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-columns"
                ],
                "longhands": [
                    "column-width",
                    "column-count"
                ]
            },
            "specification":  {
                "category": "css-multicol",
                "url": "https://www.w3.org/TR/css3-multicol/#columns"
            }
        },
        "-webkit-box-decoration-break": {
            "values": [
                "clone",
                "slice"
            ],
            "codegen-properties": {
                "enable-if": "ENABLE_CSS_BOX_DECORATION_BREAK",
                "parser-grammar": "<<values>>"
            },
            "status": {
                "status": "experimental"
            },
            "specification":  {
                "category": "css-break",
                "url": "https://www.w3.org/TR/css-break-3/#propdef-box-decoration-break"
            }
        },
        "mix-blend-mode": {
            "values": [
                "normal",
                "multiply",
                "screen",
                "overlay",
                "darken",
                "lighten",
                "color-dodge",
                "color-burn",
                "hard-light",
                "soft-light",
                "difference",
                "exclusion",
                "hue",
                "saturation",
                "color",
                "luminosity",
                "plus-darker",
                "plus-lighter"
            ],
            "codegen-properties": {
                "name-for-methods": "BlendMode",
                "enable-if": "ENABLE_CSS_COMPOSITING",
                "parser-grammar": "<<values>>"
            },
            "specification":  {
                "category": "css-compositing",
                "url": "https://www.w3.org/TR/compositing-1/#propdef-mix-blend-mode"
            }
        },
        "isolation": {
            "values": [
                "auto",
                "isolate"
            ],
            "codegen-properties": {
                "enable-if": "ENABLE_CSS_COMPOSITING",
                "parser-grammar": "<<values>>"
            },
            "specification":  {
                "category": "css-compositing",
                "url": "https://www.w3.org/TR/compositing-1/#isolation"
            }
        },
        "filter": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-filter"
                ],
                "conditional-converter": "FilterOperations",
                "parser-function": "consumeFilter",
                "parser-function-requires-context": true,
                "parser-function-requires-additional-parameters": ["AllowedFilterFunctions::PixelFilters"],
                "parser-grammar-unused": "none | <filter-value-list>",
                "parser-grammar-unused-reason": "Needs support for functional syntax groupings and '+' multipliers."
            },
            "specification":  {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#FilterProperty"
            }
        },
        "-apple-color-filter": {
            "inherited": true,
            "codegen-properties": {
                "settings-flag": "colorFilterEnabled",
                "conditional-converter": "FilterOperations",
                "parser-function": "consumeFilter",
                "parser-function-requires-context": true,
                "parser-function-requires-additional-parameters": ["AllowedFilterFunctions::ColorFilters"],
                "parser-grammar-unused": "none | <color-filter-value-list>",
                "parser-grammar-unused-reason": "Needs support for functional syntax groupings and '+' multipliers."
            },
            "status": {
                "status": "non-standard"
            }
        },
        "align-content": {
            "values": [
                "normal",
                "flex-start",
                "flex-end",
                "center",
                "space-between",
                "space-around",
                "space-evenly",
                "stretch",
                "first",
                "last",
                "baseline",
                "unsafe",
                "safe",
                "start",
                "end"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-align-content"
                ],
                "initial": "initialContentAlignment",
                "converter": "ContentAlignmentData",
                "parser-function": "consumeContentDistributionOverflowPosition",
                "parser-function-requires-additional-parameters": ["isContentPositionKeyword"],
                "parser-grammar-unused": "normal | <baseline-position> | <content-distribution> | [ <overflow-position>? <content-position> ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups and optionals",
                "comment": "Alternate defintion in css-flexbox - flex-start | flex-end | center | space-between | space-around | stretch"
            },
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#propdef-align-content"
            }
        },
        "align-items": {
            "values": [
                "flex-start",
                "flex-end",
                "center",
                "baseline",
                "stretch",
                "normal",
                "first",
                "last",
                "safe",
                "unsafe",
                "start",
                "end",
                "self-start",
                "self-end"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-align-items"
                ],
                "initial": "initialDefaultAlignment",
                "converter": "SelfOrDefaultAlignmentData",
                "parser-function": "consumeAlignItems",
                "parser-grammar-unused": "normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups and optionals.",
                "comment": "Alternate defintion in css-flexbox - flex-start | flex-end | center | baseline | stretch"
            },
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#propdef-align-items",
                "keywords": ["flexbox, align-items"]
            }
        },
        "align-self": {
            "values": [
                "auto",
                "flex-start",
                "flex-end",
                "center",
                "baseline",
                "stretch",
                "normal",
                "first",
                "last",
                "safe",
                "unsafe",
                "start",
                "end",
                "self-start",
                "self-end"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-align-self"
                ],
                "initial": "initialSelfAlignment",
                "converter": "SelfOrDefaultAlignmentData",
                "parser-function": "consumeSelfPositionOverflowPosition",
                "parser-function-requires-additional-parameters": ["isSelfPositionKeyword"],
                "parser-grammar-unused": "auto | normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups and optionals.",
                "comment": "Alternate defintion in css-flexbox - auto | flex-start | flex-end | center | baseline | stretch"
            },
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#propdef-align-self"
            }
        },
        "flex": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-flex"
                ],
                "longhands": [
                    "flex-grow",
                    "flex-shrink",
                    "flex-basis"
                ]
            },
            "specification": {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/css-flexbox-1/#propdef-flex"
            }
        },
        "flex-basis": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-flex-basis"
                ],
                "converter": "LengthSizing",
                "parser-grammar": "auto | content | <width-or-height-keyword> | <length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/css-flexbox-1/#propdef-flex-basis"
            }
        },
        "flex-direction": {
            "values": [
                "row",
                "row-reverse",
                "column",
                "column-reverse"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-flex-direction"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/css-flexbox-1/#propdef-flex-direction"
            }
        },
        "flex-flow": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-flex-flow"
                ],
                "longhands": [
                    "flex-direction",
                    "flex-wrap"
                ]
            },
            "specification": {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/css-flexbox-1/#propdef-flex-flow"
            }
        },
        "flex-grow": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-flex-grow"
                ],
                "parser-grammar": "<number [0,inf]>"
            },
            "specification": {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/css-flexbox-1/#propdef-flex-grow"
            }
        },
        "flex-shrink": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-flex-shrink"
                ],
                "parser-grammar": "<number [0,inf]>"
            },
            "specification": {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/css-flexbox-1/#propdef-flex-shrink"
            }
        },
        "flex-wrap": {
            "values": [
                "nowrap",
                "wrap",
                "wrap-reverse"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-flex-wrap"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/css-flexbox-1/#propdef-flex-wrap"
            }
        },
        "justify-content": {
            "values": [
                "normal",
                "flex-start",
                "flex-end",
                "center",
                "space-between",
                "space-around",
                "space-evenly",
                "stretch",
                "safe",
                "unsafe",
                "start",
                "end",
                "left",
                "right"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-justify-content"
                ],
                "initial": "initialContentAlignment",
                "converter": "ContentAlignmentData",
                "parser-function": "consumeJustifyContent",
                "parser-grammar-unused": "normal | <content-distribution> | [ <overflow-position>? [ <content-position> | left | right ] ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups and optionals.",
                "comment": "Alternate defintion in css-flexbox - flex-start | flex-end | center | space-between | space-around"
            },
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#propdef-justify-content"
            }
        },
        "-webkit-backdrop-filter": {
            "codegen-properties": {
                "conditional-converter": "FilterOperations",
                "enable-if": "ENABLE_FILTERS_LEVEL_2",
                "parser-function": "consumeFilter",
                "parser-function-requires-context": true,
                "parser-function-requires-additional-parameters": ["AllowedFilterFunctions::PixelFilters"],
                "parser-grammar-unused": "none | <filter-value-list>",
                "parser-grammar-unused-reason": "Needs support for functional syntax groupings and '+' multipliers."
            },
            "status": {
                "status": "experimental"
            },
            "specification": {
                "category": "css-filters",
                "url": "https://drafts.fxtf.org/filters-2/#BackdropFilterProperty"
            }
        },
        "-webkit-font-size-delta": {
            "codegen-properties": {
                "skip-builder": true,
                "internal-only": true,
                "parser-grammar": "<length unitless-allowed>"
            },
            "status": "non-standard"
        },
        "justify-self": {
            "codegen-properties": {
                "initial": "initialSelfAlignment",
                "converter": "SelfOrDefaultAlignmentData",
                "parser-function": "consumeSelfPositionOverflowPosition",
                "parser-function-requires-additional-parameters": ["isSelfPositionOrLeftOrRightKeyword"],
                "parser-grammar-unused": "auto | normal | stretch | <baseline-position> | [ <overflow-position>? [ <self-position> | left | right ] ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups and optionals."
            },
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#propdef-justify-self"
            }
        },
        "justify-items": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-justify-items"
                ],
                "converter": "SelfOrDefaultAlignmentData",
                "parser-function": "consumeJustifyItems",
                "parser-grammar-unused": "[ normal | stretch | <baseline-position> | [ <overflow-position>? [ <self-position> | left | right ] ] | legacy | legacy ] && [ left | right | center ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups and optionals."
            },
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#propdef-justify-items"
            }
        },
        "place-content": {
            "codegen-properties": {
                "longhands": [
                    "align-content",
                    "justify-content"
                ]
            },
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#propdef-place-content"
            }
        },
        "place-items": {
            "codegen-properties": {
                "longhands": [
                    "align-items",
                    "justify-items"
                ]
            },
            "specification": {
                "category": "css-align",
                "url": "https://drafts.csswg.org/css-align-3/#propdef-place-items"
            }
        },
        "place-self": {
            "codegen-properties": {
                "longhands": [
                    "align-self",
                    "justify-self"
                ]
            },
            "specification": {
                "category": "css-align",
                "url": "https://drafts.csswg.org/css-align-3/#propdef-place-self"
            }
        },
        "grid": {
            "codegen-properties": {
                "longhands": [
                    "grid-template-rows",
                    "grid-template-columns",
                    "grid-template-areas",
                    "grid-auto-flow",
                    "grid-auto-rows",
                    "grid-auto-columns"
                ]
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid"
            }
        },
        "grid-area": {
            "codegen-properties": {
                "longhands": [
                    "grid-row-start",
                    "grid-column-start",
                    "grid-row-end",
                    "grid-column-end"
                ]
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-area"
            }
        },
        "grid-auto-columns": {
            "codegen-properties": {
                "converter": "GridTrackSizeList",
                "separator": " ",
                "parser-function": "consumeGridTrackList",
                "parser-function-requires-context": true,
                "parser-function-requires-additional-parameters": ["GridAuto"],
                "parser-grammar-unused": "<track-size>+",
                "parser-grammar-unused-reason": "Needs support for '+' multipliers and function notation"
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-auto-columns"
            }
        },
        "grid-auto-rows": {
            "codegen-properties": {
                "converter": "GridTrackSizeList",
                "separator": " ",
                "parser-function": "consumeGridTrackList",
                "parser-function-requires-context": true,
                "parser-function-requires-additional-parameters": ["GridAuto"],
                "parser-grammar-unused": "<track-size>+",
                "parser-grammar-unused-reason": "Needs support for '+' multipliers and function notation"
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-auto-rows"
            }
        },
        "grid-column-end": {
            "codegen-properties": {
                "name-for-methods": "GridItemColumnEnd",
                "conditional-converter": "GridPosition",
                "parser-function": "consumeGridLine",
                "parser-grammar-unused": "<grid-line>",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups, '||' groups and optionals"
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-column-end"
            }
        },
        "grid-column-start": {
            "codegen-properties": {
                "name-for-methods": "GridItemColumnStart",
                "conditional-converter": "GridPosition",
                "parser-function": "consumeGridLine",
                "parser-grammar-unused": "<grid-line>",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups, '||' groups and optionals"
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-column-start"
            }
        },
        "grid-template": {
            "codegen-properties": {
                "longhands": [
                    "grid-template-rows",
                    "grid-template-columns",
                    "grid-template-areas"
                ]
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-template"
            }
        },
        "grid-template-columns": {
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeGridTemplatesRowsOrColumns",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "none | <track-list> | <auto-track-list>",
                "parser-grammar-unused-reason": "Needs support for '+' multiplier, '*' multiplier, optionals and function notation"
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-template-columns"
            }
        },
        "grid-template-rows": {
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeGridTemplatesRowsOrColumns",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "none | <track-list> | <auto-track-list>",
                "parser-grammar-unused-reason": "Needs support for '+' multiplier, '*' multiplier, optionals and function notation"
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-template-rows"
            }
        },
        "grid-row-end": {
            "codegen-properties": {
                "name-for-methods": "GridItemRowEnd",
                "conditional-converter": "GridPosition",
                "parser-function": "consumeGridLine",
                "parser-grammar-unused": "<grid-line>",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups, '||' groups and optionals"
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-row-end"
            }
        },
        "grid-row-start": {
            "codegen-properties": {
                "name-for-methods": "GridItemRowStart",
                "conditional-converter": "GridPosition",
                "parser-function": "consumeGridLine",
                "parser-grammar-unused": "<grid-line>",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups, '||' groups and optionals"
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-row-start"
            }
        },
        "grid-column": {
            "codegen-properties": {
                "longhands": [
                    "grid-column-start",
                    "grid-column-end"
                ]
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-column"
            }
        },
        "grid-row": {
            "codegen-properties": {
                "longhands": [
                    "grid-row-start",
                    "grid-row-end"
                ]
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-row"
            }
        },
        "grid-template-areas": {
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeGridTemplateAreas",
                "parser-grammar-unused": "none | <string>+",
                "parser-grammar-unused-reason": "Needs support for '+' multipliers."
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-template-areas"
            }
        },
        "grid-auto-flow": {
            "codegen-properties": {
                "converter": "GridAutoFlow",
                "parser-function": "consumeGridAutoFlow",
                "parser-grammar-unused": "[ row | column ] || dense",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#propdef-grid-auto-flow"
            }
        },
        "hyphenate-character": {
            "inherited": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-hyphenate-character"
                ],
                "name-for-methods": "HyphenationString",
                "converter": "StringOrAutoAtom",
                "parser-grammar": "auto | <string>"
            },
            "specification": {
                "category": "css-text",
                "url": "https://drafts.csswg.org/css-text-4/#propdef-hyphenate-character"
            }
        },
        "-webkit-hyphenate-limit-after": {
            "inherited": true,
            "codegen-properties": {
                "name-for-methods": "HyphenationLimitAfter",
                "converter": "NumberOrAuto<short>",
                "parser-grammar": "auto | <number [0,inf]>"
            },
            "status": "non-standard"
        },
        "-webkit-hyphenate-limit-before": {
            "inherited": true,
            "codegen-properties": {
                "name-for-methods": "HyphenationLimitBefore",
                "converter": "NumberOrAuto<short>",
                "parser-grammar": "auto | <number [0,inf]>"
            },
            "status": "non-standard"
        },
        "-webkit-hyphenate-limit-lines": {
            "inherited": true,
            "codegen-properties": {
                "name-for-methods": "HyphenationLimitLines",
                "converter": "WebkitHyphenateLimitLines",
                "parser-grammar": "no-limit | <number [0,inf]>"
            },
            "status": {
                "status": "experimental"
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-4/#propdef-hyphenate-limit-lines"
            }
        },
        "hyphens": {
            "inherited": true,
            "values": [
                "none",
                "manual",
                "auto"
            ],
            "codegen-properties": {
                "aliases": [
                    "-epub-hyphens",
                    "-webkit-hyphens"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-text",
                "url": "https://drafts.csswg.org/css-text-3/"
            }
        },
        "-webkit-initial-letter": {
            "codegen-properties": {
                "converter": "InitialLetter",
                "parser-function": "consumeWebkitInitialLetter",
                "parser-grammar-unused": "normal | <number [0,inf]>{1,2}",
                "parser-grammar-comment": "Spec does not match our implementation. Spec is 'normal | [ <number [1,inf]> <integer [1,inf]> ] | [ <number [1,inf]> && [ drop | raise ]? ]'",
                "parser-grammar-unused-reason": "Needs support for ordered groups, '&&' groups and additional range restrictions for number and integer."
            },
            "status": {
                "status": "experimental"
            },
            "specification": {
                "category": "css-inline",
                "url": "https://www.w3.org/TR/css-inline/#propdef-initial-letter"
            }
        },
        "-webkit-line-box-contain": {
            "values": [
                "none",
                "block",
                "inline",
                "font",
                "glyphs",
                "replaced",
                "inline-box",
                "initial-letter"
            ],
            "inherited": true,
            "codegen-properties": {
                "converter": "LineBoxContain",
                "parser-function": "consumeLineBoxContain",
                "parser-grammar-unused": "none | [ block || inline || font || glyphs || replaced || inline-box || initial-letter ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "status": {
                "status": "obsolete",
                "comment": "Added in https://trac.webkit.org/changeset/81684"
            }
        },
        "-webkit-line-align": {
            "inherited": true,
            "values": [
                "none",
                "edges"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": {
                "status": "obsolete",
                "comment": "Added in https://trac.webkit.org/changeset/108133"
            },
            "specification": {
                "category": "css-line-grid",
                "url": "https://www.w3.org/TR/css-line-grid-1/"
            }
        },
        "line-break": {
            "inherited": true,
            "values": [
                "auto",
                "loose",
                "normal",
                "strict",
                {
                    "value": "after-white-space",
                    "status": "non-standard",
                    "comment": "Added in https://trac.webkit.org/changeset/7763"
                },
                "anywhere"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-line-break"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-text",
                "url": "https://www.w3.org/TR/css-text-3/#line-break"
            }
        },
        "-webkit-line-clamp": {
            "codegen-properties": {
                "parser-grammar": "<percentage [0,inf]> | <integer [1,inf]>"
            },
            "status": "non-standard"
        },
        "-webkit-line-grid": {
            "inherited": true,
            "codegen-properties": {
                "converter": "StringOrNoneAtom",
                "parser-grammar": "none | <custom-ident>"
            },
            "status": {
                "status": "experimental"
            },
            "specification": {
                "category": "css-line-grid",
                "url": "https://www.w3.org/TR/css-line-grid-1/#propdef-line-grid"
            }
        },
        "-webkit-line-snap": {
            "inherited": true,
            "values": [
                "none",
                "baseline",
                "contain"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": {
                "status": "experimental"
            },
            "specification": {
                "category": "css-line-grid",
                "url": "https://www.w3.org/TR/css-line-grid-1/#line-snap"
            }
        },
        "-webkit-marquee-direction": {
            "values": [
                "forwards",
                "backwards",
                "ahead",
                "reverse",
                "left",
                "right",
                "down",
                "up",
                "auto"
            ],
            "codegen-properties": {
                "internal-only": true,
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "-webkit-marquee-increment": {
            "codegen-properties": {
                "conditional-converter": "MarqueeIncrement",
                "internal-only": true,
                "parser-grammar": "<length-percentage unitless-allowed>"
            },
            "status": "non-standard"
        },
        "-webkit-marquee-repetition": {
            "codegen-properties": {
                "name-for-methods": "MarqueeLoopCount",
                "converter": "MarqueeRepetition",
                "internal-only": true,
                "parser-grammar": "<number [0,inf]>"
            },
            "status": "non-standard"
        },
        "-webkit-marquee-speed": {
            "codegen-properties": {
                "converter": "MarqueeSpeed",
                "internal-only": true,
                "parser-grammar": "<time [0,inf] unitless-allowed>"
            },
            "status": "non-standard"
        },
        "-webkit-marquee-style": {
            "values": [
                "none",
                "slide",
                "scroll",
                "alternate"
            ],
            "codegen-properties": {
                "name-for-methods": "MarqueeBehavior",
                "internal-only": true,
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "-webkit-mask": {
            "codegen-properties": {
                "longhands": [
                    "mask-image",
                    "-webkit-mask-source-type",
                    "-webkit-mask-position-x",
                    "-webkit-mask-position-y",
                    "mask-size",
                    "mask-repeat",
                    "mask-origin",
                    "-webkit-mask-clip"
                ],
                "comment": "Differs from the unprefixed property in accepting -webkit-mask-source-type in place of mask-mode"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask"
            }
        },
        "-webkit-mask-box-image": {
            "codegen-properties": {
                "longhands": [
                    "-webkit-mask-box-image-source",
                    "-webkit-mask-box-image-slice",
                    "-webkit-mask-box-image-width",
                    "-webkit-mask-box-image-outset",
                    "-webkit-mask-box-image-repeat"
                ]
            },
            "status": "non-standard",
            "specification": {
                "category": "css-masking"
            }
        },
        "-webkit-mask-box-image-outset": {
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeBorderImageOutset",
                "parser-grammar-unused": "[ <number [0,inf]> | <length [0,inf]> ]{1,4}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."

            },
            "status": "non-standard",
            "specification": {
                "category": "css-masking"
            }
        },
        "-webkit-mask-box-image-repeat": {
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeBorderImageRepeat",
                "parser-grammar-unused": "[ stretch | repeat | space | round ]{1,2}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "status": "non-standard",
            "specification": {
                "category": "css-masking"
            }
        },
        "-webkit-mask-box-image-slice": {
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeBorderImageSlice",
                "parser-function-requires-current-property": true,
                "parser-grammar-unused": "[ <number [0,inf]> | <percentage [0,inf]> ]{1,4} && fill?",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers, '&&' groups and optionals."
            },
            "status": "non-standard",
            "specification": {
                "category": "css-masking"
            }
        },
        "-webkit-mask-box-image-source": {
            "codegen-properties": {
                "converter": "StyleImage<CSSPropertyWebkitMaskBoxImageSource>",
                "parser-grammar": "none | <image>"
            },
            "status": "non-standard",
            "specification": {
                "category": "css-masking"
            }
        },
        "-webkit-mask-box-image-width": {
            "codegen-properties": {
                "custom": "All",
                "parser-function": "consumeBorderImageWidth",
                "parser-function-requires-current-property": true,
                "parser-grammar-unused": "[ <length-percentage [0,inf]> | <number [0,inf]> | auto ]{1,4}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "status": "non-standard",
            "specification": {
                "category": "css-masking"
            }
        },
        "-webkit-mask-clip": {
            "codegen-properties": {
                "related-property": "mask-clip",
                "name-for-methods": "Clip",
                "fill-layer-property": true,
                "parser-grammar": "<single-webkit-mask-clip>#"
            },
            "status": {
                "status": "experimental"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-clip"
            }
        },
        "-webkit-mask-composite": {
            "codegen-properties": {
                "related-property": "mask-composite",
                "name-for-methods": "Composite",
                "fill-layer-property": true,
                "parser-grammar": "<single-webkit-mask-composite>#"
            },
            "status": {
                "status": "experimental"
            },
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#propdef-mask-composite"
            }
        },
        "-webkit-mask-source-type": {
            "codegen-properties": {
                "related-property": "mask-mode",
                "synonym": "mask-mode",
                "comment": "Deprecated alias for mask-mode, supports an 'auto' value, does not support 'match-source'",
                "parser-grammar": "<single-webkit-mask-source-type>#"
            },
            "status": "non-standard",
            "specification": {
                "category": "css-masking"
            }
        },
        "-webkit-nbsp-mode": {
            "inherited": true,
            "values": [
                "normal",
                "space"
            ],
            "codegen-properties": {
                "initial": "initialNBSPMode",
                "setter": "setNBSPMode",
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "color-scheme": {
            "inherited": true,
            "values": [
                "normal",
                "light",
                "dark",
                "only"
            ],
            "codegen-properties": {
                "aliases": [
                    "supported-color-schemes"
                ],
                "converter": "ColorScheme",
                "comment": "This is a top priority property, to ensure that its value can be checked when resolving colors.",
                "custom": "Value",
                "enable-if": "ENABLE_DARK_MODE_CSS",
                "top-priority": true,
                "parser-function": "consumeColorScheme",
                "parser-grammar-unused": "normal | [ [ light | dark | <custom-ident> ]+ && only? ]",
                "parser-grammar-unused-reason": "Needs support for '&&' groups, '+' multipliers, optionals and applying restrictions to <custom-ident>."
            },
            "specification": {
                "category": "css-color-adjust",
                "url": "https://www.w3.org/TR/css-color-adjust/#color-scheme-prop"
            },
            "status": {
                "status": "supported",
                "enabled-by-default": true
            }
        },
        "order": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-order"
                ],
                "parser-grammar": "<integer>"
            },
            "specification": {
                "category": "css-flexbox",
                "url": "https://www.w3.org/TR/css-flexbox-1/#order-property"
            }
        },
        "perspective": {
            "codegen-properties": {
                "conditional-converter": "Perspective",
                "parser-grammar": "none | <length [0,inf]>",
                "parser-exported": true
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#perspective-property"
            }
        },
        "-webkit-perspective": {
            "codegen-properties": {
                "longhands": [
                    "perspective"
                ]
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#perspective-property"
            },
            "status": {
                "comment": "Differs from unprefixed perspective only through support for unitless values, which are interpreted as 'px'."
            }
        },
        "perspective-origin": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-perspective-origin"
                ],
                "longhands": [
                    "perspective-origin-x",
                    "perspective-origin-y"
                ]
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#propdef-perspective-origin"
            }
        },
        "perspective-origin-x": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-perspective-origin-x"
                ],
                "computable": false,
                "converter": "PositionComponentX",
                "parser-grammar": "<position-x>"
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#propdef-perspective-origin"
            }
        },
        "perspective-origin-y": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-perspective-origin-y"
                ],
                "computable": false,
                "converter": "PositionComponentY",
                "parser-grammar": "<position-y>"
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#propdef-perspective-origin"
            }
        },
        "print-color-adjust": {
            "inherited": true,
            "values": [
                "exact",
                "economy"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-print-color-adjust",
                    "color-adjust"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-color-adjust",
                "url": "https://www.w3.org/TR/css-color-adjust/#print-color-adjust"
            }
        },
        "-webkit-rtl-ordering": {
            "inherited": true,
            "values": [
                "logical",
                "visual"
            ],
            "codegen-properties": {
                "initial": "initialRTLOrdering",
                "setter": "setRTLOrdering",
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "-webkit-text-combine": {
            "inherited": true,
            "values": [
                "none",
                "horizontal"
            ],
            "codegen-properties": {
                "related-property": "text-combine-upright",
                "aliases": [
                    "-epub-text-combine"
                ],
                "parser-grammar": "<<values>>"
            },
            "status": {
                "status": "obsolete",
                "comment": "Use text-combine-upright instead."
            }
        },
        "text-combine-upright": {
            "inherited": true,
            "values": [
                "none",
                "all"
            ],
            "codegen-properties": {
                "related-property": "-webkit-text-combine",
                "name-for-methods": "TextCombine",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-writing-modes",
                "url": "https://www.w3.org/TR/css-writing-modes-3/#propdef-direction"
            }
        },
        "-webkit-text-decoration": {
            "codegen-properties": {
                "longhands": [
                    "text-decoration-line",
                    "text-decoration-style",
                    "text-decoration-color"
                ]
            },
            "status": {
                "status": "experimental"
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-3/#text-decoration"
            }
        },
        "text-decoration-line": {
            "values": [
                "none",
                "underline",
                "overline",
                "line-through",
                {
                    "value": "blink",
                    "comment": "The value is parsed but ignored for rendering and computed style."
                }
            ],
            "codegen-properties": {
                "converter": "TextDecorationLine",
                "aliases": [
                    "-webkit-text-decoration-line"
                ],
                "parser-function": "consumeTextDecorationLine",
                "parser-grammar-unused": "none | [ underline || overline || line-through || blink ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-3/#text-decoration-line"
            }
        },
        "text-decoration-style": {
            "values": [
                "solid",
                "double",
                "dotted",
                "dashed",
                "wavy"
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-text-decoration-style"
                ],
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-3/#text-decoration-style"
            }
        },
        "text-decoration-color": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-text-decoration-color"
                ],
                "initial": "currentColor",
                "visited-link-color-support": true,
                "color-property": true,
                "parser-grammar": "<color>"
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-3/#text-decoration-color"
            }
        },
        "text-decoration-skip": {
            "inherited": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-text-decoration-skip"
                ],
                "longhands": [
                    "text-decoration-skip-ink"
                ]
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-3/#text-decoration-skip"
            }
        },
        "text-decoration-skip-ink": {
            "inherited": true,
            "values": [
                "auto",
                "none",
                "all"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://drafts.csswg.org/css-text-decor-4/#text-decoration-skip-ink-property"
            }
        },
        "text-underline-position": {
            "inherited": true,
            "values": [
                "auto",
                "under",
                "from-font",
                {
                    "value": "left",
                    "settings-flag": "cssTextUnderlinePositionLeftRightEnabled"

                },
                {
                    "value": "right",
                    "settings-flag": "cssTextUnderlinePositionLeftRightEnabled"
                }
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-text-underline-position"
                ],
                "parser-grammar": "<<values>>",
                "parser-grammar-unused": "auto | [ [ under | from-font ] || [ left | right ] ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups.",
                "comment": "Grammar is 'auto | [ [ under | from-font ] || [ left | right ] ]', but we only support 'auto | under | from-font | left | right'."
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-3/#text-underline-position-property"
            }
        },
        "text-underline-offset": {
            "inherited": true,
            "codegen-properties": {
                "converter": "TextUnderlineOffset",
                "parser-grammar": "auto | <length>",
                "parser-grammar-comment": "The current specification has a <length-percentage>, not just <length>"
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-4/#underline-offset"
            }
        },
        "text-decoration-thickness": {
            "codegen-properties": {
                "converter": "TextDecorationThickness",
                "parser-grammar": "auto | from-font | <length>",
                "parser-grammar-comment": "The current specification has a <length-percentage>, not just <length>"
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-4/#text-decoration-thickness"
            }
        },
        "-webkit-text-decorations-in-effect": {
            "inherited": true,
            "codegen-properties": {
                "skip-builder": true,
                "parser-function": "consumeTextDecorationLine",
                "parser-grammar-unused": "none | [ underline || overline || line-through || blink ]",
                "parser-grammar-unused-reason": "Needs support for '||' groups.",
                "comment": "FIXME: Should this be an alias of text-decoration-line?"
            },
            "status": "non-standard"
        },
        "-internal-text-autosizing-status": {
            "inherited": true,
            "codegen-properties": {
                "skip-builder": true,
                "skip-parser": true,
                "enable-if": "ENABLE_TEXT_AUTOSIZING",
                "internal-only": true
            },
            "status": "non-standard"
        },
        "text-emphasis": {
            "inherited": true,
            "codegen-properties": {
                "aliases": [
                    "-epub-text-emphasis",
                    "-webkit-text-emphasis"
                ],
                "longhands": [
                    "text-emphasis-style",
                    "text-emphasis-color"
                ]
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-3/#text-emphasis"
            }
        },
        "text-emphasis-color": {
            "inherited": true,
            "codegen-properties": {
                "aliases": [
                    "-epub-text-emphasis-color",
                    "-webkit-text-emphasis-color"
                ],
                "initial": "currentColor",
                "visited-link-color-support": true,
                "color-property": true,
                "parser-grammar": "<color>"
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-3/#text-emphasis-color"
            }
        },
        "text-emphasis-position": {
            "inherited": true,
            "codegen-properties": {
                "aliases": [
                    "-webkit-text-emphasis-position"
                ],
                "converter": "TextEmphasisPosition",
                "parser-function": "consumeTextEmphasisPosition",
                "parser-grammar-unused": "[ over | under ] && [ right | left ]?",
                "parser-grammar-unused-reason": "Needs support for '&&' groups and optionals."
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-3/#text-emphasis-position"
            }
        },
        "text-emphasis-style": {
            "inherited": true,
            "codegen-properties": {
                "aliases": [
                    "-epub-text-emphasis-style",
                    "-webkit-text-emphasis-style"
                ],
                "custom": "All",
                "parser-function": "consumeTextEmphasisStyle",
                "parser-grammar-unused": "none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-text-decor",
                "url": "https://www.w3.org/TR/css-text-decor-3/#text-emphasis-style"
            }
        },
        "-webkit-text-fill-color": {
            "inherited": true,
            "codegen-properties": {
                "initial": "currentColor",
                "visited-link-color-support": true,
                "color-property": true,
                "parser-grammar": "<color>"
            },
            "status": {
                "status": "non-standard",
                "comment": "Obsoleted by fill-color"
            }
        },
        "-webkit-text-security": {
            "inherited": true,
            "values": [
                "disc",
                "circle",
                "square",
                "none"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "-webkit-text-stroke": {
            "inherited": true,
            "codegen-properties": {
                "longhands": [
                    "-webkit-text-stroke-width",
                    "-webkit-text-stroke-color"
                ]
            },
            "status": "non-standard"
        },
        "-webkit-text-stroke-color": {
            "inherited": true,
            "codegen-properties": {
                "initial": "currentColor",
                "visited-link-color-support": true,
                "color-property": true,
                "parser-grammar": "<color>"
            },
            "status": {
                "status": "non-standard",
                "comment": "Obsoleted by stroke-color"
            }
        },
        "-webkit-text-stroke-width": {
            "inherited": true,
            "values": [
                "thin",
                "medium",
                "thick"
            ],
            "codegen-properties": {
                "converter": "TextStrokeWidth",
                "parser-grammar": "<line-width>"
            },
            "status": {
                "status": "non-standard",
                "comment": "Obsoleted by stroke-width"
            }
        },
        "transform": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-transform"
                ],
                "converter": "Transform",
                "parser-function": "consumeTransform",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "none | <transform-list>",
                "parser-grammar-unused-reason": "Needs support for '+' multipliers and function notation."
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#transform-property"
            }
        },
        "transform-box": {
            "values" : [
                "content-box",
                "border-box",
                "fill-box",
                "stroke-box",
                "view-box"
            ],
            "codegen-properties": {
                "initial": "initialTransformBox",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms/#propdef-transform-box"
            }
        },
        "transform-origin": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-transform-origin"
                ],
                "longhands": [
                    "transform-origin-x",
                    "transform-origin-y",
                    "transform-origin-z"
                ]
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#propdef-transform-origin"
            }
        },
        "transform-origin-x": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-transform-origin-x"
                ],
                "computable": false,
                "converter": "PositionComponentX",
                "parser-grammar": "<position-x>"
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#propdef-transform-origin"
            }
        },
        "transform-origin-y": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-transform-origin-y"
                ],
                "computable": false,
                "converter": "PositionComponentY",
                "parser-grammar": "<position-y>"
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#propdef-transform-origin"
            }
        },
        "transform-origin-z": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-transform-origin-z"
                ],
                "computable": false,
                "converter": "ComputedLength<float>",
                "parser-grammar": "<length>"
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#propdef-transform-origin"
            }
        },
        "transform-style": {
            "values": [
                "flat",
                "preserve-3d",
                {
                    "value": "optimized-3d",
                    "status": "internal",
                    "enable-if": "ENABLE_CSS_TRANSFORM_STYLE_OPTIMIZED_3D",
                    "settings-flag": "transformStyleOptimized3DEnabled"
                }
            ],
            "codegen-properties": {
                "aliases": [
                    "-webkit-transform-style"
                ],
                "name-for-methods": "TransformStyle3D",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#transform-style-property"
            }
        },
        "translate": {
            "codegen-properties": {
                "settings-flag": "cssIndividualTransformPropertiesEnabled",
                "converter": "Translate",
                "parser-function": "consumeTranslate",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "none | [ <length-percentage> [ <length-percentage> <length>? ]? ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups and optionals."
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://drafts.csswg.org/css-transforms-2/#propdef-translate"
            }
        },
        "scale": {
            "codegen-properties": {
                "settings-flag": "cssIndividualTransformPropertiesEnabled",
                "converter": "Scale",
                "parser-function": "consumeScale",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "none | [ <number> | <percentage> ]{1,3}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://drafts.csswg.org/css-transforms-2/#propdef-scale"

            }
        },
        "rotate": {
            "codegen-properties": {
                "settings-flag": "cssIndividualTransformPropertiesEnabled",
                "converter": "Rotate",
                "parser-function": "consumeRotate",
                "parser-function-requires-context-mode": true,
                "parser-grammar-unused": "none | <angle> | [ [ x | y | z | <number>{3} ] && <angle> ]",
                "parser-grammar-unused-reason": "Needs support for '&&' groups and '{A}' multipliers."
            },
            "specification": {
                "category": "css-transforms",
                "url": "https://drafts.csswg.org/css-transforms-2/#propdef-rotate"
            }
        },
        "-webkit-user-drag": {
            "values": [
                "auto",
                "none",
                "element"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "-webkit-user-modify": {
            "inherited": true,
            "values": [
                "read-only",
                "read-write",
                "read-write-plaintext-only"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "-webkit-user-select": {
            "inherited": true,
            "values": [
                "auto",
                "text",
                "none",
                {
                    "value": "contain",
                    "status": "unimplemented"
                },
                "all"
            ],
            "codegen-properties": {
                "parser-grammar": "<<values>>"
            },
            "status": {
                "status": "experimental"
            },
            "specification": {
                "category": "css-ui",
                "url": "https://www.w3.org/TR/css-ui-4/#propdef-user-select"
            }
        },
        "scroll-behavior": {
            "values": [
                "auto",
                "smooth"
            ],
            "codegen-properties": {
                "settings-flag": "CSSOMViewSmoothScrollingEnabled",
                "converter": "SmoothScrolling",
                "name-for-methods": "UseSmoothScrolling",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "url": "https://drafts.csswg.org/cssom-view/#propdef-scroll-behavior"
            }
        },
        "scroll-margin": {
            "codegen-properties": {
                "longhands": [
                    "scroll-margin-top",
                    "scroll-margin-right",
                    "scroll-margin-bottom",
                    "scroll-margin-left"
                ],
                "aliases": [
                    "scroll-snap-margin"
                ]
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-margin"
            }
        },
        "scroll-margin-bottom": {
            "codegen-properties": {
                "initial": "initialScrollMargin",
                "converter": "Length",
                "aliases": [
                    "scroll-snap-margin-bottom"
                ],
                "logical-property-group": {
                    "name": "scroll-margin",
                    "resolver": "bottom"
                },
                "parser-grammar": "<length>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-margin"
            }
        },
        "scroll-margin-left": {
            "codegen-properties": {
                "initial": "initialScrollMargin",
                "converter": "Length",
                "aliases": [
                    "scroll-snap-margin-left"
                ],
                "logical-property-group": {
                    "name": "scroll-margin",
                    "resolver": "left"
                },
                "parser-grammar": "<length>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-margin"
            }
        },
        "scroll-margin-right": {
            "codegen-properties": {
                "initial": "initialScrollMargin",
                "converter": "Length",
                "aliases": [
                    "scroll-snap-margin-right"
                ],
                "logical-property-group": {
                    "name": "scroll-margin",
                    "resolver": "right"
                },
                "parser-grammar": "<length>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-margin"
            }
        },
        "scroll-margin-top": {
            "codegen-properties": {
                "initial": "initialScrollMargin",
                "converter": "Length",
                "aliases": [
                    "scroll-snap-margin-top"
                ],
                "logical-property-group": {
                    "name": "scroll-margin",
                    "resolver": "top"
                },
                "parser-grammar": "<length>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-margin"
            }
        },
        "scroll-margin-inline-start": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "scroll-margin",
                    "resolver": "inline-start"
                },
                "parser-grammar": "<length>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-margin-inline-start"
            }
        },
        "scroll-margin-block-start": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "scroll-margin",
                    "resolver": "block-start"
                },
                "parser-grammar": "<length>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-margin-block-start"
            }
        },
        "scroll-margin-inline-end": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "scroll-margin",
                    "resolver": "inline-end"
                },
                "parser-grammar": "<length>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-margin-inline-end"
            }
        },
        "scroll-margin-block-end": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "scroll-margin",
                    "resolver": "block-end"
                },
                "parser-grammar": "<length>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-margin-block-end"
            }
        },
        "scroll-margin-block": {
            "codegen-properties": {
                "longhands": [
                    "scroll-margin-block-start",
                    "scroll-margin-block-end"
                ]
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-margin-block"
            }
        },
        "scroll-margin-inline": {
            "codegen-properties": {
                "longhands": [
                    "scroll-margin-inline-start",
                    "scroll-margin-inline-end"
                ]
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-margin-inline"
            }
        },
        "scroll-padding": {
            "codegen-properties": {
                "longhands": [
                    "scroll-padding-top",
                    "scroll-padding-right",
                    "scroll-padding-bottom",
                    "scroll-padding-left"
                ]
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-padding"
            }
        },
        "scroll-padding-bottom": {
            "codegen-properties": {
                "initial": "initialScrollPadding",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "scroll-padding",
                    "resolver": "bottom"
                },
                "parser-grammar": "auto | <length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-padding-bottom"
            }
        },
        "scroll-padding-left": {
            "codegen-properties": {
                "initial": "initialScrollPadding",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "scroll-padding",
                    "resolver": "left"
                },
                "parser-grammar": "auto | <length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-padding-left"
            }
        },
        "scroll-padding-right": {
            "codegen-properties": {
                "initial": "initialScrollPadding",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "scroll-padding",
                    "resolver": "right"
                },
                "parser-grammar": "auto | <length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-padding-right"
            }
        },
        "scroll-padding-top": {
            "codegen-properties": {
                "initial": "initialScrollPadding",
                "converter": "LengthOrAuto",
                "logical-property-group": {
                    "name": "scroll-padding",
                    "resolver": "top"
                },
                "parser-grammar": "auto | <length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-padding-top"
            }
        },
        "scroll-padding-inline-start": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "scroll-padding",
                    "resolver": "inline-start"
                },
                "parser-grammar": "auto | <length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-padding-inline-start"
            }
        },
        "scroll-padding-block-start": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "scroll-padding",
                    "resolver": "block-start"
                },
                "parser-grammar": "auto | <length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-padding-block-start"
            }
        },
        "scroll-padding-inline-end": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "scroll-padding",
                    "resolver": "inline-end"
                },
                "parser-grammar": "auto | <length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-padding-inline-end"
            }
        },
        "scroll-padding-block-end": {
            "codegen-properties": {
                "skip-builder": true,
                "logical-property-group": {
                    "name": "scroll-padding",
                    "resolver": "block-end"
                },
                "parser-grammar": "auto | <length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-padding-block-end"
            }
        },
        "scroll-padding-block": {
            "codegen-properties": {
                "longhands": [
                    "scroll-padding-block-start",
                    "scroll-padding-block-end"
                ]
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-padding-block"
            }
        },
        "scroll-padding-inline": {
            "codegen-properties": {
                "longhands": [
                    "scroll-padding-inline-start",
                    "scroll-padding-inline-end"
                ]
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#propdef-scroll-padding-inline"
            }
        },
        "scroll-snap-align": {
            "codegen-properties": {
                "converter": "ScrollSnapAlign",
                "parser-function": "consumeScrollSnapAlign",
                "parser-grammar-unused": "[ none | start | end | center ]{1,2}",
                "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers."
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#scroll-snap-align"
            }
        },
        "scroll-snap-type": {
            "codegen-properties": {
                "converter": "ScrollSnapType",
                "parser-function": "consumeScrollSnapType",
                "parser-grammar-unused": "none | [ [ x | y | block | inline | both ] [ mandatory | proximity ]? ]",
                "parser-grammar-unused-reason": "Needs support for ordered groups and optionals."
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://www.w3.org/TR/css-scroll-snap-1/#scroll-snap-type"
            }
        },
        "scroll-snap-stop": {
            "values": [
                "always",
                "normal"
            ],
            "codegen-properties": {
                "converter": "ScrollSnapStop",
                "parser-grammar": "<<values>>"
            },
            "specification": {
                "category": "css-scroll-snap",
                "url": "https://drafts.csswg.org/css-scroll-snap-1/#propdef-scroll-snap-stop"
            }
        },
        "scrollbar-color": {
            "codegen-properties": {
                "converter": "ScrollbarColor",
                "parser-function": "consumeScrollbarColor",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "auto | <color>{2}",
                "parser-grammar-unused-reason": "Needs support for '{A}' multipliers.",
                "settings-flag": "cssScrollbarColorEnabled"
            },
            "inherited": true,
            "specification": {
                "category": "css-scrollbars",
                "url": "https://drafts.csswg.org/css-scrollbars/#scrollbar-color"
            },
            "status": "in development"
        },
        "scrollbar-gutter": {
            "codegen-properties": {
                "converter": "ScrollbarGutter",
                "parser-function": "consumeScrollbarGutter",
                "parser-grammar-unused": "auto | [ stable && both-edges? ]",
                "parser-grammar-unused-reason": "Needs support for '&&' groups and optionals.",
                "settings-flag": "cssScrollbarGutterEnabled"
            },
            "specification": {
                "category": "css-overflow",
                "url": "https://drafts.csswg.org/css-overflow/#scrollbar-gutter-property"
            },
            "status": {
                "status": "in development"
            }
        },
        "scrollbar-width": {
            "codegen-properties": {
                "parser-grammar": "auto | thin | none",
                "settings-flag": "cssScrollbarWidthEnabled"
            },
            "specification": {
                "category": "css-scrollbars",
                "url": "https://drafts.csswg.org/css-scrollbars/#scrollbar-width"
            },
            "status": {
                "status": "in development"
            }
        },
        "shape-outside": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-shape-outside"
                ],
                "converter": "ShapeValue",
                "parser-function": "consumeShapeOutside",
                "parser-function-requires-context": true,
                "parser-grammar-unused": "none | [ <basic-shape> || <shape-box> ] | <image>",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "category": "css-shapes",
                "url": "https://www.w3.org/TR/css-shapes/#propdef-shape-outside"
            }
        },
        "shape-margin": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-shape-margin"
                ],
                "converter": "Length",
                "parser-grammar": "<length-percentage [0,inf]>"
            },
            "specification": {
                "category": "css-shapes",
                "url": "https://www.w3.org/TR/css-shapes/#propdef-shape-margin"
            }
        },
        "shape-image-threshold": {
            "codegen-properties": {
                "aliases": [
                    "-webkit-shape-image-threshold"
                ],
                "converter": "NumberOrAuto<float>",
                "parser-grammar": "<number>"
            },
            "specification": {
                "category": "css-shapes",
                "url": "https://www.w3.org/TR/css-shapes/#propdef-shape-image-threshold"
            }
        },
        "-webkit-tap-highlight-color": {
            "inherited": true,
            "codegen-properties": {
                "converter": "TapHighlightColor",
                "enable-if": "ENABLE_TOUCH_EVENTS",
                "parser-grammar": "<color>"
            },
            "status": "non-standard"
        },
        "-webkit-overflow-scrolling": {
            "inherited": true,
            "values": [
                "auto",
                "touch"
            ],
            "codegen-properties": {
                "name-for-methods": "UseTouchOverflowScrolling",
                "converter": "OverflowScrolling",
                "enable-if": "ENABLE_OVERFLOW_SCROLLING_TOUCH",
                "settings-flag": "legacyOverflowScrollingTouchEnabled",
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "touch-action": {
            "values": [
                "auto",
                "none",
                "manipulation",
                "pan-x",
                {
                    "value": "pan-left",
                    "status": "unimplemented",
                    "url": "https://w3c.github.io/pointerevents/#the-touch-action-css-property"
                },
                {
                    "value": "pan-right",
                    "status": "unimplemented",
                    "url": "https://w3c.github.io/pointerevents/#the-touch-action-css-property"
                },
                "pan-y",
                {
                    "value": "pan-up",
                    "status": "unimplemented",
                    "url": "https://w3c.github.io/pointerevents/#the-touch-action-css-property"
                },
                {
                    "value": "pan-down",
                    "status": "unimplemented",
                    "url": "https://w3c.github.io/pointerevents/#the-touch-action-css-property"
                },
                "pinch-zoom"
            ],
            "codegen-properties": {
                "name-for-methods": "TouchActions",
                "converter": "TouchAction",
                "parser-function": "consumeTouchAction",
                "parser-grammar-unused": "auto | none | [ pan-x || pan-y || pinch-zoom ] | manipulation",
                "parser-grammar-unused-reason": "Needs support for '||' groups."
            },
            "specification": {
                "url": "https://www.w3.org/TR/pointerevents/#the-touch-action-css-property"
            }
        },
        "-webkit-touch-callout": {
            "inherited": true,
            "values": [
                "default",
                "none"
            ],
            "codegen-properties": {
                "name-for-methods": "TouchCalloutEnabled",
                "converter": "TouchCallout",
                "enable-if": "WTF_PLATFORM_IOS_FAMILY",
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "-apple-pay-button-style": {
            "values": [
                "white",
                "white-outline",
                "black"
            ],
            "codegen-properties": {
                "enable-if": "ENABLE_APPLE_PAY",
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        },
        "-apple-pay-button-type": {
            "values": [
                "plain",
                "buy",
                "set-up",
                "donate",
                "check-out",
                "book",
                "subscribe",
                {
                    "value": "reload",
                    "enable-if": "ENABLE_APPLE_PAY_NEW_BUTTON_TYPES"
                },
                {
                    "value": "add-money",
                    "enable-if": "ENABLE_APPLE_PAY_NEW_BUTTON_TYPES"
                },
                {
                    "value": "top-up",
                    "enable-if": "ENABLE_APPLE_PAY_NEW_BUTTON_TYPES"
                },
                {
                    "value": "order",
                    "enable-if": "ENABLE_APPLE_PAY_NEW_BUTTON_TYPES"
                },
                {
                    "value": "rent",
                    "enable-if": "ENABLE_APPLE_PAY_NEW_BUTTON_TYPES"
                },
                {
                    "value": "support",
                    "enable-if": "ENABLE_APPLE_PAY_NEW_BUTTON_TYPES"
                },
                {
                    "value": "contribute",
                    "enable-if": "ENABLE_APPLE_PAY_NEW_BUTTON_TYPES"
                },
                {
                    "value": "tip",
                    "enable-if": "ENABLE_APPLE_PAY_NEW_BUTTON_TYPES"
                }
            ],
            "codegen-properties": {
                "enable-if": "ENABLE_APPLE_PAY",
                "parser-grammar": "<<values>>"
            },
            "status": "non-standard"
        }
    },
    "descriptors": {
        "@counter-style": {
            "additive-symbols": {
                "codegen-properties": {
                    "settings-flag": "cssCounterStyleAtRulesEnabled",
                    "parser-function": "consumeCounterStyleAdditiveSymbols",
                    "parser-function-requires-context": true,
                    "parser-grammar-unused": "[ <integer [0,inf]> && <symbol> ]#",
                    "parser-grammar-unused-reason": "Needs support for '&&' groups"
                    
                },
                "specification": {
                    "category": "css-counter-styles",
                    "url": "https://www.w3.org/TR/css-counter-styles-3/#counter-style-symbols"
                }
            },
            "fallback": {
                "codegen-properties": {
                    "settings-flag": "cssCounterStyleAtRulesEnabled",
                    "parser-function": "consumeCounterStyleName",
                    "parser-grammar-unused": "<counter-style-name>",
                    "parser-grammar-unused-reason": "Needs support for applying restrictions to <custom-ident>."
                },
                "specification": {
                    "category": "css-counter-styles",
                    "url": "https://www.w3.org/TR/css-counter-styles-3/#counter-style-fallback"
                }
            },
            "negative": {
                "codegen-properties": {
                    "settings-flag": "cssCounterStyleAtRulesEnabled",
                    "parser-function": "consumeCounterStyleNegative",
                    "parser-function-requires-context": true,
                    "parser-grammar-unused": "<symbol> <symbol>?",
                    "parser-grammar-unused-reason": "Needs support for ordered groups, optionals and settings conditional term matching."
                },
                "specification": {
                    "category": "css-counter-styles",
                    "url": "https://www.w3.org/TR/css-counter-styles-3/#counter-style-negative"
                }
            },
            "pad": {
                "codegen-properties": {
                    "settings-flag": "cssCounterStyleAtRulesEnabled",
                    "parser-function": "consumeCounterStylePad",
                    "parser-function-requires-context": true,
                    "parser-grammar-unused": "<integer [0,inf]> && <symbol>",
                    "parser-grammar-unused-reason": "Needs support for '&&' groups and settings conditional term matching."
                },
                "specification": {
                    "category": "css-counter-styles",
                    "url": "https://www.w3.org/TR/css-counter-styles-3/#counter-style-pad"
                }
            },
            "prefix": {
                "codegen-properties": {
                    "settings-flag": "cssCounterStyleAtRulesEnabled",
                    "parser-function": "consumeCounterStyleSymbol",
                    "parser-function-requires-context": true,
                    "parser-grammar-unused": "<symbol>",
                    "parser-grammar-unused-reason": "Needs support for settings conditional term matching."
                },
                "specification": {
                    "category": "css-counter-styles",
                    "url": "https://www.w3.org/TR/css-counter-styles-3/#counter-style-prefix"
                }
            },
            "range": {
                "codegen-properties": {
                    "settings-flag": "cssCounterStyleAtRulesEnabled",
                    "parser-function": "consumeCounterStyleRange",
                    "parser-grammar-unused": "[ [ <integer> | infinite ]{2} ]# | auto",
                    "parser-grammar-unused-reason": "Needs support for '{A}' multipliers."
                },
                "specification": {
                    "category": "css-counter-styles",
                    "url": "https://www.w3.org/TR/css-counter-styles-3/#counter-style-range"
                }
            },
            "suffix": {
                "codegen-properties": {
                    "settings-flag": "cssCounterStyleAtRulesEnabled",
                    "parser-function": "consumeCounterStyleSymbol",
                    "parser-function-requires-context": true,
                    "parser-grammar-unused": "<symbol>",
                    "parser-grammar-unused-reason": "Needs support for settings conditional term matching."
                },
                "specification": {
                    "category": "css-counter-styles",
                    "url": "https://www.w3.org/TR/css-counter-styles-3/#counter-style-suffix"
                }
            },
            "system": {
                "codegen-properties": {
                    "settings-flag": "cssCounterStyleAtRulesEnabled",
                    "parser-function": "consumeCounterStyleSystem",
                    "parser-function-requires-context": true,
                    "parser-grammar-unused": "cyclic | numeric | alphabetic | symbolic | additive | [ fixed <integer>? ] | [ extends <counter-style-name> ]",
                    "parser-grammar-unused-reason": "Needs support for ordered groups, optionals and applying restrictions to <custom-ident>."
                },
                "specification": {
                    "category": "css-counter-styles",
                    "url": "https://www.w3.org/TR/css-counter-styles-3/#counter-style-system"
                }
            },
            "speak-as": {
                "codegen-properties": {
                    "settings-flag": "cssCounterStyleAtRulesEnabled",
                    "parser-function": "consumeCounterStyleSpeakAs",
                    "parser-grammar-unused": "auto | bullets | numbers | words | spell-out | <counter-style-name>",
                    "parser-grammar-unused-reason": "Needs support for applying restrictions to <custom-ident>."
                },
                "specification": {
                    "category": "css-counter-styles",
                    "url": "https://www.w3.org/TR/css-counter-styles-3/#counter-style-speak-as"
                }
            },
            "symbols": {
                "codegen-properties": {
                    "settings-flag": "cssCounterStyleAtRulesEnabled",
                    "parser-function": "consumeCounterStyleSymbols",
                    "parser-function-requires-context": true,
                    "parser-grammar-unused": "<symbol>",
                    "parser-grammar-unused-reason": "Needs support for settings conditional term matching."
                },
                "specification": {
                    "category": "css-counter-styles",
                    "url": "https://www.w3.org/TR/css-counter-styles-3/#counter-style-symbols"
                }
            }
        },
        "@font-face": {
            "font-family": {
                "codegen-properties": {
                    "parser-function": "consumeFontFaceFontFamily",
                    "parser-grammar-unused": "<family-name>",
                    "parser-grammar-unused-reason": "Needs support for special 'family-name' processing."
                },
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://www.w3.org/TR/css-fonts-4/#font-family-desc"
                }
            },
            "font-display": {
                "values": [
                    "auto",
                    "block",
                    "swap",
                    "fallback",
                    "optional"
                ],
                "codegen-properties": {
                    "parser-grammar": "<<values>>",
                    "parser-exported": true
                },
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://drafts.csswg.org/css-fonts-4/#font-display-desc"
                }
            },
            "font-feature-settings": {
                "values": [
                    "normal"
                ],
                "codegen-properties": {
                    "parser-grammar": "normal | <feature-tag-value>#@(no-single-item-opt)"
                },
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://www.w3.org/TR/css-fonts-4/#descdef-font-face-font-feature-settings"
                }
            },
            "font-stretch": {
                "values": [
                    {
                        "value": "auto",
                        "status": "unimplemented",
                        "enable-if": "ENABLE_VARIATION_FONTS"
                    },
                    "normal",
                    "ultra-condensed",
                    "extra-condensed",
                    "condensed",
                    "semi-condensed",
                    "semi-expanded",
                    "expanded",
                    "extra-expanded",
                    "ultra-expanded"
                ],
                "codegen-properties": [
                    {
                        "enable-if": "ENABLE_VARIATION_FONTS",
                        "parser-function": "consumeFontStretchRange",
                        "parser-grammar-unused": "auto | [ <font-stretch-absolute> | <percentage [0,inf]> ]{1,2}",
                        "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers and referencing style properties grammars (actual grammar uses <'font-stretch'>{1,2})."
                    },
                    {
                        "enable-if": "!ENABLE_VARIATION_FONTS",
                        "parser-grammar": "<font-stretch-absolute>"
                    }
                ],
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://www.w3.org/TR/css-fonts-4/#descdef-font-face-font-stretch"
                }
            },
            "font-style": {
                "values": [
                    {
                        "value": "auto",
                        "status": "unimplemented",
                        "enable-if": "ENABLE_VARIATION_FONTS"
                    },
                    "normal",
                    "italic",
                    "oblique"
                ],
                "codegen-properties": [
                    {
                        "enable-if": "ENABLE_VARIATION_FONTS",
                        "parser-function": "consumeFontStyleRange",
                        "parser-function-requires-context-mode": true,
                        "parser-grammar-unused": "auto | normal | italic | [ oblique [ <angle>{1,2} ]? ]",
                        "parser-grammar-unused-reason": "Needs support for ordered groups, optionals and '{A,B}' multipliers."
                    },
                    {
                        "enable-if": "!ENABLE_VARIATION_FONTS",
                        "parser-grammar": "normal | italic | oblique"
                    }
                ],
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://www.w3.org/TR/css-fonts-4/#descdef-font-face-font-style"
                }
            },
            "font-variant": {
                "codegen-properties": {
                    "longhands": [
                        "font-variant-ligatures",
                        "font-variant-caps",
                        "font-variant-alternates",
                        "font-variant-numeric",
                        "font-variant-east-asian",
                        "font-variant-position"
                    ]
                },
                "specification": {
                    "category": "css-fonts",
                    "url": "https://www.w3.org/TR/css-fonts-3/#propdef-font-variant"
                }
            },
            "font-variant-alternates": {
                "codegen-properties": {
                    "parser-function": "consumeFontVariantAlternates",
                    "parser-grammar-unused": "normal | [ stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) ]",
                    "parser-grammar-unused-reason": "Needs support for '||' groups and function notation."
                },
                "specification": {
                    "category": "css-fonts",
                    "url": "https://drafts.csswg.org/css-fonts-3/#font-variant-alternates-prop"
                }
            },
            "font-variant-caps": {
                "values": [
                    "normal",
                    "small-caps",
                    "all-small-caps",
                    "petite-caps",
                    "all-petite-caps",
                    "unicase",
                    "titling-caps"
                ],
                "codegen-properties": {
                    "parser-grammar": "<<values>>"
                },
                "specification": {
                    "category": "css-fonts",
                    "url": "https://drafts.csswg.org/css-fonts-3/#font-variant-caps-prop"
                }
            },
            "font-variant-east-asian": {
                "values": [
                    "normal",
                    "jis78",
                    "jis83",
                    "jis90",
                    "jis04",
                    "simplified",
                    "traditional",
                    "diagonal-fractions",
                    "stacked-fractions",
                    "ruby"
                ],
                "codegen-properties": {
                    "parser-function": "consumeFontVariantEastAsian",
                    "parser-grammar-unused": "normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
                    "parser-grammar-unused-reason": "Needs support for '||' groups."
                },
                "specification": {
                    "category": "css-fonts",
                    "url": "https://drafts.csswg.org/css-fonts-3/#font-variant-east-asian-prop"
                }
            },
            "font-variant-ligatures": {
                "values": [
                    "normal",
                    "none",
                    "common-ligatures",
                    "no-common-ligatures",
                    "discretionary-ligatures",
                    "no-discretionary-ligatures",
                    "historical-ligatures",
                    "no-historical-ligatures",
                    "contextual",
                    "no-contextual"
                ],
                "codegen-properties": {
                    "parser-function": "consumeFontVariantLigatures",
                    "parser-grammar-unused": "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]",
                    "parser-grammar-unused-reason": "Needs support for '||' groups."
                },
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://drafts.csswg.org/css-fonts-4/#font-variant-ligatures-prop"
                }
            },
            "font-variant-numeric": {
                "values": [
                    "normal",
                    "lining-nums",
                    "oldstyle-nums",
                    "proportional-nums",
                    "tabular-nums",
                    "diagonal-fractions",
                    "stacked-fractions",
                    "ordinal",
                    "slashed-zero"
                ],
                "codegen-properties": {
                    "parser-function": "consumeFontVariantNumeric",
                    "parser-grammar-unused": "normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]",
                    "parser-grammar-unused-reason": "Needs support for '||' groups."
                },
                "specification": {
                    "category": "css-fonts",
                    "url": "https://drafts.csswg.org/css-fonts-3/#font-variant-numeric-prop"
                }
            },
            "font-variant-position": {
                "values": [
                    "normal",
                    "sub",
                    "super"
                ],
                "codegen-properties": {
                    "parser-grammar": "<<values>>"
                },
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://drafts.csswg.org/css-fonts-4/#propdef-font-variant-position"
                }
            },
            "font-weight": {
                "values": [
                    {
                        "value": "auto",
                        "status": "unimplemented",
                        "enable-if": "ENABLE_VARIATION_FONTS"
                    },
                    "normal",
                    "bold"
                ],
                "codegen-properties": [
                    {
                        "enable-if": "ENABLE_VARIATION_FONTS",
                        "parser-function": "consumeFontWeightAbsoluteRange",
                        "parser-grammar-unused": "auto | <font-weight-absolute>{1,2}",
                        "parser-grammar-unused-reason": "Needs support for '{A,B}' multipliers and arbitrary ranges on <number>."
                    },
                    {
                        "enable-if": "!ENABLE_VARIATION_FONTS",
                        "parser-function": "consumeFontWeightAbsolute",
                        "parser-grammar-unused": "<font-weight-absolute>",
                        "parser-grammar-unused-reason": "Needs support for arbitrary ranges on <number>."
                    }
                ],
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://www.w3.org/TR/css-fonts-4/#descdef-font-face-font-weight"
                }
            },
            "src": {
                "codegen-properties": {
                    "parser-function": "consumeFontFaceSrc",
                    "parser-function-requires-context": true,
                    "parser-grammar-unused": "<font-face-src>",
                    "parser-grammar-unused-reason": "Needs support for functional notation."
                },
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://www.w3.org/TR/css-fonts-4/#src-desc"
                }
            },
            "size-adjust": {
                "codegen-properties": {
                    "settings-flag": "cssFontFaceSizeAdjustEnabled",
                    "parser-grammar": "<percentage [0,inf]>"
                },
                "specification": {
                    "category": "css-fonts-5",
                    "url": "https://www.w3.org/TR/css-fonts-5/#size-adjust-desc"
                }
            },
            "unicode-range": {
                "codegen-properties": {
                    "parser-function": "consumeFontFaceUnicodeRange",
                    "parser-grammar-unused": "<urange>#",
                    "parser-grammar-unused-reason": "Needs support for special <urange> term."
                },
                "specification": {
                    "category": "css-fonts",
                    "url": "https://www.w3.org/TR/css-fonts-3/#descdef-unicode-range"
                }
            }
        },
        "@font-palette-values": {
            "font-family": {
                "codegen-properties": {
                    "parser-function": "consumeFamilyName",
                    "parser-grammar-unused": "<family-name>",
                    "parser-grammar-unused-reason": "Needs support for special 'family-name' processing."
                },
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://www.w3.org/TR/css-fonts-4/#font-family-2-desc"
                }
            },
            "base-palette": {
                "codegen-properties": {
                    "parser-grammar": "light | dark | <integer [0,inf]>"
                },
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://www.w3.org/TR/css-fonts-4/#font-family-2-desc"
                }
            },
            "override-colors": {
                "codegen-properties": {
                    "parser-function": "consumeFontPaletteValuesOverrideColors",
                    "parser-function-requires-context": true,
                    "parser-grammar-unused": "[ <integer [0,inf]> <absolute-color> ]#",
                    "parser-grammar-unused-reason": "Needs support for ordered groups."
                },
                "specification": {
                    "category": "css-fonts-4",
                    "url": "https://www.w3.org/TR/css-fonts-4/#override-color"
                }
            }
        },
        "@property": {
            "syntax": {
                "codegen-properties": {
                    "settings-flag": "cssCustomPropertiesAndValuesEnabled",
                    "parser-grammar": "<string>"
                },
                "specification": {
                    "category": "css-properties-and-values",
                    "url": "https://drafts.css-houdini.org/css-properties-values-api/#the-syntax-descriptor"
                }
            },
            "inherits": {
                "codegen-properties": {
                    "settings-flag": "cssCustomPropertiesAndValuesEnabled",
                    "parser-grammar": "true | false"
                },
                "specification": {
                    "category": "css-properties-and-values",
                    "url": "https://drafts.css-houdini.org/css-properties-values-api/#inherits-descriptor"
                }
            },
            "initial-value": {
                "codegen-properties": {
                    "settings-flag": "cssCustomPropertiesAndValuesEnabled",
                    "parser-grammar": "<declaration-value>"
                },
                "specification": {
                    "category": "css-properties-and-values",
                    "url": "https://drafts.css-houdini.org/css-properties-values-api/#initial-value-descriptor"
                }
            }
        }
    },
    "categories": {
        "css-22": {
            "shortname": "CSS 2.2",
            "longname": "CSS 2.2",
            "url": "https://www.w3.org/TR/CSS22/"
        },
        "css-align": {
            "shortname": "CSS Box Alignment",
            "longname": "CSS Box Alignment Module",
            "url": "https://www.w3.org/TR/css-align-3/"
        },
        "css-animations": {
            "shortname": "CSS Animations",
            "longname": "CSS Animations",
            "url": "https://www.w3.org/TR/css3-animations/"
        },
        "css-backgrounds": {
            "shortname": "CSS Backgrounds and Borders",
            "longname": "CSS Backgrounds and Borders Module",
            "url": "https://www.w3.org/TR/css3-background/"
        },
        "css-box-4": {
            "shortname": "CSS Box 4",
            "longname": "CSS Box Model Module Level 4",
            "url": "https://www.w3.org/TR/css-box-4/"
        },
        "css-break": {
            "shortname": "CSS Fragmentation",
            "longname": "CSS Fragmentation Module",
            "url": "https://www.w3.org/TR/css-break-3/"
        },
        "css-cascade": {
            "shortname": "CSS Cascade",
            "longname": "CSS Cascading and Inheritance",
            "url": "https://www.w3.org/TR/css-cascade-3/"
        },
        "css-color": {
            "shortname": "CSS Color",
            "longname": "CSS Color Module",
            "url": "https://www.w3.org/TR/css-color/"
        },
        "css-color-adjust": {
            "shortname": "CSS Color Adjustment",
            "longname": "CSS Color Adjustment Module",
            "url": "https://www.w3.org/TR/css-color-adjust/"
        },
        "css-compositing": {
            "shortname": "CSS Compositing and Blending",
            "longname": "CSS Compositing and Blending",
            "url": "https://www.w3.org/TR/compositing-1/"
        },
        "css-contain": {
            "shortname": "CSS Containment",
            "longname": "CSS Containment Module",
            "url": "https://drafts.csswg.org/css-contain-2/"
        },
        "css-content": {
            "shortname": "CSS Generated Content",
            "longname": "CSS Generated Content Module",
            "url": "https://www.w3.org/TR/css-content-3/"
        },
        "css-content-visibility": {
            "shortname": "CSS Content Visibility",
            "longname": "CSS Content Visibility Module",
            "url": "https://www.w3.org/TR/css-contain-2/#content-visibility"
        },
        "css-counter-styles": {
            "shortname": "CSS Counter Styles",
            "longname": "CSS Counter Styles Module",
            "url": "https://www.w3.org/TR/css-counter-styles-3"
        },
        "css-display": {
            "shortname": "CSS Display",
            "longname": "CSS Display Module",
            "url": "https://www.w3.org/TR/css-display-3/"
        },
        "css-filters": {
            "shortname": "CSS Filter Effects",
            "longname": "CSS Filter Effects Module",
            "url": "https://www.w3.org/TR/filter-effects/"
        },
        "css-flexbox": {
            "shortname": "CSS Flexbox",
            "longname": "CSS Flexible Box Module",
            "url": "https://www.w3.org/TR/css-flexbox-1/"
        },
        "css-fonts": {
            "shortname": "CSS Fonts",
            "longname": "CSS Fonts Module",
            "url": "https://www.w3.org/TR/css-fonts-3/"
        },
        "css-fonts-4": {
            "shortname": "CSS Fonts Level 4",
            "longname": "CSS Fonts Module Level 4",
            "url": "https://drafts.csswg.org/css-fonts-4"
        },
        "css-fonts-5": {
            "shortname": "CSS Fonts Level 5",
            "longname": "CSS Fonts Module Level 5",
            "url": "https://www.w3.org/TR/css-fonts-5"
        },
        "css-grid": {
            "shortname": "CSS Grid Layout",
            "longname": "CSS Grid Layout Module",
            "url": "https://www.w3.org/TR/css-grid-1/"
        },
        "css-images": {
            "shortname": "CSS Images",
            "longname": "CSS Image Values and Replaced Content Module",
            "url": "https://www.w3.org/TR/css3-images/"
        },
        "css-inline": {
            "shortname": "CSS Inline Layout",
            "longname": "CSS Inline Layout Module",
            "url": "https://www.w3.org/TR/css-inline-3/"
        },
        "css-line-grid": {
            "shortname": "CSS Line Grid",
            "longname": "CSS Line Grid Module",
            "url": "https://www.w3.org/TR/css-line-grid-1/"
        },
        "css-lists": {
            "shortname": "CSS Lists and Counters",
            "longname": "CSS Lists and Counters Module",
            "url": "https://www.w3.org/TR/css-lists-3/"
        },
        "css-logical-props": {
            "shortname": "CSS Logical Properties",
            "longname": "CSS Logical Properties Module",
            "url": "https://drafts.csswg.org/css-logical-props/"
        },
        "css-masking": {
            "shortname": "CSS Masking",
            "longname": "CSS Masking Module",
            "url": "https://www.w3.org/TR/css-masking-1/"
        },
        "css-motion-path": {
            "shortname": "CSS Motion Path",
            "longname": "CSS Motion Path Module",
            "url": "https://drafts.fxtf.org/motion-1/"
        },
        "css-multicol": {
            "shortname": "CSS Multi-column Layout",
            "longname": "CSS Multi-column Layout Module",
            "url": "https://www.w3.org/TR/css3-multicol/"
        },
        "css-overflow": {
            "shortname": "CSS Overflow",
            "longname": "CSS Overflow Module",
            "url": "https://www.w3.org/TR/css-overflow-3/"
        },
        "css-page": {
            "shortname": "CSS Paged Media",
            "longname": "CSS Paged Media Module",
            "url": "https://www.w3.org/TR/css3-page/"
        },
        "css-properties-and-values": {
            "shortname": "CSS Properties and Values API",
            "longname": "CSS Properties and Values API",
            "url": "https://drafts.css-houdini.org/css-properties-values-api"
        },
        "css-rhythm": {
            "shortname": "CSS Rhythmic Sizing",
            "longname": "CSS Rhythmic Sizing",
            "url": "https://www.w3.org/TR/css-rhythm-1/"
        },
        "css-ruby": {
            "shortname": "CSS Ruby",
            "longname": "CSS Ruby Layout Module",
            "url": "https://www.w3.org/TR/css-ruby-1/"
        },
        "css-scroll-anchoring": {
            "shortname": "CSS Scroll Anchoring",
            "longname": "CSS Scroll Anchoring Module",
            "url": "https://www.w3.org/TR/css-scroll-anchoring-1/"
        },
        "css-scroll-snap": {
            "shortname": "CSS Scroll Snap",
            "longname": "CSS Scroll Snap Module",
            "url": "https://www.w3.org/TR/css-scroll-snap-1/"
        },
        "css-scrollbars": {
            "shortname": "CSS Scrollbars",
            "longname": "CSS Scrollbars Styling Module",
            "url": "https://www.w3.org/TR/css-scrollbars-1/"
        },
        "css-shapes": {
            "shortname": "CSS Shapes",
            "longname": "CSS Shapes Module",
            "url": "https://www.w3.org/TR/css-shapes/"
        },
        "css-sizing": {
            "shortname": "CSS Box Sizing",
            "longname": "CSS Box Sizing Module Level 4",
            "url": "https://drafts.csswg.org/css-sizing-4/"
        },
        "css-speech": {
            "shortname": "CSS Speech",
            "longname": "CSS Speech Module",
            "url": "https://www.w3.org/TR/css3-speech/"
        },
        "css-text": {
            "shortname": "CSS Text",
            "longname": "CSS Text Module",
            "url": "https://www.w3.org/TR/css-text-3/"
        },
        "css-text-fill-and-stroke": {
            "shortname": "CSS Text Fill and Stroke",
            "longname": "CSS Text Fill and Stroke Module",
            "url": "https://drafts.fxtf.org/paint/"
        },
        "css-text-decor": {
            "shortname": "CSS Text Decoration",
            "longname": "CSS Text Decoration Module",
            "url": "https://www.w3.org/TR/css-text-decor-3/"
        },
        "css-transforms": {
            "shortname": "CSS Transforms",
            "longname": "CSS Transforms Module",
            "url": "https://www.w3.org/TR/css-transforms-1/"
        },
        "css-transitions": {
            "shortname": "CSS Transitions",
            "longname": "CSS Transitions Module",
            "url": "https://www.w3.org/TR/css3-transitions/"
        },
        "css-ui": {
            "shortname": "CSS Basic User Interface",
            "longname": "CSS Basic User Interface Module",
            "url": "https://www.w3.org/TR/css-ui-3/"
        },
        "css-will-change": {
            "shortname": "CSS Will Change",
            "longname": "CSS Will Change Module",
            "url": "https://www.w3.org/TR/css-will-change/"
        },
        "css-writing-modes": {
            "shortname": "CSS Writing Modes",
            "longname": "CSS Writing Modes Module",
            "url": "https://www.w3.org/TR/css-writing-modes-3/"
        },
        "svg": {
            "shortname": "SVG",
            "longname": "SVG",
            "url": "https://www.w3.org/TR/SVG11/"
        }
    },
    "shared-grammar-rules": {
        "<alpha-value>": {
            "grammar": "<number> | <percentage>",
            "specification": {
                "category": "css-color",
                "url": "https://www.w3.org/TR/css-color-4/#typedef-alpha-value"
            }
        },
        "<marker-ref>": {
            "grammar": "<url>",
            "specification": {
                "category": "svg",
                "url": "https://www.w3.org/TR/SVG/painting.html#DataTypeMarkerRef"
            }
        },
        "<absolute-size>": {
            "grammar": "xx-small | x-small | small | medium | large | x-large | xx-large | xxx-large",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#valdef-font-size-absolute-size"
            }
        },
        "<-webkit-absolute-size>": {
            "grammar": "-webkit-xxx-large",
            "aliased-to": "xxx-large",
            "status": "non-standard"
        },
        "<relative-size>": {
            "grammar": "larger | smaller",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#valdef-font-size-relative-size"
            }
        },
        "<-webkit-relative-size>": {
            "grammar": "-webkit-ruby-text",
            "status": "non-standard"
        },
        "<font-weight-absolute>": {
            "grammar": "normal | bold | <number [1,1000]>",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#font-weight-absolute-values"
            }
        },
        "<font-stretch-absolute>": {
            "grammar": "normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#stretchmappings"
            }
        },
        "<common-lig-values>": {
            "grammar": "common-ligatures | no-common-ligatures",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#common-lig-values"
            }
        },
        "<discretionary-lig-values>": {
            "grammar": "discretionary-ligatures | no-discretionary-ligatures",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#discretionary-lig-values"
            }
        },
        "<historical-lig-values>": {
            "grammar": "historical-ligatures | no-historical-ligatures",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#historical-lig-values"
            }
        },
        "<contextual-alt-values>": {
            "grammar": "contextual | no-contextual",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#contextual-alt-values"
            }
        },
        "<numeric-figure-values>": {
            "grammar": "lining-nums | oldstyle-nums",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#numeric-figure-values"
            }
        },
        "<numeric-spacing-values>": {
            "grammar": "proportional-nums | tabular-nums",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#numeric-spacing-values"
            }
        },
        "<numeric-fraction-values>": {
            "grammar": "diagonal-fractions | stacked-fractions",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#numeric-fraction-values"
            }
        },
        "<east-asian-variant-values>": {
            "grammar": "jis78 | jis83 | jis90 | jis04 | simplified | traditional",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#east-asian-variant-values"
            }
        },
        "<east-asian-width-values>": {
            "grammar": "diagonal-fractions | stacked-fractions",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#east-asian-width-values"
            }
        },
        "<generic-family>": {
            "grammar": "serif | sans-serif | cursive | fantasy | monospace | system-ui | emoji | math | fangsong | ui-serif | ui-sans-serif | ui-monospace | ui-rounded",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#generic-font-families"
            }
        },
        "<-webkit-generic-family>": {
            "grammar": "-webkit-body",
            "status": "non-standard"
        },
        "<gap-gutter>": {
            "grammar": "normal | <length-percentage [0,inf]>",
            "specification": {
                "category": "css-align",
                "url": "https://drafts.csswg.org/css-align/#column-row-gap"
            }
        },
        "<width-or-height-keyword>": {
            "grammar":  "intrinsic | min-intrinsic | min-content | -webkit-min-content | max-content | -webkit-max-content | -webkit-fill-available | fit-content | -webkit-fit-content"
        },
        "<width-or-height>": {
            "grammar":  "auto | <width-or-height-keyword> | <length-percentage [0,inf]>",
            "exported": true,
            "comment": "Doesn't match current specification",
            "specification": {
                "category": "css-sizing",
                "url": "https://www.w3.org/TR/css-sizing-3/#preferred-size-properties"
            }
        },
        "<width-or-height-unitless-allowed>": {
            "grammar":  "auto | <width-or-height-keyword> | <length-percentage [0,inf] unitless-allowed>",
            "comment": "Doesn't match current specification",
            "specification": {
                "category": "css-sizing",
                "url": "https://www.w3.org/TR/css-sizing-3/#preferred-size-properties"
            }
        },
        "<max-width-or-height>": {
            "grammar": "none | <width-or-height-keyword> | <length-percentage [0,inf]>",
            "comment": "Doesn't match current specification",
            "specification": {
                "category": "css-sizing",
                "url": "https://www.w3.org/TR/css-sizing-3/#max-size-properties"
            }
        },
        "<max-width-or-height-unitless-allowed>": {
            "grammar":  "none | <width-or-height-keyword> | <length-percentage [0,inf] unitless-allowed>",
            "comment": "Doesn't match current specification",
            "specification": {
                "category": "css-sizing",
                "url": "https://www.w3.org/TR/css-sizing-3/#max-size-properties"
            }
        },
        "<line-style>": {
            "grammar": "none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset",
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css-backgrounds-3/#typedef-line-style"
            }
        },
        "<line-width>": {
            "grammar": "thin | medium | thick | <length [0,inf]>",
            "exported": true,
            "specification": {
                "category": "css-backgrounds",
                "url": "https://drafts.csswg.org/css-backgrounds/#typedef-line-width"
            }
        },
        "<outline-line-style>": {
            "grammar": "none | dotted | dashed | solid | double | groove | ridge | inset | outset",
            "specification": {
                "category": "css-ui",
                "url": "https://drafts.csswg.org/css-ui/#typedef-outline-line-style",
                "comment": "Defined in prose as '<outline-line-style> accepts the same values as <line-style> (CSS Backgrounds 3 § 3.2 Line Patterns: the border-style properties) with the same meaning, except that hidden is not a legal outline style.'"
            
            }
        },
        "<inset-logical-start-end>": {
            "grammar": "auto | <length-percentage>",
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#inset-properties"
            }
        },
        "<margin-logical-start-end>": {
            "grammar": "auto | <length-percentage>",
            "specification": {
                "category": "css-logical-props",
                "url": "https://www.w3.org/TR/css-logical/#margin-properties"
            }
        },
        "<palette-identifier>": {
            "grammar": "<dashed-ident>",
            "specification": {
                "category": "css-fonts-4",
                "url": "https://drafts.csswg.org/css-fonts-4/#typedef-font-palette-palette-identifier"
            }
        },
        "<shape-radius>": {
            "grammar": "<length-percentage [0,inf]> | closest-side | farthest-side",
            "specification": {
                "category": "css-shapes",
                "url": "https://www.w3.org/TR/css-shapes-1/#typedef-shape-radius"
            }
        },
        "<attachment>": {
            "grammar": "scroll | fixed | local",
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css-backgrounds-3/#background-attachment"
            }
        },
        "<blend-mode>": {
            "grammar": "normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity",
            "specification": {
                "category": "css-compositing",
                "url": "https://www.w3.org/TR/compositing-1/#ltblendmodegt"
            }
        },
        "<box>": {
            "grammar": "border-box | padding-box | content-box",
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css-backgrounds-3/#typedef-box"
            }
        },
        "<shape-box>": {
            "grammar": "<box> | margin-box",
            "specification": {
                "category": "css-shapes",
                "url": "https://www.w3.org/TR/css-shapes-1/#typedef-shape-box"
            }
        },
        "<geometry-box>": {
            "grammar": "<shape-box> | fill-box | stroke-box | view-box",
            "exported": true,
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#typedef-geometry-box"
            }
        },
        "<clip-source>": {
            "grammar": "<url>",
            "specification": {
                "category": "css-masking",
                "url": "https://drafts.fxtf.org/css-masking/#typedef-clip-source"
            }
        },
        "<compositing-operator>": {
            "grammar": "add | subtract | intersect | exclude",
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#typedef-compositing-operator"
            }
        },
        "<masking-mode>": {
            "grammar": "alpha | luminance | match-source",
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#typedef-masking-mode"
            }
        },
        "<bg-image>": {
            "grammar": "<image> | none",
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css-backgrounds-3/#typedef-bg-image"
            }
        },
        "<shadow>": {
            "grammar": "<color>? && [<length>{2} <length [0,inf]>? <length>?] && inset?",
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css-backgrounds-3/#typedef-shadow"
            }
        },
        "<mask-reference>": {
            "grammar": "<image> | none",
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#typedef-mask-reference"
            }
        },
        "<rect()>": {
            "grammar": "rect( [ <length> | auto ]#{4} )",
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#funcdef-clip-rect"
            }
        },
        "<-webkit-origin-box>": {
            "grammar": "<box> | border | content | padding | -webkit-text",
            "status": "non-standard"
        },
        "<-webkit-clip-box>": {
            "grammar": "<-webkit-origin-box> | text",
            "status": "non-standard"
        },
        "<-webkit-compositing-operator>": {
            "grammar": "clear | copy | source-over | source-in | source-out | source-atop | destination-over | destination-in | destination-out | destination-atop | xor | plus-darker | plus-lighter",
            "status": "non-standard"
        },
        "<-webkit-masking-source-type>": {
            "grammar": "auto | alpha | luminance",
            "status": "non-standard"
        },
        "<single-background-blend-mode>": {
            "grammar": "<blend-mode>",
            "exported": true,
            "specification": {
                "category": "css-compositing",
                "url": "https://www.w3.org/TR/compositing-1/#propdef-background-blend-mode"
            }
        },
        "<single-background-attachment>": {
            "grammar": "<attachment>",
            "exported": true,
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css-backgrounds-3/#background-attachment"
            }
        },
        "<single-background-clip>": {
            "grammar": "<box> | text | -webkit-text",
            "exported": true,
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css-backgrounds-3/#background-clip"
            },
            "comment": "Out of spec. 'background-clip' is currently defined to '<box>#'."
        },
        "<single-background-origin>": {
            "grammar": "<box>",
            "exported": true,
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css-backgrounds-3/#background-origin"
            }
        },
        "<single-background-image>": {
            "grammar": "<bg-image>",
            "exported": true,
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css-backgrounds-3/#background-image"
            }
        },
        "<single-background-repeat>": {
            "grammar": "<repeat-style>",
            "exported": true,
            "specification": {
                "category": "css-backgrounds",
                "url": "https://www.w3.org/TR/css-backgrounds-3/#background-repeat"
            }
        },
        "<single-background-position-x>": {
            "grammar": "<position-x>",
            "exported": true,
            "status": "non-standard",
            "comment": "Internally used to represent horizontal part of standard <bg-position>"
        },
        "<single-background-position-y>": {
            "grammar": "<position-y>",
            "exported": true,
            "status": "non-standard",
            "comment": "Internally used to represent vertical part of standard <bg-position>"
        },
        "<single-mask-clip>": {
            "grammar": "<box> | no-clip",
            "exported": true,
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#the-mask-clip"
            },
            "comment": "Out of spec. 'mask-clip' is currently defined to '[ <geometry-box> | no-clip ]#'."
        },
        "<single-mask-origin>": {
            "grammar": "<box> | border | content | padding | -webkit-text",
            "exported": true,
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#the-mask-origin"
            },
            "comment": "Out of spec. 'mask-origin' is currently defined to '<geometry-box>#'."
        },
        "<single-mask-repeat>": {
            "grammar": "<repeat-style>",
            "exported": true,
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#the-mask-repeat"
            }
        },
        "<single-mask-image>": {
            "grammar": "<mask-reference>",
            "exported": true,
            "specification": {
                "category": "css-masking",
                "url": "https://www.w3.org/TR/css-masking-1/#the-mask-image"
            }
        },
        "<single-mask-composite>": {
            "grammar": "<compositing-operator>",
            "exported": true,
            "specification": {
                "category": "css-masking",
                "url": "https://drafts.fxtf.org/css-masking-1/#the-mask-composite"
            }
        },
        "<single-mask-mode>": {
            "grammar": "<masking-mode>",
            "exported": true,
            "specification": {
                "category": "css-masking",
                "url": "https://drafts.fxtf.org/css-masking-1/#the-mask-mode"
            }
        },
        "<single-webkit-background-clip>": {
            "grammar": "<-webkit-clip-box>",
            "exported": true,
            "status": "non-standard"
        },
        "<single-webkit-background-origin>": {
            "grammar": "<-webkit-origin-box>",
            "exported": true,
            "status": "non-standard"
        },
        "<single-webkit-mask-composite>": {
            "grammar": "<-webkit-compositing-operator>",
            "exported": true,
            "status": "non-standard"
        },
        "<single-webkit-mask-clip>": {
            "grammar": "<-webkit-clip-box>",
            "exported": true,
            "status": "non-standard"
        },
        "<single-webkit-mask-position-x>": {
            "grammar": "<position-x>",
            "exported": true,
            "status": "non-standard"
        },
        "<single-webkit-mask-position-y>": {
            "grammar": "<position-y>",
            "exported": true,
            "status": "non-standard"
        },
        "<single-webkit-mask-source-type>": {
            "grammar": "<-webkit-masking-source-type>",
            "exported": true,
            "status": "non-standard"
        },
        "<single-animation-composition>": {
            "grammar": "replace | add | accumulate",
            "exported": true,
            "specification": {
                "category": "css-animations",
                "url": "https://drafts.csswg.org/css-animations-2/#animation-composition"
            }
        },
        "<single-animation-direction>": {
            "grammar": "normal | reverse | alternate | alternate-reverse",
            "exported": true,
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css-animations-1/#typedef-single-animation-direction"
            }
        },
        "<single-animation-fill-mode>": {
            "grammar": "none | forwards | backwards | both",
            "exported": true,
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css-animations-1/#typedef-single-animation-fill-mode"
            }
        },
        "<single-animation-iteration-count>": {
            "grammar": "infinite | <number [0,inf]>",
            "exported": true,
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css-animations-1/#typedef-single-animation-iteration-count"
            }
        },
        "<single-animation-name>": {
            "grammar": "none | <keyframes-name>",
            "exported": true,
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css-animations-1/#animation-name"
            }
        },
        "<single-animation-play-state>": {
            "grammar": "running | paused",
            "exported": true,
            "specification": {
                "category": "css-animations",
                "url": "https://www.w3.org/TR/css-animations-1/#typedef-single-animation-play-state"
            }
        },
        "<page-size>": {
            "grammar": "A5 | A4 | A3 | B5 | B4 | letter | legal | ledger",
            "exported": true,
            "comment": "FIXME: missing JIS-B5 and JIS-B4",
            "specification": {
                "category": "css-page",
                "url": "https://www.w3.org/TR/css-page-3/#typedef-page-size-page-size"
            }
        },
        "<filter-value-list>": {
            "grammar": "[ <filter-function> | <url> ]+",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#typedef-filter-value-list"
            }
        },
        "<filter-function>": {
            "grammar": "<blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <sepia()> | <saturate()>",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#typedef-filter-function"
            }
        },
        "<color-filter-value-list>": {
            "grammar": "<color-filter-function>+",
            "status": "non-standard"
        },
        "<color-filter-function>": {
            "grammar": "<brightness()> | <contrast()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <sepia()> | <saturate()> | <-apple-invert-lightness()>",
            "status": "non-standard"
        },
        "<blur()>": {
            "grammar": "blur( <length [0,inf]>? )",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#funcdef-filter-blur"
            }
        },
        "<brightness()>": {
            "grammar": "brightness( [ <number [0,inf]> | <percentage [0,inf]> ]? )",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#funcdef-filter-brightness"
            }
        },
        "<contrast()>": {
            "grammar": "contrast( [ <number [0,inf]> |  <percentage [0,inf]> ]? )",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#funcdef-filter-contrast"
            }
        },
        "<drop-shadow()>": {
            "grammar": "drop-shadow( <color>? && <length>{2,3} )",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#funcdef-filter-drop-shadow"
            }
        },
        "<grayscale()>": {
            "grammar": "grayscale( [ <number [0,inf]> |  <percentage [0,inf]> ]? )",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#funcdef-filter-grayscale"
            }
        },
        "<hue-rotate()>": {
            "grammar": "hue-rotate( <angle unitless-zero-allowed>? )",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#funcdef-filter-hue-rotate"
            }
        },
        "<invert()>": {
            "grammar": "invert( [ <number [0,inf]> |  <percentage [0,inf]> ]? )",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#funcdef-filter-invert"
            }
        },
        "<opacity()>": {
            "grammar": "opacity( [ <number [0,inf]> |  <percentage [0,inf]> ]? )",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#funcdef-filter-opacity"
            }
        },
        "<saturate()>": {
            "grammar": "saturate( [ <number [0,inf]> |  <percentage [0,inf]> ]? )",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#funcdef-filter-saturate"
            }
        },
        "<sepia()>": {
            "grammar": "sepia( [ <number [0,inf]> |  <percentage [0,inf]> ]? )",
            "specification": {
                "category": "css-filters",
                "url": "https://www.w3.org/TR/filter-effects/#funcdef-filter-sepia"
            }
        },
        "<-apple-invert-lightness()>": {
            "grammar": "-apple-invert-lightness()",
            "status": "non-standard"
        },
        "<baseline-position>": {
            "grammar": "[ first | last ]? && baseline",
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#typedef-baseline-position"
            }
        },
        "<overflow-position>": {
            "grammar": "unsafe | safe",
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#typedef-overflow-position"
            }
        },
        "<self-position>": {
            "grammar": "center | start | end | self-start | self-end | flex-start | flex-end",
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#typedef-self-position"
            }
        },
        "<content-position>": {
            "grammar": "center | start | end | flex-start | flex-end",
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#typedef-content-position"
            }
        },
        "<content-distribution>": {
            "grammar": "space-between | space-around | space-evenly | stretch",
            "specification": {
                "category": "css-align",
                "url": "https://www.w3.org/TR/css-align-3/#typedef-content-distribution"
            }
        },
        "<track-list>": {
            "grammar": "[ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?",
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#typedef-track-list"
            }
        },
        "<auto-track-list>": {
            "grammar": "[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat> [ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?",
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#typedef-auto-track-list"
            }
        },
        "<explicit-track-list>": {
            "grammar": "[ <line-names>? <track-size> ]+ <line-names>?",
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#typedef-explicit-track-list"
            }
        },
        "<track-size>": {
            "grammar": "<track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( <length-percentage> )",
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#typedef-track-size"
            }
        },
        "<fixed-size>": {
            "grammar": "<fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )",
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#typedef-fixed-size"
            }
        },
        "<track-breadth>": {
            "grammar": "<length-percentage> | <flex> | min-content | max-content | auto",
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#typedef-track-breadth"
            }
        },
        "<inflexible-breadth>": {
            "grammar": "<length-percentage> | min-content | max-content | auto",
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#typedef-inflexible-breadth"
            }
        },
        "<fixed-breadth>": {
            "grammar": "<length-percentage>",
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#typedef-fixed-breadth"
            }
        },
        "<line-names>": {
            "grammar": "'[' <custom-ident>* ']'",
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#typedef-line-names"
            }
        },
        "<grid-line>": {
            "grammar": "auto | <custom-ident> | [ <integer> && <custom-ident>? ] | [ span && [ <integer> || <custom-ident> ] ]",
            "specification": {
                "category": "css-grid",
                "url": "https://www.w3.org/TR/css-grid-1/#typedef-grid-row-start-grid-line"
            }
        },
        
        "<transform-list>": {
            "grammar": "<transform-function>+",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#typedef-transform-list"
            }
        },
        "<transform-function>": {
            "grammar": "<matrix()> | <translate()> | <translateX()> | <translateY()> | <scale()> | <scaleX()> | <scaleY()> | <rotate()> | <skew()> | <skewX()> | <skewY()> | <matrix3d()> | <translate3d()> | <translateZ()> | <scale3d()> | <scaleZ()> | <rotate3d()> | <rotateX()> | <rotateY()> | <rotateZ()> | <perspective()>",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#typedef-transform-function"
            }
        },

        "<matrix()>": {
            "grammar": "matrix( <number>#{6}  )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#funcdef-transform-matrix"
            }
        },
        "<translate()>": {
            "grammar": "translate( <length-percentage>#{1,2} )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#funcdef-transform-translate"
            }
        },
        "<translateX()>": {
            "grammar": "translateX( <length-percentage> )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#funcdef-transform-translatex"
            }
        },
        "<translateY()>": {
            "grammar": "translateY( <length-percentage> )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#funcdef-transform-translatey"
            }
        },
        "<scale()>": {
            "grammar": "scaleX( [ <number> | <percentage> ]#{1,2} )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-scale"
            }
        },
        "<scaleX()>": {
            "grammar": "scaleX( [ <number> | <percentage> ] )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-scalex"
            }
        },
        "<scaleY()>": {
            "grammar": "scaleY( [ <number> | <percentage> ] )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-scaley"
            }
        },
        "<rotate()>": {
            "grammar": "rotate( [ <angle> | <zero> ] )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#funcdef-transform-rotate"
            }
        },
        "<skew()>": {
            "grammar": "skew( [ <angle> | <zero> ]#{1,2} )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#funcdef-transform-skew"
            }
        },
        "<skewX()>": {
            "grammar": "skewX( [ <angle> | <zero> ] )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#funcdef-transform-skewx"
            }
        },
        "<skewY()>": {
            "grammar": "skewY( [ <angle> | <zero> ] )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-1/#funcdef-transform-skewy"
            }
        },
        "<matrix3d()>": {
            "grammar": "matrix3d( <number>#{16} )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-matrix3d"
            }
        },
        "<translate3d()>": {
            "grammar": "translate3d( <length-percentage> , <length-percentage> , <length> )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-translate3d"
            }
        },
        "<translateZ()>": {
            "grammar": "translateZ( <length> )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-translatez"
            }
        },
        "<scale3d()>": {
            "grammar": "scale3d( [ <number> | <percentage> ]#{3} )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-scale3d"
            }
        },
        "<scaleZ()>": {
            "grammar": "scaleZ( [ <number> | <percentage> ] )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-scalez"
            }
        },
        "<rotate3d()>": {
            "grammar": "rotate3d( <number> , <number> , <number> , [ <angle> | <zero> ] )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-rotate3d"
            }
        },
        "<rotateX()>": {
            "grammar": "rotateX( [ <angle> | <zero> ] )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-rotatex"
            }
        },
        "<rotateY()>": {
            "grammar": "rotateY( [ <angle> | <zero> ] )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-rotatey"
            }
        },
        "<rotateZ()>": {
            "grammar": "rotateZ( [ <angle> | <zero> ] )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-rotatez"
            }
        },
        "<perspective()>": {
            "grammar": "perspective( <length [0,inf]> | none )",
            "specification": {
                "category": "css-transforms",
                "url": "https://www.w3.org/TR/css-transforms-2/#funcdef-perspective"
            }
        },
        "<symbol>": {
            "grammar": "<string> | <image> | <custom-ident>",
            "specification": {
                "category": "css-counter-styles",
                "url": "https://www.w3.org/TR/css-counter-styles-3/#counter-style-symbols"
            }
        },
        "<display-outside>": {
            "grammar": "block | inline | run-in",
            "specification": {
                "category": "css-display",
                "url": "https://www.w3.org/TR/css-display-3/#typedef-display-outside"
            }
        },
        "<display-inside>": {
            "grammar": "flow | flow-root | table | flex | grid | ruby",
            "specification": {
                "category": "css-display",
                "url": "https://www.w3.org/TR/css-display-3/#typedef-display-inside"
            }
        },
        "<display-listitem>": {
            "grammar": "<display-outside>? && [ flow | flow-root ]? && list-item",
            "specification": {
                "category": "css-display",
                "url": "https://www.w3.org/TR/css-display-3/#typedef-display-listitem"
            }
        },
        "<display-internal>": {
            "grammar": "table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container",
            "specification": {
                "category": "css-display",
                "url": "https://www.w3.org/TR/css-display-3/#typedef-display-internal"
            }
        },
        "<display-box>": {
            "grammar": "contents | none",
            "specification": {
                "category": "css-display",
                "url": "https://www.w3.org/TR/css-display-3/#typedef-display-box"
            }
        },
        "<display-legacy>": {
            "grammar": "inline-block | inline-table | inline-flex | inline-grid",
            "specification": {
                "category": "css-display",
                "url": "https://www.w3.org/TR/css-display-3/#typedef-display-legacy"
            }
        },
        "<-webkit-display>": {
            "grammar": "-webkit-inline-flex | -webkit-box | -webkit-inline-box | -webkit-flex",
            "status": "non-standard"
        }
    }
}
