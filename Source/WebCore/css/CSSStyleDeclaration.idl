/*
 * Copyright (C) 2006-2021 Apple Inc. All rights reserved.
 * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

[
    ExportMacro=WEBCORE_EXPORT,
    GenerateIsReachable,
    JSCustomHeader,
    JSCustomMarkFunction,
    SkipVTableValidation,
    Exposed=Window,
] interface CSSStyleDeclaration {
    // FIXME: These attributes and functions should use CSSOMString not DOMString.

    [CEReactions] attribute DOMString cssText;
    readonly attribute unsigned long length;
    getter DOMString item(unsigned long index);
    DOMString getPropertyValue(DOMString property);
    // FIXME: The return value of 'getPropertyPriority' should not be nullable.
    DOMString? getPropertyPriority(DOMString property);
    [CEReactions] undefined setProperty(DOMString property, [LegacyNullToEmptyString] DOMString value, optional [LegacyNullToEmptyString] DOMString priority = "");
    [CEReactions] DOMString removeProperty(DOMString property);
    readonly attribute CSSRule? parentRule;
    [CEReactions] attribute [LegacyNullToEmptyString] DOMString cssFloat;

    // Non-standard.
    DOMString? getPropertyShorthand(optional DOMString propertyName);
    boolean isPropertyImplicit(optional DOMString propertyName);
    DeprecatedCSSOMValue? getPropertyCSSValue(DOMString propertyName);
};
