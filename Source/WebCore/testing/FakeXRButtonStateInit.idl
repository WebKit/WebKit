/*
 * Copyright (C) 2020 Igalia S.L. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

// Because the primary button is always guaranteed to be present, and other buttons
// should fulfill the role of validating any state from FakeXRButtonStateInit
// the primary button is not present in this enum.
[
    EnabledBySetting=WebXR,
    Conditional=WEBXR,
] enum FakeXRButtonType {
    "grip",
    "touchpad",
    "thumbstick",
    // Represents a button whose position is not specified by the xr-standard mapping.
    // Should appear at one past the last reserved button index.
    "optional-button",
    // Represents a thumbstick whose position is not specified by the xr-standard mapping.
    // Should appear at two past the last reserved button index.
    "optional-thumbstick"
};

// Used to update the state of optionally supported buttons.
[
    EnabledBySetting=WebXR,
    Conditional=WEBXR,
] dictionary FakeXRButtonStateInit {
    required FakeXRButtonType buttonType;
    required boolean pressed;
    required boolean touched;
    required float pressedValue;
    // x and y value are ignored if the FakeXRButtonType is not touchpad, thumbstick, or optional-thumbstick
    float xValue = 0.0;
    float yValue = 0.0;
};
