/*
 * Copyright (C) 2017-2019 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

[
    Conditional=APPLE_PAY,
    LegacyNoInterfaceObject,
] interface MockPaymentCoordinator {
    undefined setCanMakePayments(boolean canMakePayments);
    undefined setCanMakePaymentsWithActiveCard(boolean canMakePaymentsWithActiveCard);
    undefined setShippingAddress(MockPaymentAddress shippingAddress);
    undefined changeShippingOption(DOMString shippingOption);
    undefined changePaymentMethod(ApplePayPaymentMethod paymentMethod);
    [Conditional=APPLE_PAY_COUPON_CODE] undefined changeCouponCode(DOMString couponCode);
    undefined acceptPayment();
    undefined cancelPayment();

    undefined addSetupFeature(ApplePaySetupFeatureState state, ApplePaySetupFeatureType type, boolean supportsInstallments);

    readonly attribute ApplePayLineItem total;
    readonly attribute sequence<ApplePayLineItem> lineItems;
    readonly attribute sequence<MockPaymentError> errors;
    readonly attribute sequence<ApplePayShippingMethod> shippingMethods;
    readonly attribute MockPaymentContactFields requiredBillingContactFields;
    readonly attribute MockPaymentContactFields requiredShippingContactFields;

    readonly attribute ApplePaySetupConfiguration setupConfiguration;

    attribute boolean supportsUnrestrictedApplePay;

    [Conditional=APPLE_PAY_INSTALLMENTS] readonly attribute ApplePayInstallmentConfiguration installmentConfiguration;

    [Conditional=APPLE_PAY_COUPON_CODE] readonly attribute boolean? supportsCouponCode;
    [Conditional=APPLE_PAY_COUPON_CODE] readonly attribute DOMString? couponCode;

    [Conditional=APPLE_PAY_SHIPPING_CONTACT_EDITING_MODE] readonly attribute ApplePayShippingContactEditingMode? shippingContactEditingMode;
};
