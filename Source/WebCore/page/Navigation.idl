/*
 * Copyright (C) 2024 Apple Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1.  Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 * 2.  Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 * 3.  Neither the name of Apple Inc. ("Apple") nor the names of
 *     its contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// https://html.spec.whatwg.org/multipage/nav-history-apis.html#navigation
[
    EnabledBySetting=NavigationAPIEnabled,
    GenerateIsReachable=ReachableFromDOMWindow,
    Exposed=Window
] interface Navigation : EventTarget {
    sequence<NavigationHistoryEntry> entries();
    readonly attribute NavigationHistoryEntry? currentEntry;
    undefined updateCurrentEntry(NavigationUpdateCurrentEntryOptions options);
    readonly attribute NavigationTransition? transition;

    readonly attribute boolean canGoBack;
    readonly attribute boolean canGoForward;

    [ReturnsPromisePair] NavigationResult navigate(USVString url, optional NavigationNavigateOptions options = {});
    [ReturnsPromisePair] NavigationResult reload(optional NavigationReloadOptions options = {});

    [ReturnsPromisePair] NavigationResult traverseTo(DOMString key, optional NavigationOptions options = {});
    [ReturnsPromisePair] NavigationResult back(optional NavigationOptions options = {});
    [ReturnsPromisePair] NavigationResult forward(optional NavigationOptions options = {});

    attribute EventHandler onnavigate;
    attribute EventHandler onnavigatesuccess;
    attribute EventHandler onnavigateerror;
    attribute EventHandler oncurrententrychange;
};

// https://html.spec.whatwg.org/multipage/nav-history-apis.html#navigationupdatecurrententryoptions
dictionary NavigationUpdateCurrentEntryOptions {
    required any state;
};

// https://html.spec.whatwg.org/multipage/nav-history-apis.html#navigationoptions
dictionary NavigationOptions {
    any info;
};

// https://html.spec.whatwg.org/multipage/nav-history-apis.html#navigationnavigateoptions
dictionary NavigationNavigateOptions : NavigationOptions {
    any state;
    NavigationHistoryBehavior history = "auto";
};

// https://html.spec.whatwg.org/multipage/nav-history-apis.html#navigationreloadoptions
dictionary NavigationReloadOptions : NavigationOptions {
    any state;
};

// https://html.spec.whatwg.org/multipage/nav-history-apis.html#navigationresult
[
    JSGenerateToJSObject,
    SuppressToNative,
]  dictionary NavigationResult {
    [BypassDocumentFullyActiveCheck] Promise<NavigationHistoryEntry> committed;
    [BypassDocumentFullyActiveCheck] Promise<NavigationHistoryEntry> finished;
};

// https://html.spec.whatwg.org/multipage/nav-history-apis.html#navigationhistorybehavior
enum NavigationHistoryBehavior {
    "auto",
    "push",
    "replace"
};
