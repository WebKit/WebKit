import importlib
import json
import os
import socket
import sys

from buildbot.plugins import reporters, util

sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

loadConfig = importlib.import_module("ews-build.loadConfig")
events = importlib.import_module("ews-build.events")
utils = importlib.import_module("ews-build.utils")


# This is work-around for Twisted having a small size limit for patches. See https://bugs.webkit.org/show_bug.cgi?id=198851#c5
from twisted.spread import banana
banana.SIZE_LIMIT = 100 * 1024 * 1024

# This is work-around for https://bugs.webkit.org/show_bug.cgi?id=222361
from buildbot.process.buildstep import BuildStep
BuildStep.warn_deprecated_if_oldstyle_subclass = lambda self, name: None

is_test_mode_enabled = utils.load_password('BUILDBOT_PRODUCTION') is None
custom_suffix = utils.get_custom_suffix()

# We are using multi-master setup with 2 masters.
# One master handles UI (web-server), and the other handles the back-end.
# If test mode is enabled, we use single master setup.
use_multi_master = not is_test_mode_enabled

c = BuildmasterConfig = {}

if use_multi_master:
    c['multiMaster'] = True
    c['mq'] = {
        'type': 'wamp',
        'router_url': 'ws://localhost:8080/ws',
        'realm': 'realm1',
        'wamp_debug_level': 'info'
    }

c['www'] = dict(port='tcp:8010:interface=127.0.0.1', allowed_origins=["*"])
c['www']['custom_templates_dir'] = 'templates'
c['www']['ui_default_config'] = {
    'Builders.show_workers_name': True,
    'Builders.buildFetchLimit': 1000,
    'Workers.showWorkerBuilders': True,
}

if not is_test_mode_enabled:
    c['www']['change_hook_dialects'] = dict(
        github={
            'class': events.GitHubEventHandlerNoEdits,
            'secret': utils.load_password('GITHUB_HOOK_SECRET'),
            'github_property_whitelist': [
                'github.number',
                'github.title',
                'github.head.ref',
                'github.head.sha',
                'github.base.ref',
                'github.head.repo.full_name',
                'github.head.user.login',
            ], 'token': utils.load_password('GITHUB_COM_ACCESS_TOKEN'),
        },
    )

    GITHUB_CLIENT_ID = utils.load_password('GITHUB_CLIENT_ID')
    GITHUB_CLIENT_SECRET = utils.load_password('GITHUB_CLIENT_SECRET')
    if (not GITHUB_CLIENT_ID) or (not GITHUB_CLIENT_SECRET):
        print('EWS credentials not found. Please ensure GITHUB_CLIENT_ID and GITHUB_CLIENT_SECRET are configured either in env variables or in passwords.json')
        sys.exit(1)

    # See https://docs.buildbot.net/current/manual/configuration/www.html#example-configs
    authz = util.Authz(
        allowRules=[util.AnyEndpointMatcher(role='Buildbot-Administrators', defaultDeny=False),
                    util.RebuildBuildEndpointMatcher(role='Contributors'),
                    util.StopBuildEndpointMatcher(role='Committers'),
                    util.AnyControlEndpointMatcher(role='Buildbot-Administrators')],
        roleMatchers=[util.RolesFromGroups(groupPrefix='WebKit/')]
    )
    auth = util.GitHubAuth(GITHUB_CLIENT_ID, GITHUB_CLIENT_SECRET, apiVersion=4, getTeamsMembership=True, debug=True)
    c['www']['auth'] = auth
    c['www']['authz'] = authz

c['projectName'] = 'WebKit EWS{}'.format(custom_suffix.upper())
c['projectURL'] = 'https://ews-build.webkit{}.org/'.format(custom_suffix)

if is_test_mode_enabled:
    c['buildbotURL'] = 'http://localhost:8010/'
    c['db_url'] = 'sqlite:///state.sqlite?serialize_access=1'
else:
    c['buildbotURL'] = 'https://ews-build.webkit{}.org/'.format(custom_suffix)
    db_url = utils.load_password('DB_URL', None)
    db_name = utils.load_password('DB_NAME', None)
    db_username = utils.load_password('DB_USERNAME', None)
    db_password = utils.load_password('DB_PASSWORD', None)
    if None in [db_url, db_name, db_username, db_password]:
        print('Environment variables for DB not found. Please ensure these variables are set.')
        sys.exit(1)
    # See https://docs.buildbot.net/1.7.0/manual/configuration/global.html#database-specification
    c['db_url'] = 'postgresql://{}:{}@{}/{}'.format(db_username, db_password, db_url, db_name)

c['logCompressionMethod'] = 'lz4'
c['buildbotNetUsageData'] = None

loadConfig.loadBuilderConfig(
    c, is_test_mode_enabled=is_test_mode_enabled,
    setup_main_schedulers=True,
    setup_force_schedulers=True,
)

c['workers'] = c['builders'] = []

mail_notifier = reporters.MailNotifier(
    fromaddr='ews-build@webkit{}.org'.format(custom_suffix),
    sendToInterestedUsers=False,
    extraRecipients=['webkit-ews-bot-watchers@group.apple.com'],
    mode=('exception'),
    addPatch=False)

if not is_test_mode_enabled:
    hostname =  socket.gethostname().strip()
    event_reporter = events.Events(master_hostname=hostname, type_prefix='ews')
    c['services'] = [event_reporter, mail_notifier]
