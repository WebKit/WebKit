import importlib
import json
import os
import socket
import sys

from buildbot.changes.pb import PBChangeSource
from buildbot.plugins import util
from buildbot.www.hooks.github import GitHubEventHandler
from datetime import timedelta

sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

loadConfig = importlib.import_module("build-webkit-org.loadConfig")


def load_password(name, default=None, master_prefix_path=os.path.dirname(os.path.abspath(__file__))):
    if os.getenv(name):
        return os.getenv(name)
    try:
        passwords = json.load(open(os.path.join(master_prefix_path, 'passwords.json')))
        return passwords.get(name, default)
    except FileNotFoundError as e:
        print(f'ERROR: passwords.json missing: {e}, using default value for {name}\n')
    except Exception as e:
        print(f'Error in finding {name} in passwords.json\n')
    return default


# This is work-around for https://bugs.webkit.org/show_bug.cgi?id=222361
from buildbot.process.buildstep import BuildStep
BuildStep.warn_deprecated_if_oldstyle_subclass = lambda self, name: None


is_test_mode_enabled = load_password('BUILDBOT_PRODUCTION') is None
custom_suffix = ''
hostname = socket.gethostname().strip()
if 'dev' in hostname:
    custom_suffix = '-dev'
if 'uat' in hostname:
    custom_suffix = '-uat'

# We are using multi-master setup with 2 masters.
# One master handles UI (web-server), and the other handles the back-end.
# If test mode is enabled, we use single master setup.
use_multi_master = not is_test_mode_enabled

c = BuildmasterConfig = {}

c['change_source'] = PBChangeSource(port=16000)

# permissions for WebStatus

if use_multi_master:
    c['multiMaster'] = True
    c['mq'] = {
        'type': 'wamp',
        'router_url': 'ws://localhost:8080/ws',
        'realm': 'realm1',
        'wamp_debug_level': 'info'
    }

if is_test_mode_enabled:
    c['www'] = dict(port='tcp:8010:interface=127.0.0.1', allowed_origins=["*"])
    c['www']['ui_default_config'] = {
        'Builders.show_workers_name': True,
        'Builders.buildFetchLimit': 1000,
        'Workers.showWorkerBuilders': True,
    }


c['protocols'] = {'pb': {'port': 17000}}
c['projectName'] = f'WebKit CI{custom_suffix}'
c['projectURL'] = 'https://webkit.org'

if is_test_mode_enabled:
    c['buildbotURL'] = 'http://localhost:8710/'
else:
    c['buildbotURL'] = f'https://build.webkit{custom_suffix}.org/'
    db_url = load_password('DB_URL')
    db_name = load_password('DB_NAME')
    db_username = load_password('DB_USERNAME')
    db_password = load_password('DB_PASSWORD')
    if None in [db_url, db_name, db_username, db_password]:
        print('\n\nERROR: Database information missing from passwords.json.\n')
        sys.exit(1)
    # See https://docs.buildbot.net/2.10.0/manual/configuration/global.html#database-specification
    c['db_url'] = f'postgresql://{db_username}:{db_password}@{db_url}/{db_name}'
    # configure a janitor to delete old logs
    c['configurators'] = [util.JanitorConfigurator(logHorizon=timedelta(weeks=26), hour='1', dayOfWeek='*')]

c['buildCacheSize'] = 60
c['logCompressionMethod'] = 'lz4'
c['buildbotNetUsageData'] = None

loadConfig.loadBuilderConfig(
    c, is_test_mode_enabled=is_test_mode_enabled,
    setup_main_schedulers=True,
    setup_force_schedulers=is_test_mode_enabled,
)
