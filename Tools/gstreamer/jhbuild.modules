<?xml version="1.0"?>
<!DOCTYPE moduleset SYSTEM "moduleset.dtd">
<?xml-stylesheet type="text/xsl" href="moduleset.xsl"?>
<moduleset>

  <metamodule id="webkit-gstreamer-testing-dependencies">
    <dependencies>
      <dep package="gstreamer"/>
      <dep package="sparkle-cdm"/>
      <if condition-set="Thunder">
        <dep package="thunder"/>
        <dep package="widevine"/>
        <dep package="thunder-cdmi-widevine"/>
        <dep package="thunder-nanoservices"/>
      </if>
    </dependencies>
  </metamodule>

  <!-- Please use http/https to access repositories to be friendly to users stuck behind firewalls. -->
  <repository type="tarball" name="gstreamer"
      href="https://github.com/GStreamer/" />
  <repository type="tarball" name="github-tarball"
      href="https://github.com/"/>
  <repository type="git" name="github-ssh"
      href="git@github.com"/>
  <repository type="git" name="github.com"
      href="https://github.com"/>
  <repository type="git" name="chromium.googlesource.com"
      href="https://chromium.googlesource.com/webm/"/>
  <repository type="tarball" name="aom-releases"
      href="https://storage.googleapis.com/aom-releases/"/>
  <repository type="tarball" name="ffmpeg" href="https://ffmpeg.org/releases/"/>

  <meson id="orc" mesonargs="-Dgtk_doc=disabled -Dexamples=disabled">
    <branch repo="gstreamer"
            module="orc/archive/refs/tags/${version}.tar.gz"
            rename-tarball="orc-${version}.tar.gz"
            checkoutdir="orc-${version}"
            version="0.4.34"
            hash="sha256:e751284f6d063c49ce81a2b45efdbbd8b84141f69da029b5189448b9fb3f25aa">
    </branch>
  </meson>

  <meson id="openh264" mesonargs="-Dtests=disabled">
    <branch repo="github.com"
            module="cisco/openh264.git"
            tag="v2.3.0" >
    </branch>
  </meson>

  <cmake id="aom" cmakeargs="-DBUILD_SHARED_LIBS=1">
    <branch repo="aom-releases"
            module="libaom-${version}.tar.gz"
            checkoutdir="libaom-${version}"
            version="3.8.0"
            hash="sha256:a768d3e54c7f00cd38b01208d1ae52d671be410cfc387ff7881ea71c855f3600">
       <patch file="fix-aom-build-arm32.patch" strip="1"/>
    </branch>
  </cmake>

  <autotools id="libsrtp">
    <branch repo="github-tarball"
            module="cisco/libsrtp/archive/v${version}.tar.gz"
            checkoutdir="libsrtp-${version}"
            version="2.2.0">
      <patch file="libsrtp-Fix-building-with-gcc-10.patch" strip="1"/>
    </branch>
  </autotools>

  <meson id="libxkbcommon" mesonargs="-Denable-docs=false">
    <branch module="xkbcommon/libxkbcommon"
            tag="xkbcommon-1.0.3"
            version="1.0.3"
            repo="github.com" />
  </meson>

  <!-- GStreamer plugins have been moved with the base code to a monorepo.
  Is not longer needed to fetch different tarballs when using the main repository.
  See: https://gstreamer.freedesktop.org/documentation/frequently-asked-questions/mono-repository.html -->
  <meson id="gstreamer" mesonargs="-Dlibnice=enabled -Ddoc=disabled -Dexamples=disabled -Dgst-examples=disabled -Dgst-plugins-bad:avtp=disabled -Dgst-plugins-bad:microdns=disabled -Dintrospection=disabled -Dpython=disabled -Dtests=disabled">
    <dependencies>
      <dep package="aom"/>
      <dep package="ffmpeg"/>
      <dep package="graphene"/>
      <dep package="libsrtp"/>
      <dep package="libva"/>
      <dep package="libxkbcommon"/>
      <dep package="openh264"/>
      <dep package="orc"/>
    </dependencies>
    <branch repo="gstreamer"
            checkoutdir="gstreamer-${version}"
            rename-tarball="gstreamer-${version}.tar.gz"
            module="gstreamer/tarball/${version}"
            version="1.22.7"
            hash="sha256:5d38ad36449e755a11f8235eb80d68360c0ad4e8b422aebecad0e895d24f3834" />
    <dependencies>
      <dep package="openh264"/>
    </dependencies>
  </meson>

  <autotools id="ffmpeg" autogen-template="%(srcdir)s/configure --prefix=%(prefix)s --enable-static --enable-pic --disable-avdevice --disable-postproc --disable-swscale --disable-programs --disable-ffplay --disable-ffprobe --disable-ffmpeg --disable-encoder=flac --disable-protocols --disable-devices --disable-network --disable-hwaccels --disable-dxva2 --disable-vdpau --disable-filters --enable-filter=yadif --disable-doc --disable-d3d11va --disable-dxva2 --disable-audiotoolbox --disable-videotoolbox --disable-vaapi --disable-crystalhd --disable-mediacodec --disable-nvenc --disable-mmal --disable-omx --disable-omx-rpi --disable-cuda --disable-cuvid --disable-libmfx --disable-libnpp --disable-iconv --disable-jni --disable-v4l2_m2m --enable-optimizations">
    <branch repo="ffmpeg"
            module="ffmpeg-${version}.tar.xz"
            version="6.1"
            hash="sha256:488c76e57dd9b3bee901f71d5c95eaf1db4a5a31fe46a28654e837144207c270"/>
  </autotools>

  <meson id="libva" mesonargs="-Denable_va_messaging=false">
    <branch repo="github-tarball"
            module="intel/libva/archive/${version}.tar.gz"
            checkoutdir="libva-${version}"
            version="2.4.1"
            hash="sha256:68ca8d071dcb84ac82e3c6d7f02a55937d9f690fcb215853f4aa1de8d459812f" />
  </meson>

  <meson id="sparkle-cdm" mesonargs="-Dsample-player=disabled">
    <branch repo="github-tarball"
            module="Sparkle-CDM/sparkle-cdm/tarball/3e1e0dcb221d044213f8c6e32b0b06102e7fb224"
            checkoutdir="sparkle-cdm"
            version="20231106"
            hash="sha256:2f3d1e8bafbb60fb3500491975ed6528fb0bf068122bacbda768c098ccf0ebfc" />
  </meson>

  <cmake id="thunder"
         cmakeargs="-DBUILD_REFERENCE=${version} -DPORT=8081
                    -DBINDING=0.0.0.0 -DIDLE_TIME=180
                    -DPERSISTENT_PATH=/tmp/thunder/persistent
                    -DVOLATILE_PATH=/tmp/thunder/volatile
                    -DDATA_PATH=${prefix}/share/WPEFramework
                    -DSYSTEM_PATH=${prefix}/lib/wpeframework/plugins
                    -DPROXYSTUB_PATH=${prefix}/lib/wpeframework/proxystubs
                    -DOOMADJUST= -DBUILD_TYPE=ReleaseSymbols
                    -DBLUETOOTH_SUPPORT=OFF -DVIRTUALINPUT=OFF
                    -DCOMPOSITORCLIENT=OFF -DCOMPOSITORCLIENT=OFF
                    -DBROADCAST=OFF -DCDMI=ON -DCDMI_BCM_NEXUS_SVP=OFF
                    -DCDMI_ADAPTER_IMPLEMENTATION=gstreamer
                    -DGSTREAMERCLIENT=OFF -DPROVISIONPROXY=OFF
                    -DSECURITYAGENT=OFF -DCOMPOSITORSERVERPLUGIN=OFF
                    -DPLUGIN_WEBKITBROWSER=OFF -DPLUGIN_WEBSERVER=OFF
                    -DPLUGIN_ESPIAL=OFF -DNETWORKCONTROL=OFF">
    <branch repo="github-tarball"
            module="rdkcentral/Thunder/tarball/${version}"
            checkoutdir="thunder"
            version="6adeee006fecdd1b2bc49bd360d49fc5718deb61" />
  </cmake>

  <autotools id="widevine" supports-non-srcdir-builds="no"
             autogen-sh="build.py" autogenargs="x86-64 -r -DOEMCRYPTO_KEYBOX_PATH_PREFIX=${prefix}"
             makeargs="BUILDTYPE=Release -j1"
             makeinstallargs="BUILDTYPE=Release -j1 -f Makefile.install" >
    <dependencies>
      <dep package="thunder"/>
    </dependencies>
    <branch repo="github-ssh"
            module="Metrological/widevine.git"
            checkoutdir="widevine"
            tag="264c137501b289e356b11dacc329b05636ea9396" />
  </autotools>

  <cmake id="thunder-cdmi-widevine" cmakeargs="-DCMAKE_BUILD_TYPE=RelWithDebInfo">
    <dependencies>
      <dep package="thunder"/>
      <dep package="widevine"/>
    </dependencies>
    <branch repo="github-tarball"
            module="WebPlatformForEmbedded/OCDM-Widevine/tarball/${version}"
            checkoutdir="thunder-cdmi-widevine"
            version="9dc3964b0339abb70d66e4f931632324a075d6d4" />
  </cmake>

  <cmake id="thunder-nanoservices"
         cmakeargs="-DBUILD_REFERENCE=${version} -DBUILD_TYPE=ReleaseSymbols
                    -DPLUGIN_COBALT=OFF -DPLUGIN_COMMANDER=OFF
                    -DPLUGIN_DEVICEINFO=OFF -DPLUGIN_DISPLAYINFO=OFF
                    -DPLUGIN_DEVICEIDENTIFICATION=OFF
                    -DPLUGIN_DSRESOLUTION=OFF -DPLUGIN_DHCPSERVER=OFF
                    -DPLUGIN_DIALSERVER=OFF -DPLUGIN_DICTIONARY=OFF
                    -DPLUGIN_IOCONNECTOR=OFF -DPLUGIN_EGLTEST=OFF
                    -DPLUGIN_FRONTPANEL=OFF -DPLUGIN_LOCATIONSYNC=OFF
                    -DPLUGIN_MONITOR=OFF -DPLUGIN_NETWORKCONTROL=OFF
                    -DPLUGIN_OPENCDMI=ON
                    -DPLUGIN_OPENCDMI_AUTOSTART=true
                    -DPLUGIN_OPENCDMI_OOP=true
                    -DPLUGIN_OPENCDMI_WIDEVINE=ON
                    -DPLUGIN_OPENCDMI_CLEARKEY=OFF
                    -DPLUGIN_OPENCDMI_PLAYREADY=OFF
                    -DPLUGIN_OPENCDMI_NAGRA=OFF
                    -DPLUGIN_OPENCDMI_NCAS=OFF -DPLUGIN_BLUETOOTH=OFF
                    -DPLUGIN_BLUETOOTHREMOTECONTROL=OFF
                    -DPLUGIN_REMOTECONTROL=OFF -DPLUGIN_SNAPSHOT=OFF
                    -DPLUGIN_SYSTEMCOMMANDS=OFF
                    -DPLUGIN_FILETRANSFER=OFF
                    -DPLUGIN_TESTCONTROLLER=OFF -DPLUGIN_JSONRPC=OFF
                    -DPLUGIN_TESTUTILITY=OFF -DPLUGIN_TIMESYNC=OFF
                    -DPLUGIN_TRACECONTROL=OFF
                    -DPLUGIN_VOLUMECONTROL=OFF
                    -DPLUGIN_WEBKITBROWSER=OFF -DPLUGIN_RTSPCLIENT=OFF
                    -DPLUGIN_WEBPA=OFF -DPLUGIN_WEBPROXY=OFF
                    -DPLUGIN_WEBSERVER=OFF -DPLUGIN_WEBSHELL=OFF
                    -DPLUGIN_WIFICONTROL=OFF -DPLUGIN_PACKAGER=OFF
                    -DPLUGIN_PLAYERINFO=OFF -DPLUGIN_POWER=OFF
                    -DPLUGIN_PROCESSMONITOR=OFF -DPLUGIN_STREAMER=OFF
                    -DPLUGIN_SPARK=OFF -DPLATFORM_LINUX=ON
                    -DPLUGIN_MESSENGER=OFF -DPLUGIN_SECURITYAGENT=OFF
                    -DPLUGIN_RPCLINK=OFF -DPLUGIN_COMPOSITOR=OFF">
    <dependencies>
      <dep package="thunder"/>
      <dep package="thunder-cdmi-widevine"/>
    </dependencies>
    <branch repo="github-tarball"
            module="rdkcentral/ThunderNanoServices/tarball/${version}"
            checkoutdir="thunder-nanoservices"
            version="de9f3d40d8408ee811c48f486c9b14f752c97345" />
  </cmake>

</moduleset>
