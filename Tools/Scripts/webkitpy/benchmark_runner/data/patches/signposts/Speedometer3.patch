diff --git a/resources/benchmark-runner.mjs b/resources/benchmark-runner.mjs
index 47084c8..4fd3dcd 100644
--- a/resources/benchmark-runner.mjs
+++ b/resources/benchmark-runner.mjs
@@ -1,3 +1,18 @@
+const send_data = data => {
+    const req = new XMLHttpRequest();
+    req.open("POST", "/signpost", false); // synchronous fetch
+    req.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
+    req.send(JSON.stringify(data));
+};
+if (globalThis.__signpostStart === undefined && globalThis.__signpostStop === undefined) {
+    globalThis.__signpostStart = testname => {
+        send_data({type: "signpostStart", testname, timestamp: performance.now()});
+    };
+    globalThis.__signpostStop = testname => {
+        send_data({type: "signpostStop", testname, timestamp: performance.now()});
+    };
+};
+
 import { Metric } from "./metric.mjs";
 import { params } from "./params.mjs";
 
@@ -462,6 +477,8 @@ export class BenchmarkRunner {
         const syncEndLabel = `${suite.name}.${test.name}-sync-end`;
         const asyncStartLabel = `${suite.name}.${test.name}-async-start`;
         const asyncEndLabel = `${suite.name}.${test.name}-async-end`;
+        const syncName = `${suite.name}.${test.name}-sync`;
+        const asyncName = `${suite.name}.${test.name}-async`;
 
         let syncTime;
         let asyncStartTime;
@@ -476,21 +493,25 @@ export class BenchmarkRunner {
                 performance.mark("warmup-end");
             }
             performance.mark(startLabel);
+            __signpostStart(syncName);
             const syncStartTime = performance.now();
             test.run(this._page);
             const syncEndTime = performance.now();
+            __signpostStop(syncName);
             performance.mark(syncEndLabel);
 
             syncTime = syncEndTime - syncStartTime;
 
             performance.mark(asyncStartLabel);
             asyncStartTime = performance.now();
+            __signpostStart(asyncName);
         };
         const measureAsync = () => {
             // Some browsers don't immediately update the layout for paint.
             // Force the layout here to ensure we're measuring the layout time.
             const height = this._frame.contentDocument.body.getBoundingClientRect().height;
             const asyncEndTime = performance.now();
+            __signpostStop(asyncName);
             asyncTime = asyncEndTime - asyncStartTime;
             this._frame.contentWindow._unusedHeightValue = height; // Prevent dead code elimination.
             performance.mark(asyncEndLabel);
