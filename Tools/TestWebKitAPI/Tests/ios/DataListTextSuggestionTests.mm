/*
 * Copyright (C) 2024 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#import "config.h"

#if ENABLE(DATALIST_ELEMENT) && PLATFORM(IOS_FAMILY)

#import "PlatformUtilities.h"
#import "TestInputDelegate.h"
#import "TestWKWebView.h"
#import "UIKitSPIForTesting.h"
#import <WebKit/WKWebViewPrivate.h>
#import <pal/spi/ios/BrowserEngineKitSPI.h>

@interface DataListTextSuggestionInputDelegate : NSObject <UITextInputSuggestionDelegate
#if USE(BROWSERENGINEKIT)
    , BETextInputDelegate
#endif
>
@end

@implementation DataListTextSuggestionInputDelegate {
    RetainPtr<NSArray> _suggestions;
}

- (NSArray *)suggestions
{
    return _suggestions.get();
}

- (void)setSuggestions:(NSArray *)suggestions
{
    _suggestions = suggestions;
}

- (void)selectionDidChange:(id<UITextInput>)textInput
{
}

- (void)selectionWillChange:(id<UITextInput>)textInput
{
}

- (void)textDidChange:(id<UITextInput>)textInput
{
}

- (void)textWillChange:(id<UITextInput>)textInput
{
}

- (void)handleWebViewCredentialsSaveForWebsiteURL:(NSURL *)websiteURL user:(NSString *)user password:(NSString *)password passwordIsAutoGenerated:(BOOL)passwordIsAutoGenerated
{
}

#if USE(BROWSERENGINEKIT)

- (void)invalidateTextEntryContextForTextInput:(id<BETextInput>)textInput
{
}

- (void)selectionDidChangeForTextInput:(id<BETextInput>)textInput {

}

- (void)selectionWillChangeForTextInput:(id<BETextInput>)textInput {

}

- (BOOL)shouldDeferEventHandlingToSystemForTextInput:(id<BETextInput>)textInput context:(BEKeyEntryContext *)keyEventContext
{
    return NO;
}

- (void)textInput:(id<BETextInput>)textInput deferReplaceTextActionToSystem:(id)sender
{
}

- (void)textInput:(id<BETextInput>)textInput setCandidateSuggestions:(NSArray *)suggestions
{
    RetainPtr uikitSuggestions = [NSMutableArray arrayWithCapacity:suggestions.count];
    for (BETextSuggestion *beTextSuggestion in suggestions)
        [uikitSuggestions addObject:beTextSuggestion._uikitTextSuggestion];

    [self setSuggestions:uikitSuggestions.get()];
}

#endif // USE(BROWSERENGINEKIT)

@end

@interface DataListTextSuggestionTestView : TestWKWebView
@end

@implementation DataListTextSuggestionTestView {
    RetainPtr<TestInputDelegate> _testDelegate;
}

- (instancetype)initWithFrame:(CGRect)frame
{
    if (!(self = [super initWithFrame:frame]))
        return nil;

    _testDelegate = adoptNS([[TestInputDelegate alloc] init]);
    [_testDelegate setFocusStartsInputSessionPolicyHandler:[] (WKWebView *, id<_WKFocusedElementInfo>) -> _WKFocusStartsInputSessionPolicy {
        return _WKFocusStartsInputSessionPolicyAllow;
    }];
    self._inputDelegate = _testDelegate.get();

    return self;
}

@end

namespace TestWebKitAPI {

TEST(DataListTextSuggestionTestView, InsertSuggestion)
{
    auto webView = adoptNS([[DataListTextSuggestionTestView alloc] initWithFrame:CGRectMake(0, 0, 320, 500)]);

    [webView synchronouslyLoadHTMLString:@""
        "<input id='input' list='fruits'>"
        "<datalist id='fruits'>"
        "<option value='Apple'></option>"
        "<option value='Kiwi'></option>"
        "<option value='Orange'></option>"
        "<option value='Pear'></option>"
        "<option value='Strawberry'></option>"
        "</datalist>"];

    RetainPtr inputDelegate = adoptNS([[DataListTextSuggestionInputDelegate alloc] init]);
    [[webView textInputContentView] setInputDelegate:inputDelegate.get()];
#if USE(BROWSERENGINEKIT)
    [[webView asyncTextInput] setAsyncInputDelegate:inputDelegate.get()];
#endif

    [webView evaluateJavaScriptAndWaitForInputSessionToChange:@"input.focus()"];

    [[webView textInputContentView] insertText:@"a"];

    [webView waitForNextPresentationUpdate];

    [webView insertTextSuggestion:[[inputDelegate suggestions] firstObject]];

    [webView waitForNextPresentationUpdate];

    EXPECT_WK_STREQ("Apple", [webView stringByEvaluatingJavaScript:@"input.value"]);
}

} // namespace TestWebKitAPI

#endif // ENABLE(DATALIST_ELEMENT) && PLATFORM(IOS_FAMILY)
