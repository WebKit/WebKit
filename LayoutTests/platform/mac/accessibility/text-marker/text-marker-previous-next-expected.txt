This tests the next/previous text marker functions are implemented correctly.

PASS: text.textMarkerRangeLength(textMarkerRange) === 4
PASS: text.accessibilityElementForTextMarker(startMarker).isEqual(text) === true
PASS: text.accessibilityElementForTextMarker(endMarker).isEqual(text) === true
PASS: text.stringForTextMarkerRange(markerRange) === newline
PASS: text.stringForTextMarkerRange(markerRange) === 't'
PASS: text.stringForTextMarkerRange(markerRange) === newline
PASS: text.stringForTextMarkerRange(markerRange) === 't' + newline
PASS: text2.textMarkerRangeLength(textMarkerRange2) === 5
Object string for range: c [ATTACHMENT] d
PASS: text2.stringForTextMarkerRange(markerRange) === 'd'
PASS: text2.stringForTextMarkerRange(markerRange) === '1'
PASS: text3.stringForTextMarkerRange(markerRange) === 'ect'
PASS: text3.stringForTextMarkerRange(markerRange) === 'sel'
PASS: !psw.accessibilityElementForTextMarker(start) === true
PASS: text2.accessibilityElementForTextMarker(currentMarker).isEqual(text3) === true
PASS: text2.accessibilityElementForTextMarker(currentMarker).isEqual(text2.childAtIndex(2)) === true
PASS: text.stringForTextMarkerRange(markerRange) === 'f'
PASS: text.stringForTextMarkerRange(markerRange) === 'a'
PASS: text.textMarkerRangeLength(emojiTextMarkerRange) === 4
PASS: text.stringForTextMarkerRange(text.textMarkerRangeForMarkers(result.previous, result.current)) === 'üòè'
PASS: text.stringForTextMarkerRange(text.textMarkerRangeForMarkers(result.previous, result.current)) === 'üòÉ'
PASS: text.textMarkerRangeLength(collapsedWhitespaceMarkerRange) === 3
PASS: text.stringForTextMarkerRange(text.textMarkerRangeForMarkers(result.previous, result.current)) === 'a'
PASS: text.stringForTextMarkerRange(text.textMarkerRangeForMarkers(result.previous, result.current)) === ' '
PASS: text.stringForTextMarkerRange(text.textMarkerRangeForMarkers(result.previous, result.current)) === 'b'
PASS: text.stringForTextMarkerRange(text.textMarkerRangeForMarkers(result.previous, result.current)) === ' '
PASS: text.stringForTextMarkerRange(text.textMarkerRangeForMarkers(result.previous, result.current)) === 'a'
PASS: text.stringForTextMarkerRange(textMarkerRange) === 'audioÔøºfile'
PASS: text.stringForTextMarkerRange(markerRange) === 'Ôøº'
PASS: text.stringForTextMarkerRange(markerRange) === 'Ôøº'

PASS successfullyParsed is true

TEST COMPLETE




