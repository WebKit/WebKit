
world
PASS input.type = "radio"; log(input, "change"); input.click(); eventType is "change"
PASS composed is false

PASS log(form, "reset"); form.reset(); eventType is "reset"
PASS composed is false

PASS form.focus(); log(input, "focus"); input.focus(); eventType is "focus"
PASS composed is true

PASS log(input, "blur"); form.focus(); eventType is "blur"
PASS composed is true

PASS input.type = "text"; log(input, "mousemove"); eventSender.mouseMoveTo(x, y); eventType is "mousemove"
PASS composed is true

PASS log(input, "mousedown"); eventSender.mouseDown(); eventType is "mousedown"
PASS composed is true

PASS log(input, "mouseup"); eventSender.mouseUp(); eventType is "mouseup"
PASS composed is true

PASS log(input, "mouseout"); eventSender.mouseMoveTo(0, 0); eventType is "mouseout"
PASS composed is true

PASS log(input, "mouseover"); eventSender.mouseMoveTo(x, y); eventType is "mouseover"
PASS composed is true

input.value = "hello"; eventSender.mouseMoveTo(input.offsetLeft + 1, y); eventSender.mouseDown();
FAIL log(input, "select"); eventSender.mouseMoveTo(input.offsetLeft + input.offsetWidth - 2, y); eventSender.mouseUp(); eventType should be select (of type string). Was undefined (of type undefined).
FAIL composed should be false (of type boolean). Was undefined (of type undefined).

PASS log(editableElement, "selectstart"); eventSender.mouseMoveTo(editableElement.offsetLeft + 1, y); eventSender.mouseDown(); eventType is "selectstart"
PASS composed is false

PASS eventType is "load"
PASS composed is false

PASS eventType is "error"
PASS composed is false

FAIL eventType should be scroll (of type string). Was undefined (of type undefined).
FAIL composed should be false (of type boolean). Was undefined (of type undefined).

PASS eventType is "resize"
PASS composed is false

PASS successfullyParsed is true

TEST COMPLETE

