CONSOLE MESSAGE: Not allowed to load local resource: example:1
CONSOLE MESSAGE: Unable to open a window with invalid URL ''.

CONSOLE MESSAGE: Unable to open a window with invalid URL ''.

CONSOLE MESSAGE: Unable to open a window with invalid URL ''.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'http://user:pass@/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'http://foo:-80/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'http://user@/www.example.com'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'http://@/www.example.com'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https:@/www.example.com'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'http://a:b@/www.example.com'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'http://@:www.example.com'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://�'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://%EF%BF%BD'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://x x:12'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'http://[www.google.com]/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'sc://
CONSOLE MESSAGE: Unable to open a window with invalid URL 'sc:// /'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'sc://@/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'sc://te@s:t@/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'sc://:/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'sc://:12/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'sc://[/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'sc://\/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'sc://]/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'ftp://example.com%80/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'ftp://example.com%A0/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://example.com%80/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://example.com%A0/'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://[0::0::0]'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://[0:.0]'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://[0:0:]'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://[0:1:2:3:4:5:6:7.0.0.0.1]'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://[0:1.00.0.0.0]'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://[0:1.290.0.0.0]'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'https://[0:1.23.23]'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'http://?'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'http://#'.

CONSOLE MESSAGE: Unable to open a window with invalid URL 'non-special://[:80/'.


PASS Loading data…
FAIL URL's href: file://example:1/ should throw assert_throws: function "() => url.href = test.input" did not throw
FAIL XHR: file://example:1/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): file://example:1/ should throw
FAIL Location's href: file://example:1/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): file://example:1/ should throw assert_throws: function "() => self.open(test.input).close()" did not throw
PASS URL's href: file://example:test/ should throw
FAIL XHR: file://example:test/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): file://example:test/ should throw
FAIL Location's href: file://example:test/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): file://example:test/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: file://example%/ should throw
FAIL XHR: file://example%/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): file://example%/ should throw
FAIL Location's href: file://example%/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): file://example%/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: file://[example]/ should throw
FAIL XHR: file://[example]/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): file://[example]/ should throw
FAIL Location's href: file://[example]/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): file://[example]/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: http://user:pass@/ should throw
FAIL XHR: http://user:pass@/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http://user:pass@/ should throw
FAIL Location's href: http://user:pass@/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http://user:pass@/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: http://foo:-80/ should throw
FAIL XHR: http://foo:-80/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http://foo:-80/ should throw
FAIL Location's href: http://foo:-80/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http://foo:-80/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: http:/:@/www.example.com should throw
FAIL XHR: http:/:@/www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http:/:@/www.example.com should throw
FAIL Location's href: http:/:@/www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http:/:@/www.example.com should throw assert_throws: function "() => self.open(test.input).close()" did not throw
PASS URL's href: http://user@/www.example.com should throw
FAIL XHR: http://user@/www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http://user@/www.example.com should throw
FAIL Location's href: http://user@/www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http://user@/www.example.com should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: http:@/www.example.com should throw
FAIL XHR: http:@/www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http:@/www.example.com should throw
FAIL Location's href: http:@/www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http:@/www.example.com should throw assert_throws: function "() => self.open(test.input).close()" did not throw
PASS URL's href: http:/@/www.example.com should throw
FAIL XHR: http:/@/www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http:/@/www.example.com should throw
FAIL Location's href: http:/@/www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http:/@/www.example.com should throw assert_throws: function "() => self.open(test.input).close()" did not throw
PASS URL's href: http://@/www.example.com should throw
FAIL XHR: http://@/www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http://@/www.example.com should throw
FAIL Location's href: http://@/www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http://@/www.example.com should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https:@/www.example.com should throw
FAIL XHR: https:@/www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https:@/www.example.com should throw
FAIL Location's href: https:@/www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https:@/www.example.com should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: http:a:b@/www.example.com should throw
FAIL XHR: http:a:b@/www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http:a:b@/www.example.com should throw
FAIL Location's href: http:a:b@/www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http:a:b@/www.example.com should throw assert_throws: function "() => self.open(test.input).close()" did not throw
PASS URL's href: http:/a:b@/www.example.com should throw
FAIL XHR: http:/a:b@/www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http:/a:b@/www.example.com should throw
FAIL Location's href: http:/a:b@/www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http:/a:b@/www.example.com should throw assert_throws: function "() => self.open(test.input).close()" did not throw
PASS URL's href: http://a:b@/www.example.com should throw
FAIL XHR: http://a:b@/www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http://a:b@/www.example.com should throw
FAIL Location's href: http://a:b@/www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http://a:b@/www.example.com should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: http::@/www.example.com should throw
FAIL XHR: http::@/www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http::@/www.example.com should throw
FAIL Location's href: http::@/www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http::@/www.example.com should throw assert_throws: function "() => self.open(test.input).close()" did not throw
PASS URL's href: http:@:www.example.com should throw
FAIL XHR: http:@:www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http:@:www.example.com should throw
FAIL Location's href: http:@:www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http:@:www.example.com should throw assert_throws: function "() => self.open(test.input).close()" did not throw
PASS URL's href: http:/@:www.example.com should throw
FAIL XHR: http:/@:www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http:/@:www.example.com should throw
FAIL Location's href: http:/@:www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http:/@:www.example.com should throw assert_throws: function "() => self.open(test.input).close()" did not throw
PASS URL's href: http://@:www.example.com should throw
FAIL XHR: http://@:www.example.com should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http://@:www.example.com should throw
FAIL Location's href: http://@:www.example.com should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http://@:www.example.com should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://� should throw
FAIL XHR: https://� should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://� should throw
FAIL Location's href: https://� should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://� should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://%EF%BF%BD should throw
FAIL XHR: https://%EF%BF%BD should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://%EF%BF%BD should throw
FAIL Location's href: https://%EF%BF%BD should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://%EF%BF%BD should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://x x:12 should throw
FAIL XHR: https://x x:12 should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://x x:12 should throw
FAIL Location's href: https://x x:12 should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://x x:12 should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: http://[www.google.com]/ should throw
FAIL XHR: http://[www.google.com]/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http://[www.google.com]/ should throw
FAIL Location's href: http://[www.google.com]/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http://[www.google.com]/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: sc://\0/ should throw
FAIL XHR: sc://\0/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): sc://\0/ should throw
FAIL Location's href: sc://\0/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): sc://\0/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: sc:// / should throw
FAIL XHR: sc:// / should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): sc:// / should throw
FAIL Location's href: sc:// / should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): sc:// / should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: sc://@/ should throw
FAIL XHR: sc://@/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): sc://@/ should throw
FAIL Location's href: sc://@/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): sc://@/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: sc://te@s:t@/ should throw
FAIL XHR: sc://te@s:t@/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): sc://te@s:t@/ should throw
FAIL Location's href: sc://te@s:t@/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): sc://te@s:t@/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: sc://:/ should throw
FAIL XHR: sc://:/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): sc://:/ should throw
FAIL Location's href: sc://:/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): sc://:/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: sc://:12/ should throw
FAIL XHR: sc://:12/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): sc://:12/ should throw
FAIL Location's href: sc://:12/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): sc://:12/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: sc://[/ should throw
FAIL XHR: sc://[/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): sc://[/ should throw
FAIL Location's href: sc://[/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): sc://[/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: sc://\/ should throw
FAIL XHR: sc://\/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): sc://\/ should throw
FAIL Location's href: sc://\/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): sc://\/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: sc://]/ should throw
FAIL XHR: sc://]/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): sc://]/ should throw
FAIL Location's href: sc://]/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): sc://]/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: ftp://example.com%80/ should throw
FAIL XHR: ftp://example.com%80/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): ftp://example.com%80/ should throw
FAIL Location's href: ftp://example.com%80/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): ftp://example.com%80/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: ftp://example.com%A0/ should throw
FAIL XHR: ftp://example.com%A0/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): ftp://example.com%A0/ should throw
FAIL Location's href: ftp://example.com%A0/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): ftp://example.com%A0/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://example.com%80/ should throw
FAIL XHR: https://example.com%80/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://example.com%80/ should throw
FAIL Location's href: https://example.com%80/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://example.com%80/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://example.com%A0/ should throw
FAIL XHR: https://example.com%A0/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://example.com%A0/ should throw
FAIL Location's href: https://example.com%A0/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://example.com%A0/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://[0::0::0] should throw
FAIL XHR: https://[0::0::0] should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://[0::0::0] should throw
FAIL Location's href: https://[0::0::0] should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://[0::0::0] should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://[0:.0] should throw
FAIL XHR: https://[0:.0] should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://[0:.0] should throw
FAIL Location's href: https://[0:.0] should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://[0:.0] should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://[0:0:] should throw
FAIL XHR: https://[0:0:] should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://[0:0:] should throw
FAIL Location's href: https://[0:0:] should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://[0:0:] should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://[0:1:2:3:4:5:6:7.0.0.0.1] should throw
FAIL XHR: https://[0:1:2:3:4:5:6:7.0.0.0.1] should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://[0:1:2:3:4:5:6:7.0.0.0.1] should throw
FAIL Location's href: https://[0:1:2:3:4:5:6:7.0.0.0.1] should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://[0:1:2:3:4:5:6:7.0.0.0.1] should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://[0:1.00.0.0.0] should throw
FAIL XHR: https://[0:1.00.0.0.0] should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://[0:1.00.0.0.0] should throw
FAIL Location's href: https://[0:1.00.0.0.0] should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://[0:1.00.0.0.0] should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://[0:1.290.0.0.0] should throw
FAIL XHR: https://[0:1.290.0.0.0] should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://[0:1.290.0.0.0] should throw
FAIL Location's href: https://[0:1.290.0.0.0] should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://[0:1.290.0.0.0] should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: https://[0:1.23.23] should throw
FAIL XHR: https://[0:1.23.23] should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): https://[0:1.23.23] should throw
FAIL Location's href: https://[0:1.23.23] should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): https://[0:1.23.23] should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: http://? should throw
FAIL XHR: http://? should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http://? should throw
FAIL Location's href: http://? should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http://? should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: http://# should throw
FAIL XHR: http://# should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): http://# should throw
FAIL Location's href: http://# should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): http://# should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS URL's href: non-special://[:80/ should throw
FAIL XHR: non-special://[:80/ should throw assert_throws: function "() => client.open("GET", test.input)" did not throw
PASS sendBeacon(): non-special://[:80/ should throw
FAIL Location's href: non-special://[:80/ should throw assert_throws: function "() => self[0].location = test.input" did not throw
FAIL window.open(): non-special://[:80/ should throw assert_throws: function "() => self.open(test.input).close()" threw object "TypeError: null is not an object (evaluating 'self.open(test.input).close')" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12

