Basic Interface test for performance-timeline APIs.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PerformanceEntry
PASS PerformanceEntry is defined.
PASS "name" in PerformanceEntry.prototype is true
PASS "entryType" in PerformanceEntry.prototype is true
PASS "startTime" in PerformanceEntry.prototype is true
PASS "duration" in PerformanceEntry.prototype is true
PASS new PerformanceEntry() threw exception TypeError: Illegal constructor.

Performance extensions
PASS Performance.prototype.getEntries is defined.
PASS Performance.prototype.getEntriesByType is defined.
PASS Performance.prototype.getEntriesByName is defined.
PASS performance.getEntries() instanceof Array is true
FAIL performance.getEntries().length === 1 should be true. Was false.
PASS performance.mark("test"); did not throw exception.
FAIL performance.getEntries().length === 2 should be true. Was false.
FAIL performance.getEntries()[markIndex] instanceof PerformanceEntry should be true. Was false.
FAIL performance.getEntries()[markIndex].name should be test. Threw exception TypeError: undefined is not an object (evaluating 'performance.getEntries()[markIndex].name')
FAIL performance.getEntries()[markIndex].entryType should be mark. Threw exception TypeError: undefined is not an object (evaluating 'performance.getEntries()[markIndex].entryType')
FAIL typeof performance.getEntries()[markIndex].startTime === "number" should be true. Threw exception TypeError: undefined is not an object (evaluating 'performance.getEntries()[markIndex].startTime')
FAIL typeof performance.getEntries()[markIndex].duration === "number" should be true. Threw exception TypeError: undefined is not an object (evaluating 'performance.getEntries()[markIndex].duration')
PASS performance.getEntriesByType() threw exception TypeError: Not enough arguments.
PASS performance.getEntriesByType("not-real").length === 0 is true
PASS performance.getEntriesByType("mark").length === 1 is true
PASS performance.getEntriesByType("mark")[0] instanceof PerformanceEntry is true
PASS performance.getEntriesByType("mark")[0].name is "test"
PASS performance.getEntriesByType("mark")[0].entryType is "mark"
PASS typeof performance.getEntriesByType("mark")[0].startTime === "number" is true
PASS typeof performance.getEntriesByType("mark")[0].duration === "number" is true
PASS performance.getEntriesByName() threw exception TypeError: Not enough arguments.
PASS performance.getEntriesByName("not-real").length === 0 is true
PASS performance.getEntriesByName("test").length === 1 is true
PASS performance.getEntriesByName("test")[0] instanceof PerformanceEntry is true
PASS performance.getEntriesByName("test")[0].name is "test"
PASS performance.getEntriesByName("test")[0].entryType is "mark"
PASS typeof performance.getEntriesByName("test")[0].startTime === "number" is true
PASS typeof performance.getEntriesByName("test")[0].duration === "number" is true
PASS performance.getEntriesByName("test", "not-real").length === 0 is true
PASS performance.getEntriesByName("test", "mark").length === 1 is true

Starting worker: resources/timeline-api.js
[Worker] PerformanceEntry
PASS [Worker] PerformanceEntry is defined.
PASS [Worker] "name" in PerformanceEntry.prototype is true
PASS [Worker] "entryType" in PerformanceEntry.prototype is true
PASS [Worker] "startTime" in PerformanceEntry.prototype is true
PASS [Worker] "duration" in PerformanceEntry.prototype is true
PASS [Worker] new PerformanceEntry() threw exception TypeError: Illegal constructor.
[Worker]
[Worker] Performance extensions
PASS [Worker] Performance.prototype.getEntries is defined.
PASS [Worker] Performance.prototype.getEntriesByType is defined.
PASS [Worker] Performance.prototype.getEntriesByName is defined.
PASS [Worker] performance.getEntries() instanceof Array is true
PASS [Worker] performance.getEntries().length === 0 is true
PASS [Worker] performance.mark("test"); did not throw exception.
PASS [Worker] performance.getEntries().length === 1 is true
PASS [Worker] performance.getEntries()[markIndex] instanceof PerformanceEntry is true
PASS [Worker] performance.getEntries()[markIndex].name is "test"
PASS [Worker] performance.getEntries()[markIndex].entryType is "mark"
PASS [Worker] typeof performance.getEntries()[markIndex].startTime === "number" is true
PASS [Worker] typeof performance.getEntries()[markIndex].duration === "number" is true
PASS [Worker] performance.getEntriesByType() threw exception TypeError: Not enough arguments.
PASS [Worker] performance.getEntriesByType("not-real").length === 0 is true
PASS [Worker] performance.getEntriesByType("mark").length === 1 is true
PASS [Worker] performance.getEntriesByType("mark")[0] instanceof PerformanceEntry is true
PASS [Worker] performance.getEntriesByType("mark")[0].name is "test"
PASS [Worker] performance.getEntriesByType("mark")[0].entryType is "mark"
PASS [Worker] typeof performance.getEntriesByType("mark")[0].startTime === "number" is true
PASS [Worker] typeof performance.getEntriesByType("mark")[0].duration === "number" is true
PASS [Worker] performance.getEntriesByName() threw exception TypeError: Not enough arguments.
PASS [Worker] performance.getEntriesByName("not-real").length === 0 is true
PASS [Worker] performance.getEntriesByName("test").length === 1 is true
PASS [Worker] performance.getEntriesByName("test")[0] instanceof PerformanceEntry is true
PASS [Worker] performance.getEntriesByName("test")[0].name is "test"
PASS [Worker] performance.getEntriesByName("test")[0].entryType is "mark"
PASS [Worker] typeof performance.getEntriesByName("test")[0].startTime === "number" is true
PASS [Worker] typeof performance.getEntriesByName("test")[0].duration === "number" is true
PASS [Worker] performance.getEntriesByName("test", "not-real").length === 0 is true
PASS [Worker] performance.getEntriesByName("test", "mark").length === 1 is true
PASS successfullyParsed is true

TEST COMPLETE

