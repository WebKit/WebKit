CONSOLE MESSAGE: Unhandled Promise Rejection: error1: error1
CONSOLE MESSAGE: Unhandled Promise Rejection: error1: error1
CONSOLE MESSAGE: Unhandled Promise Rejection: TypeError: releasing lock of reader whose stream is still in readable state

Harness Error (FAIL), message = Unhandled rejection: error1

PASS a signal argument 'null' should cause pipeTo() to reject
PASS a signal argument 'AbortSignal' should cause pipeTo() to reject
PASS a signal argument 'true' should cause pipeTo() to reject
PASS a signal argument '-1' should cause pipeTo() to reject
PASS a signal argument '[object AbortSignal]' should cause pipeTo() to reject
PASS an aborted signal should cause the writable stream to reject with an AbortError
FAIL (reason: 'null') all the error objects should be the same object promise_rejects_exactly: pipeTo rejects with abort reason function "function () { throw e }" threw object "AbortError: abort pipeTo from signal" but we expected it to throw null
FAIL (reason: 'undefined') all the error objects should be the same object assert_equals: signal.reason should be error expected object "AbortError: abort pipeTo from signal" but got object "AbortError: The operation was aborted."
FAIL (reason: 'error1: error1') all the error objects should be the same object promise_rejects_exactly: pipeTo rejects with abort reason function "function () { throw e }" threw object "AbortError: abort pipeTo from signal" but we expected it to throw object "error1: error1"
PASS preventCancel should prevent canceling the readable
PASS preventAbort should prevent aborting the readable
PASS preventCancel and preventAbort should prevent canceling the readable and aborting the readable
FAIL (reason: 'null') abort should prevent further reads promise_rejects_exactly: pipeTo rejects with abort reason function "function () { throw e }" threw object "AbortError: abort pipeTo from signal" but we expected it to throw null
FAIL (reason: 'undefined') abort should prevent further reads assert_equals: signal.reason should be error expected object "AbortError: abort pipeTo from signal" but got object "AbortError: The operation was aborted."
FAIL (reason: 'error1: error1') abort should prevent further reads promise_rejects_exactly: pipeTo rejects with abort reason function "function () { throw e }" threw object "AbortError: abort pipeTo from signal" but we expected it to throw object "error1: error1"
FAIL (reason: 'null') all pending writes should complete on abort promise_rejects_exactly: pipeTo rejects with abort reason function "function () { throw e }" threw object "AbortError: abort pipeTo from signal" but we expected it to throw null
FAIL (reason: 'undefined') all pending writes should complete on abort assert_equals: signal.reason should be error expected object "AbortError: abort pipeTo from signal" but got object "AbortError: The operation was aborted."
FAIL (reason: 'error1: error1') all pending writes should complete on abort promise_rejects_exactly: pipeTo rejects with abort reason function "function () { throw e }" threw object "AbortError: abort pipeTo from signal" but we expected it to throw object "error1: error1"
PASS a rejection from underlyingSource.cancel() should be returned by pipeTo()
PASS a rejection from underlyingSink.abort() should be returned by pipeTo()
PASS a rejection from underlyingSink.abort() should be preferred to one from underlyingSource.cancel()
PASS abort signal takes priority over closed readable
PASS abort signal takes priority over errored readable
PASS abort signal takes priority over closed writable
PASS abort signal takes priority over errored writable
PASS abort should do nothing after the readable is closed
PASS abort should do nothing after the readable is errored
PASS abort should do nothing after the readable is errored, even with pending writes
PASS abort should do nothing after the writable is errored

