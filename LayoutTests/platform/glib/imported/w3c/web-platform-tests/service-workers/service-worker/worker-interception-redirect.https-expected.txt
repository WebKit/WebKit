
PASS initialize global state
PASS Case #1: network scope1->scope2 (classic DedicatedWorker)
PASS Case #1: network scope1->scope2 (module DedicatedWorker)
PASS Case #1: network scope1->scope2 (classic SharedWorker)
PASS Case #1: network scope1->scope2 (module SharedWorker)
PASS Case #2: network scope1->out-scope (classic DedicatedWorker)
PASS Case #2: network scope1->out-scope (module DedicatedWorker)
PASS Case #2: network scope1->out-scope (classic SharedWorker)
PASS Case #2: network scope1->out-scope (module SharedWorker)
PASS Case #3: sw scope1->scope2 (classic DedicatedWorker)
PASS Case #3: sw scope1->scope2 (module DedicatedWorker)
PASS Case #3: sw scope1->scope2 (classic SharedWorker)
PASS Case #3: sw scope1->scope2 (module SharedWorker)
PASS Case #4: sw scope1->out-scope (classic DedicatedWorker)
PASS Case #4: sw scope1->out-scope (module DedicatedWorker)
PASS Case #4: sw scope1->out-scope (classic SharedWorker)
PASS Case #4: sw scope1->out-scope (module SharedWorker)
PASS cleanup global state
PASS Case #1: network scope1->scope2 (classic DedicatedWorker, importScripts())
PASS Case #1: network scope1->scope2 (classic DedicatedWorker, fetch())
PASS Case #1: network scope1->scope2 (classic DedicatedWorker, location.href)
PASS Case #1: network scope1->scope2 (module DedicatedWorker, importScripts())
PASS Case #1: network scope1->scope2 (module DedicatedWorker, fetch())
PASS Case #1: network scope1->scope2 (module DedicatedWorker, location.href)
PASS Case #1: network scope1->scope2 (classic SharedWorker, importScripts())
PASS Case #1: network scope1->scope2 (classic SharedWorker, fetch())
PASS Case #1: network scope1->scope2 (classic SharedWorker, location.href)
PASS Case #1: network scope1->scope2 (module SharedWorker, importScripts())
PASS Case #1: network scope1->scope2 (module SharedWorker, fetch())
PASS Case #1: network scope1->scope2 (module SharedWorker, location.href)
PASS Case #2: network scope1->out-scope (classic DedicatedWorker, importScripts())
PASS Case #2: network scope1->out-scope (classic DedicatedWorker, fetch())
PASS Case #2: network scope1->out-scope (classic DedicatedWorker, location.href)
PASS Case #2: network scope1->out-scope (module DedicatedWorker, importScripts())
PASS Case #2: network scope1->out-scope (module DedicatedWorker, fetch())
PASS Case #2: network scope1->out-scope (module DedicatedWorker, location.href)
PASS Case #2: network scope1->out-scope (classic SharedWorker, importScripts())
PASS Case #2: network scope1->out-scope (classic SharedWorker, fetch())
PASS Case #2: network scope1->out-scope (classic SharedWorker, location.href)
PASS Case #2: network scope1->out-scope (module SharedWorker, importScripts())
PASS Case #2: network scope1->out-scope (module SharedWorker, fetch())
PASS Case #2: network scope1->out-scope (module SharedWorker, location.href)
FAIL Case #3: sw scope1->scope2 (classic DedicatedWorker, importScripts()) assert_equals: expected "sw2 saw importScripts from the worker: /service-workers/service-worker/resources/subdir/import-scripts-echo.py" but got "sw2 saw importScripts from the worker: /service-workers/service-worker/resources/scope2/import-scripts-echo.py"
FAIL Case #3: sw scope1->scope2 (classic DedicatedWorker, fetch()) assert_equals: expected "fetch(): sw2 saw the fetch from the worker: /service-workers/service-worker/resources/subdir/simple.txt" but got "fetch(): sw2 saw the fetch from the worker: /service-workers/service-worker/resources/scope2/simple.txt"
FAIL Case #3: sw scope1->scope2 (classic DedicatedWorker, location.href) assert_equals: location.href expected "https://web-platform.test:9443/service-workers/service-worker/resources/subdir/worker_interception_redirect_webworker.py?greeting=sw2%20saw%20the%20request%20for%20the%20worker%20script" but got "https://web-platform.test:9443/service-workers/service-worker/resources/scope2/worker_interception_redirect_webworker.py"
PASS Case #3: sw scope1->scope2 (module DedicatedWorker, importScripts())
FAIL Case #3: sw scope1->scope2 (module DedicatedWorker, fetch()) assert_equals: expected "fetch(): sw2 saw the fetch from the worker: /service-workers/service-worker/resources/subdir/simple.txt" but got "fetch(): sw2 saw the fetch from the worker: /service-workers/service-worker/resources/scope2/simple.txt"
FAIL Case #3: sw scope1->scope2 (module DedicatedWorker, location.href) assert_equals: location.href expected "https://web-platform.test:9443/service-workers/service-worker/resources/subdir/worker_interception_redirect_webworker.py?greeting=sw2%20saw%20the%20request%20for%20the%20worker%20script" but got "https://web-platform.test:9443/service-workers/service-worker/resources/scope2/worker_interception_redirect_webworker.py"
FAIL Case #3: sw scope1->scope2 (classic SharedWorker, importScripts()) assert_equals: expected "sw2 saw importScripts from the worker: /service-workers/service-worker/resources/subdir/import-scripts-echo.py" but got "sw2 saw importScripts from the worker: /service-workers/service-worker/resources/scope2/import-scripts-echo.py"
FAIL Case #3: sw scope1->scope2 (classic SharedWorker, fetch()) assert_equals: expected "fetch(): sw2 saw the fetch from the worker: /service-workers/service-worker/resources/subdir/simple.txt" but got "fetch(): sw2 saw the fetch from the worker: /service-workers/service-worker/resources/scope2/simple.txt"
FAIL Case #3: sw scope1->scope2 (classic SharedWorker, location.href) assert_equals: location.href expected "https://web-platform.test:9443/service-workers/service-worker/resources/subdir/worker_interception_redirect_webworker.py?greeting=sw2%20saw%20the%20request%20for%20the%20worker%20script" but got "https://web-platform.test:9443/service-workers/service-worker/resources/scope2/worker_interception_redirect_webworker.py"
PASS Case #3: sw scope1->scope2 (module SharedWorker, importScripts())
FAIL Case #3: sw scope1->scope2 (module SharedWorker, fetch()) assert_equals: expected "fetch(): sw2 saw the fetch from the worker: /service-workers/service-worker/resources/subdir/simple.txt" but got "fetch(): sw2 saw the fetch from the worker: /service-workers/service-worker/resources/scope2/simple.txt"
FAIL Case #3: sw scope1->scope2 (module SharedWorker, location.href) assert_equals: location.href expected "https://web-platform.test:9443/service-workers/service-worker/resources/subdir/worker_interception_redirect_webworker.py?greeting=sw2%20saw%20the%20request%20for%20the%20worker%20script" but got "https://web-platform.test:9443/service-workers/service-worker/resources/scope2/worker_interception_redirect_webworker.py"
PASS Case #4: sw scope1->out-scope (classic DedicatedWorker, importScripts())
PASS Case #4: sw scope1->out-scope (classic DedicatedWorker, fetch())
PASS Case #4: sw scope1->out-scope (classic DedicatedWorker, location.href)
PASS Case #4: sw scope1->out-scope (module DedicatedWorker, importScripts())
PASS Case #4: sw scope1->out-scope (module DedicatedWorker, fetch())
PASS Case #4: sw scope1->out-scope (module DedicatedWorker, location.href)
PASS Case #4: sw scope1->out-scope (classic SharedWorker, importScripts())
PASS Case #4: sw scope1->out-scope (classic SharedWorker, fetch())
PASS Case #4: sw scope1->out-scope (classic SharedWorker, location.href)
PASS Case #4: sw scope1->out-scope (module SharedWorker, importScripts())
PASS Case #4: sw scope1->out-scope (module SharedWorker, fetch())
PASS Case #4: sw scope1->out-scope (module SharedWorker, location.href)

