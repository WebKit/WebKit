
FAIL from(): Observable.from() is a function assert_equals: Observable.from() is a function expected "function" but got "undefined"
PASS from(): Failed conversions
FAIL from(): Given an observable, it returns that exact observable target.on is not a function. (In 'target.on('custom')', 'target.on' is undefined)
FAIL from(): Given an array Observable.from is not a function. (In 'Observable.from(array)', 'Observable.from' is undefined)
FAIL from(): Iterable converts to Observable Observable.from is not a function. (In 'Observable.from(iterable)', 'Observable.from' is undefined)
FAIL from(): [Symbol.iterator] side-effects (one observable) Observable.from is not a function. (In 'Observable.from(iterable)', 'Observable.from' is undefined)
FAIL from(): [Symbol.iterator] side-effects (many observables) Observable.from is not a function. (In 'Observable.from(iterable)', 'Observable.from' is undefined)
FAIL from(): [Symbol.iterator] next() throws error Observable.from is not a function. (In 'Observable.from(iterable)', 'Observable.from' is undefined)
FAIL from(): Converts Promise to Observable promise_test: Unhandled rejection with value: object "TypeError: Observable.from is not a function. (In 'Observable.from(promise)', 'Observable.from' is undefined)"
FAIL from(): Converts rejected Promise to Observable. No `unhandledrejection` event when error is handled by subscription promise_test: Unhandled rejection with value: object "TypeError: Observable.from is not a function. (In 'Observable.from(promise)', 'Observable.from' is undefined)"
FAIL from(): Rejections not handled by subscription are reported to the global, and still not sent as an unhandledrejection event assert_not_equals: Error was reported to the global got disallowed value null
FAIL from(): Observable that implements @@iterator protocol gets converted as an Observable, not iterator Observable.from is not a function. (In 'Observable.from(observable)', 'Observable.from' is undefined)
FAIL from(): Promise that implements @@iterator protocol gets converted as an iterable, not Promise Observable.from is not a function. (In 'Observable.from(promise)', 'Observable.from' is undefined)

