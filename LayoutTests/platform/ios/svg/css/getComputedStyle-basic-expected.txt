rect: style.getPropertyValue(align-content) : normal
rect: style.getPropertyCSSValue(align-content) : [object CSSValueList]
rect: style.getPropertyValue(align-items) : normal
rect: style.getPropertyCSSValue(align-items) : [object CSSValueList]
rect: style.getPropertyValue(align-self) : auto
rect: style.getPropertyCSSValue(align-self) : [object CSSValueList]
rect: style.getPropertyValue(alignment-baseline) : auto
rect: style.getPropertyCSSValue(alignment-baseline) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(background-attachment) : scroll
rect: style.getPropertyCSSValue(background-attachment) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(background-clip) : border-box
rect: style.getPropertyCSSValue(background-clip) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(background-color) : rgba(0, 0, 0, 0)
rect: style.getPropertyCSSValue(background-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(background-image) : none
rect: style.getPropertyCSSValue(background-image) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(background-origin) : padding-box
rect: style.getPropertyCSSValue(background-origin) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(background-repeat) : repeat
rect: style.getPropertyCSSValue(background-repeat) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(background-size) : auto
rect: style.getPropertyCSSValue(background-size) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(baseline-shift) : baseline
rect: style.getPropertyCSSValue(baseline-shift) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-bottom-color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(border-bottom-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-bottom-left-radius) : 0px
rect: style.getPropertyCSSValue(border-bottom-left-radius) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-bottom-right-radius) : 0px
rect: style.getPropertyCSSValue(border-bottom-right-radius) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-bottom-style) : none
rect: style.getPropertyCSSValue(border-bottom-style) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-bottom-width) : 0px
rect: style.getPropertyCSSValue(border-bottom-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-collapse) : separate
rect: style.getPropertyCSSValue(border-collapse) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-image-outset) : 0
rect: style.getPropertyCSSValue(border-image-outset) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-image-repeat) : stretch
rect: style.getPropertyCSSValue(border-image-repeat) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-image-slice) : 100%
rect: style.getPropertyCSSValue(border-image-slice) : [object CSSValue]
rect: style.getPropertyValue(border-image-source) : none
rect: style.getPropertyCSSValue(border-image-source) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-image-width) : 1
rect: style.getPropertyCSSValue(border-image-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-left-color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(border-left-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-left-style) : none
rect: style.getPropertyCSSValue(border-left-style) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-left-width) : 0px
rect: style.getPropertyCSSValue(border-left-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-right-color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(border-right-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-right-style) : none
rect: style.getPropertyCSSValue(border-right-style) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-right-width) : 0px
rect: style.getPropertyCSSValue(border-right-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-top-color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(border-top-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-top-left-radius) : 0px
rect: style.getPropertyCSSValue(border-top-left-radius) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-top-right-radius) : 0px
rect: style.getPropertyCSSValue(border-top-right-radius) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-top-style) : none
rect: style.getPropertyCSSValue(border-top-style) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(border-top-width) : 0px
rect: style.getPropertyCSSValue(border-top-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(bottom) : auto
rect: style.getPropertyCSSValue(bottom) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(box-shadow) : none
rect: style.getPropertyCSSValue(box-shadow) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(box-sizing) : content-box
rect: style.getPropertyCSSValue(box-sizing) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(buffered-rendering) : auto
rect: style.getPropertyCSSValue(buffered-rendering) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(caption-side) : top
rect: style.getPropertyCSSValue(caption-side) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(clear) : none
rect: style.getPropertyCSSValue(clear) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(clip) : auto
rect: style.getPropertyCSSValue(clip) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(clip-path) : none
rect: style.getPropertyCSSValue(clip-path) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(clip-rule) : nonzero
rect: style.getPropertyCSSValue(clip-rule) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(color-interpolation) : sRGB
rect: style.getPropertyCSSValue(color-interpolation) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(color-interpolation-filters) : linearRGB
rect: style.getPropertyCSSValue(color-interpolation-filters) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(color-rendering) : auto
rect: style.getPropertyCSSValue(color-rendering) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(column-count) : auto
rect: style.getPropertyCSSValue(column-count) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(column-fill) : balance
rect: style.getPropertyCSSValue(column-fill) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(column-gap) : normal
rect: style.getPropertyCSSValue(column-gap) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(column-rule-color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(column-rule-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(column-rule-style) : none
rect: style.getPropertyCSSValue(column-rule-style) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(column-rule-width) : 0px
rect: style.getPropertyCSSValue(column-rule-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(column-span) : none
rect: style.getPropertyCSSValue(column-span) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(column-width) : auto
rect: style.getPropertyCSSValue(column-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(content) :
rect: style.getPropertyCSSValue(content) : [object CSSValueList]
rect: style.getPropertyValue(counter-increment) : none
rect: style.getPropertyCSSValue(counter-increment) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(counter-reset) : none
rect: style.getPropertyCSSValue(counter-reset) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(cursor) : auto
rect: style.getPropertyCSSValue(cursor) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(direction) : ltr
rect: style.getPropertyCSSValue(direction) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(display) : inline
rect: style.getPropertyCSSValue(display) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(dominant-baseline) : auto
rect: style.getPropertyCSSValue(dominant-baseline) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(empty-cells) : show
rect: style.getPropertyCSSValue(empty-cells) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(fill) : rgb(0, 0, 255)
rect: style.getPropertyCSSValue(fill) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(fill-opacity) : 1
rect: style.getPropertyCSSValue(fill-opacity) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(fill-rule) : nonzero
rect: style.getPropertyCSSValue(fill-rule) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(filter) : none
rect: style.getPropertyCSSValue(filter) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(flex-basis) : auto
rect: style.getPropertyCSSValue(flex-basis) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(flex-direction) : row
rect: style.getPropertyCSSValue(flex-direction) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(flex-grow) : 0
rect: style.getPropertyCSSValue(flex-grow) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(flex-shrink) : 1
rect: style.getPropertyCSSValue(flex-shrink) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(flex-wrap) : nowrap
rect: style.getPropertyCSSValue(flex-wrap) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(float) : none
rect: style.getPropertyCSSValue(float) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(flood-color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(flood-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(flood-opacity) : 1
rect: style.getPropertyCSSValue(flood-opacity) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(font-optical-sizing) : auto
rect: style.getPropertyCSSValue(font-optical-sizing) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(font-size) : 16px
rect: style.getPropertyCSSValue(font-size) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(font-style) : normal
rect: style.getPropertyCSSValue(font-style) : [object CSSValue]
rect: style.getPropertyValue(font-synthesis) : style weight small-caps
rect: style.getPropertyCSSValue(font-synthesis) : [object CSSValueList]
rect: style.getPropertyValue(font-variant-alternates) : normal
rect: style.getPropertyCSSValue(font-variant-alternates) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(font-variant-caps) : normal
rect: style.getPropertyCSSValue(font-variant-caps) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(font-variant-east-asian) : normal
rect: style.getPropertyCSSValue(font-variant-east-asian) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(font-variant-ligatures) : normal
rect: style.getPropertyCSSValue(font-variant-ligatures) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(font-variant-numeric) : normal
rect: style.getPropertyCSSValue(font-variant-numeric) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(font-variant-position) : normal
rect: style.getPropertyCSSValue(font-variant-position) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(font-weight) : normal
rect: style.getPropertyCSSValue(font-weight) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(glyph-orientation-horizontal) : 0deg
rect: style.getPropertyCSSValue(glyph-orientation-horizontal) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(glyph-orientation-vertical) : auto
rect: style.getPropertyCSSValue(glyph-orientation-vertical) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(grid-auto-columns) : auto
rect: style.getPropertyCSSValue(grid-auto-columns) : [object CSSValueList]
rect: style.getPropertyValue(grid-auto-flow) : row
rect: style.getPropertyCSSValue(grid-auto-flow) : [object CSSValueList]
rect: style.getPropertyValue(grid-auto-rows) : auto
rect: style.getPropertyCSSValue(grid-auto-rows) : [object CSSValueList]
rect: style.getPropertyValue(grid-column-end) : auto
rect: style.getPropertyCSSValue(grid-column-end) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(grid-column-start) : auto
rect: style.getPropertyCSSValue(grid-column-start) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(grid-row-end) : auto
rect: style.getPropertyCSSValue(grid-row-end) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(grid-row-start) : auto
rect: style.getPropertyCSSValue(grid-row-start) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(grid-template-columns) : none
rect: style.getPropertyCSSValue(grid-template-columns) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(grid-template-rows) : none
rect: style.getPropertyCSSValue(grid-template-rows) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(hanging-punctuation) : none
rect: style.getPropertyCSSValue(hanging-punctuation) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(height) : 100px
rect: style.getPropertyCSSValue(height) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(image-rendering) : auto
rect: style.getPropertyCSSValue(image-rendering) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(justify-content) : normal
rect: style.getPropertyCSSValue(justify-content) : [object CSSValueList]
rect: style.getPropertyValue(justify-items) : normal
rect: style.getPropertyCSSValue(justify-items) : [object CSSValueList]
rect: style.getPropertyValue(justify-self) : auto
rect: style.getPropertyCSSValue(justify-self) : [object CSSValueList]
rect: style.getPropertyValue(kerning) : 0
rect: style.getPropertyCSSValue(kerning) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(left) : auto
rect: style.getPropertyCSSValue(left) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(letter-spacing) : normal
rect: style.getPropertyCSSValue(letter-spacing) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(lighting-color) : rgb(255, 255, 255)
rect: style.getPropertyCSSValue(lighting-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(line-height) : normal
rect: style.getPropertyCSSValue(line-height) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(list-style-image) : none
rect: style.getPropertyCSSValue(list-style-image) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(list-style-position) : outside
rect: style.getPropertyCSSValue(list-style-position) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(list-style-type) : disc
rect: style.getPropertyCSSValue(list-style-type) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(margin-bottom) : 0px
rect: style.getPropertyCSSValue(margin-bottom) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(margin-left) : 0px
rect: style.getPropertyCSSValue(margin-left) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(margin-right) : 0px
rect: style.getPropertyCSSValue(margin-right) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(margin-top) : 0px
rect: style.getPropertyCSSValue(margin-top) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(marker-end) : none
rect: style.getPropertyCSSValue(marker-end) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(marker-mid) : none
rect: style.getPropertyCSSValue(marker-mid) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(marker-start) : none
rect: style.getPropertyCSSValue(marker-start) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(mask) : none
rect: style.getPropertyCSSValue(mask) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(mask-type) : luminance
rect: style.getPropertyCSSValue(mask-type) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(max-height) : none
rect: style.getPropertyCSSValue(max-height) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(max-width) : none
rect: style.getPropertyCSSValue(max-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(min-height) : 0px
rect: style.getPropertyCSSValue(min-height) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(min-width) : 0px
rect: style.getPropertyCSSValue(min-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(object-fit) : fill
rect: style.getPropertyCSSValue(object-fit) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(object-position) : 50% 50%
rect: style.getPropertyCSSValue(object-position) : [object CSSValueList]
rect: style.getPropertyValue(opacity) : 1
rect: style.getPropertyCSSValue(opacity) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(order) : 0
rect: style.getPropertyCSSValue(order) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(orphans) : auto
rect: style.getPropertyCSSValue(orphans) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(outline-color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(outline-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(outline-offset) : 0px
rect: style.getPropertyCSSValue(outline-offset) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(outline-style) : none
rect: style.getPropertyCSSValue(outline-style) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(outline-width) : 0px
rect: style.getPropertyCSSValue(outline-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(overflow-wrap) : normal
rect: style.getPropertyCSSValue(overflow-wrap) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(overflow-x) : visible
rect: style.getPropertyCSSValue(overflow-x) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(overflow-y) : visible
rect: style.getPropertyCSSValue(overflow-y) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(padding-bottom) : 0px
rect: style.getPropertyCSSValue(padding-bottom) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(padding-left) : 0px
rect: style.getPropertyCSSValue(padding-left) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(padding-right) : 0px
rect: style.getPropertyCSSValue(padding-right) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(padding-top) : 0px
rect: style.getPropertyCSSValue(padding-top) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(page-break-after) : auto
rect: style.getPropertyCSSValue(page-break-after) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(page-break-before) : auto
rect: style.getPropertyCSSValue(page-break-before) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(page-break-inside) : auto
rect: style.getPropertyCSSValue(page-break-inside) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(paint-order) : normal
rect: style.getPropertyCSSValue(paint-order) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(perspective) : none
rect: style.getPropertyCSSValue(perspective) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(pointer-events) : auto
rect: style.getPropertyCSSValue(pointer-events) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(position) : static
rect: style.getPropertyCSSValue(position) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(resize) : none
rect: style.getPropertyCSSValue(resize) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(right) : auto
rect: style.getPropertyCSSValue(right) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(shape-image-threshold) : 0
rect: style.getPropertyCSSValue(shape-image-threshold) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(shape-margin) : 0px
rect: style.getPropertyCSSValue(shape-margin) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(shape-outside) : none
rect: style.getPropertyCSSValue(shape-outside) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(shape-rendering) : auto
rect: style.getPropertyCSSValue(shape-rendering) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(stop-color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(stop-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(stop-opacity) : 1
rect: style.getPropertyCSSValue(stop-opacity) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(stroke) : rgb(255, 165, 0)
rect: style.getPropertyCSSValue(stroke) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(stroke-dasharray) : none
rect: style.getPropertyCSSValue(stroke-dasharray) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(stroke-dashoffset) : 0px
rect: style.getPropertyCSSValue(stroke-dashoffset) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(stroke-linecap) : butt
rect: style.getPropertyCSSValue(stroke-linecap) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(stroke-linejoin) : miter
rect: style.getPropertyCSSValue(stroke-linejoin) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(stroke-miterlimit) : 4
rect: style.getPropertyCSSValue(stroke-miterlimit) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(stroke-opacity) : 1
rect: style.getPropertyCSSValue(stroke-opacity) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(stroke-width) : 2px
rect: style.getPropertyCSSValue(stroke-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(tab-size) : 8
rect: style.getPropertyCSSValue(tab-size) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(table-layout) : auto
rect: style.getPropertyCSSValue(table-layout) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(text-align) : start
rect: style.getPropertyCSSValue(text-align) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(text-anchor) : start
rect: style.getPropertyCSSValue(text-anchor) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(text-decoration) : none
rect: style.getPropertyCSSValue(text-decoration) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(text-indent) : 0px
rect: style.getPropertyCSSValue(text-indent) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(text-overflow) : clip
rect: style.getPropertyCSSValue(text-overflow) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(text-rendering) : auto
rect: style.getPropertyCSSValue(text-rendering) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(text-shadow) : none
rect: style.getPropertyCSSValue(text-shadow) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(text-transform) : none
rect: style.getPropertyCSSValue(text-transform) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(top) : auto
rect: style.getPropertyCSSValue(top) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(transform) : none
rect: style.getPropertyCSSValue(transform) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(transform-style) : flat
rect: style.getPropertyCSSValue(transform-style) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(transition-delay) : 0s
rect: style.getPropertyCSSValue(transition-delay) : [object CSSValueList]
rect: style.getPropertyValue(transition-duration) : 0s
rect: style.getPropertyCSSValue(transition-duration) : [object CSSValueList]
rect: style.getPropertyValue(transition-property) : all
rect: style.getPropertyCSSValue(transition-property) : [object CSSValueList]
rect: style.getPropertyValue(transition-timing-function) : ease
rect: style.getPropertyCSSValue(transition-timing-function) : [object CSSValueList]
rect: style.getPropertyValue(unicode-bidi) : normal
rect: style.getPropertyCSSValue(unicode-bidi) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(vector-effect) : none
rect: style.getPropertyCSSValue(vector-effect) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(vertical-align) : baseline
rect: style.getPropertyCSSValue(vertical-align) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(visibility) : visible
rect: style.getPropertyCSSValue(visibility) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(white-space) : normal
rect: style.getPropertyCSSValue(white-space) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(widows) : auto
rect: style.getPropertyCSSValue(widows) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(width) : 100px
rect: style.getPropertyCSSValue(width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(will-change) : auto
rect: style.getPropertyCSSValue(will-change) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(word-break) : normal
rect: style.getPropertyCSSValue(word-break) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(word-spacing) : 0px
rect: style.getPropertyCSSValue(word-spacing) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(word-wrap) : normal
rect: style.getPropertyCSSValue(word-wrap) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(writing-mode) : horizontal-tb
rect: style.getPropertyCSSValue(writing-mode) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(z-index) : auto
rect: style.getPropertyCSSValue(z-index) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(zoom) : 1
rect: style.getPropertyCSSValue(zoom) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-appearance) : none
rect: style.getPropertyCSSValue(-webkit-appearance) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-backface-visibility) : visible
rect: style.getPropertyCSSValue(-webkit-backface-visibility) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-background-clip) : border-box
rect: style.getPropertyCSSValue(-webkit-background-clip) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-background-composite) : source-over
rect: style.getPropertyCSSValue(-webkit-background-composite) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-background-origin) : padding-box
rect: style.getPropertyCSSValue(-webkit-background-origin) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-background-size) : auto
rect: style.getPropertyCSSValue(-webkit-background-size) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-border-fit) : border
rect: style.getPropertyCSSValue(-webkit-border-fit) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-border-horizontal-spacing) : 0px
rect: style.getPropertyCSSValue(-webkit-border-horizontal-spacing) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-border-image) : none
rect: style.getPropertyCSSValue(-webkit-border-image) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-border-vertical-spacing) : 0px
rect: style.getPropertyCSSValue(-webkit-border-vertical-spacing) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-box-align) : stretch
rect: style.getPropertyCSSValue(-webkit-box-align) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-box-decoration-break) : slice
rect: style.getPropertyCSSValue(-webkit-box-decoration-break) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-box-direction) : normal
rect: style.getPropertyCSSValue(-webkit-box-direction) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-box-flex) : 0
rect: style.getPropertyCSSValue(-webkit-box-flex) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-box-flex-group) : 1
rect: style.getPropertyCSSValue(-webkit-box-flex-group) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-box-lines) : single
rect: style.getPropertyCSSValue(-webkit-box-lines) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-box-ordinal-group) : 1
rect: style.getPropertyCSSValue(-webkit-box-ordinal-group) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-box-orient) : horizontal
rect: style.getPropertyCSSValue(-webkit-box-orient) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-box-pack) : start
rect: style.getPropertyCSSValue(-webkit-box-pack) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-box-reflect) : none
rect: style.getPropertyCSSValue(-webkit-box-reflect) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-box-shadow) : none
rect: style.getPropertyCSSValue(-webkit-box-shadow) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-column-axis) : auto
rect: style.getPropertyCSSValue(-webkit-column-axis) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-column-break-after) : auto
rect: style.getPropertyCSSValue(-webkit-column-break-after) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-column-break-before) : auto
rect: style.getPropertyCSSValue(-webkit-column-break-before) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-column-break-inside) : auto
rect: style.getPropertyCSSValue(-webkit-column-break-inside) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-font-kerning) : auto
rect: style.getPropertyCSSValue(-webkit-font-kerning) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-font-smoothing) : auto
rect: style.getPropertyCSSValue(-webkit-font-smoothing) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-hyphenate-character) : auto
rect: style.getPropertyCSSValue(-webkit-hyphenate-character) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-hyphenate-limit-after) : auto
rect: style.getPropertyCSSValue(-webkit-hyphenate-limit-after) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-hyphenate-limit-before) : auto
rect: style.getPropertyCSSValue(-webkit-hyphenate-limit-before) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-hyphenate-limit-lines) : no-limit
rect: style.getPropertyCSSValue(-webkit-hyphenate-limit-lines) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-hyphens) : manual
rect: style.getPropertyCSSValue(-webkit-hyphens) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-line-align) : none
rect: style.getPropertyCSSValue(-webkit-line-align) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-line-box-contain) : block inline replaced
rect: style.getPropertyCSSValue(-webkit-line-box-contain) : [object CSSValue]
rect: style.getPropertyValue(-webkit-line-clamp) : none
rect: style.getPropertyCSSValue(-webkit-line-clamp) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-line-grid) : none
rect: style.getPropertyCSSValue(-webkit-line-grid) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-line-snap) : none
rect: style.getPropertyCSSValue(-webkit-line-snap) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-locale) : auto
rect: style.getPropertyCSSValue(-webkit-locale) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-margin-after-collapse) : collapse
rect: style.getPropertyCSSValue(-webkit-margin-after-collapse) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-margin-before-collapse) : collapse
rect: style.getPropertyCSSValue(-webkit-margin-before-collapse) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-mask-box-image) : none
rect: style.getPropertyCSSValue(-webkit-mask-box-image) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-mask-box-image-outset) : 0
rect: style.getPropertyCSSValue(-webkit-mask-box-image-outset) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-mask-box-image-repeat) : stretch
rect: style.getPropertyCSSValue(-webkit-mask-box-image-repeat) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-mask-box-image-slice) : 0 fill
rect: style.getPropertyCSSValue(-webkit-mask-box-image-slice) : [object CSSValue]
rect: style.getPropertyValue(-webkit-mask-box-image-source) : none
rect: style.getPropertyCSSValue(-webkit-mask-box-image-source) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-mask-box-image-width) : auto
rect: style.getPropertyCSSValue(-webkit-mask-box-image-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-mask-clip) : border-box
rect: style.getPropertyCSSValue(-webkit-mask-clip) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-mask-composite) : source-over
rect: style.getPropertyCSSValue(-webkit-mask-composite) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-mask-image) : none
rect: style.getPropertyCSSValue(-webkit-mask-image) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-mask-origin) : border-box
rect: style.getPropertyCSSValue(-webkit-mask-origin) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-mask-repeat) : repeat
rect: style.getPropertyCSSValue(-webkit-mask-repeat) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-mask-size) : auto
rect: style.getPropertyCSSValue(-webkit-mask-size) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-nbsp-mode) : normal
rect: style.getPropertyCSSValue(-webkit-nbsp-mode) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-print-color-adjust) : economy
rect: style.getPropertyCSSValue(-webkit-print-color-adjust) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-rtl-ordering) : logical
rect: style.getPropertyCSSValue(-webkit-rtl-ordering) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-text-combine) : none
rect: style.getPropertyCSSValue(-webkit-text-combine) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-text-emphasis-color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(-webkit-text-emphasis-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-text-emphasis-position) : over right
rect: style.getPropertyCSSValue(-webkit-text-emphasis-position) : [object CSSValueList]
rect: style.getPropertyValue(-webkit-text-emphasis-style) : none
rect: style.getPropertyCSSValue(-webkit-text-emphasis-style) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-text-fill-color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(-webkit-text-fill-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-text-orientation) : mixed
rect: style.getPropertyCSSValue(-webkit-text-orientation) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-text-security) : none
rect: style.getPropertyCSSValue(-webkit-text-security) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-text-stroke-color) : rgb(0, 0, 0)
rect: style.getPropertyCSSValue(-webkit-text-stroke-color) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-text-stroke-width) : 0px
rect: style.getPropertyCSSValue(-webkit-text-stroke-width) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-transform-style) : flat
rect: style.getPropertyCSSValue(-webkit-transform-style) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-user-drag) : auto
rect: style.getPropertyCSSValue(-webkit-user-drag) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-user-modify) : read-only
rect: style.getPropertyCSSValue(-webkit-user-modify) : [object CSSPrimitiveValue]
rect: style.getPropertyValue(-webkit-user-select) : text
rect: style.getPropertyCSSValue(-webkit-user-select) : [object CSSPrimitiveValue]
g: style.getPropertyValue(align-content) : normal
g: style.getPropertyCSSValue(align-content) : [object CSSValueList]
g: style.getPropertyValue(align-items) : normal
g: style.getPropertyCSSValue(align-items) : [object CSSValueList]
g: style.getPropertyValue(align-self) : auto
g: style.getPropertyCSSValue(align-self) : [object CSSValueList]
g: style.getPropertyValue(alignment-baseline) : auto
g: style.getPropertyCSSValue(alignment-baseline) : [object CSSPrimitiveValue]
g: style.getPropertyValue(background-attachment) : scroll
g: style.getPropertyCSSValue(background-attachment) : [object CSSPrimitiveValue]
g: style.getPropertyValue(background-clip) : border-box
g: style.getPropertyCSSValue(background-clip) : [object CSSPrimitiveValue]
g: style.getPropertyValue(background-color) : rgba(0, 0, 0, 0)
g: style.getPropertyCSSValue(background-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(background-image) : none
g: style.getPropertyCSSValue(background-image) : [object CSSPrimitiveValue]
g: style.getPropertyValue(background-origin) : padding-box
g: style.getPropertyCSSValue(background-origin) : [object CSSPrimitiveValue]
g: style.getPropertyValue(background-repeat) : repeat
g: style.getPropertyCSSValue(background-repeat) : [object CSSPrimitiveValue]
g: style.getPropertyValue(background-size) : auto
g: style.getPropertyCSSValue(background-size) : [object CSSPrimitiveValue]
g: style.getPropertyValue(baseline-shift) : baseline
g: style.getPropertyCSSValue(baseline-shift) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-bottom-color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(border-bottom-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-bottom-left-radius) : 0px
g: style.getPropertyCSSValue(border-bottom-left-radius) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-bottom-right-radius) : 0px
g: style.getPropertyCSSValue(border-bottom-right-radius) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-bottom-style) : none
g: style.getPropertyCSSValue(border-bottom-style) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-bottom-width) : 0px
g: style.getPropertyCSSValue(border-bottom-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-collapse) : separate
g: style.getPropertyCSSValue(border-collapse) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-image-outset) : 0
g: style.getPropertyCSSValue(border-image-outset) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-image-repeat) : stretch
g: style.getPropertyCSSValue(border-image-repeat) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-image-slice) : 100%
g: style.getPropertyCSSValue(border-image-slice) : [object CSSValue]
g: style.getPropertyValue(border-image-source) : none
g: style.getPropertyCSSValue(border-image-source) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-image-width) : 1
g: style.getPropertyCSSValue(border-image-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-left-color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(border-left-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-left-style) : none
g: style.getPropertyCSSValue(border-left-style) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-left-width) : 0px
g: style.getPropertyCSSValue(border-left-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-right-color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(border-right-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-right-style) : none
g: style.getPropertyCSSValue(border-right-style) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-right-width) : 0px
g: style.getPropertyCSSValue(border-right-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-top-color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(border-top-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-top-left-radius) : 0px
g: style.getPropertyCSSValue(border-top-left-radius) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-top-right-radius) : 0px
g: style.getPropertyCSSValue(border-top-right-radius) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-top-style) : none
g: style.getPropertyCSSValue(border-top-style) : [object CSSPrimitiveValue]
g: style.getPropertyValue(border-top-width) : 0px
g: style.getPropertyCSSValue(border-top-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(bottom) : auto
g: style.getPropertyCSSValue(bottom) : [object CSSPrimitiveValue]
g: style.getPropertyValue(box-shadow) : none
g: style.getPropertyCSSValue(box-shadow) : [object CSSPrimitiveValue]
g: style.getPropertyValue(box-sizing) : content-box
g: style.getPropertyCSSValue(box-sizing) : [object CSSPrimitiveValue]
g: style.getPropertyValue(buffered-rendering) : auto
g: style.getPropertyCSSValue(buffered-rendering) : [object CSSPrimitiveValue]
g: style.getPropertyValue(caption-side) : top
g: style.getPropertyCSSValue(caption-side) : [object CSSPrimitiveValue]
g: style.getPropertyValue(clear) : none
g: style.getPropertyCSSValue(clear) : [object CSSPrimitiveValue]
g: style.getPropertyValue(clip) : auto
g: style.getPropertyCSSValue(clip) : [object CSSPrimitiveValue]
g: style.getPropertyValue(clip-path) : none
g: style.getPropertyCSSValue(clip-path) : [object CSSPrimitiveValue]
g: style.getPropertyValue(clip-rule) : nonzero
g: style.getPropertyCSSValue(clip-rule) : [object CSSPrimitiveValue]
g: style.getPropertyValue(color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(color-interpolation) : sRGB
g: style.getPropertyCSSValue(color-interpolation) : [object CSSPrimitiveValue]
g: style.getPropertyValue(color-interpolation-filters) : linearRGB
g: style.getPropertyCSSValue(color-interpolation-filters) : [object CSSPrimitiveValue]
g: style.getPropertyValue(color-rendering) : auto
g: style.getPropertyCSSValue(color-rendering) : [object CSSPrimitiveValue]
g: style.getPropertyValue(column-count) : auto
g: style.getPropertyCSSValue(column-count) : [object CSSPrimitiveValue]
g: style.getPropertyValue(column-fill) : balance
g: style.getPropertyCSSValue(column-fill) : [object CSSPrimitiveValue]
g: style.getPropertyValue(column-gap) : normal
g: style.getPropertyCSSValue(column-gap) : [object CSSPrimitiveValue]
g: style.getPropertyValue(column-rule-color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(column-rule-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(column-rule-style) : none
g: style.getPropertyCSSValue(column-rule-style) : [object CSSPrimitiveValue]
g: style.getPropertyValue(column-rule-width) : 0px
g: style.getPropertyCSSValue(column-rule-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(column-span) : none
g: style.getPropertyCSSValue(column-span) : [object CSSPrimitiveValue]
g: style.getPropertyValue(column-width) : auto
g: style.getPropertyCSSValue(column-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(content) :
g: style.getPropertyCSSValue(content) : [object CSSValueList]
g: style.getPropertyValue(counter-increment) : none
g: style.getPropertyCSSValue(counter-increment) : [object CSSPrimitiveValue]
g: style.getPropertyValue(counter-reset) : none
g: style.getPropertyCSSValue(counter-reset) : [object CSSPrimitiveValue]
g: style.getPropertyValue(cursor) : auto
g: style.getPropertyCSSValue(cursor) : [object CSSPrimitiveValue]
g: style.getPropertyValue(direction) : ltr
g: style.getPropertyCSSValue(direction) : [object CSSPrimitiveValue]
g: style.getPropertyValue(display) : inline
g: style.getPropertyCSSValue(display) : [object CSSPrimitiveValue]
g: style.getPropertyValue(dominant-baseline) : auto
g: style.getPropertyCSSValue(dominant-baseline) : [object CSSPrimitiveValue]
g: style.getPropertyValue(empty-cells) : show
g: style.getPropertyCSSValue(empty-cells) : [object CSSPrimitiveValue]
g: style.getPropertyValue(fill) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(fill) : [object CSSPrimitiveValue]
g: style.getPropertyValue(fill-opacity) : 1
g: style.getPropertyCSSValue(fill-opacity) : [object CSSPrimitiveValue]
g: style.getPropertyValue(fill-rule) : nonzero
g: style.getPropertyCSSValue(fill-rule) : [object CSSPrimitiveValue]
g: style.getPropertyValue(filter) : none
g: style.getPropertyCSSValue(filter) : [object CSSPrimitiveValue]
g: style.getPropertyValue(flex-basis) : auto
g: style.getPropertyCSSValue(flex-basis) : [object CSSPrimitiveValue]
g: style.getPropertyValue(flex-direction) : row
g: style.getPropertyCSSValue(flex-direction) : [object CSSPrimitiveValue]
g: style.getPropertyValue(flex-grow) : 0
g: style.getPropertyCSSValue(flex-grow) : [object CSSPrimitiveValue]
g: style.getPropertyValue(flex-shrink) : 1
g: style.getPropertyCSSValue(flex-shrink) : [object CSSPrimitiveValue]
g: style.getPropertyValue(flex-wrap) : nowrap
g: style.getPropertyCSSValue(flex-wrap) : [object CSSPrimitiveValue]
g: style.getPropertyValue(float) : none
g: style.getPropertyCSSValue(float) : [object CSSPrimitiveValue]
g: style.getPropertyValue(flood-color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(flood-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(flood-opacity) : 1
g: style.getPropertyCSSValue(flood-opacity) : [object CSSPrimitiveValue]
g: style.getPropertyValue(font-optical-sizing) : auto
g: style.getPropertyCSSValue(font-optical-sizing) : [object CSSPrimitiveValue]
g: style.getPropertyValue(font-size) : 16px
g: style.getPropertyCSSValue(font-size) : [object CSSPrimitiveValue]
g: style.getPropertyValue(font-style) : normal
g: style.getPropertyCSSValue(font-style) : [object CSSValue]
g: style.getPropertyValue(font-synthesis) : style weight small-caps
g: style.getPropertyCSSValue(font-synthesis) : [object CSSValueList]
g: style.getPropertyValue(font-variant-alternates) : normal
g: style.getPropertyCSSValue(font-variant-alternates) : [object CSSPrimitiveValue]
g: style.getPropertyValue(font-variant-caps) : normal
g: style.getPropertyCSSValue(font-variant-caps) : [object CSSPrimitiveValue]
g: style.getPropertyValue(font-variant-east-asian) : normal
g: style.getPropertyCSSValue(font-variant-east-asian) : [object CSSPrimitiveValue]
g: style.getPropertyValue(font-variant-ligatures) : normal
g: style.getPropertyCSSValue(font-variant-ligatures) : [object CSSPrimitiveValue]
g: style.getPropertyValue(font-variant-numeric) : normal
g: style.getPropertyCSSValue(font-variant-numeric) : [object CSSPrimitiveValue]
g: style.getPropertyValue(font-variant-position) : normal
g: style.getPropertyCSSValue(font-variant-position) : [object CSSPrimitiveValue]
g: style.getPropertyValue(font-weight) : normal
g: style.getPropertyCSSValue(font-weight) : [object CSSPrimitiveValue]
g: style.getPropertyValue(glyph-orientation-horizontal) : 0deg
g: style.getPropertyCSSValue(glyph-orientation-horizontal) : [object CSSPrimitiveValue]
g: style.getPropertyValue(glyph-orientation-vertical) : auto
g: style.getPropertyCSSValue(glyph-orientation-vertical) : [object CSSPrimitiveValue]
g: style.getPropertyValue(grid-auto-columns) : auto
g: style.getPropertyCSSValue(grid-auto-columns) : [object CSSValueList]
g: style.getPropertyValue(grid-auto-flow) : row
g: style.getPropertyCSSValue(grid-auto-flow) : [object CSSValueList]
g: style.getPropertyValue(grid-auto-rows) : auto
g: style.getPropertyCSSValue(grid-auto-rows) : [object CSSValueList]
g: style.getPropertyValue(grid-column-end) : auto
g: style.getPropertyCSSValue(grid-column-end) : [object CSSPrimitiveValue]
g: style.getPropertyValue(grid-column-start) : auto
g: style.getPropertyCSSValue(grid-column-start) : [object CSSPrimitiveValue]
g: style.getPropertyValue(grid-row-end) : auto
g: style.getPropertyCSSValue(grid-row-end) : [object CSSPrimitiveValue]
g: style.getPropertyValue(grid-row-start) : auto
g: style.getPropertyCSSValue(grid-row-start) : [object CSSPrimitiveValue]
g: style.getPropertyValue(grid-template-columns) : none
g: style.getPropertyCSSValue(grid-template-columns) : [object CSSPrimitiveValue]
g: style.getPropertyValue(grid-template-rows) : none
g: style.getPropertyCSSValue(grid-template-rows) : [object CSSPrimitiveValue]
g: style.getPropertyValue(hanging-punctuation) : none
g: style.getPropertyCSSValue(hanging-punctuation) : [object CSSPrimitiveValue]
g: style.getPropertyValue(height) : auto
g: style.getPropertyCSSValue(height) : [object CSSPrimitiveValue]
g: style.getPropertyValue(image-rendering) : auto
g: style.getPropertyCSSValue(image-rendering) : [object CSSPrimitiveValue]
g: style.getPropertyValue(justify-content) : normal
g: style.getPropertyCSSValue(justify-content) : [object CSSValueList]
g: style.getPropertyValue(justify-items) : normal
g: style.getPropertyCSSValue(justify-items) : [object CSSValueList]
g: style.getPropertyValue(justify-self) : auto
g: style.getPropertyCSSValue(justify-self) : [object CSSValueList]
g: style.getPropertyValue(kerning) : 0
g: style.getPropertyCSSValue(kerning) : [object CSSPrimitiveValue]
g: style.getPropertyValue(left) : auto
g: style.getPropertyCSSValue(left) : [object CSSPrimitiveValue]
g: style.getPropertyValue(letter-spacing) : normal
g: style.getPropertyCSSValue(letter-spacing) : [object CSSPrimitiveValue]
g: style.getPropertyValue(lighting-color) : rgb(255, 255, 255)
g: style.getPropertyCSSValue(lighting-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(line-height) : normal
g: style.getPropertyCSSValue(line-height) : [object CSSPrimitiveValue]
g: style.getPropertyValue(list-style-image) : none
g: style.getPropertyCSSValue(list-style-image) : [object CSSPrimitiveValue]
g: style.getPropertyValue(list-style-position) : outside
g: style.getPropertyCSSValue(list-style-position) : [object CSSPrimitiveValue]
g: style.getPropertyValue(list-style-type) : disc
g: style.getPropertyCSSValue(list-style-type) : [object CSSPrimitiveValue]
g: style.getPropertyValue(margin-bottom) : 0px
g: style.getPropertyCSSValue(margin-bottom) : [object CSSPrimitiveValue]
g: style.getPropertyValue(margin-left) : 0px
g: style.getPropertyCSSValue(margin-left) : [object CSSPrimitiveValue]
g: style.getPropertyValue(margin-right) : 0px
g: style.getPropertyCSSValue(margin-right) : [object CSSPrimitiveValue]
g: style.getPropertyValue(margin-top) : 0px
g: style.getPropertyCSSValue(margin-top) : [object CSSPrimitiveValue]
g: style.getPropertyValue(marker-end) : none
g: style.getPropertyCSSValue(marker-end) : [object CSSPrimitiveValue]
g: style.getPropertyValue(marker-mid) : none
g: style.getPropertyCSSValue(marker-mid) : [object CSSPrimitiveValue]
g: style.getPropertyValue(marker-start) : none
g: style.getPropertyCSSValue(marker-start) : [object CSSPrimitiveValue]
g: style.getPropertyValue(mask) : none
g: style.getPropertyCSSValue(mask) : [object CSSPrimitiveValue]
g: style.getPropertyValue(mask-type) : luminance
g: style.getPropertyCSSValue(mask-type) : [object CSSPrimitiveValue]
g: style.getPropertyValue(max-height) : none
g: style.getPropertyCSSValue(max-height) : [object CSSPrimitiveValue]
g: style.getPropertyValue(max-width) : none
g: style.getPropertyCSSValue(max-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(min-height) : 0px
g: style.getPropertyCSSValue(min-height) : [object CSSPrimitiveValue]
g: style.getPropertyValue(min-width) : 0px
g: style.getPropertyCSSValue(min-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(object-fit) : fill
g: style.getPropertyCSSValue(object-fit) : [object CSSPrimitiveValue]
g: style.getPropertyValue(object-position) : 50% 50%
g: style.getPropertyCSSValue(object-position) : [object CSSValueList]
g: style.getPropertyValue(opacity) : 1
g: style.getPropertyCSSValue(opacity) : [object CSSPrimitiveValue]
g: style.getPropertyValue(order) : 0
g: style.getPropertyCSSValue(order) : [object CSSPrimitiveValue]
g: style.getPropertyValue(orphans) : auto
g: style.getPropertyCSSValue(orphans) : [object CSSPrimitiveValue]
g: style.getPropertyValue(outline-color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(outline-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(outline-offset) : 0px
g: style.getPropertyCSSValue(outline-offset) : [object CSSPrimitiveValue]
g: style.getPropertyValue(outline-style) : none
g: style.getPropertyCSSValue(outline-style) : [object CSSPrimitiveValue]
g: style.getPropertyValue(outline-width) : 0px
g: style.getPropertyCSSValue(outline-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(overflow-wrap) : normal
g: style.getPropertyCSSValue(overflow-wrap) : [object CSSPrimitiveValue]
g: style.getPropertyValue(overflow-x) : visible
g: style.getPropertyCSSValue(overflow-x) : [object CSSPrimitiveValue]
g: style.getPropertyValue(overflow-y) : visible
g: style.getPropertyCSSValue(overflow-y) : [object CSSPrimitiveValue]
g: style.getPropertyValue(padding-bottom) : 0px
g: style.getPropertyCSSValue(padding-bottom) : [object CSSPrimitiveValue]
g: style.getPropertyValue(padding-left) : 0px
g: style.getPropertyCSSValue(padding-left) : [object CSSPrimitiveValue]
g: style.getPropertyValue(padding-right) : 0px
g: style.getPropertyCSSValue(padding-right) : [object CSSPrimitiveValue]
g: style.getPropertyValue(padding-top) : 0px
g: style.getPropertyCSSValue(padding-top) : [object CSSPrimitiveValue]
g: style.getPropertyValue(page-break-after) : auto
g: style.getPropertyCSSValue(page-break-after) : [object CSSPrimitiveValue]
g: style.getPropertyValue(page-break-before) : auto
g: style.getPropertyCSSValue(page-break-before) : [object CSSPrimitiveValue]
g: style.getPropertyValue(page-break-inside) : auto
g: style.getPropertyCSSValue(page-break-inside) : [object CSSPrimitiveValue]
g: style.getPropertyValue(paint-order) : normal
g: style.getPropertyCSSValue(paint-order) : [object CSSPrimitiveValue]
g: style.getPropertyValue(perspective) : none
g: style.getPropertyCSSValue(perspective) : [object CSSPrimitiveValue]
g: style.getPropertyValue(pointer-events) : auto
g: style.getPropertyCSSValue(pointer-events) : [object CSSPrimitiveValue]
g: style.getPropertyValue(position) : static
g: style.getPropertyCSSValue(position) : [object CSSPrimitiveValue]
g: style.getPropertyValue(resize) : none
g: style.getPropertyCSSValue(resize) : [object CSSPrimitiveValue]
g: style.getPropertyValue(right) : auto
g: style.getPropertyCSSValue(right) : [object CSSPrimitiveValue]
g: style.getPropertyValue(shape-image-threshold) : 0
g: style.getPropertyCSSValue(shape-image-threshold) : [object CSSPrimitiveValue]
g: style.getPropertyValue(shape-margin) : 0px
g: style.getPropertyCSSValue(shape-margin) : [object CSSPrimitiveValue]
g: style.getPropertyValue(shape-outside) : none
g: style.getPropertyCSSValue(shape-outside) : [object CSSPrimitiveValue]
g: style.getPropertyValue(shape-rendering) : auto
g: style.getPropertyCSSValue(shape-rendering) : [object CSSPrimitiveValue]
g: style.getPropertyValue(stop-color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(stop-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(stop-opacity) : 1
g: style.getPropertyCSSValue(stop-opacity) : [object CSSPrimitiveValue]
g: style.getPropertyValue(stroke) : rgb(255, 165, 0)
g: style.getPropertyCSSValue(stroke) : [object CSSPrimitiveValue]
g: style.getPropertyValue(stroke-dasharray) : none
g: style.getPropertyCSSValue(stroke-dasharray) : [object CSSPrimitiveValue]
g: style.getPropertyValue(stroke-dashoffset) : 0px
g: style.getPropertyCSSValue(stroke-dashoffset) : [object CSSPrimitiveValue]
g: style.getPropertyValue(stroke-linecap) : butt
g: style.getPropertyCSSValue(stroke-linecap) : [object CSSPrimitiveValue]
g: style.getPropertyValue(stroke-linejoin) : miter
g: style.getPropertyCSSValue(stroke-linejoin) : [object CSSPrimitiveValue]
g: style.getPropertyValue(stroke-miterlimit) : 4
g: style.getPropertyCSSValue(stroke-miterlimit) : [object CSSPrimitiveValue]
g: style.getPropertyValue(stroke-opacity) : 1
g: style.getPropertyCSSValue(stroke-opacity) : [object CSSPrimitiveValue]
g: style.getPropertyValue(stroke-width) : 2px
g: style.getPropertyCSSValue(stroke-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(tab-size) : 8
g: style.getPropertyCSSValue(tab-size) : [object CSSPrimitiveValue]
g: style.getPropertyValue(table-layout) : auto
g: style.getPropertyCSSValue(table-layout) : [object CSSPrimitiveValue]
g: style.getPropertyValue(text-align) : start
g: style.getPropertyCSSValue(text-align) : [object CSSPrimitiveValue]
g: style.getPropertyValue(text-anchor) : start
g: style.getPropertyCSSValue(text-anchor) : [object CSSPrimitiveValue]
g: style.getPropertyValue(text-decoration) : none
g: style.getPropertyCSSValue(text-decoration) : [object CSSPrimitiveValue]
g: style.getPropertyValue(text-indent) : 0px
g: style.getPropertyCSSValue(text-indent) : [object CSSPrimitiveValue]
g: style.getPropertyValue(text-overflow) : clip
g: style.getPropertyCSSValue(text-overflow) : [object CSSPrimitiveValue]
g: style.getPropertyValue(text-rendering) : auto
g: style.getPropertyCSSValue(text-rendering) : [object CSSPrimitiveValue]
g: style.getPropertyValue(text-shadow) : none
g: style.getPropertyCSSValue(text-shadow) : [object CSSPrimitiveValue]
g: style.getPropertyValue(text-transform) : none
g: style.getPropertyCSSValue(text-transform) : [object CSSPrimitiveValue]
g: style.getPropertyValue(top) : auto
g: style.getPropertyCSSValue(top) : [object CSSPrimitiveValue]
g: style.getPropertyValue(transform) : none
g: style.getPropertyCSSValue(transform) : [object CSSPrimitiveValue]
g: style.getPropertyValue(transform-style) : flat
g: style.getPropertyCSSValue(transform-style) : [object CSSPrimitiveValue]
g: style.getPropertyValue(transition-delay) : 0s
g: style.getPropertyCSSValue(transition-delay) : [object CSSValueList]
g: style.getPropertyValue(transition-duration) : 0s
g: style.getPropertyCSSValue(transition-duration) : [object CSSValueList]
g: style.getPropertyValue(transition-property) : all
g: style.getPropertyCSSValue(transition-property) : [object CSSValueList]
g: style.getPropertyValue(transition-timing-function) : ease
g: style.getPropertyCSSValue(transition-timing-function) : [object CSSValueList]
g: style.getPropertyValue(unicode-bidi) : normal
g: style.getPropertyCSSValue(unicode-bidi) : [object CSSPrimitiveValue]
g: style.getPropertyValue(vector-effect) : none
g: style.getPropertyCSSValue(vector-effect) : [object CSSPrimitiveValue]
g: style.getPropertyValue(vertical-align) : baseline
g: style.getPropertyCSSValue(vertical-align) : [object CSSPrimitiveValue]
g: style.getPropertyValue(visibility) : visible
g: style.getPropertyCSSValue(visibility) : [object CSSPrimitiveValue]
g: style.getPropertyValue(white-space) : normal
g: style.getPropertyCSSValue(white-space) : [object CSSPrimitiveValue]
g: style.getPropertyValue(widows) : auto
g: style.getPropertyCSSValue(widows) : [object CSSPrimitiveValue]
g: style.getPropertyValue(width) : auto
g: style.getPropertyCSSValue(width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(will-change) : auto
g: style.getPropertyCSSValue(will-change) : [object CSSPrimitiveValue]
g: style.getPropertyValue(word-break) : normal
g: style.getPropertyCSSValue(word-break) : [object CSSPrimitiveValue]
g: style.getPropertyValue(word-spacing) : 0px
g: style.getPropertyCSSValue(word-spacing) : [object CSSPrimitiveValue]
g: style.getPropertyValue(word-wrap) : normal
g: style.getPropertyCSSValue(word-wrap) : [object CSSPrimitiveValue]
g: style.getPropertyValue(writing-mode) : horizontal-tb
g: style.getPropertyCSSValue(writing-mode) : [object CSSPrimitiveValue]
g: style.getPropertyValue(z-index) : auto
g: style.getPropertyCSSValue(z-index) : [object CSSPrimitiveValue]
g: style.getPropertyValue(zoom) : 1
g: style.getPropertyCSSValue(zoom) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-appearance) : none
g: style.getPropertyCSSValue(-webkit-appearance) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-backface-visibility) : visible
g: style.getPropertyCSSValue(-webkit-backface-visibility) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-background-clip) : border-box
g: style.getPropertyCSSValue(-webkit-background-clip) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-background-composite) : source-over
g: style.getPropertyCSSValue(-webkit-background-composite) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-background-origin) : padding-box
g: style.getPropertyCSSValue(-webkit-background-origin) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-background-size) : auto
g: style.getPropertyCSSValue(-webkit-background-size) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-border-fit) : border
g: style.getPropertyCSSValue(-webkit-border-fit) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-border-horizontal-spacing) : 0px
g: style.getPropertyCSSValue(-webkit-border-horizontal-spacing) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-border-image) : none
g: style.getPropertyCSSValue(-webkit-border-image) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-border-vertical-spacing) : 0px
g: style.getPropertyCSSValue(-webkit-border-vertical-spacing) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-box-align) : stretch
g: style.getPropertyCSSValue(-webkit-box-align) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-box-decoration-break) : slice
g: style.getPropertyCSSValue(-webkit-box-decoration-break) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-box-direction) : normal
g: style.getPropertyCSSValue(-webkit-box-direction) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-box-flex) : 0
g: style.getPropertyCSSValue(-webkit-box-flex) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-box-flex-group) : 1
g: style.getPropertyCSSValue(-webkit-box-flex-group) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-box-lines) : single
g: style.getPropertyCSSValue(-webkit-box-lines) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-box-ordinal-group) : 1
g: style.getPropertyCSSValue(-webkit-box-ordinal-group) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-box-orient) : horizontal
g: style.getPropertyCSSValue(-webkit-box-orient) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-box-pack) : start
g: style.getPropertyCSSValue(-webkit-box-pack) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-box-reflect) : none
g: style.getPropertyCSSValue(-webkit-box-reflect) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-box-shadow) : none
g: style.getPropertyCSSValue(-webkit-box-shadow) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-column-axis) : auto
g: style.getPropertyCSSValue(-webkit-column-axis) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-column-break-after) : auto
g: style.getPropertyCSSValue(-webkit-column-break-after) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-column-break-before) : auto
g: style.getPropertyCSSValue(-webkit-column-break-before) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-column-break-inside) : auto
g: style.getPropertyCSSValue(-webkit-column-break-inside) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-font-kerning) : auto
g: style.getPropertyCSSValue(-webkit-font-kerning) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-font-smoothing) : auto
g: style.getPropertyCSSValue(-webkit-font-smoothing) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-hyphenate-character) : auto
g: style.getPropertyCSSValue(-webkit-hyphenate-character) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-hyphenate-limit-after) : auto
g: style.getPropertyCSSValue(-webkit-hyphenate-limit-after) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-hyphenate-limit-before) : auto
g: style.getPropertyCSSValue(-webkit-hyphenate-limit-before) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-hyphenate-limit-lines) : no-limit
g: style.getPropertyCSSValue(-webkit-hyphenate-limit-lines) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-hyphens) : manual
g: style.getPropertyCSSValue(-webkit-hyphens) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-line-align) : none
g: style.getPropertyCSSValue(-webkit-line-align) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-line-box-contain) : block inline replaced
g: style.getPropertyCSSValue(-webkit-line-box-contain) : [object CSSValue]
g: style.getPropertyValue(-webkit-line-clamp) : none
g: style.getPropertyCSSValue(-webkit-line-clamp) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-line-grid) : none
g: style.getPropertyCSSValue(-webkit-line-grid) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-line-snap) : none
g: style.getPropertyCSSValue(-webkit-line-snap) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-locale) : auto
g: style.getPropertyCSSValue(-webkit-locale) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-margin-after-collapse) : collapse
g: style.getPropertyCSSValue(-webkit-margin-after-collapse) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-margin-before-collapse) : collapse
g: style.getPropertyCSSValue(-webkit-margin-before-collapse) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-mask-box-image) : none
g: style.getPropertyCSSValue(-webkit-mask-box-image) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-mask-box-image-outset) : 0
g: style.getPropertyCSSValue(-webkit-mask-box-image-outset) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-mask-box-image-repeat) : stretch
g: style.getPropertyCSSValue(-webkit-mask-box-image-repeat) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-mask-box-image-slice) : 0 fill
g: style.getPropertyCSSValue(-webkit-mask-box-image-slice) : [object CSSValue]
g: style.getPropertyValue(-webkit-mask-box-image-source) : none
g: style.getPropertyCSSValue(-webkit-mask-box-image-source) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-mask-box-image-width) : auto
g: style.getPropertyCSSValue(-webkit-mask-box-image-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-mask-clip) : border-box
g: style.getPropertyCSSValue(-webkit-mask-clip) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-mask-composite) : source-over
g: style.getPropertyCSSValue(-webkit-mask-composite) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-mask-image) : none
g: style.getPropertyCSSValue(-webkit-mask-image) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-mask-origin) : border-box
g: style.getPropertyCSSValue(-webkit-mask-origin) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-mask-repeat) : repeat
g: style.getPropertyCSSValue(-webkit-mask-repeat) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-mask-size) : auto
g: style.getPropertyCSSValue(-webkit-mask-size) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-nbsp-mode) : normal
g: style.getPropertyCSSValue(-webkit-nbsp-mode) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-print-color-adjust) : economy
g: style.getPropertyCSSValue(-webkit-print-color-adjust) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-rtl-ordering) : logical
g: style.getPropertyCSSValue(-webkit-rtl-ordering) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-text-combine) : none
g: style.getPropertyCSSValue(-webkit-text-combine) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-text-emphasis-color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(-webkit-text-emphasis-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-text-emphasis-position) : over right
g: style.getPropertyCSSValue(-webkit-text-emphasis-position) : [object CSSValueList]
g: style.getPropertyValue(-webkit-text-emphasis-style) : none
g: style.getPropertyCSSValue(-webkit-text-emphasis-style) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-text-fill-color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(-webkit-text-fill-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-text-orientation) : mixed
g: style.getPropertyCSSValue(-webkit-text-orientation) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-text-security) : none
g: style.getPropertyCSSValue(-webkit-text-security) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-text-stroke-color) : rgb(0, 0, 0)
g: style.getPropertyCSSValue(-webkit-text-stroke-color) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-text-stroke-width) : 0px
g: style.getPropertyCSSValue(-webkit-text-stroke-width) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-transform-style) : flat
g: style.getPropertyCSSValue(-webkit-transform-style) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-user-drag) : auto
g: style.getPropertyCSSValue(-webkit-user-drag) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-user-modify) : read-only
g: style.getPropertyCSSValue(-webkit-user-modify) : [object CSSPrimitiveValue]
g: style.getPropertyValue(-webkit-user-select) : text
g: style.getPropertyCSSValue(-webkit-user-select) : [object CSSPrimitiveValue]

