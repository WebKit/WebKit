CONSOLE MESSAGE: Wrong protocol for WebSocket 'a@'
CONSOLE MESSAGE: Wrong protocol for WebSocket 'b@'
CONSOLE MESSAGE: Wrong protocol for WebSocket 'c@'
CONSOLE MESSAGE: Wrong protocol for WebSocket 'd@'
CONSOLE MESSAGE: Wrong protocol for WebSocket 'e@'
Construct a WebSocket with multiple protocols. It should throw an appropriate exception.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS new WebSocket(url, ["a@"]) threw exception SyntaxError: The string did not match the expected pattern..
PASS new WebSocket(url, new Set(["b@"])) threw exception SyntaxError: The string did not match the expected pattern..
PASS x = { toString: () => "a", [Symbol.iterator]: function* () { yield "c@"; } }; new WebSocket(url, x) threw exception SyntaxError: The string did not match the expected pattern..
PASS x = { toString: () => "d@", [Symbol.iterator]: null }; new WebSocket(url, x) threw exception SyntaxError: The string did not match the expected pattern..
PASS x = { toString: () => "a", [Symbol.iterator]: 1 }; new WebSocket(url, x) threw exception TypeError: Symbol.iterator property should be callable.
PASS x = { [Symbol.iterator]: function* () { yield "e@"; } }; new WebSocket(url, x) threw exception SyntaxError: The string did not match the expected pattern..
PASS x = { [Symbol.iterator]: function* () { throw {name: "SomeError", toString: () => "Some error" }; } }; new WebSocket(url, x) threw exception Some error.
PASS successfullyParsed is true

TEST COMPLETE

