{"version":3,"file":"float16.js","names":["THIS_IS_NOT_AN_OBJECT","THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT","THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY","THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT","SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT","DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH","ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER","CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT","CANNOT_MIX_BIGINT_AND_OTHER_TYPES","ITERATOR_PROPERTY_IS_NOT_CALLABLE","REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE","THE_COMPARISON_FUNCTION_MUST_BE_EITHER_A_FUNCTION_OR_UNDEFINED","OFFSET_IS_OUT_OF_BOUNDS","uncurryThis","target","thisArg","args","ReflectApply","uncurryThisGetter","key","ReflectGetOwnPropertyDescriptor","get","apply","construct","ReflectConstruct","defineProperty","ReflectDefineProperty","ReflectGet","getOwnPropertyDescriptor","getPrototypeOf","ReflectGetPrototypeOf","has","ReflectHas","ownKeys","ReflectOwnKeys","set","ReflectSet","setPrototypeOf","ReflectSetPrototypeOf","Reflect","NativeProxy","Proxy","EPSILON","MAX_SAFE_INTEGER","isFinite","NumberIsFinite","isNaN","NumberIsNaN","Number","iterator","SymbolIterator","species","SymbolSpecies","toStringTag","SymbolToStringTag","for","SymbolFor","Symbol","NativeObject","Object","create","ObjectCreate","ObjectDefineProperty","freeze","ObjectFreeze","is","ObjectIs","ObjectPrototype","prototype","ObjectPrototype__lookupGetter__","__lookupGetter__","object","NativeTypeError","descriptor","undefined","ObjectHasOwn","hasOwn","hasOwnProperty","NativeArray","Array","ArrayIsArray","isArray","ArrayPrototype","ArrayPrototypeJoin","join","ArrayPrototypePush","push","ArrayPrototypeToLocaleString","toLocaleString","NativeArrayPrototypeSymbolIterator","ArrayPrototypeSymbolIterator","abs","MathAbs","trunc","MathTrunc","Math","NativeArrayBuffer","ArrayBuffer","ArrayBufferIsView","isView","ArrayBufferPrototype","ArrayBufferPrototypeSlice","slice","ArrayBufferPrototypeGetByteLength","NativeSharedArrayBuffer","SharedArrayBuffer","SharedArrayBufferPrototypeGetByteLength","TypedArray","Uint8Array","TypedArrayFrom","from","TypedArrayPrototype","NativeTypedArrayPrototypeSymbolIterator","TypedArrayPrototypeKeys","keys","TypedArrayPrototypeValues","values","TypedArrayPrototypeEntries","entries","TypedArrayPrototypeSet","TypedArrayPrototypeReverse","reverse","TypedArrayPrototypeFill","fill","TypedArrayPrototypeCopyWithin","copyWithin","TypedArrayPrototypeSort","sort","TypedArrayPrototypeSlice","TypedArrayPrototypeSubarray","subarray","TypedArrayPrototypeGetBuffer","TypedArrayPrototypeGetByteOffset","TypedArrayPrototypeGetLength","TypedArrayPrototypeGetSymbolToStringTag","NativeUint8Array","NativeUint16Array","Uint16Array","Uint16ArrayFrom","NativeUint32Array","Uint32Array","NativeFloat32Array","Float32Array","ArrayIteratorPrototype","ArrayIteratorPrototypeNext","next","GeneratorPrototypeNext","IteratorPrototype","DataViewPrototype","DataView","DataViewPrototypeGetUint16","getUint16","DataViewPrototypeSetUint16","setUint16","TypeError","NativeRangeError","RangeError","NativeWeakSet","WeakSet","WeakSetPrototype","WeakSetPrototypeAdd","add","WeakSetPrototypeHas","NativeWeakMap","WeakMap","WeakMapPrototype","WeakMapPrototypeGet","WeakMapPrototypeHas","WeakMapPrototypeSet","arrayIterators","SafeIteratorPrototype","value","arrayIterator","safeIfNeeded","array","safe","generators","DummyArrayIteratorPrototype","generator","writable","configurable","wrap","dummy","isObject","isObjectLike","isNativeTypedArray","isNativeBigIntTypedArray","typedArrayName","isArrayBuffer","e","isSharedArrayBuffer","isAnyArrayBuffer","isOrdinaryArray","isOrdinaryNativeTypedArray","isCanonicalIntegerIndexString","number","brand","hasFloat16ArrayBrand","constructor","INVERSE_OF_EPSILON","roundTiesToEven","num","FLOAT16_MIN_VALUE","FLOAT16_MAX_VALUE","FLOAT16_EPSILON","FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE","FLOAT16_EPSILON_DEVIDED_BY_EPSILON","roundToFloat16","sign","absolute","temp","result","Infinity","buffer","floatView","uint32View","baseTable","shiftTable","i","roundToFloat16Bits","f","mantissaTable","m","exponentTable","offsetTable","convertToNumber","float16bits","ToIntegerOrInfinity","ToLength","length","SpeciesConstructor","defaultConstructor","IsDetachedBuffer","defaultCompare","x","y","isXNaN","isYNaN","isXPlusZero","isYPlusZero","BYTES_PER_ELEMENT","float16bitsArrays","isFloat16Array","assertFloat16Array","assertSpeciesTypedArray","count","isTargetFloat16Array","isTargetTypedArray","float16bitsArray","getFloat16BitsArray","float16","cloned","Float16Array","byteOffset","copyToArray","TypedArrayPrototypeGetters","handler","receiver","input","_byteOffset","_length","new","list","data","arguments","proxy","src","opts","Constructor","uint16","mapFunc","val","of","items","at","index","relativeIndex","k","with","map","callback","filter","kept","reduce","accumulator","start","reduceRight","forEach","find","findIndex","findLast","findLastIndex","every","some","targetOffset","targetLength","srcLength","toReversed","clonedFloat16bitsArray","compareFn","sortCompare","toSorted","end","relativeStart","relativeEnd","final","n","begin","uint16Subarray","indexOf","element","lastIndexOf","includes","separator","Float16ArrayPrototype","isTypedArray","getFloat16","dataView","setFloat16","f16round","hfround"],"sources":["../../../../src/external/petamoriken/float16/float16.js"],"sourcesContent":["/*! @petamoriken/float16 v3.8.6 | MIT License - https://github.com/petamoriken/float16 */\n\nconst THIS_IS_NOT_AN_OBJECT = \"This is not an object\";\nconst THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT = \"This is not a Float16Array object\";\nconst THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY =\n  \"This constructor is not a subclass of Float16Array\";\nconst THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT =\n  \"The constructor property value is not an object\";\nconst SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT =\n  \"Species constructor didn't return TypedArray object\";\nconst DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH =\n  \"Derived constructor created TypedArray object which was too small length\";\nconst ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER =\n  \"Attempting to access detached ArrayBuffer\";\nconst CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT =\n  \"Cannot convert undefined or null to object\";\nconst CANNOT_MIX_BIGINT_AND_OTHER_TYPES =\n  \"Cannot mix BigInt and other types, use explicit conversions\";\nconst ITERATOR_PROPERTY_IS_NOT_CALLABLE = \"@@iterator property is not callable\";\nconst REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE =\n  \"Reduce of empty array with no initial value\";\nconst THE_COMPARISON_FUNCTION_MUST_BE_EITHER_A_FUNCTION_OR_UNDEFINED =\n  \"The comparison function must be either a function or undefined\";\nconst OFFSET_IS_OUT_OF_BOUNDS = \"Offset is out of bounds\";\n\nfunction uncurryThis(target) {\n  return (thisArg, ...args) => {\n    return ReflectApply(target, thisArg, args);\n  };\n}\nfunction uncurryThisGetter(target, key) {\n  return uncurryThis(\n    ReflectGetOwnPropertyDescriptor(\n      target,\n      key\n    ).get\n  );\n}\nconst {\n  apply: ReflectApply,\n  construct: ReflectConstruct,\n  defineProperty: ReflectDefineProperty,\n  get: ReflectGet,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  getPrototypeOf: ReflectGetPrototypeOf,\n  has: ReflectHas,\n  ownKeys: ReflectOwnKeys,\n  set: ReflectSet,\n  setPrototypeOf: ReflectSetPrototypeOf,\n} = Reflect;\nconst NativeProxy = Proxy;\nconst {\n  EPSILON,\n  MAX_SAFE_INTEGER,\n  isFinite: NumberIsFinite,\n  isNaN: NumberIsNaN,\n} = Number;\nconst {\n  iterator: SymbolIterator,\n  species: SymbolSpecies,\n  toStringTag: SymbolToStringTag,\n  for: SymbolFor,\n} = Symbol;\nconst NativeObject = Object;\nconst {\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  freeze: ObjectFreeze,\n  is: ObjectIs,\n} = NativeObject;\nconst ObjectPrototype = NativeObject.prototype;\nconst ObjectPrototype__lookupGetter__ =  (ObjectPrototype).__lookupGetter__\n  ? uncurryThis( (ObjectPrototype).__lookupGetter__)\n  : (object, key) => {\n    if (object == null) {\n      throw NativeTypeError(\n        CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n      );\n    }\n    let target = NativeObject(object);\n    do {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      if (descriptor !== undefined) {\n        if (ObjectHasOwn(descriptor, \"get\")) {\n          return descriptor.get;\n        }\n        return;\n      }\n    } while ((target = ReflectGetPrototypeOf(target)) !== null);\n  };\nconst ObjectHasOwn =  (NativeObject).hasOwn ||\n  uncurryThis(ObjectPrototype.hasOwnProperty);\nconst NativeArray = Array;\nconst ArrayIsArray = NativeArray.isArray;\nconst ArrayPrototype = NativeArray.prototype;\nconst ArrayPrototypeJoin = uncurryThis(ArrayPrototype.join);\nconst ArrayPrototypePush = uncurryThis(ArrayPrototype.push);\nconst ArrayPrototypeToLocaleString = uncurryThis(\n  ArrayPrototype.toLocaleString\n);\nconst NativeArrayPrototypeSymbolIterator = ArrayPrototype[SymbolIterator];\nconst ArrayPrototypeSymbolIterator = uncurryThis(NativeArrayPrototypeSymbolIterator);\nconst {\n  abs: MathAbs,\n  trunc: MathTrunc,\n} = Math;\nconst NativeArrayBuffer = ArrayBuffer;\nconst ArrayBufferIsView = NativeArrayBuffer.isView;\nconst ArrayBufferPrototype = NativeArrayBuffer.prototype;\nconst ArrayBufferPrototypeSlice = uncurryThis(ArrayBufferPrototype.slice);\nconst ArrayBufferPrototypeGetByteLength = uncurryThisGetter(ArrayBufferPrototype, \"byteLength\");\nconst NativeSharedArrayBuffer = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : null;\nconst SharedArrayBufferPrototypeGetByteLength = NativeSharedArrayBuffer\n  && uncurryThisGetter(NativeSharedArrayBuffer.prototype, \"byteLength\");\nconst TypedArray = ReflectGetPrototypeOf(Uint8Array);\nconst TypedArrayFrom = TypedArray.from;\nconst TypedArrayPrototype = TypedArray.prototype;\nconst NativeTypedArrayPrototypeSymbolIterator = TypedArrayPrototype[SymbolIterator];\nconst TypedArrayPrototypeKeys = uncurryThis(TypedArrayPrototype.keys);\nconst TypedArrayPrototypeValues = uncurryThis(\n  TypedArrayPrototype.values\n);\nconst TypedArrayPrototypeEntries = uncurryThis(\n  TypedArrayPrototype.entries\n);\nconst TypedArrayPrototypeSet = uncurryThis(TypedArrayPrototype.set);\nconst TypedArrayPrototypeReverse = uncurryThis(\n  TypedArrayPrototype.reverse\n);\nconst TypedArrayPrototypeFill = uncurryThis(TypedArrayPrototype.fill);\nconst TypedArrayPrototypeCopyWithin = uncurryThis(\n  TypedArrayPrototype.copyWithin\n);\nconst TypedArrayPrototypeSort = uncurryThis(TypedArrayPrototype.sort);\nconst TypedArrayPrototypeSlice = uncurryThis(TypedArrayPrototype.slice);\nconst TypedArrayPrototypeSubarray = uncurryThis(\n  TypedArrayPrototype.subarray\n);\nconst TypedArrayPrototypeGetBuffer = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"buffer\"\n);\nconst TypedArrayPrototypeGetByteOffset = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"byteOffset\"\n);\nconst TypedArrayPrototypeGetLength = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"length\"\n);\nconst TypedArrayPrototypeGetSymbolToStringTag = uncurryThisGetter(\n  TypedArrayPrototype,\n  SymbolToStringTag\n);\nconst NativeUint8Array = Uint8Array;\nconst NativeUint16Array = Uint16Array;\nconst Uint16ArrayFrom = (...args) => {\n  return ReflectApply(TypedArrayFrom, NativeUint16Array, args);\n};\nconst NativeUint32Array = Uint32Array;\nconst NativeFloat32Array = Float32Array;\nconst ArrayIteratorPrototype = ReflectGetPrototypeOf([][SymbolIterator]());\nconst ArrayIteratorPrototypeNext = uncurryThis(ArrayIteratorPrototype.next);\nconst GeneratorPrototypeNext = uncurryThis((function* () {})().next);\nconst IteratorPrototype = ReflectGetPrototypeOf(ArrayIteratorPrototype);\nconst DataViewPrototype = DataView.prototype;\nconst DataViewPrototypeGetUint16 = uncurryThis(\n  DataViewPrototype.getUint16\n);\nconst DataViewPrototypeSetUint16 = uncurryThis(\n  DataViewPrototype.setUint16\n);\nconst NativeTypeError = TypeError;\nconst NativeRangeError = RangeError;\nconst NativeWeakSet = WeakSet;\nconst WeakSetPrototype = NativeWeakSet.prototype;\nconst WeakSetPrototypeAdd = uncurryThis(WeakSetPrototype.add);\nconst WeakSetPrototypeHas = uncurryThis(WeakSetPrototype.has);\nconst NativeWeakMap = WeakMap;\nconst WeakMapPrototype = NativeWeakMap.prototype;\nconst WeakMapPrototypeGet = uncurryThis(WeakMapPrototype.get);\nconst WeakMapPrototypeHas = uncurryThis(WeakMapPrototype.has);\nconst WeakMapPrototypeSet = uncurryThis(WeakMapPrototype.set);\n\nconst arrayIterators = new NativeWeakMap();\nconst SafeIteratorPrototype = ObjectCreate(null, {\n  next: {\n    value: function next() {\n      const arrayIterator = WeakMapPrototypeGet(arrayIterators, this);\n      return ArrayIteratorPrototypeNext(arrayIterator);\n    },\n  },\n  [SymbolIterator]: {\n    value: function values() {\n      return this;\n    },\n  },\n});\nfunction safeIfNeeded(array) {\n  if (\n    array[SymbolIterator] === NativeArrayPrototypeSymbolIterator &&\n    ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext\n  ) {\n    return array;\n  }\n  const safe = ObjectCreate(SafeIteratorPrototype);\n  WeakMapPrototypeSet(arrayIterators, safe, ArrayPrototypeSymbolIterator(array));\n  return safe;\n}\nconst generators = new NativeWeakMap();\nconst DummyArrayIteratorPrototype = ObjectCreate(IteratorPrototype, {\n  next: {\n    value: function next() {\n      const generator = WeakMapPrototypeGet(generators, this);\n      return GeneratorPrototypeNext(generator);\n    },\n    writable: true,\n    configurable: true,\n  },\n});\nfor (const key of ReflectOwnKeys(ArrayIteratorPrototype)) {\n  if (key === \"next\") {\n    continue;\n  }\n  ObjectDefineProperty(DummyArrayIteratorPrototype, key, ReflectGetOwnPropertyDescriptor(ArrayIteratorPrototype, key));\n}\nfunction wrap(generator) {\n  const dummy = ObjectCreate(DummyArrayIteratorPrototype);\n  WeakMapPrototypeSet(generators, dummy, generator);\n  return dummy;\n}\n\nfunction isObject(value) {\n  return (\n    (value !== null && typeof value === \"object\") ||\n    typeof value === \"function\"\n  );\n}\nfunction isObjectLike(value) {\n  return value !== null && typeof value === \"object\";\n}\nfunction isNativeTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\nfunction isNativeBigIntTypedArray(value) {\n  const typedArrayName = TypedArrayPrototypeGetSymbolToStringTag(value);\n  return (\n    typedArrayName === \"BigInt64Array\" ||\n    typedArrayName === \"BigUint64Array\"\n  );\n}\nfunction isArrayBuffer(value) {\n  try {\n    if (ArrayIsArray(value)) {\n      return false;\n    }\n    ArrayBufferPrototypeGetByteLength( (value));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction isSharedArrayBuffer(value) {\n  if (NativeSharedArrayBuffer === null) {\n    return false;\n  }\n  try {\n    SharedArrayBufferPrototypeGetByteLength( (value));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction isAnyArrayBuffer(value) {\n  return isArrayBuffer(value) || isSharedArrayBuffer(value);\n}\nfunction isOrdinaryArray(value) {\n  if (!ArrayIsArray(value)) {\n    return false;\n  }\n  return (\n    value[SymbolIterator] === NativeArrayPrototypeSymbolIterator &&\n    ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext\n  );\n}\nfunction isOrdinaryNativeTypedArray(value) {\n  if (!isNativeTypedArray(value)) {\n    return false;\n  }\n  return (\n    value[SymbolIterator] === NativeTypedArrayPrototypeSymbolIterator &&\n    ArrayIteratorPrototype.next === ArrayIteratorPrototypeNext\n  );\n}\nfunction isCanonicalIntegerIndexString(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  const number = +value;\n  if (value !== number + \"\") {\n    return false;\n  }\n  if (!NumberIsFinite(number)) {\n    return false;\n  }\n  return number === MathTrunc(number);\n}\n\nconst brand = SymbolFor(\"__Float16Array__\");\nfunction hasFloat16ArrayBrand(target) {\n  if (!isObjectLike(target)) {\n    return false;\n  }\n  const prototype = ReflectGetPrototypeOf(target);\n  if (!isObjectLike(prototype)) {\n    return false;\n  }\n  const constructor = prototype.constructor;\n  if (constructor === undefined) {\n    return false;\n  }\n  if (!isObject(constructor)) {\n    throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n  }\n  return ReflectHas(constructor, brand);\n}\n\nconst INVERSE_OF_EPSILON = 1 / EPSILON;\nfunction roundTiesToEven(num) {\n  return (num + INVERSE_OF_EPSILON) - INVERSE_OF_EPSILON;\n}\nconst FLOAT16_MIN_VALUE = 6.103515625e-05;\nconst FLOAT16_MAX_VALUE = 65504;\nconst FLOAT16_EPSILON = 0.0009765625;\nconst FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE = FLOAT16_EPSILON * FLOAT16_MIN_VALUE;\nconst FLOAT16_EPSILON_DEVIDED_BY_EPSILON = FLOAT16_EPSILON * INVERSE_OF_EPSILON;\nfunction roundToFloat16(num) {\n  const number = +num;\n  if (!NumberIsFinite(number) || number === 0) {\n    return number;\n  }\n  const sign = number > 0 ? 1 : -1;\n  const absolute = MathAbs(number);\n  if (absolute < FLOAT16_MIN_VALUE) {\n    return sign * roundTiesToEven(absolute / FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE) * FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE;\n  }\n  const temp = (1 + FLOAT16_EPSILON_DEVIDED_BY_EPSILON) * absolute;\n  const result = temp - (temp - absolute);\n  if (result > FLOAT16_MAX_VALUE || NumberIsNaN(result)) {\n    return sign * Infinity;\n  }\n  return sign * result;\n}\nconst buffer = new NativeArrayBuffer(4);\nconst floatView = new NativeFloat32Array(buffer);\nconst uint32View = new NativeUint32Array(buffer);\nconst baseTable = new NativeUint16Array(512);\nconst shiftTable = new NativeUint8Array(512);\nfor (let i = 0; i < 256; ++i) {\n  const e = i - 127;\n  if (e < -27) {\n    baseTable[i]         = 0x0000;\n    baseTable[i | 0x100] = 0x8000;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n  } else if (e < -14) {\n    baseTable[i]         =  0x0400 >> (-e - 14);\n    baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n    shiftTable[i]         = -e - 1;\n    shiftTable[i | 0x100] = -e - 1;\n  } else if (e <= 15) {\n    baseTable[i]         =  (e + 15) << 10;\n    baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n  } else if (e < 128) {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n  } else {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n  }\n}\nfunction roundToFloat16Bits(num) {\n  floatView[0] = roundToFloat16(num);\n  const f = uint32View[0];\n  const e = (f >> 23) & 0x1ff;\n  return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\nconst mantissaTable = new NativeUint32Array(2048);\nfor (let i = 1; i < 1024; ++i) {\n  let m = i << 13;\n  let e = 0;\n  while ((m & 0x00800000) === 0) {\n    m <<= 1;\n    e -= 0x00800000;\n  }\n  m &= ~0x00800000;\n  e += 0x38800000;\n  mantissaTable[i] = m | e;\n}\nfor (let i = 1024; i < 2048; ++i) {\n  mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\nconst exponentTable = new NativeUint32Array(64);\nfor (let i = 1; i < 31; ++i) {\n  exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor (let i = 33; i < 63; ++i) {\n  exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\nconst offsetTable = new NativeUint16Array(64);\nfor (let i = 1; i < 64; ++i) {\n  if (i !== 32) {\n    offsetTable[i] = 1024;\n  }\n}\nfunction convertToNumber(float16bits) {\n  const i = float16bits >> 10;\n  uint32View[0] = mantissaTable[offsetTable[i] + (float16bits & 0x3ff)] + exponentTable[i];\n  return floatView[0];\n}\n\nfunction ToIntegerOrInfinity(target) {\n  const number = +target;\n  if (NumberIsNaN(number) || number === 0) {\n    return 0;\n  }\n  return MathTrunc(number);\n}\nfunction ToLength(target) {\n  const length = ToIntegerOrInfinity(target);\n  if (length < 0) {\n    return 0;\n  }\n  return length < MAX_SAFE_INTEGER\n    ? length\n    : MAX_SAFE_INTEGER;\n}\nfunction SpeciesConstructor(target, defaultConstructor) {\n  if (!isObject(target)) {\n    throw NativeTypeError(THIS_IS_NOT_AN_OBJECT);\n  }\n  const constructor = target.constructor;\n  if (constructor === undefined) {\n    return defaultConstructor;\n  }\n  if (!isObject(constructor)) {\n    throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n  }\n  const species = constructor[SymbolSpecies];\n  if (species == null) {\n    return defaultConstructor;\n  }\n  return species;\n}\nfunction IsDetachedBuffer(buffer) {\n  if (isSharedArrayBuffer(buffer)) {\n    return false;\n  }\n  try {\n    ArrayBufferPrototypeSlice(buffer, 0, 0);\n    return false;\n  } catch (e) {}\n  return true;\n}\nfunction defaultCompare(x, y) {\n  const isXNaN = NumberIsNaN(x);\n  const isYNaN = NumberIsNaN(y);\n  if (isXNaN && isYNaN) {\n    return 0;\n  }\n  if (isXNaN) {\n    return 1;\n  }\n  if (isYNaN) {\n    return -1;\n  }\n  if (x < y) {\n    return -1;\n  }\n  if (x > y) {\n    return 1;\n  }\n  if (x === 0 && y === 0) {\n    const isXPlusZero = ObjectIs(x, 0);\n    const isYPlusZero = ObjectIs(y, 0);\n    if (!isXPlusZero && isYPlusZero) {\n      return -1;\n    }\n    if (isXPlusZero && !isYPlusZero) {\n      return 1;\n    }\n  }\n  return 0;\n}\n\nconst BYTES_PER_ELEMENT = 2;\nconst float16bitsArrays = new NativeWeakMap();\nfunction isFloat16Array(target) {\n  return WeakMapPrototypeHas(float16bitsArrays, target) ||\n    (!ArrayBufferIsView(target) && hasFloat16ArrayBrand(target));\n}\nfunction assertFloat16Array(target) {\n  if (!isFloat16Array(target)) {\n    throw NativeTypeError(THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT);\n  }\n}\nfunction assertSpeciesTypedArray(target, count) {\n  const isTargetFloat16Array = isFloat16Array(target);\n  const isTargetTypedArray = isNativeTypedArray(target);\n  if (!isTargetFloat16Array && !isTargetTypedArray) {\n    throw NativeTypeError(SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT);\n  }\n  if (typeof count === \"number\") {\n    let length;\n    if (isTargetFloat16Array) {\n      const float16bitsArray = getFloat16BitsArray(target);\n      length = TypedArrayPrototypeGetLength(float16bitsArray);\n    } else {\n      length = TypedArrayPrototypeGetLength(target);\n    }\n    if (length < count) {\n      throw NativeTypeError(\n        DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH\n      );\n    }\n  }\n  if (isNativeBigIntTypedArray(target)) {\n    throw NativeTypeError(CANNOT_MIX_BIGINT_AND_OTHER_TYPES);\n  }\n}\nfunction getFloat16BitsArray(float16) {\n  const float16bitsArray = WeakMapPrototypeGet(float16bitsArrays, float16);\n  if (float16bitsArray !== undefined) {\n    const buffer = TypedArrayPrototypeGetBuffer(float16bitsArray);\n    if (IsDetachedBuffer(buffer)) {\n      throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n    }\n    return float16bitsArray;\n  }\n  const buffer =  (float16).buffer;\n  if (IsDetachedBuffer(buffer)) {\n    throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n  }\n  const cloned = ReflectConstruct(Float16Array, [\n    buffer,\n     (float16).byteOffset,\n     (float16).length,\n  ], float16.constructor);\n  return WeakMapPrototypeGet(float16bitsArrays, cloned);\n}\nfunction copyToArray(float16bitsArray) {\n  const length = TypedArrayPrototypeGetLength(float16bitsArray);\n  const array = [];\n  for (let i = 0; i < length; ++i) {\n    array[i] = convertToNumber(float16bitsArray[i]);\n  }\n  return array;\n}\nconst TypedArrayPrototypeGetters = new NativeWeakSet();\nfor (const key of ReflectOwnKeys(TypedArrayPrototype)) {\n  if (key === SymbolToStringTag) {\n    continue;\n  }\n  const descriptor = ReflectGetOwnPropertyDescriptor(TypedArrayPrototype, key);\n  if (ObjectHasOwn(descriptor, \"get\") && typeof descriptor.get === \"function\") {\n    WeakSetPrototypeAdd(TypedArrayPrototypeGetters, descriptor.get);\n  }\n}\nconst handler = ObjectFreeze( ({\n  get(target, key, receiver) {\n    if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n      return convertToNumber(ReflectGet(target, key));\n    }\n    if (WeakSetPrototypeHas(TypedArrayPrototypeGetters, ObjectPrototype__lookupGetter__(target, key))) {\n      return ReflectGet(target, key);\n    }\n    return ReflectGet(target, key, receiver);\n  },\n  set(target, key, value, receiver) {\n    if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n      return ReflectSet(target, key, roundToFloat16Bits(value));\n    }\n    return ReflectSet(target, key, value, receiver);\n  },\n  getOwnPropertyDescriptor(target, key) {\n    if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      descriptor.value = convertToNumber(descriptor.value);\n      return descriptor;\n    }\n    return ReflectGetOwnPropertyDescriptor(target, key);\n  },\n  defineProperty(target, key, descriptor) {\n    if (\n      isCanonicalIntegerIndexString(key) &&\n      ObjectHasOwn(target, key) &&\n      ObjectHasOwn(descriptor, \"value\")\n    ) {\n      descriptor.value = roundToFloat16Bits(descriptor.value);\n      return ReflectDefineProperty(target, key, descriptor);\n    }\n    return ReflectDefineProperty(target, key, descriptor);\n  },\n}));\nclass Float16Array {\n  constructor(input, _byteOffset, _length) {\n    let float16bitsArray;\n    if (isFloat16Array(input)) {\n      float16bitsArray = ReflectConstruct(NativeUint16Array, [getFloat16BitsArray(input)], new.target);\n    } else if (isObject(input) && !isAnyArrayBuffer(input)) {\n      let list;\n      let length;\n      if (isNativeTypedArray(input)) {\n        list = input;\n        length = TypedArrayPrototypeGetLength(input);\n        const buffer = TypedArrayPrototypeGetBuffer(input);\n        if (IsDetachedBuffer(buffer)) {\n          throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n        }\n        if (isNativeBigIntTypedArray(input)) {\n          throw NativeTypeError(CANNOT_MIX_BIGINT_AND_OTHER_TYPES);\n        }\n        const data = new NativeArrayBuffer(\n          length * BYTES_PER_ELEMENT\n        );\n        float16bitsArray = ReflectConstruct(NativeUint16Array, [data], new.target);\n      } else {\n        const iterator = input[SymbolIterator];\n        if (iterator != null && typeof iterator !== \"function\") {\n          throw NativeTypeError(ITERATOR_PROPERTY_IS_NOT_CALLABLE);\n        }\n        if (iterator != null) {\n          if (isOrdinaryArray(input)) {\n            list = input;\n            length = input.length;\n          } else {\n            list = [...  (input)];\n            length = list.length;\n          }\n        } else {\n          list =  (input);\n          length = ToLength(list.length);\n        }\n        float16bitsArray = ReflectConstruct(NativeUint16Array, [length], new.target);\n      }\n      for (let i = 0; i < length; ++i) {\n        float16bitsArray[i] = roundToFloat16Bits(list[i]);\n      }\n    } else {\n      float16bitsArray = ReflectConstruct(NativeUint16Array, arguments, new.target);\n    }\n    const proxy =  (new NativeProxy(float16bitsArray, handler));\n    WeakMapPrototypeSet(float16bitsArrays, proxy, float16bitsArray);\n    return proxy;\n  }\n  static from(src, ...opts) {\n    const Constructor = this;\n    if (!ReflectHas(Constructor, brand)) {\n      throw NativeTypeError(\n        THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY\n      );\n    }\n    if (Constructor === Float16Array) {\n      if (isFloat16Array(src) && opts.length === 0) {\n        const float16bitsArray = getFloat16BitsArray(src);\n        const uint16 = new NativeUint16Array(\n          TypedArrayPrototypeGetBuffer(float16bitsArray),\n          TypedArrayPrototypeGetByteOffset(float16bitsArray),\n          TypedArrayPrototypeGetLength(float16bitsArray)\n        );\n        return new Float16Array(\n          TypedArrayPrototypeGetBuffer(TypedArrayPrototypeSlice(uint16))\n        );\n      }\n      if (opts.length === 0) {\n        return new Float16Array(\n          TypedArrayPrototypeGetBuffer(\n            Uint16ArrayFrom(src, roundToFloat16Bits)\n          )\n        );\n      }\n      const mapFunc = opts[0];\n      const thisArg = opts[1];\n      return new Float16Array(\n        TypedArrayPrototypeGetBuffer(\n          Uint16ArrayFrom(src, function (val, ...args) {\n            return roundToFloat16Bits(\n              ReflectApply(mapFunc, this, [val, ...safeIfNeeded(args)])\n            );\n          }, thisArg)\n        )\n      );\n    }\n    let list;\n    let length;\n    const iterator = src[SymbolIterator];\n    if (iterator != null && typeof iterator !== \"function\") {\n      throw NativeTypeError(ITERATOR_PROPERTY_IS_NOT_CALLABLE);\n    }\n    if (iterator != null) {\n      if (isOrdinaryArray(src)) {\n        list = src;\n        length = src.length;\n      } else if (isOrdinaryNativeTypedArray(src)) {\n        list = src;\n        length = TypedArrayPrototypeGetLength(src);\n      } else {\n        list = [...src];\n        length = list.length;\n      }\n    } else {\n      if (src == null) {\n        throw NativeTypeError(\n          CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n        );\n      }\n      list = NativeObject(src);\n      length = ToLength(list.length);\n    }\n    const array = new Constructor(length);\n    if (opts.length === 0) {\n      for (let i = 0; i < length; ++i) {\n        array[i] =  (list[i]);\n      }\n    } else {\n      const mapFunc = opts[0];\n      const thisArg = opts[1];\n      for (let i = 0; i < length; ++i) {\n        array[i] = ReflectApply(mapFunc, thisArg, [list[i], i]);\n      }\n    }\n    return array;\n  }\n  static of(...items) {\n    const Constructor = this;\n    if (!ReflectHas(Constructor, brand)) {\n      throw NativeTypeError(\n        THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY\n      );\n    }\n    const length = items.length;\n    if (Constructor === Float16Array) {\n      const proxy = new Float16Array(length);\n      const float16bitsArray = getFloat16BitsArray(proxy);\n      for (let i = 0; i < length; ++i) {\n        float16bitsArray[i] = roundToFloat16Bits(items[i]);\n      }\n      return proxy;\n    }\n    const array = new Constructor(length);\n    for (let i = 0; i < length; ++i) {\n      array[i] = items[i];\n    }\n    return array;\n  }\n  keys() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    return TypedArrayPrototypeKeys(float16bitsArray);\n  }\n  values() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    return wrap((function* () {\n      for (const val of TypedArrayPrototypeValues(float16bitsArray)) {\n        yield convertToNumber(val);\n      }\n    })());\n  }\n  entries() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    return wrap((function* () {\n      for (const [i, val] of TypedArrayPrototypeEntries(float16bitsArray)) {\n        yield  ([i, convertToNumber(val)]);\n      }\n    })());\n  }\n  at(index) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const relativeIndex = ToIntegerOrInfinity(index);\n    const k = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n    if (k < 0 || k >= length) {\n      return;\n    }\n    return convertToNumber(float16bitsArray[k]);\n  }\n  with(index, value) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const relativeIndex = ToIntegerOrInfinity(index);\n    const k = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n    const number = +value;\n    if (k < 0 || k >= length) {\n      throw NativeRangeError(OFFSET_IS_OUT_OF_BOUNDS);\n    }\n    const uint16 = new NativeUint16Array(\n      TypedArrayPrototypeGetBuffer(float16bitsArray),\n      TypedArrayPrototypeGetByteOffset(float16bitsArray),\n      TypedArrayPrototypeGetLength(float16bitsArray)\n    );\n    const cloned = new Float16Array(\n      TypedArrayPrototypeGetBuffer(\n        TypedArrayPrototypeSlice(uint16)\n      )\n    );\n    const array = getFloat16BitsArray(cloned);\n    array[k] = roundToFloat16Bits(number);\n    return cloned;\n  }\n  map(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n    if (Constructor === Float16Array) {\n      const proxy = new Float16Array(length);\n      const array = getFloat16BitsArray(proxy);\n      for (let i = 0; i < length; ++i) {\n        const val = convertToNumber(float16bitsArray[i]);\n        array[i] = roundToFloat16Bits(\n          ReflectApply(callback, thisArg, [val, i, this])\n        );\n      }\n      return proxy;\n    }\n    const array = new Constructor(length);\n    assertSpeciesTypedArray(array, length);\n    for (let i = 0; i < length; ++i) {\n      const val = convertToNumber(float16bitsArray[i]);\n      array[i] = ReflectApply(callback, thisArg, [val, i, this]);\n    }\n    return  (array);\n  }\n  filter(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    const kept = [];\n    for (let i = 0; i < length; ++i) {\n      const val = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [val, i, this])) {\n        ArrayPrototypePush(kept, val);\n      }\n    }\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n    const array = new Constructor(kept);\n    assertSpeciesTypedArray(array);\n    return  (array);\n  }\n  reduce(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    if (length === 0 && opts.length === 0) {\n      throw NativeTypeError(REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE);\n    }\n    let accumulator, start;\n    if (opts.length === 0) {\n      accumulator = convertToNumber(float16bitsArray[0]);\n      start = 1;\n    } else {\n      accumulator = opts[0];\n      start = 0;\n    }\n    for (let i = start; i < length; ++i) {\n      accumulator = callback(\n        accumulator,\n        convertToNumber(float16bitsArray[i]),\n        i,\n        this\n      );\n    }\n    return accumulator;\n  }\n  reduceRight(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    if (length === 0 && opts.length === 0) {\n      throw NativeTypeError(REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE);\n    }\n    let accumulator, start;\n    if (opts.length === 0) {\n      accumulator = convertToNumber(float16bitsArray[length - 1]);\n      start = length - 2;\n    } else {\n      accumulator = opts[0];\n      start = length - 1;\n    }\n    for (let i = start; i >= 0; --i) {\n      accumulator = callback(\n        accumulator,\n        convertToNumber(float16bitsArray[i]),\n        i,\n        this\n      );\n    }\n    return accumulator;\n  }\n  forEach(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = 0; i < length; ++i) {\n      ReflectApply(callback, thisArg, [\n        convertToNumber(float16bitsArray[i]),\n        i,\n        this,\n      ]);\n    }\n  }\n  find(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = 0; i < length; ++i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return value;\n      }\n    }\n  }\n  findIndex(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = 0; i < length; ++i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  findLast(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = length - 1; i >= 0; --i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return value;\n      }\n    }\n  }\n  findLastIndex(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = length - 1; i >= 0; --i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  every(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = 0; i < length; ++i) {\n      if (\n        !ReflectApply(callback, thisArg, [\n          convertToNumber(float16bitsArray[i]),\n          i,\n          this,\n        ])\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n  some(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = 0; i < length; ++i) {\n      if (\n        ReflectApply(callback, thisArg, [\n          convertToNumber(float16bitsArray[i]),\n          i,\n          this,\n        ])\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n  set(input, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const targetOffset = ToIntegerOrInfinity(opts[0]);\n    if (targetOffset < 0) {\n      throw NativeRangeError(OFFSET_IS_OUT_OF_BOUNDS);\n    }\n    if (input == null) {\n      throw NativeTypeError(\n        CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n      );\n    }\n    if (isNativeBigIntTypedArray(input)) {\n      throw NativeTypeError(\n        CANNOT_MIX_BIGINT_AND_OTHER_TYPES\n      );\n    }\n    if (isFloat16Array(input)) {\n      return TypedArrayPrototypeSet(\n        getFloat16BitsArray(this),\n        getFloat16BitsArray(input),\n        targetOffset\n      );\n    }\n    if (isNativeTypedArray(input)) {\n      const buffer = TypedArrayPrototypeGetBuffer(input);\n      if (IsDetachedBuffer(buffer)) {\n        throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n      }\n    }\n    const targetLength = TypedArrayPrototypeGetLength(float16bitsArray);\n    const src = NativeObject(input);\n    const srcLength = ToLength(src.length);\n    if (targetOffset === Infinity || srcLength + targetOffset > targetLength) {\n      throw NativeRangeError(OFFSET_IS_OUT_OF_BOUNDS);\n    }\n    for (let i = 0; i < srcLength; ++i) {\n      float16bitsArray[i + targetOffset] = roundToFloat16Bits(src[i]);\n    }\n  }\n  reverse() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    TypedArrayPrototypeReverse(float16bitsArray);\n    return this;\n  }\n  toReversed() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const uint16 = new NativeUint16Array(\n      TypedArrayPrototypeGetBuffer(float16bitsArray),\n      TypedArrayPrototypeGetByteOffset(float16bitsArray),\n      TypedArrayPrototypeGetLength(float16bitsArray)\n    );\n    const cloned = new Float16Array(\n      TypedArrayPrototypeGetBuffer(\n        TypedArrayPrototypeSlice(uint16)\n      )\n    );\n    const clonedFloat16bitsArray = getFloat16BitsArray(cloned);\n    TypedArrayPrototypeReverse(clonedFloat16bitsArray);\n    return cloned;\n  }\n  fill(value, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    TypedArrayPrototypeFill(\n      float16bitsArray,\n      roundToFloat16Bits(value),\n      ...safeIfNeeded(opts)\n    );\n    return this;\n  }\n  copyWithin(target, start, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    TypedArrayPrototypeCopyWithin(float16bitsArray, target, start, ...safeIfNeeded(opts));\n    return this;\n  }\n  sort(compareFn) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const sortCompare = compareFn !== undefined ? compareFn : defaultCompare;\n    TypedArrayPrototypeSort(float16bitsArray, (x, y) => {\n      return sortCompare(convertToNumber(x), convertToNumber(y));\n    });\n    return this;\n  }\n  toSorted(compareFn) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    if (compareFn !== undefined && typeof compareFn !== \"function\") {\n      throw new NativeTypeError(THE_COMPARISON_FUNCTION_MUST_BE_EITHER_A_FUNCTION_OR_UNDEFINED);\n    }\n    const sortCompare = compareFn !== undefined ? compareFn : defaultCompare;\n    const uint16 = new NativeUint16Array(\n      TypedArrayPrototypeGetBuffer(float16bitsArray),\n      TypedArrayPrototypeGetByteOffset(float16bitsArray),\n      TypedArrayPrototypeGetLength(float16bitsArray)\n    );\n    const cloned = new Float16Array(\n      TypedArrayPrototypeGetBuffer(\n        TypedArrayPrototypeSlice(uint16)\n      )\n    );\n    const clonedFloat16bitsArray = getFloat16BitsArray(cloned);\n    TypedArrayPrototypeSort(clonedFloat16bitsArray, (x, y) => {\n      return sortCompare(convertToNumber(x), convertToNumber(y));\n    });\n    return cloned;\n  }\n  slice(start, end) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n    if (Constructor === Float16Array) {\n      const uint16 = new NativeUint16Array(\n        TypedArrayPrototypeGetBuffer(float16bitsArray),\n        TypedArrayPrototypeGetByteOffset(float16bitsArray),\n        TypedArrayPrototypeGetLength(float16bitsArray)\n      );\n      return new Float16Array(\n        TypedArrayPrototypeGetBuffer(\n          TypedArrayPrototypeSlice(uint16, start, end)\n        )\n      );\n    }\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const relativeStart = ToIntegerOrInfinity(start);\n    const relativeEnd = end === undefined ? length : ToIntegerOrInfinity(end);\n    let k;\n    if (relativeStart === -Infinity) {\n      k = 0;\n    } else if (relativeStart < 0) {\n      k = length + relativeStart > 0 ? length + relativeStart : 0;\n    } else {\n      k = length < relativeStart ? length : relativeStart;\n    }\n    let final;\n    if (relativeEnd === -Infinity) {\n      final = 0;\n    } else if (relativeEnd < 0) {\n      final = length + relativeEnd > 0 ? length + relativeEnd : 0;\n    } else {\n      final = length < relativeEnd ? length : relativeEnd;\n    }\n    const count = final - k > 0 ? final - k : 0;\n    const array = new Constructor(count);\n    assertSpeciesTypedArray(array, count);\n    if (count === 0) {\n      return array;\n    }\n    const buffer = TypedArrayPrototypeGetBuffer(float16bitsArray);\n    if (IsDetachedBuffer(buffer)) {\n      throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n    }\n    let n = 0;\n    while (k < final) {\n      array[n] = convertToNumber(float16bitsArray[k]);\n      ++k;\n      ++n;\n    }\n    return  (array);\n  }\n  subarray(begin, end) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n    const uint16 = new NativeUint16Array(\n      TypedArrayPrototypeGetBuffer(float16bitsArray),\n      TypedArrayPrototypeGetByteOffset(float16bitsArray),\n      TypedArrayPrototypeGetLength(float16bitsArray)\n    );\n    const uint16Subarray = TypedArrayPrototypeSubarray(uint16, begin, end);\n    const array = new Constructor(\n      TypedArrayPrototypeGetBuffer(uint16Subarray),\n      TypedArrayPrototypeGetByteOffset(uint16Subarray),\n      TypedArrayPrototypeGetLength(uint16Subarray)\n    );\n    assertSpeciesTypedArray(array);\n    return  (array);\n  }\n  indexOf(element, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    let from = ToIntegerOrInfinity(opts[0]);\n    if (from === Infinity) {\n      return -1;\n    }\n    if (from < 0) {\n      from += length;\n      if (from < 0) {\n        from = 0;\n      }\n    }\n    for (let i = from; i < length; ++i) {\n      if (\n        ObjectHasOwn(float16bitsArray, i) &&\n        convertToNumber(float16bitsArray[i]) === element\n      ) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  lastIndexOf(element, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    let from = opts.length >= 1 ? ToIntegerOrInfinity(opts[0]) : length - 1;\n    if (from === -Infinity) {\n      return -1;\n    }\n    if (from >= 0) {\n      from = from < length - 1 ? from : length - 1;\n    } else {\n      from += length;\n    }\n    for (let i = from; i >= 0; --i) {\n      if (\n        ObjectHasOwn(float16bitsArray, i) &&\n        convertToNumber(float16bitsArray[i]) === element\n      ) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  includes(element, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    let from = ToIntegerOrInfinity(opts[0]);\n    if (from === Infinity) {\n      return false;\n    }\n    if (from < 0) {\n      from += length;\n      if (from < 0) {\n        from = 0;\n      }\n    }\n    const isNaN = NumberIsNaN(element);\n    for (let i = from; i < length; ++i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (isNaN && NumberIsNaN(value)) {\n        return true;\n      }\n      if (value === element) {\n        return true;\n      }\n    }\n    return false;\n  }\n  join(separator) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const array = copyToArray(float16bitsArray);\n    return ArrayPrototypeJoin(array, separator);\n  }\n  toLocaleString(...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const array = copyToArray(float16bitsArray);\n    return ArrayPrototypeToLocaleString(array, ...safeIfNeeded(opts));\n  }\n  get [SymbolToStringTag]() {\n    if (isFloat16Array(this)) {\n      return  (\"Float16Array\");\n    }\n  }\n}\nObjectDefineProperty(Float16Array, \"BYTES_PER_ELEMENT\", {\n  value: BYTES_PER_ELEMENT,\n});\nObjectDefineProperty(Float16Array, brand, {});\nReflectSetPrototypeOf(Float16Array, TypedArray);\nconst Float16ArrayPrototype = Float16Array.prototype;\nObjectDefineProperty(Float16ArrayPrototype, \"BYTES_PER_ELEMENT\", {\n  value: BYTES_PER_ELEMENT,\n});\nObjectDefineProperty(Float16ArrayPrototype, SymbolIterator, {\n  value: Float16ArrayPrototype.values,\n  writable: true,\n  configurable: true,\n});\nReflectSetPrototypeOf(Float16ArrayPrototype, TypedArrayPrototype);\n\nfunction isTypedArray(target) {\n  return isNativeTypedArray(target) || isFloat16Array(target);\n}\n\nfunction getFloat16(dataView, byteOffset, ...opts) {\n  return convertToNumber(\n    DataViewPrototypeGetUint16(dataView, byteOffset, ...safeIfNeeded(opts))\n  );\n}\nfunction setFloat16(dataView, byteOffset, value, ...opts) {\n  return DataViewPrototypeSetUint16(\n    dataView,\n    byteOffset,\n    roundToFloat16Bits(value),\n    ...safeIfNeeded(opts)\n  );\n}\n\nfunction f16round(x) {\n  return roundToFloat16(x);\n}\n\nexport { Float16Array, f16round, getFloat16, f16round as hfround, isFloat16Array, isTypedArray, setFloat16 };"],"mappings":"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"}