{"version":3,"sources":["../../../src/common/util/colors.ts"],"names":["Colors","require","passthrough","s","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","grey","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright"],"mappings":"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","sourcesContent":["/**\n * The interface used for formatting strings to contain color metadata.\n *\n * Use the interface properties to construct a style, then use the\n * `(s: string): string` function to format the provided string with the given\n * style.\n */\nexport interface Colors {\n  // Returns the string formatted to contain the specified color or style.\n  (s: string): string;\n\n  // modifiers\n  reset: Colors;\n  bold: Colors;\n  dim: Colors;\n  italic: Colors;\n  underline: Colors;\n  inverse: Colors;\n  hidden: Colors;\n  strikethrough: Colors;\n\n  // colors\n  black: Colors;\n  red: Colors;\n  green: Colors;\n  yellow: Colors;\n  blue: Colors;\n  magenta: Colors;\n  cyan: Colors;\n  white: Colors;\n  gray: Colors;\n  grey: Colors;\n\n  // bright colors\n  blackBright: Colors;\n  redBright: Colors;\n  greenBright: Colors;\n  yellowBright: Colors;\n  blueBright: Colors;\n  magentaBright: Colors;\n  cyanBright: Colors;\n  whiteBright: Colors;\n\n  // background colors\n  bgBlack: Colors;\n  bgRed: Colors;\n  bgGreen: Colors;\n  bgYellow: Colors;\n  bgBlue: Colors;\n  bgMagenta: Colors;\n  bgCyan: Colors;\n  bgWhite: Colors;\n\n  // bright background colors\n  bgBlackBright: Colors;\n  bgRedBright: Colors;\n  bgGreenBright: Colors;\n  bgYellowBright: Colors;\n  bgBlueBright: Colors;\n  bgMagentaBright: Colors;\n  bgCyanBright: Colors;\n  bgWhiteBright: Colors;\n}\n\n/**\n * The interface used for formatting strings with color metadata.\n *\n * Currently Colors will use the 'ansi-colors' module if it can be loaded.\n * If it cannot be loaded, then the Colors implementation is a straight pass-through.\n *\n * Colors may also be a no-op if the current environment does not support colors.\n */\nexport let Colors: Colors;\n\ntry {\n  /* eslint-disable-next-line node/no-unpublished-require */\n  Colors = require('ansi-colors') as Colors;\n} catch {\n  const passthrough = ((s: string) => s) as Colors;\n  passthrough.reset = passthrough;\n  passthrough.bold = passthrough;\n  passthrough.dim = passthrough;\n  passthrough.italic = passthrough;\n  passthrough.underline = passthrough;\n  passthrough.inverse = passthrough;\n  passthrough.hidden = passthrough;\n  passthrough.strikethrough = passthrough;\n  passthrough.black = passthrough;\n  passthrough.red = passthrough;\n  passthrough.green = passthrough;\n  passthrough.yellow = passthrough;\n  passthrough.blue = passthrough;\n  passthrough.magenta = passthrough;\n  passthrough.cyan = passthrough;\n  passthrough.white = passthrough;\n  passthrough.gray = passthrough;\n  passthrough.grey = passthrough;\n  passthrough.blackBright = passthrough;\n  passthrough.redBright = passthrough;\n  passthrough.greenBright = passthrough;\n  passthrough.yellowBright = passthrough;\n  passthrough.blueBright = passthrough;\n  passthrough.magentaBright = passthrough;\n  passthrough.cyanBright = passthrough;\n  passthrough.whiteBright = passthrough;\n  passthrough.bgBlack = passthrough;\n  passthrough.bgRed = passthrough;\n  passthrough.bgGreen = passthrough;\n  passthrough.bgYellow = passthrough;\n  passthrough.bgBlue = passthrough;\n  passthrough.bgMagenta = passthrough;\n  passthrough.bgCyan = passthrough;\n  passthrough.bgWhite = passthrough;\n  passthrough.bgBlackBright = passthrough;\n  passthrough.bgRedBright = passthrough;\n  passthrough.bgGreenBright = passthrough;\n  passthrough.bgYellowBright = passthrough;\n  passthrough.bgBlueBright = passthrough;\n  passthrough.bgMagentaBright = passthrough;\n  passthrough.bgCyanBright = passthrough;\n  passthrough.bgWhiteBright = passthrough;\n  Colors = passthrough;\n}\n"],"file":"colors.js"}