{"version":3,"file":"file_loader.js","names":["assert","parseQuery","loadTreeForQuery","TestFileLoader","EventTarget","importSpecFile","suite","path","url","join","dispatchEvent","MessageEvent","data","import","loadTree","query","subqueriesToExpand","tree","map","s","q","level","loadCases","iterateLeaves","DefaultTestFileLoader","listing"],"sources":["../../../src/common/internal/file_loader.ts"],"sourcesContent":["import { IterableTestGroup } from '../internal/test_group.js';\nimport { assert } from '../util/util.js';\n\nimport { parseQuery } from './query/parseQuery.js';\nimport { TestQuery } from './query/query.js';\nimport { TestSuiteListing } from './test_suite_listing.js';\nimport { loadTreeForQuery, TestTree, TestTreeLeaf } from './tree.js';\n\n// A listing file, e.g. either of:\n// - `src/webgpu/listing.ts` (which is dynamically computed, has a Promise<TestSuiteListing>)\n// - `out/webgpu/listing.js` (which is pre-baked, has a TestSuiteListing)\ninterface ListingFile {\n  listing: Promise<TestSuiteListing> | TestSuiteListing;\n}\n\n// A .spec.ts file, as imported.\nexport interface SpecFile {\n  readonly description: string;\n  readonly g: IterableTestGroup;\n}\n\nexport interface ImportInfo {\n  url: string;\n}\n\ninterface TestFileLoaderEventMap {\n  import: MessageEvent<ImportInfo>;\n  finish: MessageEvent<void>;\n}\n\nexport interface TestFileLoader extends EventTarget {\n  addEventListener<K extends keyof TestFileLoaderEventMap>(\n    type: K,\n    listener: (this: TestFileLoader, ev: TestFileLoaderEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener<K extends keyof TestFileLoaderEventMap>(\n    type: K,\n    listener: (this: TestFileLoader, ev: TestFileLoaderEventMap[K]) => void,\n    options?: boolean | EventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void;\n}\n\n// Base class for DefaultTestFileLoader and FakeTestFileLoader.\nexport abstract class TestFileLoader extends EventTarget {\n  abstract listing(suite: string): Promise<TestSuiteListing>;\n  protected abstract import(path: string): Promise<SpecFile>;\n\n  importSpecFile(suite: string, path: string[]): Promise<SpecFile> {\n    const url = `${suite}/${path.join('/')}.spec.js`;\n    this.dispatchEvent(\n      new MessageEvent<ImportInfo>('import', { data: { url } })\n    );\n    return this.import(url);\n  }\n\n  async loadTree(query: TestQuery, subqueriesToExpand: string[] = []): Promise<TestTree> {\n    const tree = await loadTreeForQuery(\n      this,\n      query,\n      subqueriesToExpand.map(s => {\n        const q = parseQuery(s);\n        assert(q.level >= 2, () => `subqueriesToExpand entries should not be multi-file:\\n  ${q}`);\n        return q;\n      })\n    );\n    this.dispatchEvent(new MessageEvent<void>('finish'));\n    return tree;\n  }\n\n  async loadCases(query: TestQuery): Promise<IterableIterator<TestTreeLeaf>> {\n    const tree = await this.loadTree(query);\n    return tree.iterateLeaves();\n  }\n}\n\nexport class DefaultTestFileLoader extends TestFileLoader {\n  async listing(suite: string): Promise<TestSuiteListing> {\n    return ((await import(`../../${suite}/listing.js`)) as ListingFile).listing;\n  }\n\n  import(path: string): Promise<SpecFile> {\n    return import(`../../${path}`);\n  }\n}\n"],"mappings":";AAAA;AAAA,GACA,SAASA,MAAM,QAAQ,iBAAiB;AAExC,SAASC,UAAU,QAAQ,uBAAuB;;;AAGlD,SAASC,gBAAgB,QAAgC,WAAW;;AAEpE;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA,OAAO,MAAeC,cAAc,SAASC,WAAW,CAAC;;;;EAIvDC,cAAc,CAACC,KAAa,EAAEC,IAAc,EAAqB;IAC/D,MAAMC,GAAG,GAAI,GAAEF,KAAM,IAAGC,IAAI,CAACE,IAAI,CAAC,GAAG,CAAE,UAAS;IAChD,IAAI,CAACC,aAAa;IAChB,IAAIC,YAAY,CAAa,QAAQ,EAAE,EAAEC,IAAI,EAAE,EAAEJ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1D;;IACD,OAAO,IAAI,CAACK,MAAM,CAACL,GAAG,CAAC;EACzB;;EAEA,MAAMM,QAAQ,CAACC,KAAgB,EAAEC,kBAA4B,GAAG,EAAE,EAAqB;IACrF,MAAMC,IAAI,GAAG,MAAMf,gBAAgB;IACjC,IAAI;IACJa,KAAK;IACLC,kBAAkB,CAACE,GAAG,CAAC,CAAAC,CAAC,KAAI;MAC1B,MAAMC,CAAC,GAAGnB,UAAU,CAACkB,CAAC,CAAC;MACvBnB,MAAM,CAACoB,CAAC,CAACC,KAAK,IAAI,CAAC,EAAE,MAAO,2DAA0DD,CAAE,EAAC,CAAC;MAC1F,OAAOA,CAAC;IACV,CAAC,CAAC,CACH;;IACD,IAAI,CAACV,aAAa,CAAC,IAAIC,YAAY,CAAO,QAAQ,CAAC,CAAC;IACpD,OAAOM,IAAI;EACb;;EAEA,MAAMK,SAAS,CAACP,KAAgB,EAA2C;IACzE,MAAME,IAAI,GAAG,MAAM,IAAI,CAACH,QAAQ,CAACC,KAAK,CAAC;IACvC,OAAOE,IAAI,CAACM,aAAa,EAAE;EAC7B;AACF;;AAEA,OAAO,MAAMC,qBAAqB,SAASrB,cAAc,CAAC;EACxD,MAAMsB,OAAO,CAACnB,KAAa,EAA6B;IACtD,OAAO,CAAE,MAAM,MAAM,CAAE,SAAQA,KAAM,aAAY,CAAC,EAAkBmB,OAAO;EAC7E;;EAEAZ,MAAM,CAACN,IAAY,EAAqB;IACtC,OAAO,MAAM,CAAE,SAAQA,IAAK,EAAC,CAAC;EAChC;AACF"}