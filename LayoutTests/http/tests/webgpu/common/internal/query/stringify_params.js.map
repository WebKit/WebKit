{"version":3,"file":"stringify_params.js","names":["assert","badParamValueChars","paramKeyIsPublic","stringifyParamValue","stringifyParamValueUniquely","kParamKVSeparator","kParamSeparator","kWildcard","stringifyPublicParams","p","addWildcard","parts","Object","keys","filter","k","map","stringifySingleParam","push","join","stringifyPublicParamsUniquely","sort","stringifySingleParamUniquely","v","stringifySingleParamValue","s","test"],"sources":["../../../../src/common/internal/query/stringify_params.ts"],"sourcesContent":["import { TestParams } from '../../framework/fixture.js';\nimport { assert } from '../../util/util.js';\nimport { JSONWithUndefined, badParamValueChars, paramKeyIsPublic } from '../params_utils.js';\n\nimport { stringifyParamValue, stringifyParamValueUniquely } from './json_param_value.js';\nimport { kParamKVSeparator, kParamSeparator, kWildcard } from './separators.js';\n\nexport function stringifyPublicParams(p: TestParams, addWildcard = false): string {\n  const parts = Object.keys(p)\n    .filter(k => paramKeyIsPublic(k))\n    .map(k => stringifySingleParam(k, p[k]));\n\n  if (addWildcard) parts.push(kWildcard);\n\n  return parts.join(kParamSeparator);\n}\n\n/**\n * An _approximately_ unique string representing a CaseParams value.\n */\nexport function stringifyPublicParamsUniquely(p: TestParams): string {\n  const keys = Object.keys(p).sort();\n  return keys\n    .filter(k => paramKeyIsPublic(k))\n    .map(k => stringifySingleParamUniquely(k, p[k]))\n    .join(kParamSeparator);\n}\n\nexport function stringifySingleParam(k: string, v: JSONWithUndefined) {\n  return `${k}${kParamKVSeparator}${stringifySingleParamValue(v)}`;\n}\n\nfunction stringifySingleParamUniquely(k: string, v: JSONWithUndefined) {\n  return `${k}${kParamKVSeparator}${stringifyParamValueUniquely(v)}`;\n}\n\nfunction stringifySingleParamValue(v: JSONWithUndefined): string {\n  const s = stringifyParamValue(v);\n  assert(\n    !badParamValueChars.test(s),\n    `JSON.stringified param value must not match ${badParamValueChars} - was ${s}`\n  );\n  return s;\n}\n"],"mappings":";AAAA;AAAA,GACA,SAASA,MAAM,QAAQ,oBAAoB,CAC3C,SAA4BC,kBAAkB,EAAEC,gBAAgB,QAAQ,oBAAoB;;AAE5F,SAASC,mBAAmB,EAAEC,2BAA2B,QAAQ,uBAAuB;AACxF,SAASC,iBAAiB,EAAEC,eAAe,EAAEC,SAAS,QAAQ,iBAAiB;;AAE/E,OAAO,SAASC,qBAAqB,CAACC,CAAa,EAAEC,WAAW,GAAG,KAAK,EAAU;EAChF,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACJ,CAAC,CAAC;EACzBK,MAAM,CAAC,CAAAC,CAAC,KAAIb,gBAAgB,CAACa,CAAC,CAAC,CAAC;EAChCC,GAAG,CAAC,CAAAD,CAAC,KAAIE,oBAAoB,CAACF,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,CAAC,CAAC;;EAE1C,IAAIL,WAAW,EAAEC,KAAK,CAACO,IAAI,CAACX,SAAS,CAAC;;EAEtC,OAAOI,KAAK,CAACQ,IAAI,CAACb,eAAe,CAAC;AACpC;;AAEA;AACA;AACA;AACA,OAAO,SAASc,6BAA6B,CAACX,CAAa,EAAU;EACnE,MAAMI,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACJ,CAAC,CAAC,CAACY,IAAI,EAAE;EAClC,OAAOR,IAAI;EACRC,MAAM,CAAC,CAAAC,CAAC,KAAIb,gBAAgB,CAACa,CAAC,CAAC,CAAC;EAChCC,GAAG,CAAC,CAAAD,CAAC,KAAIO,4BAA4B,CAACP,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,CAAC,CAAC;EAC/CI,IAAI,CAACb,eAAe,CAAC;AAC1B;;AAEA,OAAO,SAASW,oBAAoB,CAACF,CAAS,EAAEQ,CAAoB,EAAE;EACpE,OAAQ,GAAER,CAAE,GAAEV,iBAAkB,GAAEmB,yBAAyB,CAACD,CAAC,CAAE,EAAC;AAClE;;AAEA,SAASD,4BAA4B,CAACP,CAAS,EAAEQ,CAAoB,EAAE;EACrE,OAAQ,GAAER,CAAE,GAAEV,iBAAkB,GAAED,2BAA2B,CAACmB,CAAC,CAAE,EAAC;AACpE;;AAEA,SAASC,yBAAyB,CAACD,CAAoB,EAAU;EAC/D,MAAME,CAAC,GAAGtB,mBAAmB,CAACoB,CAAC,CAAC;EAChCvB,MAAM;EACJ,CAACC,kBAAkB,CAACyB,IAAI,CAACD,CAAC,CAAC;EAC1B,+CAA8CxB,kBAAmB,UAASwB,CAAE,EAAC,CAC/E;;EACD,OAAOA,CAAC;AACV"}