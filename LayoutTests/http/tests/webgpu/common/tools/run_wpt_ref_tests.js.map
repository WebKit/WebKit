{"version":3,"file":"run_wpt_ref_tests.js","names":["fs","path","chromium","firefox","webkit","ScreenshotManager","readPng","writePng","verbose","process","env","VERBOSE","kRefTestsBaseURL","kRefTestsPath","kScreenshotPath","kRefLinkRE","kRefWaitClassRE","kFuzzy","printUsage","console","log","getRefTestNames","refTestPath","readdirSync","filter","name","endsWith","getRegexMatchCapture","re","content","m","exec","readHTMLFile","filename","readFileSync","encoding","refLink","refWait","test","fuzzy","getComputedDevicePixelRatio","browser","context","newContext","page","newPage","goto","waitForLoadState","devicePixelRatio","evaluate","resolve","promise","Promise","_resolve","observer","ResizeObserver","entries","devicePixelWidth","devicePixelContentBoxSize","inlineSize","clientWidth","target","observe","document","documentElement","close","getBrowserInterface","executablePath","lc","toLowerCase","includes","launch","headless","args","deviceScaleFactor","Error","parseFuzzy","maxDifference","totalPixels","parts","split","length","ranges","map","part","range","replace","v","parseInt","compareImages","filename1","filename2","diffName","startingRow","img1","img2","width","height","error","diffData","Buffer","alloc","diffPixels","Uint32Array","buffer","kRed","kWhite","kYellow","numPixelsDifferent","anyPixelsOutOfRange","y","x","offset","isDifferent","outOfRange","c","off","v0","data","v1","channelDiff","Math","abs","pass","exists","accessSync","e","waitForPageRender","requestAnimationFrame","runPage","url","waitForFunction","wptRefTestPageReady","timeout","wptRefTestGetTimeout","main","argv","slice","refTestName","testNames","mkdirSync","recursive","screenshotManager","init","on","msg","lineNumber","columnNumber","location","values","all","a","jsonValue","addInitScript","results","addResult","status","testName","refName","testScreenshotName","refScreenshotName","push","join","testURL","refURL","refFileInfo","timeoutTest","takeScreenshot","timeoutRef","padEnd","imgLink","title","basename","indexName","writeFileSync","catch"],"sources":["../../../src/common/tools/run_wpt_ref_tests.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\n\nimport { chromium, firefox, webkit, Page, Browser } from 'playwright-core';\n\nimport { ScreenshotManager, readPng, writePng } from './image_utils.js';\n\ndeclare function wptRefTestPageReady(): boolean;\ndeclare function wptRefTestGetTimeout(): boolean;\n\nconst verbose = !!process.env.VERBOSE;\nconst kRefTestsBaseURL = 'http://localhost:8080/out/webgpu/web_platform/reftests';\nconst kRefTestsPath = 'src/webgpu/web_platform/reftests';\nconst kScreenshotPath = 'out-wpt-reftest-screenshots';\n\n// note: technically we should use an HTML parser to find this to deal with whitespace\n// attribute order, quotes, entities, etc but since we control the test source we can just\n// make sure they match\nconst kRefLinkRE = /<link\\s+rel=\"match\"\\s+href=\"(.*?)\"/;\nconst kRefWaitClassRE = /class=\"reftest-wait\"/;\nconst kFuzzy = /<meta\\s+name=\"?fuzzy\"?\\s+content=\"(.*?)\">/;\n\nfunction printUsage() {\n  console.log(`\nrun_wpt_ref_tests path-to-browser-executable [ref-test-name]\n\nwhere ref-test-name is just a simple check for the test including the given string.\nIf not passed all ref tests are run\n\nMacOS Chrome Example:\n  node tools/run_wpt_ref_tests /Applications/Google\\\\ Chrome\\\\ Canary.app/Contents/MacOS/Google\\\\ Chrome\\\\ Canary\n\n`);\n}\n\n// Get all of filenames that end with '.html'\nfunction getRefTestNames(refTestPath: string) {\n  return fs.readdirSync(refTestPath).filter(name => name.endsWith('.html'));\n}\n\n// Given a regex with one capture, return it or the empty string if no match.\nfunction getRegexMatchCapture(re: RegExp, content: string) {\n  const m = re.exec(content);\n  return m ? m[1] : '';\n}\n\ntype FileInfo = {\n  content: string;\n  refLink: string;\n  refWait: boolean;\n  fuzzy: string;\n};\n\nfunction readHTMLFile(filename: string): FileInfo {\n  const content = fs.readFileSync(filename, { encoding: 'utf8' });\n  return {\n    content,\n    refLink: getRegexMatchCapture(kRefLinkRE, content),\n    refWait: kRefWaitClassRE.test(content),\n    fuzzy: getRegexMatchCapture(kFuzzy, content),\n  };\n}\n\n/**\n * This is workaround for a bug in Chrome. The bug is when in emulation mode\n * Chrome lets you set a devicePixelRatio but Chrome still renders in the\n * actual devicePixelRatio, at least on MacOS.\n * So, we compute the ratio and then use that.\n */\nasync function getComputedDevicePixelRatio(browser: Browser): Promise<number> {\n  const context = await browser.newContext();\n  const page = await context.newPage();\n  await page.goto('data:text/html,<html></html>');\n  await page.waitForLoadState('networkidle');\n  const devicePixelRatio = await page.evaluate(() => {\n    let resolve: (v: number) => void;\n    const promise = new Promise(_resolve => (resolve = _resolve));\n    const observer = new ResizeObserver(entries => {\n      const devicePixelWidth = entries[0].devicePixelContentBoxSize[0].inlineSize;\n      const clientWidth = entries[0].target.clientWidth;\n      const devicePixelRatio = devicePixelWidth / clientWidth;\n      resolve(devicePixelRatio);\n    });\n    observer.observe(document.documentElement);\n    return promise;\n  });\n  await page.close();\n  await context.close();\n  return devicePixelRatio as number;\n}\n\n// Note: If possible, rather then start adding command line options to this tool,\n// see if you can just make it work based off the path.\nasync function getBrowserInterface(executablePath: string) {\n  const lc = executablePath.toLowerCase();\n  if (lc.includes('chrom')) {\n    const browser = await chromium.launch({\n      executablePath,\n      headless: false,\n      args: ['--enable-unsafe-webgpu'],\n    });\n    const devicePixelRatio = await getComputedDevicePixelRatio(browser);\n    const context = await browser.newContext({\n      deviceScaleFactor: devicePixelRatio,\n    });\n    return { browser, context };\n  } else if (lc.includes('firefox')) {\n    const browser = await firefox.launch({\n      executablePath,\n      headless: false,\n    });\n    const context = await browser.newContext();\n    return { browser, context };\n  } else if (lc.includes('safari') || lc.includes('webkit')) {\n    const browser = await webkit.launch({\n      executablePath,\n      headless: false,\n    });\n    const context = await browser.newContext();\n    return { browser, context };\n  } else {\n    throw new Error(`could not guess browser from executable path: ${executablePath}`);\n  }\n}\n\n// Parses a fuzzy spec as defined here\n// https://web-platform-tests.org/writing-tests/reftests.html#fuzzy-matching\n// Note: This is not robust but the tests will eventually be run in the real wpt.\nfunction parseFuzzy(fuzzy: string) {\n  if (!fuzzy) {\n    return { maxDifference: [0, 0], totalPixels: [0, 0] };\n  } else {\n    const parts = fuzzy.split(';');\n    if (parts.length !== 2) {\n      throw Error(`unhandled fuzzy format: ${fuzzy}`);\n    }\n    const ranges = parts.map(part => {\n      const range = part\n        .replace(/[a-zA-Z=]/g, '')\n        .split('-')\n        .map(v => parseInt(v));\n      return range.length === 1 ? [0, range[0]] : range;\n    });\n    return {\n      maxDifference: ranges[0],\n      totalPixels: ranges[1],\n    };\n  }\n}\n\n// Compares two images using the algorithm described in the web platform tests\n// https://web-platform-tests.org/writing-tests/reftests.html#fuzzy-matching\n// If they are different will write out a diff mask.\nfunction compareImages(\n  filename1: string,\n  filename2: string,\n  fuzzy: string,\n  diffName: string,\n  startingRow: number = 0\n) {\n  const img1 = readPng(filename1);\n  const img2 = readPng(filename2);\n  const { width, height } = img1;\n  if (img2.width !== width || img2.height !== height) {\n    console.error('images are not the same size:', filename1, filename2);\n    return;\n  }\n\n  const { maxDifference, totalPixels } = parseFuzzy(fuzzy);\n\n  const diffData = Buffer.alloc(width * height * 4);\n  const diffPixels = new Uint32Array(diffData.buffer);\n  const kRed = 0xff0000ff;\n  const kWhite = 0xffffffff;\n  const kYellow = 0xff00ffff;\n\n  let numPixelsDifferent = 0;\n  let anyPixelsOutOfRange = false;\n  for (let y = startingRow; y < height; ++y) {\n    for (let x = 0; x < width; ++x) {\n      const offset = y * width + x;\n      let isDifferent = false;\n      let outOfRange = false;\n      for (let c = 0; c < 4 && !outOfRange; ++c) {\n        const off = offset * 4 + c;\n        const v0 = img1.data[off];\n        const v1 = img2.data[off];\n        const channelDiff = Math.abs(v0 - v1);\n        outOfRange ||= channelDiff < maxDifference[0] || channelDiff > maxDifference[1];\n        isDifferent ||= channelDiff > 0;\n      }\n      numPixelsDifferent += isDifferent ? 1 : 0;\n      anyPixelsOutOfRange ||= outOfRange;\n      diffPixels[offset] = outOfRange ? kRed : isDifferent ? kYellow : kWhite;\n    }\n  }\n\n  const pass =\n    !anyPixelsOutOfRange &&\n    numPixelsDifferent >= totalPixels[0] &&\n    numPixelsDifferent <= totalPixels[1];\n  if (!pass) {\n    writePng(diffName, width, height, diffData);\n    console.error(\n      `FAIL: too many differences in: ${filename1} vs ${filename2}\n       ${numPixelsDifferent} differences, expected: ${totalPixels[0]}-${totalPixels[1]} with range: ${maxDifference[0]}-${maxDifference[1]}\n       wrote difference to: ${diffName};\n      `\n    );\n  } else {\n    console.log(`PASS`);\n  }\n  return pass;\n}\n\nfunction exists(filename: string) {\n  try {\n    fs.accessSync(filename);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function waitForPageRender(page: Page) {\n  await page.evaluate(() => {\n    return new Promise(resolve => requestAnimationFrame(resolve));\n  });\n}\n\n// returns true if the page timed out.\nasync function runPage(page: Page, url: string, refWait: boolean) {\n  console.log('  loading:', url);\n  // we need to load about:blank to force the browser to re-render\n  // else the previous page may still be visible if the page we are loading fails\n  await page.goto('about:blank');\n  await page.waitForLoadState('domcontentloaded');\n  await waitForPageRender(page);\n\n  await page.goto(url);\n  await page.waitForLoadState('domcontentloaded');\n  await waitForPageRender(page);\n\n  if (refWait) {\n    await page.waitForFunction(() => wptRefTestPageReady());\n    const timeout = await page.evaluate(() => wptRefTestGetTimeout());\n    if (timeout) {\n      return true;\n    }\n  }\n  return false;\n}\n\nasync function main() {\n  const args = process.argv.slice(2);\n  if (args.length < 1 || args.length > 2) {\n    printUsage();\n    return;\n  }\n\n  const [executablePath, refTestName] = args;\n\n  if (!exists(executablePath)) {\n    console.error(executablePath, 'does not exist');\n    return;\n  }\n\n  const testNames = getRefTestNames(kRefTestsPath).filter(name =>\n    refTestName ? name.includes(refTestName) : true\n  );\n\n  if (!exists(kScreenshotPath)) {\n    fs.mkdirSync(kScreenshotPath, { recursive: true });\n  }\n\n  if (testNames.length === 0) {\n    console.error(`no tests include \"${refTestName}\"`);\n    return;\n  }\n\n  const { browser, context } = await getBrowserInterface(executablePath);\n  const page = await context.newPage();\n\n  const screenshotManager = new ScreenshotManager();\n  await screenshotManager.init(page);\n\n  if (verbose) {\n    page.on('console', async msg => {\n      const { url, lineNumber, columnNumber } = msg.location();\n      const values = await Promise.all(msg.args().map(a => a.jsonValue()));\n      console.log(`${url}:${lineNumber}:${columnNumber}:`, ...values);\n    });\n  }\n\n  await page.addInitScript({\n    content: `\n    (() => {\n      let timeout = false;\n      setTimeout(() => timeout = true, 5000);\n\n      window.wptRefTestPageReady = function() {\n        return timeout || !document.documentElement.classList.contains('reftest-wait');\n      };\n\n      window.wptRefTestGetTimeout = function() {\n        return timeout;\n      };\n    })();\n    `,\n  });\n\n  type Result = {\n    status: string;\n    testName: string;\n    refName: string;\n    testScreenshotName: string;\n    refScreenshotName: string;\n    diffName: string;\n  };\n  const results: Result[] = [];\n  const addResult = (\n    status: string,\n    testName: string,\n    refName: string,\n    testScreenshotName: string = '',\n    refScreenshotName: string = '',\n    diffName: string = ''\n  ) => {\n    results.push({ status, testName, refName, testScreenshotName, refScreenshotName, diffName });\n  };\n\n  for (const testName of testNames) {\n    console.log('processing:', testName);\n    const { refLink, refWait, fuzzy } = readHTMLFile(path.join(kRefTestsPath, testName));\n    if (!refLink) {\n      throw new Error(`could not find ref link in: ${testName}`);\n    }\n    const testURL = `${kRefTestsBaseURL}/${testName}`;\n    const refURL = `${kRefTestsBaseURL}/${refLink}`;\n\n    // Technically this is not correct but it fits the existing tests.\n    // It assumes refLink is relative to the refTestsPath but it's actually\n    // supposed to be relative to the test. It might also be an absolute\n    // path. Neither of those cases exist at the time of writing this.\n    const refFileInfo = readHTMLFile(path.join(kRefTestsPath, refLink));\n    const testScreenshotName = path.join(kScreenshotPath, `${testName}-actual.png`);\n    const refScreenshotName = path.join(kScreenshotPath, `${testName}-expected.png`);\n    const diffName = path.join(kScreenshotPath, `${testName}-diff.png`);\n\n    const timeoutTest = await runPage(page, testURL, refWait);\n    if (timeoutTest) {\n      addResult('TIMEOUT', testName, refLink);\n      continue;\n    }\n    await screenshotManager.takeScreenshot(page, testScreenshotName);\n\n    const timeoutRef = await runPage(page, refURL, refFileInfo.refWait);\n    if (timeoutRef) {\n      addResult('TIMEOUT', testName, refLink);\n      continue;\n    }\n    await screenshotManager.takeScreenshot(page, refScreenshotName);\n\n    const pass = compareImages(testScreenshotName, refScreenshotName, fuzzy, diffName);\n    addResult(\n      pass ? 'PASS' : 'FAILURE',\n      testName,\n      refLink,\n      testScreenshotName,\n      refScreenshotName,\n      diffName\n    );\n  }\n\n  console.log(\n    `----results----\\n${results\n      .map(({ status, testName }) => `[ ${status.padEnd(7)} ] ${testName}`)\n      .join('\\n')}`\n  );\n\n  const imgLink = (filename: string, title: string) => {\n    const name = path.basename(filename);\n    return `\n    <div class=\"screenshot\">\n      ${title}\n      <a href=\"${name}\" title=\"${name}\">\n        <img src=\"${name}\" width=\"256\"/>\n      </a>\n    </div>`;\n  };\n\n  const indexName = path.join(kScreenshotPath, 'index.html');\n  fs.writeFileSync(\n    indexName,\n    `<!DOCTYPE html>\n<html>\n  <head>\n    <style>\n    .screenshot {\n      display: inline-block;\n      background: #CCC;\n      margin-right: 5px;\n      padding: 5px;\n    }\n    .screenshot a {\n      display: block;\n    }\n    .screenshot\n    </style>\n  </head>\n  <body>\n  ${results\n    .map(({ status, testName, refName, testScreenshotName, refScreenshotName, diffName }) => {\n      return `\n        <div>\n           <div>[ ${status} ]: ${testName} ref: ${refName}</div>\n           ${\n             status === 'FAILURE'\n               ? `${imgLink(testScreenshotName, 'actual')}\n                  ${imgLink(refScreenshotName, 'ref')}\n                  ${imgLink(diffName, 'diff')}`\n               : ``\n           }\n        </div>\n        <hr>\n      `;\n    })\n    .join('\\n')}\n  </body>\n</html>\n  `\n  );\n\n  // the file:// with an absolute path makes it clickable in some terminals\n  console.log(`\\nsee: file://${path.resolve(indexName)}\\n`);\n\n  await page.close();\n  await context.close();\n  // I have no idea why it's taking ~30 seconds for playwright to close.\n  console.log('-- [ done: waiting for browser to close ] --');\n  await browser.close();\n}\n\nmain().catch(e => {\n  throw e;\n});\n"],"mappings":"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"}