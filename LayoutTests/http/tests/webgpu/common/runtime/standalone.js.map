{"version":3,"sources":["../../../src/common/runtime/standalone.ts"],"names":["setBaseResourcePath","DefaultTestFileLoader","Logger","parseQuery","TestTree","assert","optionEnabled","TestWorker","window","onbeforeunload","haveSomeResults","undefined","runnow","debug","globalDebugMode","logger","worker","autoCloseOnPass","document","getElementById","resultsVis","emptySubtreeResult","pass","fail","warn","skip","total","timems","mergeSubtreeResults","results","target","result","memoize","fn","value","makeTreeNodeHTML","tree","parentLevel","subtree","makeSubtreeHTML","makeCaseHTML","generateMyHTML","parentElement","div","$","appendTo","generateSubtreeHTML","runSubtree","t","caseResult","clearRenderedResult","updateRenderedResult","name","query","toString","rec","res","record","run","status","classList","add","caselogs","addClass","hide","casehead","setChecked","makeTreeNodeHeaderHTML","checked","show","casetime","html","appendChild","removeAttribute","text","empty","setAttribute","toFixed","logs","l","caselog","attr","on","consoleLogError","toJSON","n","subtreeResult","makeSubtreeChildrenHTML","children","values","level","runMySubtree","subtreeHTML","generateSubtree","header","firstElementChild","setChildrenChecked","childFns","Array","from","push","setChildChecked","e","globalThis","_stack","console","log","extra","onChange","isLeaf","prop","href","open","lastQueryLevelToExpand","runtext","testCreationStack","nodetitle","nodecolumns","val","subtreeCounts","countsToString","description","append","loader","qs","URLSearchParams","location","search","getAll","length","url","protocol","host","pathname","map","q","join","history","replaceState","rootQuery","loadTree","dissolveSingleChildTrees","root","setTreeCheckedRecursively","addEventListener","navigator","clipboard","writeText","asJSON"],"mappings":"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","sourcesContent":["// Implements the standalone test runner (see also: /standalone/index.html).\n\nimport { setBaseResourcePath } from '../framework/resources.js';\nimport { DefaultTestFileLoader } from '../internal/file_loader.js';\nimport { Logger } from '../internal/logging/logger.js';\nimport { LiveTestCaseResult } from '../internal/logging/result.js';\nimport { parseQuery } from '../internal/query/parseQuery.js';\nimport { TestQueryLevel } from '../internal/query/query.js';\nimport { TestTreeNode, TestSubtree, TestTreeLeaf, TestTree } from '../internal/tree.js';\nimport { assert, ErrorWithExtra } from '../util/util.js';\n\nimport { optionEnabled } from './helper/options.js';\nimport { TestWorker } from './helper/test_worker.js';\n\nwindow.onbeforeunload = () => {\n  // Prompt user before reloading if there are any results\n  return haveSomeResults ? false : undefined;\n};\n\nlet haveSomeResults = false;\n\nconst runnow = optionEnabled('runnow');\nconst debug = optionEnabled('debug');\n\nLogger.globalDebugMode = debug;\nconst logger = new Logger();\n\nsetBaseResourcePath('../out/resources');\n\nconst worker = optionEnabled('worker') ? new TestWorker(debug) : undefined;\n\nconst autoCloseOnPass = document.getElementById('autoCloseOnPass') as HTMLInputElement;\nconst resultsVis = document.getElementById('resultsVis')!;\n\ninterface SubtreeResult {\n  pass: number;\n  fail: number;\n  warn: number;\n  skip: number;\n  total: number;\n  timems: number;\n}\n\nfunction emptySubtreeResult() {\n  return { pass: 0, fail: 0, warn: 0, skip: 0, total: 0, timems: 0 };\n}\n\nfunction mergeSubtreeResults(...results: SubtreeResult[]) {\n  const target = emptySubtreeResult();\n  for (const result of results) {\n    target.pass += result.pass;\n    target.fail += result.fail;\n    target.warn += result.warn;\n    target.skip += result.skip;\n    target.total += result.total;\n    target.timems += result.timems;\n  }\n  return target;\n}\n\ntype SetCheckedRecursively = () => void;\ntype GenerateSubtreeHTML = (parent: HTMLElement) => SetCheckedRecursively;\ntype RunSubtree = () => Promise<SubtreeResult>;\n\ninterface VisualizedSubtree {\n  generateSubtreeHTML: GenerateSubtreeHTML;\n  runSubtree: RunSubtree;\n}\n\n// DOM generation\n\nfunction memoize<T>(fn: () => T): () => T {\n  let value: T | undefined;\n  return () => {\n    if (value === undefined) {\n      value = fn();\n    }\n    return value;\n  };\n}\n\nfunction makeTreeNodeHTML(tree: TestTreeNode, parentLevel: TestQueryLevel): VisualizedSubtree {\n  let subtree: VisualizedSubtree;\n\n  if ('children' in tree) {\n    subtree = makeSubtreeHTML(tree, parentLevel);\n  } else {\n    subtree = makeCaseHTML(tree);\n  }\n\n  const generateMyHTML = (parentElement: HTMLElement) => {\n    const div = $('<div>').appendTo(parentElement)[0];\n    return subtree.generateSubtreeHTML(div);\n  };\n  return { runSubtree: subtree.runSubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction makeCaseHTML(t: TestTreeLeaf): VisualizedSubtree {\n  // Becomes set once the case has been run once.\n  let caseResult: LiveTestCaseResult | undefined;\n\n  // Becomes set once the DOM for this case exists.\n  let clearRenderedResult: (() => void) | undefined;\n  let updateRenderedResult: (() => void) | undefined;\n\n  const name = t.query.toString();\n  const runSubtree = async () => {\n    if (clearRenderedResult) clearRenderedResult();\n\n    const result: SubtreeResult = emptySubtreeResult();\n\n    haveSomeResults = true;\n    const [rec, res] = logger.record(name);\n    caseResult = res;\n    if (worker) {\n      await worker.run(rec, name);\n    } else {\n      await t.run(rec);\n    }\n\n    result.total++;\n    result.timems += caseResult.timems;\n    switch (caseResult.status) {\n      case 'pass':\n        result.pass++;\n        break;\n      case 'fail':\n        result.fail++;\n        break;\n      case 'skip':\n        result.skip++;\n        break;\n      case 'warn':\n        result.warn++;\n        break;\n    }\n\n    if (updateRenderedResult) updateRenderedResult();\n\n    return result;\n  };\n\n  const generateSubtreeHTML = (div: HTMLElement) => {\n    div.classList.add('testcase');\n\n    const caselogs = $('<div>').addClass('testcaselogs').hide();\n    const [casehead, setChecked] = makeTreeNodeHeaderHTML(t, runSubtree, 2, checked => {\n      checked ? caselogs.show() : caselogs.hide();\n    });\n    const casetime = $('<div>').addClass('testcasetime').html('ms').appendTo(casehead);\n    div.appendChild(casehead);\n    div.appendChild(caselogs[0]);\n\n    clearRenderedResult = () => {\n      div.removeAttribute('data-status');\n      casetime.text('ms');\n      caselogs.empty();\n    };\n\n    updateRenderedResult = () => {\n      if (caseResult) {\n        div.setAttribute('data-status', caseResult.status);\n\n        casetime.text(caseResult.timems.toFixed(4) + ' ms');\n\n        if (caseResult.logs) {\n          caselogs.empty();\n          for (const l of caseResult.logs) {\n            const caselog = $('<div>').addClass('testcaselog').appendTo(caselogs);\n            $('<button>')\n              .addClass('testcaselogbtn')\n              .attr('alt', 'Log stack to console')\n              .attr('title', 'Log stack to console')\n              .appendTo(caselog)\n              .on('click', () => {\n                consoleLogError(l);\n              });\n            $('<pre>').addClass('testcaselogtext').appendTo(caselog).text(l.toJSON());\n          }\n        }\n      }\n    };\n\n    updateRenderedResult();\n\n    return setChecked;\n  };\n\n  return { runSubtree, generateSubtreeHTML };\n}\n\nfunction makeSubtreeHTML(n: TestSubtree, parentLevel: TestQueryLevel): VisualizedSubtree {\n  let subtreeResult: SubtreeResult = emptySubtreeResult();\n  // Becomes set once the DOM for this case exists.\n  let clearRenderedResult: (() => void) | undefined;\n  let updateRenderedResult: (() => void) | undefined;\n\n  const { runSubtree, generateSubtreeHTML } = makeSubtreeChildrenHTML(\n    n.children.values(),\n    n.query.level\n  );\n\n  const runMySubtree = async () => {\n    if (clearRenderedResult) clearRenderedResult();\n    subtreeResult = await runSubtree();\n    if (updateRenderedResult) updateRenderedResult();\n    return subtreeResult;\n  };\n\n  const generateMyHTML = (div: HTMLElement) => {\n    const subtreeHTML = $('<div>').addClass('subtreechildren');\n    const generateSubtree = memoize(() => generateSubtreeHTML(subtreeHTML[0]));\n\n    // Hide subtree - it's not generated yet.\n    subtreeHTML.hide();\n    const [header, setChecked] = makeTreeNodeHeaderHTML(n, runMySubtree, parentLevel, checked => {\n      if (checked) {\n        // Make sure the subtree is generated and then show it.\n        generateSubtree();\n        subtreeHTML.show();\n      } else {\n        subtreeHTML.hide();\n      }\n    });\n\n    div.classList.add('subtree');\n    div.classList.add(['', 'multifile', 'multitest', 'multicase'][n.query.level]);\n    div.appendChild(header);\n    div.appendChild(subtreeHTML[0]);\n\n    clearRenderedResult = () => {\n      div.removeAttribute('data-status');\n    };\n\n    updateRenderedResult = () => {\n      let status = '';\n      if (subtreeResult.pass > 0) {\n        status += 'pass';\n      }\n      if (subtreeResult.fail > 0) {\n        status += 'fail';\n      }\n      div.setAttribute('data-status', status);\n      if (autoCloseOnPass.checked && status === 'pass') {\n        div.firstElementChild!.removeAttribute('open');\n      }\n    };\n\n    updateRenderedResult();\n\n    return () => {\n      setChecked();\n      const setChildrenChecked = generateSubtree();\n      setChildrenChecked();\n    };\n  };\n\n  return { runSubtree: runMySubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction makeSubtreeChildrenHTML(\n  children: Iterable<TestTreeNode>,\n  parentLevel: TestQueryLevel\n): VisualizedSubtree {\n  const childFns = Array.from(children, subtree => makeTreeNodeHTML(subtree, parentLevel));\n\n  const runMySubtree = async () => {\n    const results: SubtreeResult[] = [];\n    for (const { runSubtree } of childFns) {\n      results.push(await runSubtree());\n    }\n    return mergeSubtreeResults(...results);\n  };\n  const generateMyHTML = (div: HTMLElement) => {\n    const setChildrenChecked = Array.from(childFns, ({ generateSubtreeHTML }) =>\n      generateSubtreeHTML(div)\n    );\n\n    return () => {\n      for (const setChildChecked of setChildrenChecked) {\n        setChildChecked();\n      }\n    };\n  };\n\n  return { runSubtree: runMySubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction consoleLogError(e: Error | ErrorWithExtra | undefined) {\n  if (e === undefined) return;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  (globalThis as any)._stack = e;\n  /* eslint-disable-next-line no-console */\n  console.log('_stack =', e);\n  if ('extra' in e && e.extra !== undefined) {\n    /* eslint-disable-next-line no-console */\n    console.log('_stack.extra =', e.extra);\n  }\n}\n\nfunction makeTreeNodeHeaderHTML(\n  n: TestTreeNode,\n  runSubtree: RunSubtree,\n  parentLevel: TestQueryLevel,\n  onChange: (checked: boolean) => void\n): [HTMLElement, SetCheckedRecursively] {\n  const isLeaf = 'run' in n;\n  const div = $('<details>').addClass('nodeheader');\n  const header = $('<summary>').appendTo(div);\n\n  const setChecked = () => {\n    div.prop('open', true); // (does not fire onChange)\n    onChange(true);\n  };\n\n  const href = `?${worker ? 'worker&' : ''}${debug ? 'debug&' : ''}q=${n.query.toString()}`;\n  if (onChange) {\n    div.on('toggle', function (this) {\n      onChange((this as HTMLDetailsElement).open);\n    });\n\n    // Expand the shallower parts of the tree at load.\n    // Also expand completely within subtrees that are at the same query level\n    // (e.g. s:f:t,* and s:f:t,t,*).\n    if (n.query.level <= lastQueryLevelToExpand || n.query.level === parentLevel) {\n      setChecked();\n    }\n  }\n  const runtext = isLeaf ? 'Run case' : 'Run subtree';\n  $('<button>')\n    .addClass(isLeaf ? 'leafrun' : 'subtreerun')\n    .attr('alt', runtext)\n    .attr('title', runtext)\n    .on('click', async () => {\n      runSubtree();\n    })\n    .appendTo(header);\n  $('<a>')\n    .addClass('nodelink')\n    .attr('href', href)\n    .attr('alt', 'Open')\n    .attr('title', 'Open')\n    .appendTo(header);\n  if ('testCreationStack' in n && n.testCreationStack) {\n    $('<button>')\n      .addClass('testcaselogbtn')\n      .attr('alt', 'Log test creation stack to console')\n      .attr('title', 'Log test creation stack to console')\n      .appendTo(header)\n      .on('click', () => {\n        consoleLogError(n.testCreationStack);\n      });\n  }\n  const nodetitle = $('<div>').addClass('nodetitle').appendTo(header);\n  const nodecolumns = $('<span>').addClass('nodecolumns').appendTo(nodetitle);\n  {\n    $('<input>')\n      .attr('type', 'text')\n      .prop('readonly', true)\n      .addClass('nodequery')\n      .val(n.query.toString())\n      .appendTo(nodecolumns);\n    if (n.subtreeCounts) {\n      $('<span>')\n        .attr('title', '(Nodes with TODOs) / (Total test count)')\n        .text(TestTree.countsToString(n))\n        .appendTo(nodecolumns);\n    }\n  }\n  if ('description' in n && n.description) {\n    nodetitle.append('&nbsp;');\n    $('<pre>') //\n      .addClass('nodedescription')\n      .text(n.description)\n      .appendTo(header);\n  }\n  return [div[0], setChecked];\n}\n\n// Collapse s:f:t:* or s:f:t:c by default.\nlet lastQueryLevelToExpand: TestQueryLevel = 2;\n\n(async () => {\n  const loader = new DefaultTestFileLoader();\n\n  // MAINTENANCE_TODO: start populating page before waiting for everything to load?\n  const qs = new URLSearchParams(window.location.search).getAll('q');\n  if (qs.length === 0) {\n    qs.push('webgpu:*');\n  }\n\n  // Update the URL bar to match the exact current options.\n  {\n    let url = window.location.protocol + '//' + window.location.host + window.location.pathname;\n    url +=\n      '?' +\n      new URLSearchParams([\n        ['runnow', runnow ? '1' : '0'],\n        ['worker', worker ? '1' : '0'],\n        ['debug', debug ? '1' : '0'],\n      ]).toString() +\n      '&' +\n      qs.map(q => 'q=' + q).join('&');\n    window.history.replaceState(null, '', url);\n  }\n\n  assert(qs.length === 1, 'currently, there must be exactly one ?q=');\n  const rootQuery = parseQuery(qs[0]);\n  if (rootQuery.level > lastQueryLevelToExpand) {\n    lastQueryLevelToExpand = rootQuery.level;\n  }\n  const tree = await loader.loadTree(rootQuery);\n\n  tree.dissolveSingleChildTrees();\n\n  const { runSubtree, generateSubtreeHTML } = makeSubtreeHTML(tree.root, 1);\n  const setTreeCheckedRecursively = generateSubtreeHTML(resultsVis);\n\n  document.getElementById('expandall')!.addEventListener('click', () => {\n    setTreeCheckedRecursively();\n  });\n\n  document.getElementById('copyResultsJSON')!.addEventListener('click', () => {\n    navigator.clipboard.writeText(logger.asJSON(2));\n  });\n\n  if (runnow) {\n    runSubtree();\n  }\n})();\n"],"file":"standalone.js"}