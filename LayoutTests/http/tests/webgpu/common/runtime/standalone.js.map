{"version":3,"file":"standalone.js","names":["dataCache","setBaseResourcePath","globalTestConfig","DefaultTestFileLoader","Logger","parseQuery","TestTree","setDefaultRequestAdapterOptions","assert","unreachable","optionEnabled","optionString","TestWorker","window","onbeforeunload","haveSomeResults","undefined","optionsInfo","runnow","description","worker","debug","unrollConstEvalLoops","powerPreference","parser","selectValueDescriptions","value","camelCaseToSnakeCase","id","replace","toLowerCase","getOptionsInfoFromSearchParameters","optionsInfos","optionValues","optionName","info","Object","entries","optionsToRecord","options","globalDebugMode","logger","autoCloseOnPass","document","getElementById","resultsVis","progressElem","progressTestNameElem","querySelector","stopButtonElem","runDepth","stopRequested","addEventListener","setStore","load","path","response","fetch","ok","Promise","reject","statusText","text","emptySubtreeResult","pass","fail","warn","skip","total","timems","mergeSubtreeResults","results","target","result","memoize","fn","makeTreeNodeHTML","tree","parentLevel","subtree","makeSubtreeHTML","makeCaseHTML","generateMyHTML","parentElement","div","$","appendTo","generateSubtreeHTML","runSubtree","t","caseResult","clearRenderedResult","updateRenderedResult","name","query","toString","textContent","rec","res","record","run","status","classList","add","caselogs","addClass","hide","casehead","setChecked","makeTreeNodeHeaderHTML","checked","show","casetime","html","appendChild","removeAttribute","empty","setAttribute","toFixed","logs","l","caselog","attr","on","consoleLogError","toJSON","n","subtreeResult","makeSubtreeChildrenHTML","children","values","level","runMySubtree","style","display","subtreeHTML","generateSubtree","header","firstElementChild","setChildrenChecked","childFns","Array","from","push","setChildChecked","e","globalThis","_stack","console","log","extra","onChange","isLeaf","prop","href","open","lastQueryLevelToExpand","runtext","testCreationStack","nodetitle","nodecolumns","val","subtreeCounts","countsToString","append","keyValueToPairs","k","v","key","isArray","map","prepareParams","params","pairsArrays","filter","pairs","flat","URLSearchParams","loader","qs","location","search","getAll","length","updateURLWithCurrentOptions","url","origin","pathname","q","join","history","replaceState","addOptionsToPage","optionsElem","createCheckbox","createSelect","select","currentValue","input","rootQuery","ev","data","loadTree","dissolveSingleChildTrees","root","setTreeCheckedRecursively","navigator","clipboard","writeText","asJSON"],"sources":["../../../src/common/runtime/standalone.ts"],"sourcesContent":["// Implements the standalone test runner (see also: /standalone/index.html).\n\nimport { dataCache } from '../framework/data_cache.js';\nimport { setBaseResourcePath } from '../framework/resources.js';\nimport { globalTestConfig } from '../framework/test_config.js';\nimport { DefaultTestFileLoader } from '../internal/file_loader.js';\nimport { Logger } from '../internal/logging/logger.js';\nimport { LiveTestCaseResult } from '../internal/logging/result.js';\nimport { parseQuery } from '../internal/query/parseQuery.js';\nimport { TestQueryLevel } from '../internal/query/query.js';\nimport { TestTreeNode, TestSubtree, TestTreeLeaf, TestTree } from '../internal/tree.js';\nimport { setDefaultRequestAdapterOptions } from '../util/navigator_gpu.js';\nimport { assert, ErrorWithExtra, unreachable } from '../util/util.js';\n\nimport { optionEnabled, optionString } from './helper/options.js';\nimport { TestWorker } from './helper/test_worker.js';\n\nwindow.onbeforeunload = () => {\n  // Prompt user before reloading if there are any results\n  return haveSomeResults ? false : undefined;\n};\n\nlet haveSomeResults = false;\n\n// The possible options for the tests.\ninterface StandaloneOptions {\n  runnow: boolean;\n  worker: boolean;\n  debug: boolean;\n  unrollConstEvalLoops: boolean;\n  powerPreference: string;\n}\n\n// Extra per option info.\ninterface StandaloneOptionInfo {\n  description: string;\n  parser?: (key: string) => boolean | string;\n  selectValueDescriptions?: { value: string; description: string }[];\n}\n\n// Type for info for every option. This definition means adding an option\n// will generate a compile time error if not extra info is provided.\ntype StandaloneOptionsInfos = Record<keyof StandaloneOptions, StandaloneOptionInfo>;\n\nconst optionsInfo: StandaloneOptionsInfos = {\n  runnow: { description: 'run immediately on load' },\n  worker: { description: 'run in a worker' },\n  debug: { description: 'show more info' },\n  unrollConstEvalLoops: { description: 'unroll const eval loops in WGSL' },\n  powerPreference: {\n    description: 'set default powerPreference for some tests',\n    parser: optionString,\n    selectValueDescriptions: [\n      { value: '', description: 'default' },\n      { value: 'low-power', description: 'low-power' },\n      { value: 'high-performance', description: 'high-performance' },\n    ],\n  },\n};\n\n/**\n * Converts camel case to snake case.\n * Examples:\n *    fooBar -> foo_bar\n *    parseHTMLFile -> parse_html_file\n */\nfunction camelCaseToSnakeCase(id: string) {\n  return id\n    .replace(/(.)([A-Z][a-z]+)/g, '$1_$2')\n    .replace(/([a-z0-9])([A-Z])/g, '$1_$2')\n    .toLowerCase();\n}\n\n/**\n * Creates a StandaloneOptions from the current URL search parameters.\n */\nfunction getOptionsInfoFromSearchParameters(\n  optionsInfos: StandaloneOptionsInfos\n): StandaloneOptions {\n  const optionValues: Record<string, boolean | string> = {};\n  for (const [optionName, info] of Object.entries(optionsInfos)) {\n    const parser = info.parser || optionEnabled;\n    optionValues[optionName] = parser(camelCaseToSnakeCase(optionName));\n  }\n  return (optionValues as unknown) as StandaloneOptions;\n}\n\n// This is just a cast in one place.\nfunction optionsToRecord(options: StandaloneOptions) {\n  return (options as unknown) as Record<string, boolean | string>;\n}\n\nconst options = getOptionsInfoFromSearchParameters(optionsInfo);\nconst { runnow, debug, unrollConstEvalLoops, powerPreference } = options;\nglobalTestConfig.unrollConstEvalLoops = unrollConstEvalLoops;\n\nLogger.globalDebugMode = debug;\nconst logger = new Logger();\n\nsetBaseResourcePath('../out/resources');\n\nconst worker = options.worker ? new TestWorker(debug) : undefined;\n\nconst autoCloseOnPass = document.getElementById('autoCloseOnPass') as HTMLInputElement;\nconst resultsVis = document.getElementById('resultsVis')!;\nconst progressElem = document.getElementById('progress')!;\nconst progressTestNameElem = progressElem.querySelector('.progress-test-name')!;\nconst stopButtonElem = progressElem.querySelector('button')!;\nlet runDepth = 0;\nlet stopRequested = false;\n\nstopButtonElem.addEventListener('click', () => {\n  stopRequested = true;\n});\n\nif (powerPreference) {\n  setDefaultRequestAdapterOptions({ powerPreference: powerPreference as GPUPowerPreference });\n}\n\ndataCache.setStore({\n  load: async (path: string) => {\n    const response = await fetch(`data/${path}`);\n    if (!response.ok) {\n      return Promise.reject(response.statusText);\n    }\n    return await response.text();\n  },\n});\n\ninterface SubtreeResult {\n  pass: number;\n  fail: number;\n  warn: number;\n  skip: number;\n  total: number;\n  timems: number;\n}\n\nfunction emptySubtreeResult() {\n  return { pass: 0, fail: 0, warn: 0, skip: 0, total: 0, timems: 0 };\n}\n\nfunction mergeSubtreeResults(...results: SubtreeResult[]) {\n  const target = emptySubtreeResult();\n  for (const result of results) {\n    target.pass += result.pass;\n    target.fail += result.fail;\n    target.warn += result.warn;\n    target.skip += result.skip;\n    target.total += result.total;\n    target.timems += result.timems;\n  }\n  return target;\n}\n\ntype SetCheckedRecursively = () => void;\ntype GenerateSubtreeHTML = (parent: HTMLElement) => SetCheckedRecursively;\ntype RunSubtree = () => Promise<SubtreeResult>;\n\ninterface VisualizedSubtree {\n  generateSubtreeHTML: GenerateSubtreeHTML;\n  runSubtree: RunSubtree;\n}\n\n// DOM generation\n\nfunction memoize<T>(fn: () => T): () => T {\n  let value: T | undefined;\n  return () => {\n    if (value === undefined) {\n      value = fn();\n    }\n    return value;\n  };\n}\n\nfunction makeTreeNodeHTML(tree: TestTreeNode, parentLevel: TestQueryLevel): VisualizedSubtree {\n  let subtree: VisualizedSubtree;\n\n  if ('children' in tree) {\n    subtree = makeSubtreeHTML(tree, parentLevel);\n  } else {\n    subtree = makeCaseHTML(tree);\n  }\n\n  const generateMyHTML = (parentElement: HTMLElement) => {\n    const div = $('<div>').appendTo(parentElement)[0];\n    return subtree.generateSubtreeHTML(div);\n  };\n  return { runSubtree: subtree.runSubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction makeCaseHTML(t: TestTreeLeaf): VisualizedSubtree {\n  // Becomes set once the case has been run once.\n  let caseResult: LiveTestCaseResult | undefined;\n\n  // Becomes set once the DOM for this case exists.\n  let clearRenderedResult: (() => void) | undefined;\n  let updateRenderedResult: (() => void) | undefined;\n\n  const name = t.query.toString();\n  const runSubtree = async () => {\n    if (clearRenderedResult) clearRenderedResult();\n\n    const result: SubtreeResult = emptySubtreeResult();\n    progressTestNameElem.textContent = name;\n\n    haveSomeResults = true;\n    const [rec, res] = logger.record(name);\n    caseResult = res;\n    if (worker) {\n      await worker.run(rec, name);\n    } else {\n      await t.run(rec);\n    }\n\n    result.total++;\n    result.timems += caseResult.timems;\n    switch (caseResult.status) {\n      case 'pass':\n        result.pass++;\n        break;\n      case 'fail':\n        result.fail++;\n        break;\n      case 'skip':\n        result.skip++;\n        break;\n      case 'warn':\n        result.warn++;\n        break;\n      default:\n        unreachable();\n    }\n\n    if (updateRenderedResult) updateRenderedResult();\n\n    return result;\n  };\n\n  const generateSubtreeHTML = (div: HTMLElement) => {\n    div.classList.add('testcase');\n\n    const caselogs = $('<div>').addClass('testcaselogs').hide();\n    const [casehead, setChecked] = makeTreeNodeHeaderHTML(t, runSubtree, 2, checked => {\n      checked ? caselogs.show() : caselogs.hide();\n    });\n    const casetime = $('<div>').addClass('testcasetime').html('ms').appendTo(casehead);\n    div.appendChild(casehead);\n    div.appendChild(caselogs[0]);\n\n    clearRenderedResult = () => {\n      div.removeAttribute('data-status');\n      casetime.text('ms');\n      caselogs.empty();\n    };\n\n    updateRenderedResult = () => {\n      if (caseResult) {\n        div.setAttribute('data-status', caseResult.status);\n\n        casetime.text(caseResult.timems.toFixed(4) + ' ms');\n\n        if (caseResult.logs) {\n          caselogs.empty();\n          for (const l of caseResult.logs) {\n            const caselog = $('<div>').addClass('testcaselog').appendTo(caselogs);\n            $('<button>')\n              .addClass('testcaselogbtn')\n              .attr('alt', 'Log stack to console')\n              .attr('title', 'Log stack to console')\n              .appendTo(caselog)\n              .on('click', () => {\n                consoleLogError(l);\n              });\n            $('<pre>').addClass('testcaselogtext').appendTo(caselog).text(l.toJSON());\n          }\n        }\n      }\n    };\n\n    updateRenderedResult();\n\n    return setChecked;\n  };\n\n  return { runSubtree, generateSubtreeHTML };\n}\n\nfunction makeSubtreeHTML(n: TestSubtree, parentLevel: TestQueryLevel): VisualizedSubtree {\n  let subtreeResult: SubtreeResult = emptySubtreeResult();\n  // Becomes set once the DOM for this case exists.\n  let clearRenderedResult: (() => void) | undefined;\n  let updateRenderedResult: (() => void) | undefined;\n\n  const { runSubtree, generateSubtreeHTML } = makeSubtreeChildrenHTML(\n    n.children.values(),\n    n.query.level\n  );\n\n  const runMySubtree = async () => {\n    if (runDepth === 0) {\n      stopRequested = false;\n      progressElem.style.display = '';\n    }\n    if (stopRequested) {\n      const result = emptySubtreeResult();\n      result.skip = 1;\n      result.total = 1;\n      return result;\n    }\n\n    ++runDepth;\n\n    if (clearRenderedResult) clearRenderedResult();\n    subtreeResult = await runSubtree();\n    if (updateRenderedResult) updateRenderedResult();\n\n    --runDepth;\n    if (runDepth === 0) {\n      progressElem.style.display = 'none';\n    }\n\n    return subtreeResult;\n  };\n\n  const generateMyHTML = (div: HTMLElement) => {\n    const subtreeHTML = $('<div>').addClass('subtreechildren');\n    const generateSubtree = memoize(() => generateSubtreeHTML(subtreeHTML[0]));\n\n    // Hide subtree - it's not generated yet.\n    subtreeHTML.hide();\n    const [header, setChecked] = makeTreeNodeHeaderHTML(n, runMySubtree, parentLevel, checked => {\n      if (checked) {\n        // Make sure the subtree is generated and then show it.\n        generateSubtree();\n        subtreeHTML.show();\n      } else {\n        subtreeHTML.hide();\n      }\n    });\n\n    div.classList.add('subtree');\n    div.classList.add(['', 'multifile', 'multitest', 'multicase'][n.query.level]);\n    div.appendChild(header);\n    div.appendChild(subtreeHTML[0]);\n\n    clearRenderedResult = () => {\n      div.removeAttribute('data-status');\n    };\n\n    updateRenderedResult = () => {\n      let status = '';\n      if (subtreeResult.pass > 0) {\n        status += 'pass';\n      }\n      if (subtreeResult.fail > 0) {\n        status += 'fail';\n      }\n      div.setAttribute('data-status', status);\n      if (autoCloseOnPass.checked && status === 'pass') {\n        div.firstElementChild!.removeAttribute('open');\n      }\n    };\n\n    updateRenderedResult();\n\n    return () => {\n      setChecked();\n      const setChildrenChecked = generateSubtree();\n      setChildrenChecked();\n    };\n  };\n\n  return { runSubtree: runMySubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction makeSubtreeChildrenHTML(\n  children: Iterable<TestTreeNode>,\n  parentLevel: TestQueryLevel\n): VisualizedSubtree {\n  const childFns = Array.from(children, subtree => makeTreeNodeHTML(subtree, parentLevel));\n\n  const runMySubtree = async () => {\n    const results: SubtreeResult[] = [];\n    for (const { runSubtree } of childFns) {\n      results.push(await runSubtree());\n    }\n    return mergeSubtreeResults(...results);\n  };\n  const generateMyHTML = (div: HTMLElement) => {\n    const setChildrenChecked = Array.from(childFns, ({ generateSubtreeHTML }) =>\n      generateSubtreeHTML(div)\n    );\n\n    return () => {\n      for (const setChildChecked of setChildrenChecked) {\n        setChildChecked();\n      }\n    };\n  };\n\n  return { runSubtree: runMySubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction consoleLogError(e: Error | ErrorWithExtra | undefined) {\n  if (e === undefined) return;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  (globalThis as any)._stack = e;\n  /* eslint-disable-next-line no-console */\n  console.log('_stack =', e);\n  if ('extra' in e && e.extra !== undefined) {\n    /* eslint-disable-next-line no-console */\n    console.log('_stack.extra =', e.extra);\n  }\n}\n\nfunction makeTreeNodeHeaderHTML(\n  n: TestTreeNode,\n  runSubtree: RunSubtree,\n  parentLevel: TestQueryLevel,\n  onChange: (checked: boolean) => void\n): [HTMLElement, SetCheckedRecursively] {\n  const isLeaf = 'run' in n;\n  const div = $('<details>').addClass('nodeheader');\n  const header = $('<summary>').appendTo(div);\n\n  const setChecked = () => {\n    div.prop('open', true); // (does not fire onChange)\n    onChange(true);\n  };\n\n  const href = `?${worker ? 'worker&' : ''}${debug ? 'debug&' : ''}q=${n.query.toString()}`;\n  if (onChange) {\n    div.on('toggle', function (this) {\n      onChange((this as HTMLDetailsElement).open);\n    });\n\n    // Expand the shallower parts of the tree at load.\n    // Also expand completely within subtrees that are at the same query level\n    // (e.g. s:f:t,* and s:f:t,t,*).\n    if (n.query.level <= lastQueryLevelToExpand || n.query.level === parentLevel) {\n      setChecked();\n    }\n  }\n  const runtext = isLeaf ? 'Run case' : 'Run subtree';\n  $('<button>')\n    .addClass(isLeaf ? 'leafrun' : 'subtreerun')\n    .attr('alt', runtext)\n    .attr('title', runtext)\n    .on('click', () => void runSubtree())\n    .appendTo(header);\n  $('<a>')\n    .addClass('nodelink')\n    .attr('href', href)\n    .attr('alt', 'Open')\n    .attr('title', 'Open')\n    .appendTo(header);\n  if ('testCreationStack' in n && n.testCreationStack) {\n    $('<button>')\n      .addClass('testcaselogbtn')\n      .attr('alt', 'Log test creation stack to console')\n      .attr('title', 'Log test creation stack to console')\n      .appendTo(header)\n      .on('click', () => {\n        consoleLogError(n.testCreationStack);\n      });\n  }\n  const nodetitle = $('<div>').addClass('nodetitle').appendTo(header);\n  const nodecolumns = $('<span>').addClass('nodecolumns').appendTo(nodetitle);\n  {\n    $('<input>')\n      .attr('type', 'text')\n      .prop('readonly', true)\n      .addClass('nodequery')\n      .val(n.query.toString())\n      .appendTo(nodecolumns);\n    if (n.subtreeCounts) {\n      $('<span>')\n        .attr('title', '(Nodes with TODOs) / (Total test count)')\n        .text(TestTree.countsToString(n))\n        .appendTo(nodecolumns);\n    }\n  }\n  if ('description' in n && n.description) {\n    nodetitle.append('&nbsp;');\n    $('<pre>') //\n      .addClass('nodedescription')\n      .text(n.description)\n      .appendTo(header);\n  }\n  return [div[0], setChecked];\n}\n\n// Collapse s:f:t:* or s:f:t:c by default.\nlet lastQueryLevelToExpand: TestQueryLevel = 2;\n\ntype ParamValue = string | undefined | null | boolean | string[];\n\n/**\n * Takes an array of string, ParamValue and returns an array of pairs\n * of [key, value] where value is a string. Converts boolean to '0' or '1'.\n */\nfunction keyValueToPairs([k, v]: [string, ParamValue]): [string, string][] {\n  const key = camelCaseToSnakeCase(k);\n  if (typeof v === 'boolean') {\n    return [[key, v ? '1' : '0']];\n  } else if (Array.isArray(v)) {\n    return v.map(v => [key, v]);\n  } else {\n    return [[key, v!.toString()]];\n  }\n}\n\n/**\n * Converts key value pairs to a search string.\n * Keys will appear in order in the search string.\n * Values can be undefined, null, boolean, string, or string[]\n * If the value is falsy the key will not appear in the search string.\n * If the value is an array the key will appear multiple times.\n *\n * @param params Some object with key value pairs.\n * @returns a search string.\n */\nfunction prepareParams(params: Record<string, ParamValue>): string {\n  const pairsArrays = Object.entries(params)\n    .filter(([, v]) => !!v)\n    .map(keyValueToPairs);\n  const pairs = pairsArrays.flat();\n  return new URLSearchParams(pairs).toString();\n}\n\nvoid (async () => {\n  const loader = new DefaultTestFileLoader();\n\n  // MAINTENANCE_TODO: start populating page before waiting for everything to load?\n  const qs = new URLSearchParams(window.location.search).getAll('q');\n  if (qs.length === 0) {\n    qs.push('webgpu:*');\n  }\n\n  // Update the URL bar to match the exact current options.\n  const updateURLWithCurrentOptions = () => {\n    const search = prepareParams(optionsToRecord(options));\n    let url = `${window.location.origin}${window.location.pathname}`;\n    // Add in q separately to avoid escaping punctuation marks.\n    url += `?${search}${search ? '&' : ''}${qs.map(q => 'q=' + q).join('&')}`;\n    window.history.replaceState(null, '', url.toString());\n  };\n  updateURLWithCurrentOptions();\n\n  const addOptionsToPage = (options: StandaloneOptions, optionsInfos: StandaloneOptionsInfos) => {\n    const optionsElem = $('table#options>tbody')[0];\n    const optionValues = optionsToRecord(options);\n\n    const createCheckbox = (optionName: string) => {\n      return $(`<input>`)\n        .attr('type', 'checkbox')\n        .prop('checked', optionValues[optionName] as boolean)\n        .on('change', function () {\n          optionValues[optionName] = (this as HTMLInputElement).checked;\n          updateURLWithCurrentOptions();\n        });\n    };\n\n    const createSelect = (optionName: string, info: StandaloneOptionInfo) => {\n      const select = $('<select>').on('change', function () {\n        optionValues[optionName] = (this as HTMLInputElement).value;\n        updateURLWithCurrentOptions();\n      });\n      const currentValue = optionValues[optionName];\n      for (const { value, description } of info.selectValueDescriptions!) {\n        $('<option>')\n          .text(description)\n          .val(value)\n          .prop('selected', value === currentValue)\n          .appendTo(select);\n      }\n      return select;\n    };\n\n    for (const [optionName, info] of Object.entries(optionsInfos)) {\n      const input =\n        typeof optionValues[optionName] === 'boolean'\n          ? createCheckbox(optionName)\n          : createSelect(optionName, info);\n      $('<tr>')\n        .append($('<td>').append(input))\n        .append($('<td>').text(camelCaseToSnakeCase(optionName)))\n        .append($('<td>').text(info.description))\n        .appendTo(optionsElem);\n    }\n  };\n  addOptionsToPage(options, optionsInfo);\n\n  assert(qs.length === 1, 'currently, there must be exactly one ?q=');\n  const rootQuery = parseQuery(qs[0]);\n  if (rootQuery.level > lastQueryLevelToExpand) {\n    lastQueryLevelToExpand = rootQuery.level;\n  }\n  loader.addEventListener('import', ev => {\n    $('#info')[0].textContent = `loading: ${ev.data.url}`;\n  });\n  loader.addEventListener('finish', () => {\n    $('#info')[0].textContent = '';\n  });\n  const tree = await loader.loadTree(rootQuery);\n\n  tree.dissolveSingleChildTrees();\n\n  const { runSubtree, generateSubtreeHTML } = makeSubtreeHTML(tree.root, 1);\n  const setTreeCheckedRecursively = generateSubtreeHTML(resultsVis);\n\n  document.getElementById('expandall')!.addEventListener('click', () => {\n    setTreeCheckedRecursively();\n  });\n\n  document.getElementById('copyResultsJSON')!.addEventListener('click', () => {\n    void navigator.clipboard.writeText(logger.asJSON(2));\n  });\n\n  if (runnow) {\n    void runSubtree();\n  }\n})();\n"],"mappings":"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"}