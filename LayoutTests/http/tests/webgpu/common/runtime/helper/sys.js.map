{"version":3,"file":"sys.js","names":["node","existsSync","require","type","args","process","argv","slice","cwd","exit","code","deno","path","Deno","readFileSync","err","sys","globalThis"],"sources":["../../../../src/common/runtime/helper/sys.ts"],"sourcesContent":["/* eslint no-process-exit: \"off\" */\n/* eslint @typescript-eslint/no-namespace: \"off\" */\n\nfunction node() {\n  const { existsSync } = require('fs');\n\n  return {\n    type: 'node',\n    existsSync,\n    args: process.argv.slice(2),\n    cwd: () => process.cwd(),\n    exit: (code?: number | undefined) => process.exit(code),\n  };\n}\n\ndeclare global {\n  namespace Deno {\n    function readFileSync(path: string): Uint8Array;\n    const args: string[];\n    const cwd: () => string;\n    function exit(code?: number): never;\n  }\n}\n\nfunction deno() {\n  function existsSync(path: string) {\n    try {\n      Deno.readFileSync(path);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  return {\n    type: 'deno',\n    existsSync,\n    args: Deno.args,\n    cwd: Deno.cwd,\n    exit: Deno.exit,\n  };\n}\n\nconst sys = typeof globalThis.process !== 'undefined' ? node() : deno();\n\nexport default sys;\n"],"mappings":";AAAA;AAAA;AAGA,SAASA,IAAI,GAAG;EACd,MAAM,EAAEC,UAAU,CAAC,CAAC,GAAGC,OAAO,CAAC,IAAI,CAAC;;EAEpC,OAAO;IACLC,IAAI,EAAE,MAAM;IACZF,UAAU;IACVG,IAAI,EAAEC,OAAO,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3BC,GAAG,EAAE,MAAMH,OAAO,CAACG,GAAG,EAAE;IACxBC,IAAI,EAAE,CAACC,IAAyB,KAAKL,OAAO,CAACI,IAAI,CAACC,IAAI;EACxD,CAAC;AACH;;;;;;;;;;;AAWA,SAASC,IAAI,GAAG;EACd,SAASV,UAAU,CAACW,IAAY,EAAE;IAChC,IAAI;MACFC,IAAI,CAACC,YAAY,CAACF,IAAI,CAAC;MACvB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZ,OAAO,KAAK;IACd;EACF;;EAEA,OAAO;IACLZ,IAAI,EAAE,MAAM;IACZF,UAAU;IACVG,IAAI,EAAES,IAAI,CAACT,IAAI;IACfI,GAAG,EAAEK,IAAI,CAACL,GAAG;IACbC,IAAI,EAAEI,IAAI,CAACJ;EACb,CAAC;AACH;;AAEA,MAAMO,GAAG,GAAG,OAAOC,UAAU,CAACZ,OAAO,KAAK,WAAW,GAAGL,IAAI,EAAE,GAAGW,IAAI,EAAE;;AAEvE,eAAeK,GAAG"}