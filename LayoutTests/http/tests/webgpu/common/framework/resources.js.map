{"version":3,"sources":["../../../src/common/framework/resources.ts"],"names":["baseResourcePath","getResourcePath","pathRelativeToResourcesDir","setBaseResourcePath","path"],"mappings":";AAAA;AACA,G,CADA;AACA;AACA;AACA;AACA,GACA,IAAIA,gBAAgB,GAAG,aAAvB;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAT,CAAyBC,0BAAzB,EAA6D;AAClE,SAAOF,gBAAgB,GAAG,GAAnB,GAAyBE,0BAAhC;AACD;;AAED;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAA2C;AAChDJ,EAAAA,gBAAgB,GAAGI,IAAnB;AACD","sourcesContent":["/**\n * Base path for resources. The default value is correct for non-worker WPT, but standalone and\n * workers must access resources using a different base path, so this is overridden in\n * `test_worker-worker.ts` and `standalone.ts`.\n */\nlet baseResourcePath = './resources';\n\n/**\n * Get a path to a resource in the `resources` directory, relative to the current execution context\n * (html file or worker .js file), for `fetch()`, `<img>`, `<video>`, etc.\n */\nexport function getResourcePath(pathRelativeToResourcesDir: string) {\n  return baseResourcePath + '/' + pathRelativeToResourcesDir;\n}\n\n/**\n * Set the base resource path (path to the `resources` directory relative to the current\n * execution context).\n */\nexport function setBaseResourcePath(path: string) {\n  baseResourcePath = path;\n}\n"],"file":"resources.js"}