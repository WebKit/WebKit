
PASS :attachment_state,limits,maxColorAttachments:
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="r8unorm"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="r8uint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="r8sint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rg8unorm"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rg8uint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rg8sint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgba8unorm"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgba8unorm-srgb"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgba8uint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgba8sint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="bgra8unorm"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="bgra8unorm-srgb"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="r16uint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="r16sint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="r16float"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rg16uint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rg16sint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rg16float"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgba16uint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgba16sint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgba16float"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="r32uint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="r32sint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="r32float"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rg32uint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rg32sint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rg32float"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgba32uint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgba32sint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgba32float"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgb10a2uint"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,aligned:format="rgb10a2unorm"
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,unaligned:formats=["r8unorm","r32float","rgba8unorm","rgba32float","r8unorm"]
PASS :attachment_state,limits,maxColorAttachmentBytesPerSample,unaligned:formats=["r32float","rgba8unorm","rgba32float","r8unorm","r8unorm"]
PASS :attachment_state,empty_color_formats:
PASS :valid_texture_formats:format="r8unorm"
PASS :valid_texture_formats:format="r8snorm"
PASS :valid_texture_formats:format="r8uint"
PASS :valid_texture_formats:format="r8sint"
PASS :valid_texture_formats:format="rg8unorm"
PASS :valid_texture_formats:format="rg8snorm"
PASS :valid_texture_formats:format="rg8uint"
PASS :valid_texture_formats:format="rg8sint"
PASS :valid_texture_formats:format="rgba8unorm"
PASS :valid_texture_formats:format="rgba8unorm-srgb"
PASS :valid_texture_formats:format="rgba8snorm"
PASS :valid_texture_formats:format="rgba8uint"
PASS :valid_texture_formats:format="rgba8sint"
PASS :valid_texture_formats:format="bgra8unorm"
PASS :valid_texture_formats:format="bgra8unorm-srgb"
PASS :valid_texture_formats:format="r16uint"
PASS :valid_texture_formats:format="r16sint"
PASS :valid_texture_formats:format="r16float"
PASS :valid_texture_formats:format="rg16uint"
PASS :valid_texture_formats:format="rg16sint"
PASS :valid_texture_formats:format="rg16float"
PASS :valid_texture_formats:format="rgba16uint"
PASS :valid_texture_formats:format="rgba16sint"
PASS :valid_texture_formats:format="rgba16float"
PASS :valid_texture_formats:format="r32uint"
PASS :valid_texture_formats:format="r32sint"
PASS :valid_texture_formats:format="r32float"
PASS :valid_texture_formats:format="rg32uint"
PASS :valid_texture_formats:format="rg32sint"
PASS :valid_texture_formats:format="rg32float"
PASS :valid_texture_formats:format="rgba32uint"
PASS :valid_texture_formats:format="rgba32sint"
PASS :valid_texture_formats:format="rgba32float"
PASS :valid_texture_formats:format="rgb10a2uint"
PASS :valid_texture_formats:format="rgb10a2unorm"
PASS :valid_texture_formats:format="rg11b10ufloat"
PASS :valid_texture_formats:format="rgb9e5ufloat"
PASS :valid_texture_formats:format="stencil8"
PASS :valid_texture_formats:format="depth16unorm"
PASS :valid_texture_formats:format="depth32float"
PASS :valid_texture_formats:format="depth24plus"
PASS :valid_texture_formats:format="depth24plus-stencil8"
PASS :valid_texture_formats:format="depth32float-stencil8"
PASS :valid_texture_formats:format="bc1-rgba-unorm"
PASS :valid_texture_formats:format="bc1-rgba-unorm-srgb"
PASS :valid_texture_formats:format="bc2-rgba-unorm"
PASS :valid_texture_formats:format="bc2-rgba-unorm-srgb"
PASS :valid_texture_formats:format="bc3-rgba-unorm"
PASS :valid_texture_formats:format="bc3-rgba-unorm-srgb"
PASS :valid_texture_formats:format="bc4-r-unorm"
PASS :valid_texture_formats:format="bc4-r-snorm"
PASS :valid_texture_formats:format="bc5-rg-unorm"
PASS :valid_texture_formats:format="bc5-rg-snorm"
PASS :valid_texture_formats:format="bc6h-rgb-ufloat"
PASS :valid_texture_formats:format="bc6h-rgb-float"
PASS :valid_texture_formats:format="bc7-rgba-unorm"
PASS :valid_texture_formats:format="bc7-rgba-unorm-srgb"
PASS :valid_texture_formats:format="etc2-rgb8unorm"
PASS :valid_texture_formats:format="etc2-rgb8unorm-srgb"
PASS :valid_texture_formats:format="etc2-rgb8a1unorm"
PASS :valid_texture_formats:format="etc2-rgb8a1unorm-srgb"
PASS :valid_texture_formats:format="etc2-rgba8unorm"
PASS :valid_texture_formats:format="etc2-rgba8unorm-srgb"
PASS :valid_texture_formats:format="eac-r11unorm"
PASS :valid_texture_formats:format="eac-r11snorm"
PASS :valid_texture_formats:format="eac-rg11unorm"
PASS :valid_texture_formats:format="eac-rg11snorm"
PASS :valid_texture_formats:format="astc-4x4-unorm"
PASS :valid_texture_formats:format="astc-4x4-unorm-srgb"
PASS :valid_texture_formats:format="astc-5x4-unorm"
PASS :valid_texture_formats:format="astc-5x4-unorm-srgb"
PASS :valid_texture_formats:format="astc-5x5-unorm"
PASS :valid_texture_formats:format="astc-5x5-unorm-srgb"
PASS :valid_texture_formats:format="astc-6x5-unorm"
PASS :valid_texture_formats:format="astc-6x5-unorm-srgb"
PASS :valid_texture_formats:format="astc-6x6-unorm"
PASS :valid_texture_formats:format="astc-6x6-unorm-srgb"
PASS :valid_texture_formats:format="astc-8x5-unorm"
PASS :valid_texture_formats:format="astc-8x5-unorm-srgb"
PASS :valid_texture_formats:format="astc-8x6-unorm"
PASS :valid_texture_formats:format="astc-8x6-unorm-srgb"
PASS :valid_texture_formats:format="astc-8x8-unorm"
PASS :valid_texture_formats:format="astc-8x8-unorm-srgb"
PASS :valid_texture_formats:format="astc-10x5-unorm"
PASS :valid_texture_formats:format="astc-10x5-unorm-srgb"
PASS :valid_texture_formats:format="astc-10x6-unorm"
PASS :valid_texture_formats:format="astc-10x6-unorm-srgb"
PASS :valid_texture_formats:format="astc-10x8-unorm"
PASS :valid_texture_formats:format="astc-10x8-unorm-srgb"
PASS :valid_texture_formats:format="astc-10x10-unorm"
PASS :valid_texture_formats:format="astc-10x10-unorm-srgb"
PASS :valid_texture_formats:format="astc-12x10-unorm"
PASS :valid_texture_formats:format="astc-12x10-unorm-srgb"
PASS :valid_texture_formats:format="astc-12x12-unorm"
PASS :valid_texture_formats:format="astc-12x12-unorm-srgb"
PASS :depth_stencil_readonly:depthStencilFormat="stencil8"
PASS :depth_stencil_readonly:depthStencilFormat="depth16unorm"
PASS :depth_stencil_readonly:depthStencilFormat="depth32float"
PASS :depth_stencil_readonly:depthStencilFormat="depth24plus"
PASS :depth_stencil_readonly:depthStencilFormat="depth24plus-stencil8"
PASS :depth_stencil_readonly:depthStencilFormat="depth32float-stencil8"

