
FAIL :two_pointers:address_space="private";aliased=true assert_unreached:
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:134:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:134:24
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : i32;
    var<private> y : i32;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers:address_space="private";aliased=false
FAIL :two_pointers:address_space="function";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:134:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:134:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : i32;
      var y : i32;
      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers:address_space="function";aliased=false
FAIL :two_pointers:address_space="storage";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:134:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:134:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : i32;
    @binding(1) @group(0) var<storage, read_write> y : i32;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers:address_space="storage";aliased=false
FAIL :two_pointers:address_space="workgroup";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:134:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:134:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : i32;
    var<workgroup> y : i32;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers:address_space="workgroup";aliased=false
FAIL :two_pointers_to_array_elements:address_space="private";index=0;aliased=true assert_unreached:
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements:address_space="private";index=0;aliased=false
FAIL :two_pointers_to_array_elements:address_space="private";index=1;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements:address_space="private";index=1;aliased=false
FAIL :two_pointers_to_array_elements:address_space="function";index=0;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements:address_space="function";index=0;aliased=false
FAIL :two_pointers_to_array_elements:address_space="function";index=1;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements:address_space="function";index=1;aliased=false
FAIL :two_pointers_to_array_elements:address_space="storage";index=0;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements:address_space="storage";index=0;aliased=false
FAIL :two_pointers_to_array_elements:address_space="storage";index=1;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements:address_space="storage";index=1;aliased=false
FAIL :two_pointers_to_array_elements:address_space="workgroup";index=0;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[0], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements:address_space="workgroup";index=0;aliased=false
FAIL :two_pointers_to_array_elements:address_space="workgroup";index=1;aliased=true assert_unreached:
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:168:24
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x[1], &x[0]);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements:address_space="workgroup";index=1;aliased=false
FAIL :two_pointers_to_array_elements_indirect:address_space="private";index=0;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements_indirect:address_space="private";index=0;aliased=false
FAIL :two_pointers_to_array_elements_indirect:address_space="private";index=1;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<private> x : array<i32, 4>;
    var<private> y : array<i32, 4>;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<private, array<i32, 4>>,
             pb : ptr<private, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements_indirect:address_space="private";index=1;aliased=false
FAIL :two_pointers_to_array_elements_indirect:address_space="function";index=0;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements_indirect:address_space="function";index=0;aliased=false
FAIL :two_pointers_to_array_elements_indirect:address_space="function";index=1;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<function, array<i32, 4>>,
             pb : ptr<function, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {
      var x : array<i32, 4>;
      var y : array<i32, 4>;
      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements_indirect:address_space="function";index=1;aliased=false
FAIL :two_pointers_to_array_elements_indirect:address_space="storage";index=0;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements_indirect:address_space="storage";index=0;aliased=false
FAIL :two_pointers_to_array_elements_indirect:address_space="storage";index=1;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    @binding(0) @group(0) var<storage, read_write> x : array<i32, 4>;
    @binding(1) @group(0) var<storage, read_write> y : array<i32, 4>;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<storage, array<i32, 4>, read_write>,
             pb : ptr<storage, array<i32, 4>, read_write>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements_indirect:address_space="storage";index=1;aliased=false
FAIL :two_pointers_to_array_elements_indirect:address_space="workgroup";index=0;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[0], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements_indirect:address_space="workgroup";index=0;aliased=false
FAIL :two_pointers_to_array_elements_indirect:address_space="workgroup";index=1;aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:210:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    var<workgroup> x : array<i32, 4>;
    var<workgroup> y : array<i32, 4>;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn index(pa : ptr<workgroup, array<i32, 4>>,
             pb : ptr<workgroup, array<i32, 4>>) -> i32 {
      return callee(&(*pa)[1], &(*pb)[0]);
    }

    fn caller() {


      index(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_array_elements_indirect:address_space="workgroup";index=1;aliased=false
FAIL :two_pointers_to_struct_members:address_space="private";member="a";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_struct_members:address_space="private";member="a";aliased=false
FAIL :two_pointers_to_struct_members:address_space="private";member="b";aliased=true assert_unreached:
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_struct_members:address_space="private";member="b";aliased=false
FAIL :two_pointers_to_struct_members:address_space="function";member="a";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_struct_members:address_space="function";member="a";aliased=false
FAIL :two_pointers_to_struct_members:address_space="function";member="b";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {
      var x : S;
      var y : S;
      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_struct_members:address_space="function";member="b";aliased=false
FAIL :two_pointers_to_struct_members:address_space="storage";member="a";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_struct_members:address_space="storage";member="a";aliased=false
FAIL :two_pointers_to_struct_members:address_space="storage";member="b";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    @binding(0) @group(0) var<storage, read_write> x : S;
    @binding(1) @group(0) var<storage, read_write> y : S;

    fn callee(pa : ptr<storage, i32, read_write>,
              pb : ptr<storage, i32, read_write>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_struct_members:address_space="storage";member="b";aliased=false
FAIL :two_pointers_to_struct_members:address_space="workgroup";member="a";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.a, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_struct_members:address_space="workgroup";member="a";aliased=false
FAIL :two_pointers_to_struct_members:address_space="workgroup";member="b";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:249:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<workgroup> x : S;
    var<workgroup> y : S;

    fn callee(pa : ptr<workgroup, i32>,
              pb : ptr<workgroup, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn caller() {


      callee(&x.b, &x.a);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_struct_members:address_space="workgroup";member="b";aliased=false
FAIL :two_pointers_to_struct_members_indirect:address_space="private";member="a";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:296:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:296:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_struct_members_indirect:address_space="private";member="a";aliased=false
FAIL :two_pointers_to_struct_members_indirect:address_space="private";member="b";aliased=true assert_unreached:
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:296:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:296:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { let tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { var tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      { return *pb; }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      *pa++;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = *pa + 1;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = 1 + *pa;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="unary_minus"
    OK
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = -*pa;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = bitcast<f32>(*pa);
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="convert";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = f32(*pa);
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="binary_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="unary_minus";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="bitcast";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="convert";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      _ = abs(*pa);
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="index_access";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var arr : array<i32, 4>; _ = arr[*pa]; }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="binary_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="no_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="bitcast"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="convert"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="index_access"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="let_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="var_init"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="return"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="bitcast";b_use="no_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="bitcast";b_use="bitcast"
    OK
  - INFO: subcase: a_use="bitcast";b_use="convert"
    OK
  - INFO: subcase: a_use="bitcast";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="bitcast";b_use="index_access"
    OK
  - INFO: subcase: a_use="bitcast";b_use="let_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="var_init"
    OK
  - INFO: subcase: a_use="bitcast";b_use="return"
    OK
  - INFO: subcase: a_use="bitcast";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="convert";b_use="no_access"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="convert";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="convert";b_use="bitcast"
    OK
  - INFO: subcase: a_use="convert";b_use="convert"
    OK
  - INFO: subcase: a_use="convert";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="convert";b_use="index_access"
    OK
  - INFO: subcase: a_use="convert";b_use="let_init"
    OK
  - INFO: subcase: a_use="convert";b_use="var_init"
    OK
  - INFO: subcase: a_use="convert";b_use="return"
    OK
  - INFO: subcase: a_use="convert";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="no_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="bitcast"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="convert"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="index_access"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="let_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="var_init"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="return"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="index_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="index_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="index_access";b_use="convert"
    OK
  - INFO: subcase: a_use="index_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="index_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="index_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="increment";b_use="bitcast"
    OK
  - INFO: subcase: a_use="increment";b_use="convert"
    OK
  - INFO: subcase: a_use="increment";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="increment";b_use="index_access"
    OK
  - INFO: subcase: a_use="increment";b_use="let_init"
    OK
  - INFO: subcase: a_use="increment";b_use="var_init"
    OK
  - INFO: subcase: a_use="increment";b_use="return"
    OK
  - INFO: subcase: a_use="increment";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="binary_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="assign"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="unary_minus";b_use="increment"
    OK
  - INFO: subcase: a_use="bitcast";b_use="assign"
    OK
  - INFO: subcase: a_use="bitcast";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="bitcast";b_use="increment"
    OK
  - INFO: subcase: a_use="convert";b_use="assign"
    OK
  - INFO: subcase: a_use="convert";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="convert";b_use="increment"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="index_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="index_access";b_use="return"
    OK
  - INFO: subcase: a_use="index_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="let_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="let_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { let tmp = *pa; }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="unary_minus"
    OK
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="var_init";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { var tmp = *pa; }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="let_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="let_init";b_use="convert"
    OK
  - INFO: subcase: a_use="let_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="let_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="let_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="let_init";b_use="return"
    OK
  - INFO: subcase: a_use="let_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="var_init";b_use="no_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="var_init";b_use="bitcast"
    OK
  - INFO: subcase: a_use="var_init";b_use="convert"
    OK
  - INFO: subcase: a_use="var_init";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="var_init";b_use="index_access"
    OK
  - INFO: subcase: a_use="var_init";b_use="let_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="var_init"
    OK
  - INFO: subcase: a_use="var_init";b_use="return"
    OK
  - VALIDATION FAILED: subcase: a_use="return";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="return";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      { return *pa; }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="var_init";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="return";b_use="no_access"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="return";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="return";b_use="bitcast"
    OK
  - INFO: subcase: a_use="return";b_use="convert"
    OK
  - INFO: subcase: a_use="return";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="return";b_use="index_access"
    OK
  - INFO: subcase: a_use="return";b_use="let_init"
    OK
  - INFO: subcase: a_use="return";b_use="var_init"
    OK
  - INFO: subcase: a_use="return";b_use="return"
    OK
  - INFO: subcase: a_use="return";b_use="switch_cond"
    OK
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }

    var<private> x : S;
    var<private> y : S;

    fn callee(pa : ptr<private, i32>,
              pb : ptr<private, i32>) -> i32 {
      switch(*pa) { default { break; } }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<private, S>,
              pb : ptr<private, S>) -> i32 {
      return callee(&(*pa).b, &(*pb).a);
    }

    fn caller() {


      access(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="builtin_arg";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="index_access";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="let_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="var_init";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="return";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="switch_cond";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - INFO: subcase: a_use="switch_cond";b_use="no_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="bitcast"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="convert"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="index_access"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="let_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="var_init"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="return"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="assign"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="builtin_arg";b_use="increment"
    OK
  - INFO: subcase: a_use="index_access";b_use="assign"
    OK
  - INFO: subcase: a_use="index_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="index_access";b_use="increment"
    OK
  - INFO: subcase: a_use="let_init";b_use="assign"
    OK
  - INFO: subcase: a_use="let_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="let_init";b_use="increment"
    OK
  - INFO: subcase: a_use="var_init";b_use="assign"
    OK
  - INFO: subcase: a_use="var_init";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="var_init";b_use="increment"
    OK
  - INFO: subcase: a_use="return";b_use="assign"
    OK
  - INFO: subcase: a_use="return";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="return";b_use="increment"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="assign"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="switch_cond";b_use="increment"
    OK
 Reached unreachable code
PASS :two_pointers_to_struct_members_indirect:address_space="private";member="b";aliased=false
FAIL :two_pointers_to_struct_members_indirect:address_space="function";member="a";aliased=true assert_unreached:
  - INFO: subcase: a_use="no_access";b_use="no_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="assign"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="compound_assign_rhs"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:296:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

    ErrorWithExtra@http://127.0.0.1:8000/webgpu/common/util/util.js:23:10
    expectCompileResult@http://127.0.0.1:8000/webgpu/webgpu/shader/validation/shader_validation_test.js:28:37
    @http://127.0.0.1:8000/webgpu/webgpu/shader/validation/functions/alias_analysis.spec.js:296:24
  - VALIDATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = *pb + 1;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = 1 + *pb;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = -*pb;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = f32(*pb);
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      _ = abs(*pb);
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { let tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { var tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="no_access";b_use="increment"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="no_access";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="no_access";b_use="bitcast"
    OK
  - INFO: subcase: a_use="no_access";b_use="convert"
    OK
  - INFO: subcase: a_use="no_access";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="no_access";b_use="index_access"
    OK
  - INFO: subcase: a_use="no_access";b_use="let_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="var_init"
    OK
  - INFO: subcase: a_use="no_access";b_use="return"
    OK
  - INFO: subcase: a_use="no_access";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="assign";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="assign";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      { return *pb; }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa = 42;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_lhs";b_use="no_access"
    OK
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = *pb + 1;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = 1 + *pb;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = -*pb;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = f32(*pb);
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      _ = abs(*pb);
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var arr : array<i32, 4>; _ = arr[*pb]; }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { let tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { var tmp = *pb; }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      { return *pb; }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa += 1;
      switch(*pb) { default { break; } }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      { var tmp : i32; tmp += *pa; }
      *pb++;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="assign"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb = 42;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb += 1;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      { var tmp : i32; tmp += *pb; }
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="increment"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      *pb++;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="assign";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="convert"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="index_access"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="let_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="var_init"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="return"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="compound_assign_rhs";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="assign"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_lhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="compound_assign_rhs"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="increment"
    Expected validation error
      at (elided: below max severity)
  - EXPECTATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Expected validation error
      at (elided: below max severity)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_lhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = *pb + 1;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="binary_rhs"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = 1 + *pb;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="unary_minus"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = -*pb;
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="bitcast"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = bitcast<f32>(*pb);
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - VALIDATION FAILED: subcase: a_use="increment";b_use="convert"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = f32(*pb);
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&(*pa).a, &(*pb).a);
    }

    fn caller() {
      var x : S;
      var y : S;
      access(&x, &x);
    }

      at (elided: only 2 shown)
  - INFO: subcase: a_use="compound_assign_rhs";b_use="no_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="increment";b_use="no_access"
    OK
  - INFO: subcase: a_use="assign";b_use="assign"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="increment"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="assign";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="assign";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="assign";b_use="bitcast"
    OK
  - INFO: subcase: a_use="assign";b_use="convert"
    OK
  - INFO: subcase: a_use="assign";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="assign";b_use="index_access"
    OK
  - INFO: subcase: a_use="assign";b_use="let_init"
    OK
  - INFO: subcase: a_use="assign";b_use="var_init"
    OK
  - INFO: subcase: a_use="assign";b_use="return"
    OK
  - INFO: subcase: a_use="assign";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="increment"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="binary_rhs"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="unary_minus"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="bitcast"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="convert"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="builtin_arg"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="index_access"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="let_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="var_init"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="return"
    OK
  - INFO: subcase: a_use="compound_assign_lhs";b_use="switch_cond"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="assign"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="compound_assign_rhs";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="assign"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_lhs"
    OK
  - INFO: subcase: a_use="increment";b_use="compound_assign_rhs"
    OK
  - INFO: subcase: a_use="increment";b_use="increment"
    OK
  - INFO: subcase: a_use="increment";b_use="binary_lhs"
    OK
  - VALIDATION FAILED: subcase: a_use="increment";b_use="builtin_arg"
    Missing expected compilationInfo 'error' message.


    ---- shader ----

    struct S {
      a : i32,
      b : i32,
    }




    fn callee(pa : ptr<function, i32>,
              pb : ptr<function, i32>) -> i32 {
      *pa++;
      _ = abs(*pb);
      return 0;
    }

    fn access(pa : ptr<function, S>,
              pb : ptr<function, S>) -> i32 {
      return callee(&