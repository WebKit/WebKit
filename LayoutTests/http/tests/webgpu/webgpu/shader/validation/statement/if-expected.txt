
PASS :condition_type:type="bool"
PASS :condition_type:type="i32"
PASS :condition_type:type="u32"
PASS :condition_type:type="f32"
PASS :condition_type:type="f16"
PASS :condition_type:type="abstract-int"
PASS :condition_type:type="abstract-float"
PASS :condition_type:type="vec2af"
PASS :condition_type:type="vec3af"
PASS :condition_type:type="vec4af"
PASS :condition_type:type="vec2ai"
PASS :condition_type:type="vec3ai"
PASS :condition_type:type="vec4ai"
PASS :condition_type:type="vec2f"
PASS :condition_type:type="vec3h"
PASS :condition_type:type="vec4u"
PASS :condition_type:type="vec3b"
PASS :condition_type:type="mat2x3f"
PASS :condition_type:type="mat4x2h"
PASS :condition_type:type="array"
PASS :condition_type:type="atomic"
PASS :condition_type:type="struct"
PASS :condition_type:type="texture"
PASS :condition_type:type="sampler"
PASS :else_condition_type:type="bool"
PASS :else_condition_type:type="i32"
PASS :else_condition_type:type="u32"
PASS :else_condition_type:type="f32"
PASS :else_condition_type:type="f16"
PASS :else_condition_type:type="abstract-int"
PASS :else_condition_type:type="abstract-float"
PASS :else_condition_type:type="vec2af"
PASS :else_condition_type:type="vec3af"
PASS :else_condition_type:type="vec4af"
PASS :else_condition_type:type="vec2ai"
PASS :else_condition_type:type="vec3ai"
PASS :else_condition_type:type="vec4ai"
PASS :else_condition_type:type="vec2f"
PASS :else_condition_type:type="vec3h"
PASS :else_condition_type:type="vec4u"
PASS :else_condition_type:type="vec3b"
PASS :else_condition_type:type="mat2x3f"
PASS :else_condition_type:type="mat4x2h"
PASS :else_condition_type:type="array"
PASS :else_condition_type:type="atomic"
PASS :else_condition_type:type="struct"
PASS :else_condition_type:type="texture"
PASS :else_condition_type:type="sampler"
PASS :parse:test="true"
PASS :parse:test="paren_true"
PASS :parse:test="expr"
PASS :parse:test="paren_expr"
PASS :parse:test="true_else"
PASS :parse:test="paren_true_else"
PASS :parse:test="expr_else"
PASS :parse:test="paren_expr_else"
PASS :parse:test="true_else_if_true"
PASS :parse:test="paren_true_else_if_paren_true"
PASS :parse:test="true_else_if_paren_true"
PASS :parse:test="paren_true_else_if_true"
PASS :parse:test="expr_else_if_expr"
PASS :parse:test="paren_expr_else_if_paren_expr"
PASS :parse:test="expr_else_if_paren_expr"
PASS :parse:test="paren_expr_else_if_expr"
PASS :parse:test="if"
PASS :parse:test="block"
PASS :parse:test="semicolon"
PASS :parse:test="true_lbrace"
PASS :parse:test="true_rbrace"
PASS :parse:test="lparen_true"
PASS :parse:test="rparen_true"
PASS :parse:test="true_lparen"
PASS :parse:test="true_rparen"
PASS :parse:test="true_else_if_no_block"
PASS :parse:test="true_else_if"
PASS :parse:test="true_else_if_semicolon"
PASS :parse:test="true_else_if_true_lbrace"
PASS :parse:test="true_else_if_true_rbrace"
PASS :parse:test="true_else_if_lparen_true"
PASS :parse:test="true_else_if_rparen_true"
PASS :parse:test="true_else_if_true_lparen"
PASS :parse:test="true_else_if_true_rparen"
PASS :parse:test="else"
PASS :parse:test="else_if"
PASS :parse:test="true_elif"
PASS :parse:test="true_elsif"
PASS :parse:test="elif"
PASS :parse:test="elsif"

