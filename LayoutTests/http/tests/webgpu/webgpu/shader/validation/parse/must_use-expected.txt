
PASS :declaration:test="var"
PASS :declaration:test="function_no_return"
PASS :declaration:test="function_scalar_return"
PASS :declaration:test="function_struct_return"
PASS :declaration:test="function_var"
PASS :declaration:test="function_call"
PASS :declaration:test="function_parameter"
PASS :declaration:test="empty_parameter"
PASS :declaration:test="parameter"
PASS :call:use="%40must_use";call="no_call"
PASS :call:use="%40must_use";call="phony"
PASS :call:use="%40must_use";call="let"
PASS :call:use="%40must_use";call="local_var"
PASS :call:use="%40must_use";call="private_var"
PASS :call:use="%40must_use";call="storage_var"
PASS :call:use="%40must_use";call="pointer"
PASS :call:use="%40must_use";call="vector_elem"
PASS :call:use="%40must_use";call="matrix_elem"
PASS :call:use="%40must_use";call="condition"
PASS :call:use="%40must_use";call="param"
PASS :call:use="%40must_use";call="return"
PASS :call:use="%40must_use";call="statement"
PASS :call:use="";call="no_call"
PASS :call:use="";call="phony"
PASS :call:use="";call="let"
PASS :call:use="";call="local_var"
PASS :call:use="";call="private_var"
PASS :call:use="";call="storage_var"
PASS :call:use="";call="pointer"
PASS :call:use="";call="vector_elem"
PASS :call:use="";call="matrix_elem"
PASS :call:use="";call="condition"
PASS :call:use="";call="param"
PASS :call:use="";call="return"
PASS :call:use="";call="statement"
PASS :ignore_result_of_non_must_use_that_returns_call_of_must_use:
PASS :builtin_must_use:call="u32";use=true
PASS :builtin_must_use:call="u32";use=false
PASS :builtin_must_use:call="i32";use=true
PASS :builtin_must_use:call="i32";use=false
PASS :builtin_must_use:call="struct";use=true
PASS :builtin_must_use:call="struct";use=false
PASS :builtin_must_use:call="bitcast";use=true
PASS :builtin_must_use:call="bitcast";use=false
PASS :builtin_must_use:call="all";use=true
PASS :builtin_must_use:call="all";use=false
PASS :builtin_must_use:call="any";use=true
PASS :builtin_must_use:call="any";use=false
PASS :builtin_must_use:call="select";use=true
PASS :builtin_must_use:call="select";use=false
PASS :builtin_must_use:call="arrayLength";use=true
PASS :builtin_must_use:call="arrayLength";use=false
PASS :builtin_must_use:call="abs";use=true
PASS :builtin_must_use:call="abs";use=false
PASS :builtin_must_use:call="acos";use=true
PASS :builtin_must_use:call="acos";use=false
PASS :builtin_must_use:call="acosh";use=true
PASS :builtin_must_use:call="acosh";use=false
PASS :builtin_must_use:call="asin";use=true
PASS :builtin_must_use:call="asin";use=false
PASS :builtin_must_use:call="asinh";use=true
PASS :builtin_must_use:call="asinh";use=false
PASS :builtin_must_use:call="atan";use=true
PASS :builtin_must_use:call="atan";use=false
PASS :builtin_must_use:call="atanh";use=true
PASS :builtin_must_use:call="atanh";use=false
PASS :builtin_must_use:call="atan2";use=true
PASS :builtin_must_use:call="atan2";use=false
PASS :builtin_must_use:call="ceil";use=true
PASS :builtin_must_use:call="ceil";use=false
PASS :builtin_must_use:call="clamp";use=true
PASS :builtin_must_use:call="clamp";use=false
PASS :builtin_must_use:call="cos";use=true
PASS :builtin_must_use:call="cos";use=false
PASS :builtin_must_use:call="cosh";use=true
PASS :builtin_must_use:call="cosh";use=false
PASS :builtin_must_use:call="countLeadingZeros";use=true
PASS :builtin_must_use:call="countLeadingZeros";use=false
PASS :builtin_must_use:call="countOneBits";use=true
PASS :builtin_must_use:call="countOneBits";use=false
PASS :builtin_must_use:call="countTrailingZeros";use=true
PASS :builtin_must_use:call="countTrailingZeros";use=false
PASS :builtin_must_use:call="cross";use=true
PASS :builtin_must_use:call="cross";use=false
PASS :builtin_must_use:call="degrees";use=true
PASS :builtin_must_use:call="degrees";use=false
PASS :builtin_must_use:call="determinant";use=true
PASS :builtin_must_use:call="determinant";use=false
PASS :builtin_must_use:call="distance";use=true
PASS :builtin_must_use:call="distance";use=false
PASS :builtin_must_use:call="dot";use=true
PASS :builtin_must_use:call="dot";use=false
PASS :builtin_must_use:call="exp";use=true
PASS :builtin_must_use:call="exp";use=false
PASS :builtin_must_use:call="exp2";use=true
PASS :builtin_must_use:call="exp2";use=false
PASS :builtin_must_use:call="extractBits";use=true
PASS :builtin_must_use:call="extractBits";use=false
PASS :builtin_must_use:call="faceForward";use=true
PASS :builtin_must_use:call="faceForward";use=false
PASS :builtin_must_use:call="firstLeadingBit";use=true
PASS :builtin_must_use:call="firstLeadingBit";use=false
PASS :builtin_must_use:call="firstTrailingBit";use=true
PASS :builtin_must_use:call="firstTrailingBit";use=false
PASS :builtin_must_use:call="floor";use=true
PASS :builtin_must_use:call="floor";use=false
PASS :builtin_must_use:call="fma";use=true
PASS :builtin_must_use:call="fma";use=false
PASS :builtin_must_use:call="fract";use=true
PASS :builtin_must_use:call="fract";use=false
PASS :builtin_must_use:call="frexp";use=true
PASS :builtin_must_use:call="frexp";use=false
PASS :builtin_must_use:call="insertBits";use=true
PASS :builtin_must_use:call="insertBits";use=false
PASS :builtin_must_use:call="inverseSqrt";use=true
PASS :builtin_must_use:call="inverseSqrt";use=false
PASS :builtin_must_use:call="ldexp";use=true
PASS :builtin_must_use:call="ldexp";use=false
PASS :builtin_must_use:call="length";use=true
PASS :builtin_must_use:call="length";use=false
PASS :builtin_must_use:call="log";use=true
PASS :builtin_must_use:call="log";use=false
PASS :builtin_must_use:call="log2";use=true
PASS :builtin_must_use:call="log2";use=false
PASS :builtin_must_use:call="max";use=true
PASS :builtin_must_use:call="max";use=false
PASS :builtin_must_use:call="min";use=true
PASS :builtin_must_use:call="min";use=false
PASS :builtin_must_use:call="mix";use=true
PASS :builtin_must_use:call="mix";use=false
PASS :builtin_must_use:call="modf";use=true
PASS :builtin_must_use:call="modf";use=false
PASS :builtin_must_use:call="normalize";use=true
PASS :builtin_must_use:call="normalize";use=false
PASS :builtin_must_use:call="pow";use=true
PASS :builtin_must_use:call="pow";use=false
PASS :builtin_must_use:call="quantizeToF16";use=true
PASS :builtin_must_use:call="quantizeToF16";use=false
PASS :builtin_must_use:call="radians";use=true
PASS :builtin_must_use:call="radians";use=false
PASS :builtin_must_use:call="reflect";use=true
PASS :builtin_must_use:call="reflect";use=false
PASS :builtin_must_use:call="refract";use=true
PASS :builtin_must_use:call="refract";use=false
PASS :builtin_must_use:call="reverseBits";use=true
PASS :builtin_must_use:call="reverseBits";use=false
PASS :builtin_must_use:call="round";use=true
PASS :builtin_must_use:call="round";use=false
PASS :builtin_must_use:call="saturate";use=true
PASS :builtin_must_use:call="saturate";use=false
PASS :builtin_must_use:call="sign";use=true
PASS :builtin_must_use:call="sign";use=false
PASS :builtin_must_use:call="sin";use=true
PASS :builtin_must_use:call="sin";use=false
PASS :builtin_must_use:call="sinh";use=true
PASS :builtin_must_use:call="sinh";use=false
PASS :builtin_must_use:call="smoothstep";use=true
PASS :builtin_must_use:call="smoothstep";use=false
PASS :builtin_must_use:call="sqrt";use=true
PASS :builtin_must_use:call="sqrt";use=false
PASS :builtin_must_use:call="step";use=true
PASS :builtin_must_use:call="step";use=false
PASS :builtin_must_use:call="tan";use=true
PASS :builtin_must_use:call="tan";use=false
PASS :builtin_must_use:call="tanh";use=true
PASS :builtin_must_use:call="tanh";use=false
PASS :builtin_must_use:call="transpose";use=true
PASS :builtin_must_use:call="transpose";use=false
PASS :builtin_must_use:call="trunc";use=true
PASS :builtin_must_use:call="trunc";use=false
PASS :builtin_must_use:call="dpdx";use=true
PASS :builtin_must_use:call="dpdx";use=false
PASS :builtin_must_use:call="dpdxCoarse";use=true
PASS :builtin_must_use:call="dpdxCoarse";use=false
PASS :builtin_must_use:call="dpdxFine";use=true
PASS :builtin_must_use:call="dpdxFine";use=false
PASS :builtin_must_use:call="dpdy";use=true
PASS :builtin_must_use:call="dpdy";use=false
PASS :builtin_must_use:call="dpdyCoarse";use=true
PASS :builtin_must_use:call="dpdyCoarse";use=false
PASS :builtin_must_use:call="dpdyFine";use=true
PASS :builtin_must_use:call="dpdyFine";use=false
PASS :builtin_must_use:call="fwidth";use=true
PASS :builtin_must_use:call="fwidth";use=false
PASS :builtin_must_use:call="fwidthCoarse";use=true
PASS :builtin_must_use:call="fwidthCoarse";use=false
PASS :builtin_must_use:call="fwidthFine";use=true
PASS :builtin_must_use:call="fwidthFine";use=false
PASS :builtin_must_use:call="textureDimensions";use=true
PASS :builtin_must_use:call="textureDimensions";use=false
PASS :builtin_must_use:call="textureGather";use=true
PASS :builtin_must_use:call="textureGather";use=false
PASS :builtin_must_use:call="textureGatherCompare";use=true
PASS :builtin_must_use:call="textureGatherCompare";use=false
PASS :builtin_must_use:call="textureLoad";use=true
PASS :builtin_must_use:call="textureLoad";use=false
PASS :builtin_must_use:call="textureNumLayers";use=true
PASS :builtin_must_use:call="textureNumLayers";use=false
PASS :builtin_must_use:call="textureNumLevels";use=true
PASS :builtin_must_use:call="textureNumLevels";use=false
PASS :builtin_must_use:call="textureNumSamples";use=true
PASS :builtin_must_use:call="textureNumSamples";use=false
PASS :builtin_must_use:call="textureSample";use=true
PASS :builtin_must_use:call="textureSample";use=false
PASS :builtin_must_use:call="textureSampleBias";use=true
PASS :builtin_must_use:call="textureSampleBias";use=false
PASS :builtin_must_use:call="textureSampleCompare";use=true
PASS :builtin_must_use:call="textureSampleCompare";use=false
PASS :builtin_must_use:call="textureSampleCompareLevel";use=true
PASS :builtin_must_use:call="textureSampleCompareLevel";use=false
PASS :builtin_must_use:call="textureSampleGrad";use=true
PASS :builtin_must_use:call="textureSampleGrad";use=false
PASS :builtin_must_use:call="textureSampleLevel";use=true
PASS :builtin_must_use:call="textureSampleLevel";use=false
PASS :builtin_must_use:call="textureSampleBaseClampToEdge";use=true
PASS :builtin_must_use:call="textureSampleBaseClampToEdge";use=false
PASS :builtin_must_use:call="pack4x8snorm";use=true
PASS :builtin_must_use:call="pack4x8snorm";use=false
PASS :builtin_must_use:call="pack4x8unorm";use=true
PASS :builtin_must_use:call="pack4x8unorm";use=false
PASS :builtin_must_use:call="pack2x16snorm";use=true
PASS :builtin_must_use:call="pack2x16snorm";use=false
PASS :builtin_must_use:call="pack2x16unorm";use=true
PASS :builtin_must_use:call="pack2x16unorm";use=false
PASS :builtin_must_use:call="pack2x16float";use=true
PASS :builtin_must_use:call="pack2x16float";use=false
PASS :builtin_must_use:call="unpack4x8snorm";use=true
PASS :builtin_must_use:call="unpack4x8snorm";use=false
PASS :builtin_must_use:call="unpack4x8unorm";use=true
PASS :builtin_must_use:call="unpack4x8unorm";use=false
PASS :builtin_must_use:call="unpack2x16snorm";use=true
PASS :builtin_must_use:call="unpack2x16snorm";use=false
PASS :builtin_must_use:call="unpack2x16unorm";use=true
PASS :builtin_must_use:call="unpack2x16unorm";use=false
PASS :builtin_must_use:call="unpack2x16float";use=true
PASS :builtin_must_use:call="unpack2x16float";use=false
PASS :builtin_must_use:call="workgroupUniformLoad";use=true
PASS :builtin_must_use:call="workgroupUniformLoad";use=false
PASS :builtin_no_must_use:call="atomicLoad";use=true
PASS :builtin_no_must_use:call="atomicLoad";use=false
PASS :builtin_no_must_use:call="atomicAdd";use=true
PASS :builtin_no_must_use:call="atomicAdd";use=false
PASS :builtin_no_must_use:call="atomicSub";use=true
PASS :builtin_no_must_use:call="atomicSub";use=false
PASS :builtin_no_must_use:call="atomicMax";use=true
PASS :builtin_no_must_use:call="atomicMax";use=false
PASS :builtin_no_must_use:call="atomicMin";use=true
PASS :builtin_no_must_use:call="atomicMin";use=false
PASS :builtin_no_must_use:call="atomicAnd";use=true
PASS :builtin_no_must_use:call="atomicAnd";use=false
PASS :builtin_no_must_use:call="atomicOr";use=true
PASS :builtin_no_must_use:call="atomicOr";use=false
PASS :builtin_no_must_use:call="atomicXor";use=true
PASS :builtin_no_must_use:call="atomicXor";use=false
PASS :builtin_no_must_use:call="atomicExchange";use=true
PASS :builtin_no_must_use:call="atomicExchange";use=false
PASS :builtin_no_must_use:call="atomicCompareExchangeWeak";use=true
PASS :builtin_no_must_use:call="atomicCompareExchangeWeak";use=false

