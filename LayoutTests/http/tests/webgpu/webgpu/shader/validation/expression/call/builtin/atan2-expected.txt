
PASS :values:stage="constant";type="abstract-float"
PASS :values:stage="constant";type="f32"
PASS :values:stage="constant";type="f16"
PASS :values:stage="constant";type="vec2%3Cabstract-float%3E"
PASS :values:stage="constant";type="vec2%3Cf32%3E"
PASS :values:stage="constant";type="vec2%3Cf16%3E"
PASS :values:stage="constant";type="vec3%3Cabstract-float%3E"
PASS :values:stage="constant";type="vec3%3Cf32%3E"
PASS :values:stage="constant";type="vec3%3Cf16%3E"
PASS :values:stage="constant";type="vec4%3Cabstract-float%3E"
PASS :values:stage="constant";type="vec4%3Cf32%3E"
PASS :values:stage="constant";type="vec4%3Cf16%3E"
PASS :values:stage="override";type="f32"
PASS :values:stage="override";type="f16"
PASS :values:stage="override";type="vec2%3Cf32%3E"
PASS :values:stage="override";type="vec2%3Cf16%3E"
PASS :values:stage="override";type="vec3%3Cf32%3E"
PASS :values:stage="override";type="vec3%3Cf16%3E"
PASS :values:stage="override";type="vec4%3Cf32%3E"
PASS :values:stage="override";type="vec4%3Cf16%3E"
PASS :invalid_argument_y:type="f32"
PASS :invalid_argument_y:type="i32"
PASS :invalid_argument_y:type="vec2%3Ci32%3E"
PASS :invalid_argument_y:type="vec3%3Ci32%3E"
PASS :invalid_argument_y:type="vec4%3Ci32%3E"
PASS :invalid_argument_y:type="u32"
PASS :invalid_argument_y:type="vec2%3Cu32%3E"
PASS :invalid_argument_y:type="vec3%3Cu32%3E"
PASS :invalid_argument_y:type="vec4%3Cu32%3E"
PASS :invalid_argument_y:type="bool"
PASS :invalid_argument_y:type="vec2%3Cbool%3E"
PASS :invalid_argument_y:type="vec3%3Cbool%3E"
PASS :invalid_argument_y:type="vec4%3Cbool%3E"
PASS :invalid_argument_y:type="mat2x2%3Cf32%3E"
PASS :invalid_argument_y:type="mat2x2%3Cf16%3E"
PASS :invalid_argument_y:type="mat3x2%3Cf32%3E"
PASS :invalid_argument_y:type="mat3x2%3Cf16%3E"
PASS :invalid_argument_y:type="mat4x2%3Cf32%3E"
PASS :invalid_argument_y:type="mat4x2%3Cf16%3E"
PASS :invalid_argument_y:type="mat2x3%3Cf32%3E"
PASS :invalid_argument_y:type="mat2x3%3Cf16%3E"
PASS :invalid_argument_y:type="mat3x3%3Cf32%3E"
PASS :invalid_argument_y:type="mat3x3%3Cf16%3E"
PASS :invalid_argument_y:type="mat4x3%3Cf32%3E"
PASS :invalid_argument_y:type="mat4x3%3Cf16%3E"
PASS :invalid_argument_y:type="mat2x4%3Cf32%3E"
PASS :invalid_argument_y:type="mat2x4%3Cf16%3E"
PASS :invalid_argument_y:type="mat3x4%3Cf32%3E"
PASS :invalid_argument_y:type="mat3x4%3Cf16%3E"
PASS :invalid_argument_y:type="mat4x4%3Cf32%3E"
PASS :invalid_argument_y:type="mat4x4%3Cf16%3E"
PASS :invalid_argument_x:type="f32"
PASS :invalid_argument_x:type="i32"
PASS :invalid_argument_x:type="vec2%3Ci32%3E"
PASS :invalid_argument_x:type="vec3%3Ci32%3E"
PASS :invalid_argument_x:type="vec4%3Ci32%3E"
PASS :invalid_argument_x:type="u32"
PASS :invalid_argument_x:type="vec2%3Cu32%3E"
PASS :invalid_argument_x:type="vec3%3Cu32%3E"
PASS :invalid_argument_x:type="vec4%3Cu32%3E"
PASS :invalid_argument_x:type="bool"
PASS :invalid_argument_x:type="vec2%3Cbool%3E"
PASS :invalid_argument_x:type="vec3%3Cbool%3E"
PASS :invalid_argument_x:type="vec4%3Cbool%3E"
PASS :invalid_argument_x:type="mat2x2%3Cf32%3E"
PASS :invalid_argument_x:type="mat2x2%3Cf16%3E"
PASS :invalid_argument_x:type="mat3x2%3Cf32%3E"
PASS :invalid_argument_x:type="mat3x2%3Cf16%3E"
PASS :invalid_argument_x:type="mat4x2%3Cf32%3E"
PASS :invalid_argument_x:type="mat4x2%3Cf16%3E"
PASS :invalid_argument_x:type="mat2x3%3Cf32%3E"
PASS :invalid_argument_x:type="mat2x3%3Cf16%3E"
PASS :invalid_argument_x:type="mat3x3%3Cf32%3E"
PASS :invalid_argument_x:type="mat3x3%3Cf16%3E"
PASS :invalid_argument_x:type="mat4x3%3Cf32%3E"
PASS :invalid_argument_x:type="mat4x3%3Cf16%3E"
PASS :invalid_argument_x:type="mat2x4%3Cf32%3E"
PASS :invalid_argument_x:type="mat2x4%3Cf16%3E"
PASS :invalid_argument_x:type="mat3x4%3Cf32%3E"
PASS :invalid_argument_x:type="mat3x4%3Cf16%3E"
PASS :invalid_argument_x:type="mat4x4%3Cf32%3E"
PASS :invalid_argument_x:type="mat4x4%3Cf16%3E"
PASS :parameters:test="af"
PASS :parameters:test="ai"
PASS :parameters:test="ai_af"
PASS :parameters:test="af_ai"
PASS :parameters:test="ai_f32"
PASS :parameters:test="f32_ai"
PASS :parameters:test="af_f32"
PASS :parameters:test="f32_af"
PASS :parameters:test="f16_ai"
PASS :parameters:test="ai_f16"
PASS :parameters:test="af_f16"
PASS :parameters:test="f16_af"
PASS :parameters:test="mixed_types"
PASS :parameters:test="mixed_types_2"
PASS :parameters:test="f16_f32"
PASS :parameters:test="u32_f32"
PASS :parameters:test="f32_u32"
PASS :parameters:test="f32_i32"
PASS :parameters:test="i32_f32"
PASS :parameters:test="f32_bool"
PASS :parameters:test="bool_f32"
PASS :parameters:test="vec_f32"
PASS :parameters:test="f32_vec"
PASS :parameters:test="matrix"
PASS :parameters:test="atomic"
PASS :parameters:test="array"
PASS :parameters:test="array_runtime"
PASS :parameters:test="struct"
PASS :parameters:test="enumerant"
PASS :parameters:test="ptr"
PASS :parameters:test="ptr_deref"
PASS :parameters:test="sampler"
PASS :parameters:test="texture"
PASS :parameters:test="no_params"
PASS :parameters:test="too_many_params"
PASS :parameters:test="must_use"
PASS :must_use:use=true
PASS :must_use:use=false

