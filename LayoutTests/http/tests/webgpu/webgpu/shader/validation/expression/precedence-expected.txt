
PASS :binary_requires_parentheses:op1="mul";op2="mul"
PASS :binary_requires_parentheses:op1="mul";op2="div"
PASS :binary_requires_parentheses:op1="mul";op2="mod"
PASS :binary_requires_parentheses:op1="mul";op2="add"
PASS :binary_requires_parentheses:op1="mul";op2="sub"
PASS :binary_requires_parentheses:op1="mul";op2="shl"
PASS :binary_requires_parentheses:op1="mul";op2="shr"
PASS :binary_requires_parentheses:op1="mul";op2="lt"
PASS :binary_requires_parentheses:op1="mul";op2="gt"
PASS :binary_requires_parentheses:op1="mul";op2="le"
PASS :binary_requires_parentheses:op1="mul";op2="ge"
PASS :binary_requires_parentheses:op1="mul";op2="eq"
PASS :binary_requires_parentheses:op1="mul";op2="ne"
PASS :binary_requires_parentheses:op1="mul";op2="bin_and"
PASS :binary_requires_parentheses:op1="mul";op2="bin_xor"
PASS :binary_requires_parentheses:op1="mul";op2="bin_or"
PASS :binary_requires_parentheses:op1="div";op2="mul"
PASS :binary_requires_parentheses:op1="div";op2="div"
PASS :binary_requires_parentheses:op1="div";op2="mod"
PASS :binary_requires_parentheses:op1="div";op2="add"
PASS :binary_requires_parentheses:op1="div";op2="sub"
PASS :binary_requires_parentheses:op1="div";op2="shl"
PASS :binary_requires_parentheses:op1="div";op2="shr"
PASS :binary_requires_parentheses:op1="div";op2="lt"
PASS :binary_requires_parentheses:op1="div";op2="gt"
PASS :binary_requires_parentheses:op1="div";op2="le"
PASS :binary_requires_parentheses:op1="div";op2="ge"
PASS :binary_requires_parentheses:op1="div";op2="eq"
PASS :binary_requires_parentheses:op1="div";op2="ne"
PASS :binary_requires_parentheses:op1="div";op2="bin_and"
PASS :binary_requires_parentheses:op1="div";op2="bin_xor"
PASS :binary_requires_parentheses:op1="div";op2="bin_or"
PASS :binary_requires_parentheses:op1="mod";op2="mul"
PASS :binary_requires_parentheses:op1="mod";op2="div"
PASS :binary_requires_parentheses:op1="mod";op2="mod"
PASS :binary_requires_parentheses:op1="mod";op2="add"
PASS :binary_requires_parentheses:op1="mod";op2="sub"
PASS :binary_requires_parentheses:op1="mod";op2="shl"
PASS :binary_requires_parentheses:op1="mod";op2="shr"
PASS :binary_requires_parentheses:op1="mod";op2="lt"
PASS :binary_requires_parentheses:op1="mod";op2="gt"
PASS :binary_requires_parentheses:op1="mod";op2="le"
PASS :binary_requires_parentheses:op1="mod";op2="ge"
PASS :binary_requires_parentheses:op1="mod";op2="eq"
PASS :binary_requires_parentheses:op1="mod";op2="ne"
PASS :binary_requires_parentheses:op1="mod";op2="bin_and"
PASS :binary_requires_parentheses:op1="mod";op2="bin_xor"
PASS :binary_requires_parentheses:op1="mod";op2="bin_or"
PASS :binary_requires_parentheses:op1="add";op2="mul"
PASS :binary_requires_parentheses:op1="add";op2="div"
PASS :binary_requires_parentheses:op1="add";op2="mod"
PASS :binary_requires_parentheses:op1="add";op2="add"
PASS :binary_requires_parentheses:op1="add";op2="sub"
PASS :binary_requires_parentheses:op1="add";op2="shl"
PASS :binary_requires_parentheses:op1="add";op2="shr"
PASS :binary_requires_parentheses:op1="add";op2="lt"
PASS :binary_requires_parentheses:op1="add";op2="gt"
PASS :binary_requires_parentheses:op1="add";op2="le"
PASS :binary_requires_parentheses:op1="add";op2="ge"
PASS :binary_requires_parentheses:op1="add";op2="eq"
PASS :binary_requires_parentheses:op1="add";op2="ne"
PASS :binary_requires_parentheses:op1="add";op2="bin_and"
PASS :binary_requires_parentheses:op1="add";op2="bin_xor"
PASS :binary_requires_parentheses:op1="add";op2="bin_or"
PASS :binary_requires_parentheses:op1="sub";op2="mul"
PASS :binary_requires_parentheses:op1="sub";op2="div"
PASS :binary_requires_parentheses:op1="sub";op2="mod"
PASS :binary_requires_parentheses:op1="sub";op2="add"
PASS :binary_requires_parentheses:op1="sub";op2="sub"
PASS :binary_requires_parentheses:op1="sub";op2="shl"
PASS :binary_requires_parentheses:op1="sub";op2="shr"
PASS :binary_requires_parentheses:op1="sub";op2="lt"
PASS :binary_requires_parentheses:op1="sub";op2="gt"
PASS :binary_requires_parentheses:op1="sub";op2="le"
PASS :binary_requires_parentheses:op1="sub";op2="ge"
PASS :binary_requires_parentheses:op1="sub";op2="eq"
PASS :binary_requires_parentheses:op1="sub";op2="ne"
PASS :binary_requires_parentheses:op1="sub";op2="bin_and"
PASS :binary_requires_parentheses:op1="sub";op2="bin_xor"
PASS :binary_requires_parentheses:op1="sub";op2="bin_or"
PASS :binary_requires_parentheses:op1="shl";op2="mul"
PASS :binary_requires_parentheses:op1="shl";op2="div"
PASS :binary_requires_parentheses:op1="shl";op2="mod"
PASS :binary_requires_parentheses:op1="shl";op2="add"
PASS :binary_requires_parentheses:op1="shl";op2="sub"
PASS :binary_requires_parentheses:op1="shl";op2="shl"
PASS :binary_requires_parentheses:op1="shl";op2="shr"
PASS :binary_requires_parentheses:op1="shl";op2="lt"
PASS :binary_requires_parentheses:op1="shl";op2="gt"
PASS :binary_requires_parentheses:op1="shl";op2="le"
PASS :binary_requires_parentheses:op1="shl";op2="ge"
PASS :binary_requires_parentheses:op1="shl";op2="eq"
PASS :binary_requires_parentheses:op1="shl";op2="ne"
PASS :binary_requires_parentheses:op1="shl";op2="bin_and"
PASS :binary_requires_parentheses:op1="shl";op2="bin_xor"
PASS :binary_requires_parentheses:op1="shl";op2="bin_or"
PASS :binary_requires_parentheses:op1="shr";op2="mul"
PASS :binary_requires_parentheses:op1="shr";op2="div"
PASS :binary_requires_parentheses:op1="shr";op2="mod"
PASS :binary_requires_parentheses:op1="shr";op2="add"
PASS :binary_requires_parentheses:op1="shr";op2="sub"
PASS :binary_requires_parentheses:op1="shr";op2="shl"
PASS :binary_requires_parentheses:op1="shr";op2="shr"
PASS :binary_requires_parentheses:op1="shr";op2="lt"
PASS :binary_requires_parentheses:op1="shr";op2="gt"
PASS :binary_requires_parentheses:op1="shr";op2="le"
PASS :binary_requires_parentheses:op1="shr";op2="ge"
PASS :binary_requires_parentheses:op1="shr";op2="eq"
PASS :binary_requires_parentheses:op1="shr";op2="ne"
PASS :binary_requires_parentheses:op1="shr";op2="bin_and"
PASS :binary_requires_parentheses:op1="shr";op2="bin_xor"
PASS :binary_requires_parentheses:op1="shr";op2="bin_or"
PASS :binary_requires_parentheses:op1="lt";op2="mul"
PASS :binary_requires_parentheses:op1="lt";op2="div"
PASS :binary_requires_parentheses:op1="lt";op2="mod"
PASS :binary_requires_parentheses:op1="lt";op2="add"
PASS :binary_requires_parentheses:op1="lt";op2="sub"
PASS :binary_requires_parentheses:op1="lt";op2="shl"
PASS :binary_requires_parentheses:op1="lt";op2="lt"
PASS :binary_requires_parentheses:op1="lt";op2="le"
PASS :binary_requires_parentheses:op1="lt";op2="eq"
PASS :binary_requires_parentheses:op1="lt";op2="ne"
PASS :binary_requires_parentheses:op1="lt";op2="bin_and"
PASS :binary_requires_parentheses:op1="lt";op2="bin_xor"
PASS :binary_requires_parentheses:op1="lt";op2="bin_or"
PASS :binary_requires_parentheses:op1="lt";op2="log_and"
PASS :binary_requires_parentheses:op1="lt";op2="log_or"
PASS :binary_requires_parentheses:op1="gt";op2="mul"
PASS :binary_requires_parentheses:op1="gt";op2="div"
PASS :binary_requires_parentheses:op1="gt";op2="mod"
PASS :binary_requires_parentheses:op1="gt";op2="add"
PASS :binary_requires_parentheses:op1="gt";op2="sub"
PASS :binary_requires_parentheses:op1="gt";op2="shl"
PASS :binary_requires_parentheses:op1="gt";op2="shr"
PASS :binary_requires_parentheses:op1="gt";op2="lt"
PASS :binary_requires_parentheses:op1="gt";op2="gt"
PASS :binary_requires_parentheses:op1="gt";op2="le"
PASS :binary_requires_parentheses:op1="gt";op2="ge"
PASS :binary_requires_parentheses:op1="gt";op2="eq"
PASS :binary_requires_parentheses:op1="gt";op2="ne"
PASS :binary_requires_parentheses:op1="gt";op2="bin_and"
PASS :binary_requires_parentheses:op1="gt";op2="bin_xor"
PASS :binary_requires_parentheses:op1="gt";op2="bin_or"
PASS :binary_requires_parentheses:op1="gt";op2="log_and"
PASS :binary_requires_parentheses:op1="gt";op2="log_or"
PASS :binary_requires_parentheses:op1="le";op2="mul"
PASS :binary_requires_parentheses:op1="le";op2="div"
PASS :binary_requires_parentheses:op1="le";op2="mod"
PASS :binary_requires_parentheses:op1="le";op2="add"
PASS :binary_requires_parentheses:op1="le";op2="sub"
PASS :binary_requires_parentheses:op1="le";op2="shl"
PASS :binary_requires_parentheses:op1="le";op2="shr"
PASS :binary_requires_parentheses:op1="le";op2="lt"
PASS :binary_requires_parentheses:op1="le";op2="gt"
PASS :binary_requires_parentheses:op1="le";op2="le"
PASS :binary_requires_parentheses:op1="le";op2="ge"
PASS :binary_requires_parentheses:op1="le";op2="eq"
PASS :binary_requires_parentheses:op1="le";op2="ne"
PASS :binary_requires_parentheses:op1="le";op2="bin_and"
PASS :binary_requires_parentheses:op1="le";op2="bin_xor"
PASS :binary_requires_parentheses:op1="le";op2="bin_or"
PASS :binary_requires_parentheses:op1="le";op2="log_and"
PASS :binary_requires_parentheses:op1="le";op2="log_or"
PASS :binary_requires_parentheses:op1="ge";op2="mul"
PASS :binary_requires_parentheses:op1="ge";op2="div"
PASS :binary_requires_parentheses:op1="ge";op2="mod"
PASS :binary_requires_parentheses:op1="ge";op2="add"
PASS :binary_requires_parentheses:op1="ge";op2="sub"
PASS :binary_requires_parentheses:op1="ge";op2="shl"
PASS :binary_requires_parentheses:op1="ge";op2="shr"
PASS :binary_requires_parentheses:op1="ge";op2="lt"
PASS :binary_requires_parentheses:op1="ge";op2="gt"
PASS :binary_requires_parentheses:op1="ge";op2="le"
PASS :binary_requires_parentheses:op1="ge";op2="ge"
PASS :binary_requires_parentheses:op1="ge";op2="eq"
PASS :binary_requires_parentheses:op1="ge";op2="ne"
PASS :binary_requires_parentheses:op1="ge";op2="bin_and"
PASS :binary_requires_parentheses:op1="ge";op2="bin_xor"
PASS :binary_requires_parentheses:op1="ge";op2="bin_or"
PASS :binary_requires_parentheses:op1="ge";op2="log_and"
PASS :binary_requires_parentheses:op1="ge";op2="log_or"
PASS :binary_requires_parentheses:op1="eq";op2="mul"
PASS :binary_requires_parentheses:op1="eq";op2="div"
PASS :binary_requires_parentheses:op1="eq";op2="mod"
PASS :binary_requires_parentheses:op1="eq";op2="add"
PASS :binary_requires_parentheses:op1="eq";op2="sub"
PASS :binary_requires_parentheses:op1="eq";op2="shl"
PASS :binary_requires_parentheses:op1="eq";op2="shr"
PASS :binary_requires_parentheses:op1="eq";op2="lt"
PASS :binary_requires_parentheses:op1="eq";op2="gt"
PASS :binary_requires_parentheses:op1="eq";op2="le"
PASS :binary_requires_parentheses:op1="eq";op2="ge"
PASS :binary_requires_parentheses:op1="eq";op2="eq"
PASS :binary_requires_parentheses:op1="eq";op2="ne"
PASS :binary_requires_parentheses:op1="eq";op2="bin_and"
PASS :binary_requires_parentheses:op1="eq";op2="bin_xor"
PASS :binary_requires_parentheses:op1="eq";op2="bin_or"
PASS :binary_requires_parentheses:op1="eq";op2="log_and"
PASS :binary_requires_parentheses:op1="eq";op2="log_or"
PASS :binary_requires_parentheses:op1="ne";op2="mul"
PASS :binary_requires_parentheses:op1="ne";op2="div"
PASS :binary_requires_parentheses:op1="ne";op2="mod"
PASS :binary_requires_parentheses:op1="ne";op2="add"
PASS :binary_requires_parentheses:op1="ne";op2="sub"
PASS :binary_requires_parentheses:op1="ne";op2="shl"
PASS :binary_requires_parentheses:op1="ne";op2="shr"
PASS :binary_requires_parentheses:op1="ne";op2="lt"
PASS :binary_requires_parentheses:op1="ne";op2="gt"
PASS :binary_requires_parentheses:op1="ne";op2="le"
PASS :binary_requires_parentheses:op1="ne";op2="ge"
PASS :binary_requires_parentheses:op1="ne";op2="eq"
PASS :binary_requires_parentheses:op1="ne";op2="ne"
PASS :binary_requires_parentheses:op1="ne";op2="bin_and"
PASS :binary_requires_parentheses:op1="ne";op2="bin_xor"
PASS :binary_requires_parentheses:op1="ne";op2="bin_or"
PASS :binary_requires_parentheses:op1="ne";op2="log_and"
PASS :binary_requires_parentheses:op1="ne";op2="log_or"
PASS :binary_requires_parentheses:op1="bin_and";op2="mul"
PASS :binary_requires_parentheses:op1="bin_and";op2="div"
PASS :binary_requires_parentheses:op1="bin_and";op2="mod"
PASS :binary_requires_parentheses:op1="bin_and";op2="add"
PASS :binary_requires_parentheses:op1="bin_and";op2="sub"
PASS :binary_requires_parentheses:op1="bin_and";op2="shl"
PASS :binary_requires_parentheses:op1="bin_and";op2="shr"
PASS :binary_requires_parentheses:op1="bin_and";op2="lt"
PASS :binary_requires_parentheses:op1="bin_and";op2="gt"
PASS :binary_requires_parentheses:op1="bin_and";op2="le"
PASS :binary_requires_parentheses:op1="bin_and";op2="ge"
PASS :binary_requires_parentheses:op1="bin_and";op2="eq"
PASS :binary_requires_parentheses:op1="bin_and";op2="ne"
PASS :binary_requires_parentheses:op1="bin_and";op2="bin_and"
PASS :binary_requires_parentheses:op1="bin_and";op2="bin_xor"
PASS :binary_requires_parentheses:op1="bin_and";op2="bin_or"
PASS :binary_requires_parentheses:op1="bin_xor";op2="mul"
PASS :binary_requires_parentheses:op1="bin_xor";op2="div"
PASS :binary_requires_parentheses:op1="bin_xor";op2="mod"
PASS :binary_requires_parentheses:op1="bin_xor";op2="add"
PASS :binary_requires_parentheses:op1="bin_xor";op2="sub"
PASS :binary_requires_parentheses:op1="bin_xor";op2="shl"
PASS :binary_requires_parentheses:op1="bin_xor";op2="shr"
PASS :binary_requires_parentheses:op1="bin_xor";op2="lt"
PASS :binary_requires_parentheses:op1="bin_xor";op2="gt"
PASS :binary_requires_parentheses:op1="bin_xor";op2="le"
PASS :binary_requires_parentheses:op1="bin_xor";op2="ge"
PASS :binary_requires_parentheses:op1="bin_xor";op2="eq"
PASS :binary_requires_parentheses:op1="bin_xor";op2="ne"
PASS :binary_requires_parentheses:op1="bin_xor";op2="bin_and"
PASS :binary_requires_parentheses:op1="bin_xor";op2="bin_xor"
PASS :binary_requires_parentheses:op1="bin_xor";op2="bin_or"
PASS :binary_requires_parentheses:op1="bin_or";op2="mul"
PASS :binary_requires_parentheses:op1="bin_or";op2="div"
PASS :binary_requires_parentheses:op1="bin_or";op2="mod"
PASS :binary_requires_parentheses:op1="bin_or";op2="add"
PASS :binary_requires_parentheses:op1="bin_or";op2="sub"
PASS :binary_requires_parentheses:op1="bin_or";op2="shl"
PASS :binary_requires_parentheses:op1="bin_or";op2="shr"
PASS :binary_requires_parentheses:op1="bin_or";op2="lt"
PASS :binary_requires_parentheses:op1="bin_or";op2="gt"
PASS :binary_requires_parentheses:op1="bin_or";op2="le"
PASS :binary_requires_parentheses:op1="bin_or";op2="ge"
PASS :binary_requires_parentheses:op1="bin_or";op2="eq"
PASS :binary_requires_parentheses:op1="bin_or";op2="ne"
PASS :binary_requires_parentheses:op1="bin_or";op2="bin_and"
PASS :binary_requires_parentheses:op1="bin_or";op2="bin_xor"
PASS :binary_requires_parentheses:op1="bin_or";op2="bin_or"
PASS :binary_requires_parentheses:op1="log_and";op2="lt"
PASS :binary_requires_parentheses:op1="log_and";op2="gt"
PASS :binary_requires_parentheses:op1="log_and";op2="le"
PASS :binary_requires_parentheses:op1="log_and";op2="ge"
PASS :binary_requires_parentheses:op1="log_and";op2="eq"
PASS :binary_requires_parentheses:op1="log_and";op2="ne"
PASS :binary_requires_parentheses:op1="log_or";op2="lt"
PASS :binary_requires_parentheses:op1="log_or";op2="gt"
PASS :binary_requires_parentheses:op1="log_or";op2="le"
PASS :binary_requires_parentheses:op1="log_or";op2="ge"
PASS :binary_requires_parentheses:op1="log_or";op2="eq"
PASS :binary_requires_parentheses:op1="log_or";op2="ne"
PASS :mixed_logical_requires_parentheses:op1="log_and";op2="log_and";parens="none"
PASS :mixed_logical_requires_parentheses:op1="log_and";op2="log_and";parens="left"
PASS :mixed_logical_requires_parentheses:op1="log_and";op2="log_and";parens="right"
PASS :mixed_logical_requires_parentheses:op1="log_and";op2="log_or";parens="none"
PASS :mixed_logical_requires_parentheses:op1="log_and";op2="log_or";parens="left"
PASS :mixed_logical_requires_parentheses:op1="log_and";op2="log_or";parens="right"
PASS :mixed_logical_requires_parentheses:op1="log_or";op2="log_and";parens="none"
PASS :mixed_logical_requires_parentheses:op1="log_or";op2="log_and";parens="left"
PASS :mixed_logical_requires_parentheses:op1="log_or";op2="log_and";parens="right"
PASS :mixed_logical_requires_parentheses:op1="log_or";op2="log_or";parens="none"
PASS :mixed_logical_requires_parentheses:op1="log_or";op2="log_or";parens="left"
PASS :mixed_logical_requires_parentheses:op1="log_or";op2="log_or";parens="right"
PASS :other:expr="neg_member"
PASS :other:expr="comp_member"
PASS :other:expr="addr_member"
PASS :other:expr="log_and_member"
PASS :other:expr="log_or_member"
PASS :other:expr="and_addr"
PASS :other:expr="and_addr_paren"
PASS :other:expr="deref_member"
PASS :other:expr="deref_member_paren"
PASS :other:expr="deref_idx"
PASS :other:expr="deref_idx_paren"
PASS :other_lhs:expr="deref_invalid1"
PASS :other_lhs:expr="deref_invalid2"
PASS :other_lhs:expr="deref_valid1"
PASS :other_lhs:expr="deref_valid2"
PASS :other_lhs:expr="addr_valid1"
PASS :other_lhs:expr="addr_valid2"
PASS :other_lhs:expr="addr_valid3"

