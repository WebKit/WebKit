
PASS :scalar_zero_value:type="bool"
PASS :scalar_zero_value:type="i32"
PASS :scalar_zero_value:type="u32"
PASS :scalar_zero_value:type="f32"
PASS :scalar_zero_value:type="f16"
PASS :scalar_value:type="bool";value_type="bool"
PASS :scalar_value:type="bool";value_type="i32"
PASS :scalar_value:type="bool";value_type="u32"
PASS :scalar_value:type="bool";value_type="f32"
PASS :scalar_value:type="bool";value_type="f16"
PASS :scalar_value:type="bool";value_type="vec2u"
PASS :scalar_value:type="bool";value_type="S"
PASS :scalar_value:type="bool";value_type="array%3Cu32,%202%3E"
PASS :scalar_value:type="i32";value_type="bool"
PASS :scalar_value:type="i32";value_type="i32"
PASS :scalar_value:type="i32";value_type="u32"
PASS :scalar_value:type="i32";value_type="f32"
PASS :scalar_value:type="i32";value_type="f16"
PASS :scalar_value:type="i32";value_type="vec2u"
PASS :scalar_value:type="i32";value_type="S"
PASS :scalar_value:type="i32";value_type="array%3Cu32,%202%3E"
PASS :scalar_value:type="u32";value_type="bool"
PASS :scalar_value:type="u32";value_type="i32"
PASS :scalar_value:type="u32";value_type="u32"
PASS :scalar_value:type="u32";value_type="f32"
PASS :scalar_value:type="u32";value_type="f16"
PASS :scalar_value:type="u32";value_type="vec2u"
PASS :scalar_value:type="u32";value_type="S"
PASS :scalar_value:type="u32";value_type="array%3Cu32,%202%3E"
PASS :scalar_value:type="f32";value_type="bool"
PASS :scalar_value:type="f32";value_type="i32"
PASS :scalar_value:type="f32";value_type="u32"
PASS :scalar_value:type="f32";value_type="f32"
PASS :scalar_value:type="f32";value_type="f16"
PASS :scalar_value:type="f32";value_type="vec2u"
PASS :scalar_value:type="f32";value_type="S"
PASS :scalar_value:type="f32";value_type="array%3Cu32,%202%3E"
PASS :scalar_value:type="f16";value_type="bool"
PASS :scalar_value:type="f16";value_type="i32"
PASS :scalar_value:type="f16";value_type="u32"
PASS :scalar_value:type="f16";value_type="f32"
PASS :scalar_value:type="f16";value_type="f16"
PASS :scalar_value:type="f16";value_type="vec2u"
PASS :scalar_value:type="f16";value_type="S"
PASS :scalar_value:type="f16";value_type="array%3Cu32,%202%3E"
PASS :vector_zero_value:type="bool"
PASS :vector_zero_value:type="i32"
PASS :vector_zero_value:type="u32"
PASS :vector_zero_value:type="f32"
PASS :vector_zero_value:type="f16"
PASS :vector_zero_value:type="abstract-int"
PASS :vector_zero_value:type="abstract-float"
PASS :vector_splat:type="bool";ele_type="bool"
PASS :vector_splat:type="bool";ele_type="i32"
PASS :vector_splat:type="bool";ele_type="u32"
PASS :vector_splat:type="bool";ele_type="f32"
PASS :vector_splat:type="bool";ele_type="f16"
PASS :vector_splat:type="bool";ele_type="abstract-int"
PASS :vector_splat:type="bool";ele_type="abstract-float"
PASS :vector_splat:type="bool";ele_type="mat2x2f"
PASS :vector_splat:type="bool";ele_type="mat3x3h"
PASS :vector_splat:type="bool";ele_type="vec2i"
PASS :vector_splat:type="bool";ele_type="vec3f"
PASS :vector_splat:type="i32";ele_type="bool"
PASS :vector_splat:type="i32";ele_type="i32"
PASS :vector_splat:type="i32";ele_type="u32"
PASS :vector_splat:type="i32";ele_type="f32"
PASS :vector_splat:type="i32";ele_type="f16"
PASS :vector_splat:type="i32";ele_type="abstract-int"
PASS :vector_splat:type="i32";ele_type="abstract-float"
PASS :vector_splat:type="i32";ele_type="mat2x2f"
PASS :vector_splat:type="i32";ele_type="mat3x3h"
PASS :vector_splat:type="i32";ele_type="vec2i"
PASS :vector_splat:type="i32";ele_type="vec3f"
PASS :vector_splat:type="u32";ele_type="bool"
PASS :vector_splat:type="u32";ele_type="i32"
PASS :vector_splat:type="u32";ele_type="u32"
PASS :vector_splat:type="u32";ele_type="f32"
PASS :vector_splat:type="u32";ele_type="f16"
PASS :vector_splat:type="u32";ele_type="abstract-int"
PASS :vector_splat:type="u32";ele_type="abstract-float"
PASS :vector_splat:type="u32";ele_type="mat2x2f"
PASS :vector_splat:type="u32";ele_type="mat3x3h"
PASS :vector_splat:type="u32";ele_type="vec2i"
PASS :vector_splat:type="u32";ele_type="vec3f"
PASS :vector_splat:type="f32";ele_type="bool"
PASS :vector_splat:type="f32";ele_type="i32"
PASS :vector_splat:type="f32";ele_type="u32"
PASS :vector_splat:type="f32";ele_type="f32"
PASS :vector_splat:type="f32";ele_type="f16"
PASS :vector_splat:type="f32";ele_type="abstract-int"
PASS :vector_splat:type="f32";ele_type="abstract-float"
PASS :vector_splat:type="f32";ele_type="mat2x2f"
PASS :vector_splat:type="f32";ele_type="mat3x3h"
PASS :vector_splat:type="f32";ele_type="vec2i"
PASS :vector_splat:type="f32";ele_type="vec3f"
PASS :vector_splat:type="f16";ele_type="bool"
PASS :vector_splat:type="f16";ele_type="i32"
PASS :vector_splat:type="f16";ele_type="u32"
PASS :vector_splat:type="f16";ele_type="f32"
PASS :vector_splat:type="f16";ele_type="f16"
PASS :vector_splat:type="f16";ele_type="abstract-int"
PASS :vector_splat:type="f16";ele_type="abstract-float"
PASS :vector_splat:type="f16";ele_type="mat2x2f"
PASS :vector_splat:type="f16";ele_type="mat3x3h"
PASS :vector_splat:type="f16";ele_type="vec2i"
PASS :vector_splat:type="f16";ele_type="vec3f"
PASS :vector_splat:type="abstract-int";ele_type="bool"
PASS :vector_splat:type="abstract-int";ele_type="i32"
PASS :vector_splat:type="abstract-int";ele_type="u32"
PASS :vector_splat:type="abstract-int";ele_type="f32"
PASS :vector_splat:type="abstract-int";ele_type="f16"
PASS :vector_splat:type="abstract-int";ele_type="abstract-int"
PASS :vector_splat:type="abstract-int";ele_type="abstract-float"
PASS :vector_splat:type="abstract-int";ele_type="mat2x2f"
PASS :vector_splat:type="abstract-int";ele_type="mat3x3h"
PASS :vector_splat:type="abstract-int";ele_type="vec2i"
PASS :vector_splat:type="abstract-int";ele_type="vec3f"
PASS :vector_splat:type="abstract-float";ele_type="bool"
PASS :vector_splat:type="abstract-float";ele_type="i32"
PASS :vector_splat:type="abstract-float";ele_type="u32"
PASS :vector_splat:type="abstract-float";ele_type="f32"
PASS :vector_splat:type="abstract-float";ele_type="f16"
PASS :vector_splat:type="abstract-float";ele_type="abstract-int"
PASS :vector_splat:type="abstract-float";ele_type="abstract-float"
PASS :vector_splat:type="abstract-float";ele_type="mat2x2f"
PASS :vector_splat:type="abstract-float";ele_type="mat3x3h"
PASS :vector_splat:type="abstract-float";ele_type="vec2i"
PASS :vector_splat:type="abstract-float";ele_type="vec3f"
PASS :vector_copy:decl_type="bool";value_type="bool"
PASS :vector_copy:decl_type="bool";value_type="i32"
PASS :vector_copy:decl_type="bool";value_type="u32"
PASS :vector_copy:decl_type="bool";value_type="f32"
PASS :vector_copy:decl_type="bool";value_type="f16"
PASS :vector_copy:decl_type="bool";value_type="abstract-int"
PASS :vector_copy:decl_type="bool";value_type="abstract-float"
PASS :vector_copy:decl_type="i32";value_type="bool"
PASS :vector_copy:decl_type="i32";value_type="i32"
PASS :vector_copy:decl_type="i32";value_type="u32"
PASS :vector_copy:decl_type="i32";value_type="f32"
PASS :vector_copy:decl_type="i32";value_type="f16"
PASS :vector_copy:decl_type="i32";value_type="abstract-int"
PASS :vector_copy:decl_type="i32";value_type="abstract-float"
PASS :vector_copy:decl_type="u32";value_type="bool"
PASS :vector_copy:decl_type="u32";value_type="i32"
PASS :vector_copy:decl_type="u32";value_type="u32"
PASS :vector_copy:decl_type="u32";value_type="f32"
PASS :vector_copy:decl_type="u32";value_type="f16"
PASS :vector_copy:decl_type="u32";value_type="abstract-int"
PASS :vector_copy:decl_type="u32";value_type="abstract-float"
PASS :vector_copy:decl_type="f32";value_type="bool"
PASS :vector_copy:decl_type="f32";value_type="i32"
PASS :vector_copy:decl_type="f32";value_type="u32"
PASS :vector_copy:decl_type="f32";value_type="f32"
PASS :vector_copy:decl_type="f32";value_type="f16"
PASS :vector_copy:decl_type="f32";value_type="abstract-int"
PASS :vector_copy:decl_type="f32";value_type="abstract-float"
PASS :vector_copy:decl_type="f16";value_type="bool"
PASS :vector_copy:decl_type="f16";value_type="i32"
PASS :vector_copy:decl_type="f16";value_type="u32"
PASS :vector_copy:decl_type="f16";value_type="f32"
PASS :vector_copy:decl_type="f16";value_type="f16"
PASS :vector_copy:decl_type="f16";value_type="abstract-int"
PASS :vector_copy:decl_type="f16";value_type="abstract-float"
PASS :vector_copy:decl_type="abstract-int";value_type="bool"
PASS :vector_copy:decl_type="abstract-int";value_type="i32"
PASS :vector_copy:decl_type="abstract-int";value_type="u32"
PASS :vector_copy:decl_type="abstract-int";value_type="f32"
PASS :vector_copy:decl_type="abstract-int";value_type="f16"
PASS :vector_copy:decl_type="abstract-int";value_type="abstract-int"
PASS :vector_copy:decl_type="abstract-int";value_type="abstract-float"
PASS :vector_copy:decl_type="abstract-float";value_type="bool"
PASS :vector_copy:decl_type="abstract-float";value_type="i32"
PASS :vector_copy:decl_type="abstract-float";value_type="u32"
PASS :vector_copy:decl_type="abstract-float";value_type="f32"
PASS :vector_copy:decl_type="abstract-float";value_type="f16"
PASS :vector_copy:decl_type="abstract-float";value_type="abstract-int"
PASS :vector_copy:decl_type="abstract-float";value_type="abstract-float"
PASS :vector_elementwise:type="bool";ele_type="bool"
PASS :vector_elementwise:type="bool";ele_type="i32"
PASS :vector_elementwise:type="bool";ele_type="u32"
PASS :vector_elementwise:type="bool";ele_type="f32"
PASS :vector_elementwise:type="bool";ele_type="f16"
PASS :vector_elementwise:type="bool";ele_type="abstract-int"
PASS :vector_elementwise:type="bool";ele_type="abstract-float"
PASS :vector_elementwise:type="bool";ele_type="mat2x2f"
PASS :vector_elementwise:type="bool";ele_type="mat3x3h"
PASS :vector_elementwise:type="bool";ele_type="vec2i"
PASS :vector_elementwise:type="bool";ele_type="vec3f"
PASS :vector_elementwise:type="i32";ele_type="bool"
PASS :vector_elementwise:type="i32";ele_type="i32"
PASS :vector_elementwise:type="i32";ele_type="u32"
PASS :vector_elementwise:type="i32";ele_type="f32"
PASS :vector_elementwise:type="i32";ele_type="f16"
PASS :vector_elementwise:type="i32";ele_type="abstract-int"
PASS :vector_elementwise:type="i32";ele_type="abstract-float"
PASS :vector_elementwise:type="i32";ele_type="mat2x2f"
PASS :vector_elementwise:type="i32";ele_type="mat3x3h"
PASS :vector_elementwise:type="i32";ele_type="vec2i"
PASS :vector_elementwise:type="i32";ele_type="vec3f"
PASS :vector_elementwise:type="u32";ele_type="bool"
PASS :vector_elementwise:type="u32";ele_type="i32"
PASS :vector_elementwise:type="u32";ele_type="u32"
PASS :vector_elementwise:type="u32";ele_type="f32"
PASS :vector_elementwise:type="u32";ele_type="f16"
PASS :vector_elementwise:type="u32";ele_type="abstract-int"
PASS :vector_elementwise:type="u32";ele_type="abstract-float"
PASS :vector_elementwise:type="u32";ele_type="mat2x2f"
PASS :vector_elementwise:type="u32";ele_type="mat3x3h"
PASS :vector_elementwise:type="u32";ele_type="vec2i"
PASS :vector_elementwise:type="u32";ele_type="vec3f"
PASS :vector_elementwise:type="f32";ele_type="bool"
PASS :vector_elementwise:type="f32";ele_type="i32"
PASS :vector_elementwise:type="f32";ele_type="u32"
PASS :vector_elementwise:type="f32";ele_type="f32"
PASS :vector_elementwise:type="f32";ele_type="f16"
PASS :vector_elementwise:type="f32";ele_type="abstract-int"
PASS :vector_elementwise:type="f32";ele_type="abstract-float"
PASS :vector_elementwise:type="f32";ele_type="mat2x2f"
PASS :vector_elementwise:type="f32";ele_type="mat3x3h"
PASS :vector_elementwise:type="f32";ele_type="vec2i"
PASS :vector_elementwise:type="f32";ele_type="vec3f"
PASS :vector_elementwise:type="f16";ele_type="bool"
PASS :vector_elementwise:type="f16";ele_type="i32"
PASS :vector_elementwise:type="f16";ele_type="u32"
PASS :vector_elementwise:type="f16";ele_type="f32"
PASS :vector_elementwise:type="f16";ele_type="f16"
PASS :vector_elementwise:type="f16";ele_type="abstract-int"
PASS :vector_elementwise:type="f16";ele_type="abstract-float"
PASS :vector_elementwise:type="f16";ele_type="mat2x2f"
PASS :vector_elementwise:type="f16";ele_type="mat3x3h"
PASS :vector_elementwise:type="f16";ele_type="vec2i"
PASS :vector_elementwise:type="f16";ele_type="vec3f"
PASS :vector_elementwise:type="abstract-int";ele_type="bool"
PASS :vector_elementwise:type="abstract-int";ele_type="i32"
PASS :vector_elementwise:type="abstract-int";ele_type="u32"
PASS :vector_elementwise:type="abstract-int";ele_type="f32"
PASS :vector_elementwise:type="abstract-int";ele_type="f16"
PASS :vector_elementwise:type="abstract-int";ele_type="abstract-int"
PASS :vector_elementwise:type="abstract-int";ele_type="abstract-float"
PASS :vector_elementwise:type="abstract-int";ele_type="mat2x2f"
PASS :vector_elementwise:type="abstract-int";ele_type="mat3x3h"
PASS :vector_elementwise:type="abstract-int";ele_type="vec2i"
PASS :vector_elementwise:type="abstract-int";ele_type="vec3f"
PASS :vector_elementwise:type="abstract-float";ele_type="bool"
PASS :vector_elementwise:type="abstract-float";ele_type="i32"
PASS :vector_elementwise:type="abstract-float";ele_type="u32"
PASS :vector_elementwise:type="abstract-float";ele_type="f32"
PASS :vector_elementwise:type="abstract-float";ele_type="f16"
PASS :vector_elementwise:type="abstract-float";ele_type="abstract-int"
PASS :vector_elementwise:type="abstract-float";ele_type="abstract-float"
PASS :vector_elementwise:type="abstract-float";ele_type="mat2x2f"
PASS :vector_elementwise:type="abstract-float";ele_type="mat3x3h"
PASS :vector_elementwise:type="abstract-float";ele_type="vec2i"
PASS :vector_elementwise:type="abstract-float";ele_type="vec3f"
PASS :vector_mixed:type="bool";ele_type="bool"
PASS :vector_mixed:type="bool";ele_type="i32"
PASS :vector_mixed:type="bool";ele_type="u32"
PASS :vector_mixed:type="bool";ele_type="f32"
PASS :vector_mixed:type="bool";ele_type="f16"
PASS :vector_mixed:type="bool";ele_type="abstract-int"
PASS :vector_mixed:type="bool";ele_type="abstract-float"
PASS :vector_mixed:type="i32";ele_type="bool"
PASS :vector_mixed:type="i32";ele_type="i32"
PASS :vector_mixed:type="i32";ele_type="u32"
PASS :vector_mixed:type="i32";ele_type="f32"
PASS :vector_mixed:type="i32";ele_type="f16"
PASS :vector_mixed:type="i32";ele_type="abstract-int"
PASS :vector_mixed:type="i32";ele_type="abstract-float"
PASS :vector_mixed:type="u32";ele_type="bool"
PASS :vector_mixed:type="u32";ele_type="i32"
PASS :vector_mixed:type="u32";ele_type="u32"
PASS :vector_mixed:type="u32";ele_type="f32"
PASS :vector_mixed:type="u32";ele_type="f16"
PASS :vector_mixed:type="u32";ele_type="abstract-int"
PASS :vector_mixed:type="u32";ele_type="abstract-float"
PASS :vector_mixed:type="f32";ele_type="bool"
PASS :vector_mixed:type="f32";ele_type="i32"
PASS :vector_mixed:type="f32";ele_type="u32"
PASS :vector_mixed:type="f32";ele_type="f32"
PASS :vector_mixed:type="f32";ele_type="f16"
PASS :vector_mixed:type="f32";ele_type="abstract-int"
PASS :vector_mixed:type="f32";ele_type="abstract-float"
PASS :vector_mixed:type="f16";ele_type="bool"
PASS :vector_mixed:type="f16";ele_type="i32"
PASS :vector_mixed:type="f16";ele_type="u32"
PASS :vector_mixed:type="f16";ele_type="f32"
PASS :vector_mixed:type="f16";ele_type="f16"
PASS :vector_mixed:type="f16";ele_type="abstract-int"
PASS :vector_mixed:type="f16";ele_type="abstract-float"
PASS :vector_mixed:type="abstract-int";ele_type="bool"
PASS :vector_mixed:type="abstract-int";ele_type="i32"
PASS :vector_mixed:type="abstract-int";ele_type="u32"
PASS :vector_mixed:type="abstract-int";ele_type="f32"
PASS :vector_mixed:type="abstract-int";ele_type="f16"
PASS :vector_mixed:type="abstract-int";ele_type="abstract-int"
PASS :vector_mixed:type="abstract-int";ele_type="abstract-float"
PASS :vector_mixed:type="abstract-float";ele_type="bool"
PASS :vector_mixed:type="abstract-float";ele_type="i32"
PASS :vector_mixed:type="abstract-float";ele_type="u32"
PASS :vector_mixed:type="abstract-float";ele_type="f32"
PASS :vector_mixed:type="abstract-float";ele_type="f16"
PASS :vector_mixed:type="abstract-float";ele_type="abstract-int"
PASS :vector_mixed:type="abstract-float";ele_type="abstract-float"
PASS :matrix_zero_value:type="f32"
PASS :matrix_zero_value:type="f16"
PASS :matrix_copy:type1="f16";type2="f16"
PASS :matrix_copy:type1="f16";type2="f32"
PASS :matrix_copy:type1="f16";type2="abstract-float"
PASS :matrix_copy:type1="f32";type2="f16"
PASS :matrix_copy:type1="f32";type2="f32"
PASS :matrix_copy:type1="f32";type2="abstract-float"
PASS :matrix_copy:type1="abstract-float";type2="f16"
PASS :matrix_copy:type1="abstract-float";type2="f32"
PASS :matrix_copy:type1="abstract-float";type2="abstract-float"
PASS :matrix_column:type1="f16";type2="f16"
PASS :matrix_column:type1="f16";type2="f32"
PASS :matrix_column:type1="f16";type2="abstract-float"
PASS :matrix_column:type1="f16";type2="i32"
PASS :matrix_column:type1="f16";type2="u32"
PASS :matrix_column:type1="f16";type2="bool"
PASS :matrix_column:type1="f32";type2="f16"
PASS :matrix_column:type1="f32";type2="f32"
PASS :matrix_column:type1="f32";type2="abstract-float"
PASS :matrix_column:type1="f32";type2="i32"
PASS :matrix_column:type1="f32";type2="u32"
PASS :matrix_column:type1="f32";type2="bool"
PASS :matrix_column:type1="abstract-float";type2="f16"
PASS :matrix_column:type1="abstract-float";type2="f32"
PASS :matrix_column:type1="abstract-float";type2="abstract-float"
PASS :matrix_column:type1="abstract-float";type2="i32"
PASS :matrix_column:type1="abstract-float";type2="u32"
PASS :matrix_column:type1="abstract-float";type2="bool"
PASS :matrix_elementwise:type1="f16";type2="f16"
PASS :matrix_elementwise:type1="f16";type2="f32"
PASS :matrix_elementwise:type1="f16";type2="abstract-float"
PASS :matrix_elementwise:type1="f16";type2="i32"
PASS :matrix_elementwise:type1="f16";type2="u32"
PASS :matrix_elementwise:type1="f16";type2="bool"
PASS :matrix_elementwise:type1="f32";type2="f16"
PASS :matrix_elementwise:type1="f32";type2="f32"
PASS :matrix_elementwise:type1="f32";type2="abstract-float"
PASS :matrix_elementwise:type1="f32";type2="i32"
PASS :matrix_elementwise:type1="f32";type2="u32"
PASS :matrix_elementwise:type1="f32";type2="bool"
PASS :matrix_elementwise:type1="abstract-float";type2="f16"
PASS :matrix_elementwise:type1="abstract-float";type2="f32"
PASS :matrix_elementwise:type1="abstract-float";type2="abstract-float"
PASS :matrix_elementwise:type1="abstract-float";type2="i32"
PASS :matrix_elementwise:type1="abstract-float";type2="u32"
PASS :matrix_elementwise:type1="abstract-float";type2="bool"
PASS :array_zero_value:case="i32"
PASS :array_zero_value:case="f32"
PASS :array_zero_value:case="u32"
PASS :array_zero_value:case="valid_array"
PASS :array_zero_value:case="invalid_rta"
PASS :array_zero_value:case="invalid_override_array"
PASS :array_zero_value:case="valid_struct"
PASS :array_zero_value:case="invalid_struct"
PASS :array_zero_value:case="invalid_atomic"
PASS :array_value:case="i32"
PASS :array_value:case="f32"
PASS :array_value:case="u32"
PASS :array_value:case="valid_array"
PASS :array_value:case="invalid_rta"
PASS :array_value:case="invalid_override_array"
PASS :array_value:case="valid_struct"
PASS :array_value:case="invalid_struct"
PASS :array_value:case="invalid_atomic"
PASS :struct_zero_value:case="i32"
PASS :struct_zero_value:case="f32x2"
PASS :struct_zero_value:case="vec3u"
PASS :struct_zero_value:case="valid_array"
PASS :struct_zero_value:case="runtime_array"
PASS :struct_zero_value:case="atomic"
PASS :struct_zero_value:case="struct"
PASS :struct_zero_value:case="many_members"
PASS :struct_value:case="i32"
PASS :struct_value:case="f32x2"
PASS :struct_value:case="vec3u"
PASS :struct_value:case="valid_array"
PASS :struct_value:case="runtime_array"
PASS :struct_value:case="atomic"
PASS :struct_value:case="struct"
PASS :struct_value:case="many_members"
PASS :must_use:ctor="u32_0";use=true
PASS :must_use:ctor="u32_0";use=false
PASS :must_use:ctor="i32_0";use=true
PASS :must_use:ctor="i32_0";use=false
PASS :must_use:ctor="bool_0";use=true
PASS :must_use:ctor="bool_0";use=false
PASS :must_use:ctor="f32_0";use=true
PASS :must_use:ctor="f32_0";use=false
PASS :must_use:ctor="f16_0";use=true
PASS :must_use:ctor="f16_0";use=false
PASS :must_use:ctor="vec2_0";use=true
PASS :must_use:ctor="vec2_0";use=false
PASS :must_use:ctor="vec3_0";use=true
PASS :must_use:ctor="vec3_0";use=false
PASS :must_use:ctor="vec4_0";use=true
PASS :must_use:ctor="vec4_0";use=false
PASS :must_use:ctor="mat2x2_0";use=true
PASS :must_use:ctor="mat2x2_0";use=false
PASS :must_use:ctor="mat2x3_0";use=true
PASS :must_use:ctor="mat2x3_0";use=false
PASS :must_use:ctor="mat2x4_0";use=true
PASS :must_use:ctor="mat2x4_0";use=false
PASS :must_use:ctor="mat3x2_0";use=true
PASS :must_use:ctor="mat3x2_0";use=false
PASS :must_use:ctor="mat3x3_0";use=true
PASS :must_use:ctor="mat3x3_0";use=false
PASS :must_use:ctor="mat3x4_0";use=true
PASS :must_use:ctor="mat3x4_0";use=false
PASS :must_use:ctor="mat4x2_0_f16";use=true
PASS :must_use:ctor="mat4x2_0_f16";use=false
PASS :must_use:ctor="mat4x3_0_f16";use=true
PASS :must_use:ctor="mat4x3_0_f16";use=false
PASS :must_use:ctor="mat4x4_0_f16";use=true
PASS :must_use:ctor="mat4x4_0_f16";use=false
PASS :must_use:ctor="S_0";use=true
PASS :must_use:ctor="S_0";use=false
PASS :must_use:ctor="array_0";use=true
PASS :must_use:ctor="array_0";use=false
PASS :must_use:ctor="u32";use=true
PASS :must_use:ctor="u32";use=false
PASS :must_use:ctor="i32";use=true
PASS :must_use:ctor="i32";use=false
PASS :must_use:ctor="bool";use=true
PASS :must_use:ctor="bool";use=false
PASS :must_use:ctor="f32";use=true
PASS :must_use:ctor="f32";use=false
PASS :must_use:ctor="f16";use=true
PASS :must_use:ctor="f16";use=false
PASS :must_use:ctor="vec2f";use=true
PASS :must_use:ctor="vec2f";use=false
PASS :must_use:ctor="vec3_f16";use=true
PASS :must_use:ctor="vec3_f16";use=false
PASS :must_use:ctor="vec4";use=true
PASS :must_use:ctor="vec4";use=false
PASS :must_use:ctor="mat2x2";use=true
PASS :must_use:ctor="mat2x2";use=false
PASS :must_use:ctor="mat2x3";use=true
PASS :must_use:ctor="mat2x3";use=false
PASS :must_use:ctor="mat2x4";use=true
PASS :must_use:ctor="mat2x4";use=false
PASS :must_use:ctor="mat3x2_f16";use=true
PASS :must_use:ctor="mat3x2_f16";use=false
PASS :must_use:ctor="mat3x3_f16";use=true
PASS :must_use:ctor="mat3x3_f16";use=false
PASS :must_use:ctor="mat3x4_f16";use=true
PASS :must_use:ctor="mat3x4_f16";use=false
PASS :must_use:ctor="mat4x2";use=true
PASS :must_use:ctor="mat4x2";use=false
PASS :must_use:ctor="mat4x3";use=true
PASS :must_use:ctor="mat4x3";use=false
PASS :must_use:ctor="mat4x4";use=true
PASS :must_use:ctor="mat4x4";use=false
PASS :must_use:ctor="S";use=true
PASS :must_use:ctor="S";use=false
PASS :must_use:ctor="array_abs";use=true
PASS :must_use:ctor="array_abs";use=false
PASS :must_use:ctor="array";use=true
PASS :must_use:ctor="array";use=false

