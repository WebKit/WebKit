
PASS :values:stage="constant";type="mat2x2%3Cf32%3E"
PASS :values:stage="constant";type="mat2x2%3Cf16%3E"
PASS :values:stage="constant";type="mat3x2%3Cf32%3E"
PASS :values:stage="constant";type="mat3x2%3Cf16%3E"
PASS :values:stage="constant";type="mat4x2%3Cf32%3E"
PASS :values:stage="constant";type="mat4x2%3Cf16%3E"
PASS :values:stage="constant";type="mat2x3%3Cf32%3E"
PASS :values:stage="constant";type="mat2x3%3Cf16%3E"
PASS :values:stage="constant";type="mat3x3%3Cf32%3E"
PASS :values:stage="constant";type="mat3x3%3Cf16%3E"
PASS :values:stage="constant";type="mat4x3%3Cf32%3E"
PASS :values:stage="constant";type="mat4x3%3Cf16%3E"
PASS :values:stage="constant";type="mat2x4%3Cf32%3E"
PASS :values:stage="constant";type="mat2x4%3Cf16%3E"
PASS :values:stage="constant";type="mat3x4%3Cf32%3E"
PASS :values:stage="constant";type="mat3x4%3Cf16%3E"
PASS :values:stage="constant";type="mat4x4%3Cf32%3E"
PASS :values:stage="constant";type="mat4x4%3Cf16%3E"
PASS :values:stage="override";type="mat2x2%3Cf32%3E"
PASS :values:stage="override";type="mat2x2%3Cf16%3E"
PASS :values:stage="override";type="mat3x2%3Cf32%3E"
PASS :values:stage="override";type="mat3x2%3Cf16%3E"
PASS :values:stage="override";type="mat4x2%3Cf32%3E"
PASS :values:stage="override";type="mat4x2%3Cf16%3E"
PASS :values:stage="override";type="mat2x3%3Cf32%3E"
PASS :values:stage="override";type="mat2x3%3Cf16%3E"
PASS :values:stage="override";type="mat3x3%3Cf32%3E"
PASS :values:stage="override";type="mat3x3%3Cf16%3E"
PASS :values:stage="override";type="mat4x3%3Cf32%3E"
PASS :values:stage="override";type="mat4x3%3Cf16%3E"
PASS :values:stage="override";type="mat2x4%3Cf32%3E"
PASS :values:stage="override";type="mat2x4%3Cf16%3E"
PASS :values:stage="override";type="mat3x4%3Cf32%3E"
PASS :values:stage="override";type="mat3x4%3Cf16%3E"
PASS :values:stage="override";type="mat4x4%3Cf32%3E"
PASS :values:stage="override";type="mat4x4%3Cf16%3E"
PASS :args:arg="good"
PASS :args:arg="bad_no_parens"
PASS :args:arg="bad_0args"
PASS :args:arg="bad_2arg"
PASS :args:arg="bad_0bool"
PASS :args:arg="bad_0array"
PASS :args:arg="bad_0struct"
PASS :args:arg="bad_0uint"
PASS :args:arg="bad_0int"
PASS :args:arg="bad_0vec2i"
PASS :args:arg="bad_0vec2u"
PASS :args:arg="bad_0vec3i"
PASS :args:arg="bad_0vec3u"
PASS :args:arg="bad_0vec4i"
PASS :args:arg="bad_0vec4u"
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=2;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=3;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=2;input_cols=4;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=2;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=3;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=3;input_cols=4;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=2;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=3;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="abstract-float";input_rows=4;input_cols=4;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=2;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=3;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=2;input_cols=4;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=2;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=3;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=3;input_cols=4;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=2;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=3;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f32";input_rows=4;input_cols=4;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=2;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=3;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=2;input_cols=4;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=2;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=3;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=3;input_cols=4;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=2;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=3;output_type="f16";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f32";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f32";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f32";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f32";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f32";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f32";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f32";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f32";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f32";output_rows=4;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f16";output_rows=2;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f16";output_rows=2;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f16";output_rows=2;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f16";output_rows=3;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f16";output_rows=3;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f16";output_rows=3;output_cols=4
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f16";output_rows=4;output_cols=2
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f16";output_rows=4;output_cols=3
PASS :return:input_type="f16";input_rows=4;input_cols=4;output_type="f16";output_rows=4;output_cols=4
PASS :must_use:use=true
PASS :must_use:use=false

