Test that CanvasManager tracks creation and destruction of WebGL2 canvases.


== Running test suite: Canvas.CreateContextWebGL2
-- Running test case: Canvas.CreateContextWebGL2.NoCanvases
PASS: CanvasManager should have no canvases.

-- Running test case: Canvas.CreateContextWebGL2.Attached
PASS: Canvas context should be WebGL2.
  0: getContext - [native code]
  1: createAttachedCanvas - inspector/canvas/resources/create-context-utilities.js:4:36
  2: Global Code - [program code]
  3: evaluateWithScopeExtension - [native code]
  4: (anonymous function) - [native code]
  5: _wrapCall - [native code]

PASS: Removed canvas has expected ID.

-- Running test case: Canvas.CreateContextWebGL2.Detached
PASS: Canvas context should be WebGL2.
  0: getContext - [native code]
  1: createDetachedCanvas - inspector/canvas/resources/create-context-utilities.js:11:62
  2: Global Code - [program code]
  3: evaluateWithScopeExtension - [native code]
  4: (anonymous function) - [native code]
  5: _wrapCall - [native code]

PASS: Removed canvas has expected ID.

-- Running test case: Canvas.CreateContextWebGL2.CSSCanvas
Create CSS canvas from -webkit-canvas(css-canvas).
PASS: Canvas context should be WebGL2.
  0: getCSSCanvasContext - [native code]
  1: createCSSCanvas - inspector/canvas/resources/create-context-utilities.js:18:47
  2: Global Code - [program code]
  3: evaluateWithScopeExtension - [native code]
  4: (anonymous function) - [native code]
  5: _wrapCall - [native code]

PASS: Canvas name should equal the identifier passed to -webkit-canvas.

