Testing audits involving DOM attributes.


== Running test suite: Audit.Errors
-- Running test case: Audit.Errors.MissingVariable
Testing value `y`...
PASS: Result should be "error".
  errors:
   - ReferenceError: Can't find variable: y

-- Running test case: Audit.Errors.UndefinedAsObject
Testing value `x.x.x`...
PASS: Result should be "error".
  errors:
   - TypeError: undefined is not an object (evaluating 'x.x.x')

-- Running test case: Audit.Errors.NotAFunction
Testing value `x()`...
PASS: Result should be "error".
  errors:
   - TypeError: x is not a function. (In 'x()', 'x' is an instance of Object)

-- Running test case: Audit.Errors.InvalidLevel
Testing value `{"level":"INVALID"}`...
PASS: Result should be "error".
  errors:
   - Return string must be one of ["pass","warn","fail","error","unsupported"]

-- Running test case: Audit.Errors.UserGenerated
Testing value `{"level":"pass","errors":["user generated error"]}`...
PASS: Result should be "error".
  errors:
   - All items in "errors" must be error objects

-- Running test case: Audit.Errors.Undefined
Testing value `{"level":"pass"}`...
PASS: Result should be "pass".

-- Running test case: Audit.Errors.Error.Null
Testing value `{"level":"pass","errors":null}`...
PASS: Result should be "error".
  errors:
   - "errors" must be an array

-- Running test case: Audit.Errors.Error.Number
Testing value `{"level":"pass","errors":42}`...
PASS: Result should be "error".
  errors:
   - "errors" must be an array

-- Running test case: Audit.Errors.Error.String
Testing value `{"level":"pass","errors":"foo"}`...
PASS: Result should be "error".
  errors:
   - "errors" must be an array

-- Running test case: Audit.Errors.Error.Object
Testing value `{"level":"pass","errors":{}}`...
PASS: Result should be "error".
  errors:
   - "errors" must be an array

