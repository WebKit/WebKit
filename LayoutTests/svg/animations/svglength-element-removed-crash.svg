<svg xmlns="http://www.w3.org/2000/svg">
This test passes if it doesn't crash when run under gmalloc.
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<rect x="10" y="10" width="100" height="100" fill="green"/>
<text x="50" y="50" id="log"/>
<script href="../../resources/js-test.js"/>
<script>
<![CDATA[
window.jsTestIsAsync = true;
function log(message) {
    var logDiv = document.getElementById('log');
    logDiv.appendChild(document.createTextNode(message));
}

var baseValReferences;
var originalLiveElements = 0;
window.addEventListener('load', function runTests() {
    if (!(window.testRunner && window.GCController && window.internals)) {
        log("This test only works when run with the testRunner, GCController, and internals available.");
        return;
    }

    // Collect garbage before recording starting live node count, in case there are live elements from previous tests.
    GCController.collect();
    originalLiveElements = window.internals.numberOfLiveNodes();

    baseValReferences = [];
    var rects = document.getElementsByTagName("rect");
    // Keep in mind that getElementsByTagName's result is a live NodeList.
    while (rects.length !== 0) {
        var rect = rects[0];
        baseValReferences.push(rect.x.baseVal);
        rect.parentNode.removeChild(rect);
    }
    rect = null;
    rects = null;
    GCController.collect();
    setTimeout(function() {
        GCController.collect();
        // The rest of this test should FAIL without requiring gmalloc if this test has regressed.
        var liveDelta = window.internals.numberOfLiveNodes() - originalLiveElements;

        // Make sure that the <rect> is deleted; if it's not, liveDelta will be 0.
        if (liveDelta < 0)
            log(" PASS");
        else
            log(" FAIL: " + liveDelta + " extra live node(s)");

        // This line will crash with gmalloc if this test has regressed.
        for (var i = 0; i < baseValReferences.length; ++i)
            log(" x = " + baseValReferences[i].value);
        finishJSTest();
    }, 0);
}, false);
]]>
</script>
</svg>
