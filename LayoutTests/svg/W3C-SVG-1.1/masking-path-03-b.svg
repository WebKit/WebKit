<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1 Basic//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11-basic.dtd">
<!--======================================================================-->
<!--=  Copyright 2000 World Wide Web Consortium, (Massachusetts          =-->
<!--=  Institute of Technology, Institut National de Recherche en        =-->
<!--=  Informatique et en Automatique, Keio University). All Rights      =-->
<!--=  Reserved. See http://www.w3.org/Consortium/Legal/.                =-->
<!--======================================================================-->
<!-- ===================================================================== -->
<!-- masking-vportClip-BE-09.svg                                           -->
<!-- renamed for 1.1 suite to masking-path-03-b.svg                        -->
<!-- Author : Jon Ferraiolo 05-Aug-2000                                    -->
<!-- 1.1 revision by Charles Ying                                          -->
<!--======================================================================-->
<svg version="1.1" baseProfile="basic" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="svg-root" width="100%" height="100%" viewBox="0 0 480 360">
	<SVGTestCase xmlns="http://www.w3.org/2000/02/svg/testsuite/description/">
		<OperatorScript version="$Revision: 1.3 $" testname="masking-path-03-b.svg">
			<Paragraph>
				Test 'overflow'/'clip' on outermost and inner 'svg' elements.
			</Paragraph>
			<Paragraph>
				There are two parts to the test. The first part tests viewport clipping
				on outermost 'svg' elements. The second part tests viewport clipping
				on inner 'svg' elements.
			</Paragraph>
			<Paragraph>
				The test case also tests the initial value of the 'overflow' property
				to ensure that it is set to 'hidden' for all 'svg' elements.
				Tester should zoom out and/or pan to check this.
			</Paragraph>
			<Paragraph>
				To test clipping to the outermost 'svg' element,
				a rectangle with a light blue interior, a light red border and a black
				string that says "Clip to outer 'svg'" is painted four times such that
				it will overflow each of the top, left, right and bottom 
				sides of the bounds of the outermost 'svg' element, respectively.
				The UA should clip the rectangle and string to the bounds of the
				outermost 'svg' element (the 480x360 rectangular viewport) and 
				continue to clip to this viewport if the image is zoommed in or out, 
				or panned.
			</Paragraph>
			<Paragraph>
				To test clipping to inner 'svg' elements, a rectangle with a light red
				interior, a light blue border and a black string that says "Clip to
				inner 'svg'" is painted four times such that it will overflow each of
				the top, left, right and bottom sides of the bounds of an inner 'svg'
				element, respectively.  The UA should clip the rectangle and string to
				the bounds of the inner 'svg' element, which are depicted by a
				rectangle with a thick, dark-green perimeter and no fill.
			</Paragraph>
			<Paragraph>
				Note that minor text layout differences, as are permissible under CSS2
				rules, can lead to slightly different visual results regarding where
				the text strings get clipped.
			</Paragraph>
		</OperatorScript>
	</SVGTestCase>
	<title id="test-title">masking-path-03-b</title>
	<desc id="test-desc">Test 'overflow'/'clip' on outermost and inner 'svg' elements.</desc>
	<!--======================================================================-->
	<!--Content of Test Case follows...                  =====================-->
	<!--======================================================================-->
	<g id="test-body-content">
		<!--text font-family="Arial" font-size="18" text-anchor="middle" x="240" y="70">Test 'overflow'/'clip' on outermost and inner 'svg' elements</text-->
		<text font-family="Arial" font-size="18" x="10" y="70">Test 'overflow'/'clip' on outermost and inner 'svg' elements</text>
		<!-- Test initial value for 'overflow' property (i.e., hidden)
       on outermost 'svg' -->
		<g font-family="Arial" font-size="48" stroke-width="2">
			<g transform="translate(115,-20)">
				<rect width="250" height="60" fill="#ccccff" stroke="#ff8888"/>
				<text x="15" y="45">Outer Clip</text>
			</g>
			<g transform="translate(-175,150)">
				<rect width="250" height="60" fill="#ccccff" stroke="#ff8888"/>
				<text x="15" y="45">Outer Clip</text>
			</g>
			<g transform="translate(405,150)">
				<rect width="250" height="60" fill="#ccccff" stroke="#ff8888"/>
				<text x="15" y="45">Outer Clip</text>
			</g>
			<g transform="translate(115,330)">
				<rect width="250" height="60" fill="#ccccff" stroke="#ff8888"/>
				<text x="15" y="45">Outer Clip</text>
			</g>
		</g>
		<!-- Test initial value for 'overflow' property (i.e., hidden)
       on inner 'svg' -->
		<rect x="115" y="100" width="250" height="160" fill="none" stroke="#006600" stroke-width="5"/>
		<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="115" y="100" width="250" height="160">
			<g font-family="Arial" font-size="32" stroke-width="2">
				<g transform="translate(50,-15)">
					<rect width="150" height="35" fill="#ffaaaa" stroke="#6666ff"/>
					<text x="6" y="26">Inner Clip</text>
				</g>
				<g transform="translate(-50,62.5)">
					<rect width="150" height="35" fill="#ffaaaa" stroke="#6666ff"/>
					<text x="6" y="26">Inner Clip</text>
				</g>
				<g transform="translate(150,62.5)">
					<rect width="150" height="35" fill="#ffaaaa" stroke="#6666ff"/>
					<text x="6" y="26">Inner Clip</text>
				</g>
				<g transform="translate(50,140)">
					<rect width="150" height="35" fill="#ffaaaa" stroke="#6666ff"/>
					<text x="6" y="26">Inner Clip</text>
				</g>
			</g>
		</svg>
	</g>
	<text id="revision" x="10" y="340" font-size="40" stroke="none" fill="black">$Revision: 1.3 $</text>
	<rect id="test-frame" x="1" y="1" width="478" height="358" fill="none" stroke="#000000"/>
</svg>
