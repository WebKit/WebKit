
FAIL takeUntil subscribes to source Observable and mirrors it uninterrupted promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(new Observable(() => {}))', 'source.takeUntil' is undefined)"
FAIL takeUntil subscribes to notifier promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(notifier)', 'source.takeUntil' is undefined)"
FAIL takeUntil: notifier next() unsubscribes from notifier promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(notifier)', 'source.takeUntil' is undefined)"
FAIL takeUntil: notifier error() unsubscribes from notifier promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(notifier)', 'source.takeUntil' is undefined)"
FAIL takeUntil: notifier throw Error unsubscribes from notifier promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(notifier)', 'source.takeUntil' is undefined)"
FAIL takeUntil: notifier next() unsubscribes from notifier & source observable promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(notifier)', 'source.takeUntil' is undefined)"
FAIL takeUntil()'s AbortSignal unsubscribes from notifier & source observable promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(notifier)', 'source.takeUntil' is undefined)"
FAIL takeUntil: source never subscribed to when notifier synchronously emits a value promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(notifier)', 'source.takeUntil' is undefined)"
FAIL takeUntil: source never subscribed to when notifier synchronously emits error promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(notifier)', 'source.takeUntil' is undefined)"
FAIL takeUntil: source is uninterrupted when notifier completes, even synchronously promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(notifier)', 'source.takeUntil' is undefined)"
FAIL takeUntil() mirrors the source Observable until its first next() value promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(notifier)', 'source.takeUntil' is undefined)"
FAIL takeUntil: notifier calls `Subscriber#error()` twice; second goes to global error handler promise_test: Unhandled rejection with value: object "TypeError: source.takeUntil is not a function. (In 'source.takeUntil(notifier)', 'source.takeUntil' is undefined)"

