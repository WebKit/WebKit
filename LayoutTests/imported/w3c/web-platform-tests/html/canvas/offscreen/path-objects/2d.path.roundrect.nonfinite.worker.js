// DO NOT EDIT! This test has been generated by /html/canvas/tools/gentest.py.
// OffscreenCanvas test in a worker:2d.path.roundrect.nonfinite
// Description:roundRect() with Infinity/NaN is ignored
// Note:

importScripts("/resources/testharness.js");
importScripts("/html/canvas/resources/canvas-tests.js");

var t = async_test("roundRect() with Infinity/NaN is ignored");
var t_pass = t.done.bind(t);
var t_fail = t.step_func(function(reason) {
    throw reason;
});
t.step(function() {

var offscreenCanvas = new OffscreenCanvas(100, 50);
var ctx = offscreenCanvas.getContext('2d');

ctx.fillStyle = '#f00';
ctx.fillRect(0, 0, 100, 50)
ctx.moveTo(0, 0);
ctx.lineTo(100, 0);
ctx.roundRect(Infinity, 50, 1, 1, [0]);
ctx.roundRect(-Infinity, 50, 1, 1, [0]);
ctx.roundRect(NaN, 50, 1, 1, [0]);
ctx.roundRect(0, Infinity, 1, 1, [0]);
ctx.roundRect(0, -Infinity, 1, 1, [0]);
ctx.roundRect(0, NaN, 1, 1, [0]);
ctx.roundRect(0, 50, Infinity, 1, [0]);
ctx.roundRect(0, 50, -Infinity, 1, [0]);
ctx.roundRect(0, 50, NaN, 1, [0]);
ctx.roundRect(0, 50, 1, Infinity, [0]);
ctx.roundRect(0, 50, 1, -Infinity, [0]);
ctx.roundRect(0, 50, 1, NaN, [0]);
ctx.roundRect(0, 50, 1, 1, [Infinity]);
ctx.roundRect(0, 50, 1, 1, [-Infinity]);
ctx.roundRect(0, 50, 1, 1, [NaN]);
ctx.roundRect(0, 50, 1, 1, [Infinity,0]);
ctx.roundRect(0, 50, 1, 1, [-Infinity,0]);
ctx.roundRect(0, 50, 1, 1, [NaN,0]);
ctx.roundRect(0, 50, 1, 1, [0,Infinity]);
ctx.roundRect(0, 50, 1, 1, [0,-Infinity]);
ctx.roundRect(0, 50, 1, 1, [0,NaN]);
ctx.roundRect(0, 50, 1, 1, [Infinity,0,0]);
ctx.roundRect(0, 50, 1, 1, [-Infinity,0,0]);
ctx.roundRect(0, 50, 1, 1, [NaN,0,0]);
ctx.roundRect(0, 50, 1, 1, [0,Infinity,0]);
ctx.roundRect(0, 50, 1, 1, [0,-Infinity,0]);
ctx.roundRect(0, 50, 1, 1, [0,NaN,0]);
ctx.roundRect(0, 50, 1, 1, [0,0,Infinity]);
ctx.roundRect(0, 50, 1, 1, [0,0,-Infinity]);
ctx.roundRect(0, 50, 1, 1, [0,0,NaN]);
ctx.roundRect(0, 50, 1, 1, [Infinity,0,0,0]);
ctx.roundRect(0, 50, 1, 1, [-Infinity,0,0,0]);
ctx.roundRect(0, 50, 1, 1, [NaN,0,0,0]);
ctx.roundRect(0, 50, 1, 1, [0,Infinity,0,0]);
ctx.roundRect(0, 50, 1, 1, [0,-Infinity,0,0]);
ctx.roundRect(0, 50, 1, 1, [0,NaN,0,0]);
ctx.roundRect(0, 50, 1, 1, [0,0,Infinity,0]);
ctx.roundRect(0, 50, 1, 1, [0,0,-Infinity,0]);
ctx.roundRect(0, 50, 1, 1, [0,0,NaN,0]);
ctx.roundRect(0, 50, 1, 1, [0,0,0,Infinity]);
ctx.roundRect(0, 50, 1, 1, [0,0,0,-Infinity]);
ctx.roundRect(0, 50, 1, 1, [0,0,0,NaN]);
ctx.roundRect(Infinity, Infinity, 1, 1, [0]);
ctx.roundRect(Infinity, Infinity, Infinity, 1, [0]);
ctx.roundRect(Infinity, Infinity, Infinity, Infinity, [0]);
ctx.roundRect(Infinity, Infinity, Infinity, Infinity, [Infinity]);
ctx.roundRect(Infinity, Infinity, Infinity, 1, [Infinity]);
ctx.roundRect(Infinity, Infinity, 1, Infinity, [0]);
ctx.roundRect(Infinity, Infinity, 1, Infinity, [Infinity]);
ctx.roundRect(Infinity, Infinity, 1, 1, [Infinity]);
ctx.roundRect(Infinity, 50, Infinity, 1, [0]);
ctx.roundRect(Infinity, 50, Infinity, Infinity, [0]);
ctx.roundRect(Infinity, 50, Infinity, Infinity, [Infinity]);
ctx.roundRect(Infinity, 50, Infinity, 1, [Infinity]);
ctx.roundRect(Infinity, 50, 1, Infinity, [0]);
ctx.roundRect(Infinity, 50, 1, Infinity, [Infinity]);
ctx.roundRect(Infinity, 50, 1, 1, [Infinity]);
ctx.roundRect(0, Infinity, Infinity, 1, [0]);
ctx.roundRect(0, Infinity, Infinity, Infinity, [0]);
ctx.roundRect(0, Infinity, Infinity, Infinity, [Infinity]);
ctx.roundRect(0, Infinity, Infinity, 1, [Infinity]);
ctx.roundRect(0, Infinity, 1, Infinity, [0]);
ctx.roundRect(0, Infinity, 1, Infinity, [Infinity]);
ctx.roundRect(0, Infinity, 1, 1, [Infinity]);
ctx.roundRect(0, 50, Infinity, Infinity, [0]);
ctx.roundRect(0, 50, Infinity, Infinity, [Infinity]);
ctx.roundRect(0, 50, Infinity, 1, [Infinity]);
ctx.roundRect(0, 50, 1, Infinity, [Infinity]);
ctx.lineTo(100, 50);
ctx.lineTo(0, 50);
ctx.fillStyle = '#0f0';
ctx.fill();
_assertPixel(offscreenCanvas, 50,25, 0,255,0,255, "50,25", "0,255,0,255");
_assertPixel(offscreenCanvas, 90,45, 0,255,0,255, "90,45", "0,255,0,255");
t.done();

});
done();
