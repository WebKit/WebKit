
PASS Basic sanity-checking (cross-origin)
PASS Basic sanity-checking (same-origin + document.domain)
PASS Basic sanity-checking (cross-site)
PASS Only certain properties are accessible cross-origin (cross-origin)
PASS Only certain properties are accessible cross-origin (same-origin + document.domain)
PASS Only certain properties are accessible cross-origin (cross-site)
PASS Only certain properties are usable as cross-origin this objects (cross-origin)
PASS Only certain properties are usable as cross-origin this objects (same-origin + document.domain)
PASS Only certain properties are usable as cross-origin this objects (cross-site)
PASS [[GetPrototypeOf]] should return null (cross-origin)
PASS [[GetPrototypeOf]] should return null (same-origin + document.domain)
PASS [[GetPrototypeOf]] should return null (cross-site)
PASS [[SetPrototypeOf]] should return false (cross-origin)
PASS proto setter |call| on cross-origin Window with null (function set __proto__() {
    [native code]
}, C)
PASS proto setter |call| on cross-origin Location with null (function set __proto__() {
    [native code]
}, C)
PASS proto setter |call| on cross-origin Window with null (function (p) { Object.setPrototypeOf(this, p); }, C)
PASS proto setter |call| on cross-origin Location with null (function (p) { Object.setPrototypeOf(this, p); }, C)
PASS [[SetPrototypeOf]] should return false (same-origin + document.domain)
PASS proto setter |call| on cross-origin Window with null (function set __proto__() {
    [native code]
}, E)
PASS proto setter |call| on cross-origin Location with null (function set __proto__() {
    [native code]
}, E)
PASS proto setter |call| on cross-origin Window with null (function (p) { Object.setPrototypeOf(this, p); }, E)
PASS proto setter |call| on cross-origin Location with null (function (p) { Object.setPrototypeOf(this, p); }, E)
PASS [[SetPrototypeOf]] should return false (cross-site)
PASS proto setter |call| on cross-origin Window with null (function set __proto__() {
    [native code]
}, G)
PASS proto setter |call| on cross-origin Location with null (function set __proto__() {
    [native code]
}, G)
PASS proto setter |call| on cross-origin Window with null (function (p) { Object.setPrototypeOf(this, p); }, G)
PASS proto setter |call| on cross-origin Location with null (function (p) { Object.setPrototypeOf(this, p); }, G)
PASS [[IsExtensible]] should return true for cross-origin objects (cross-origin)
PASS [[IsExtensible]] should return true for cross-origin objects (same-origin + document.domain)
PASS [[IsExtensible]] should return true for cross-origin objects (cross-site)
PASS [[PreventExtensions]] should return false cross-origin objects (cross-origin)
PASS [[PreventExtensions]] should return false cross-origin objects (same-origin + document.domain)
PASS [[PreventExtensions]] should return false cross-origin objects (cross-site)
PASS [[GetOwnProperty]] - Properties on cross-origin objects should be reported |own| (cross-origin)
PASS [[GetOwnProperty]] - Properties on cross-origin objects should be reported |own| (same-origin + document.domain)
PASS [[GetOwnProperty]] - Properties on cross-origin objects should be reported |own| (cross-site)
PASS [[GetOwnProperty]] - Property descriptors for cross-origin properties should be set up correctly (cross-origin)
PASS [[GetOwnProperty]] - Property descriptors for cross-origin properties should be set up correctly (same-origin + document.domain)
PASS [[GetOwnProperty]] - Property descriptors for cross-origin properties should be set up correctly (cross-site)
PASS [[GetOwnProperty]] - Subframe named 'then' should shadow the default 'then' value (cross-origin)
PASS [[GetOwnProperty]] - Subframe named 'then' should shadow the default 'then' value (same-origin + document.domain)
PASS [[GetOwnProperty]] - Subframe named 'then' should shadow the default 'then' value (cross-site)
PASS [[GetOwnProperty]] - Subframes should be visible cross-origin only if their names don't match the names of cross-origin-exposed IDL properties (cross-origin)
PASS [[GetOwnProperty]] - Subframes should be visible cross-origin only if their names don't match the names of cross-origin-exposed IDL properties (same-origin + document.domain)
PASS [[GetOwnProperty]] - Subframes should be visible cross-origin only if their names don't match the names of cross-origin-exposed IDL properties (cross-site)
PASS [[GetOwnProperty]] - Should be able to get a property descriptor for an indexed property only if it corresponds to a child window. (cross-origin)
PASS [[GetOwnProperty]] - Should be able to get a property descriptor for an indexed property only if it corresponds to a child window. (same-origin + document.domain)
PASS [[GetOwnProperty]] - Should be able to get a property descriptor for an indexed property only if it corresponds to a child window. (cross-site)
PASS [[Delete]] Should throw on cross-origin objects (cross-origin)
PASS [[Delete]] Should throw on cross-origin objects (same-origin + document.domain)
PASS [[Delete]] Should throw on cross-origin objects (cross-site)
PASS [[DefineOwnProperty]] Should throw for cross-origin objects (cross-origin)
PASS [[DefineOwnProperty]] Should throw for cross-origin objects (same-origin + document.domain)
PASS [[DefineOwnProperty]] Should throw for cross-origin objects (cross-site)
PASS Can only enumerate safelisted enumerable properties (cross-origin)
PASS Can only enumerate safelisted enumerable properties (same-origin + document.domain)
PASS Can only enumerate safelisted enumerable properties (cross-site)
PASS [[OwnPropertyKeys]] should return all properties from cross-origin objects (cross-origin)
PASS [[OwnPropertyKeys]] should return all properties from cross-origin objects (same-origin + document.domain)
PASS [[OwnPropertyKeys]] should return all properties from cross-origin objects (cross-site)
PASS [[OwnPropertyKeys]] should return the right symbol-named properties for cross-origin objects (cross-origin)
PASS [[OwnPropertyKeys]] should return the right symbol-named properties for cross-origin objects (same-origin + document.domain)
PASS [[OwnPropertyKeys]] should return the right symbol-named properties for cross-origin objects (cross-site)
PASS [[OwnPropertyKeys]] should place the symbols after the property names after the subframe indices (cross-origin)
PASS [[OwnPropertyKeys]] should place the symbols after the property names after the subframe indices (same-origin + document.domain)
PASS [[OwnPropertyKeys]] should place the symbols after the property names after the subframe indices (cross-site)
PASS [[OwnPropertyKeys]] should not reorder where 'then' appears if it's a named subframe, nor add another copy of 'then' (cross-origin)
PASS [[OwnPropertyKeys]] should not reorder where 'then' appears if it's a named subframe, nor add another copy of 'then' (same-origin + document.domain)
PASS [[OwnPropertyKeys]] should not reorder where 'then' appears if it's a named subframe, nor add another copy of 'then' (cross-site)
PASS A and B jointly observe the same identity for cross-origin Window and Location (cross-origin)
PASS A and B jointly observe the same identity for cross-origin Window and Location (same-origin + document.domain)
PASS A and B jointly observe the same identity for cross-origin Window and Location (cross-site)
PASS Cross-origin functions get local Function.prototype (cross-origin)
PASS Cross-origin functions get local Function.prototype (same-origin + document.domain)
PASS Cross-origin functions get local Function.prototype (cross-site)
PASS Cross-origin Window accessors get local Function.prototype (cross-origin)
PASS Cross-origin Window accessors get local Function.prototype (same-origin + document.domain)
PASS Cross-origin Window accessors get local Function.prototype (cross-site)
PASS Same-origin observers get different functions for cross-origin objects (cross-origin)
PASS Same-origin observers get different functions for cross-origin objects (same-origin + document.domain)
PASS Same-origin observers get different functions for cross-origin objects (cross-site)
PASS Same-origin observers get different accessors for cross-origin Window (cross-origin)
PASS Same-origin observers get different accessors for cross-origin Window (same-origin + document.domain)
PASS Same-origin observers get different accessors for cross-origin Window (cross-site)
PASS Same-origin observers get different accessors for cross-origin Location (cross-origin)
PASS Same-origin observers get different accessors for cross-origin Location (same-origin + document.domain)
PASS Same-origin observers get different accessors for cross-origin Location (cross-site)
PASS {}.toString.call() does the right thing on cross-origin objects (cross-origin)
PASS {}.toString.call() does the right thing on cross-origin objects (same-origin + document.domain)
PASS {}.toString.call() does the right thing on cross-origin objects (cross-site)
PASS Resolving a promise with a cross-origin window without a 'then' subframe should work (cross-origin)
PASS Resolving a promise with a cross-origin window without a 'then' subframe should work (same-origin + document.domain)
PASS Resolving a promise with a cross-origin window without a 'then' subframe should work (cross-site)
PASS Resolving a promise with a cross-origin window with a 'then' subframe should work (cross-origin)
PASS Resolving a promise with a cross-origin window with a 'then' subframe should work (same-origin + document.domain)
PASS Resolving a promise with a cross-origin window with a 'then' subframe should work (cross-site)
PASS Resolving a promise with a cross-origin location should work (cross-origin)
PASS Resolving a promise with a cross-origin location should work (same-origin + document.domain)
PASS Resolving a promise with a cross-origin location should work (cross-site)
PASS LegacyLenientThis behavior (cross-origin)
PASS LegacyLenientThis behavior (same-origin + document.domain)
PASS LegacyLenientThis behavior (cross-site)

