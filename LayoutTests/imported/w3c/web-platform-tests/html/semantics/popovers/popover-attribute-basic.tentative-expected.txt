CONSOLE MESSAGE: Error: assert_true: The nested popover should be hidden first expected true got false
Pop upPop upPop upPop upDifferent element typeDifferent element typeDifferent element typeDialog with popover attributeDialog with popover=manualInvalid popover value - defaults to popover=manualInvalid popover value - defaults to popover=manualInvalid popover value - defaults to popover=manual
Not a popover
Dialog without popover attribute

Harness Error (FAIL), message = Error: assert_true: The nested popover should be hidden first expected true got false

FAIL The element <div popover="" id="boolean">Pop up</div> should behave as a popover. Element has unexpected visibility state
FAIL The element <div popover="">Pop up</div> should behave as a popover. Element has unexpected visibility state
FAIL The element <div popover="auto">Pop up</div> should behave as a popover. Element has unexpected visibility state
FAIL The element <div popover="manual">Pop up</div> should behave as a popover. Element has unexpected visibility state
FAIL The element <article popover="">Different element type</article> should behave as a popover. Element has unexpected visibility state
FAIL The element <header popover="">Different element type</header> should behave as a popover. Element has unexpected visibility state
FAIL The element <nav popover="">Different element type</nav> should behave as a popover. Element has unexpected visibility state
FAIL The element <input type="text" popover="" value="Different element type"> should behave as a popover. Element has unexpected visibility state
FAIL The element <dialog popover="">Dialog with popover attribute</dialog> should behave as a popover. Element has unexpected visibility state
FAIL The element <dialog popover="manual">Dialog with popover=manual</dialog> should behave as a popover. Element has unexpected visibility state
FAIL The element <div popover="true">Invalid popover value - defaults to popover=manual</div> should behave as a popover. Element has unexpected visibility state
FAIL The element <div popover="popover">Invalid popover value - defaults to popover=manual</div> should behave as a popover. Element has unexpected visibility state
FAIL The element <div popover="invalid">Invalid popover value - defaults to popover=manual</div> should behave as a popover. Element has unexpected visibility state
PASS The element <div>Not a popover</div> should *not* behave as a popover.
PASS The element <dialog open="">Dialog without popover attribute</dialog> should *not* behave as a popover.
FAIL A <a popover> element should behave as a popover. Element has unexpected visibility state
PASS A <a> element should *not* behave as a popover.
FAIL A <abbr popover> element should behave as a popover. Element has unexpected visibility state
PASS A <abbr> element should *not* behave as a popover.
FAIL A <address popover> element should behave as a popover. Element has unexpected visibility state
PASS A <address> element should *not* behave as a popover.
FAIL A <area popover> element should behave as a popover. assert_equals: After showPopover(), a popover should be visible: Expected this element to be visible expected true but got false
FAIL A <area> element should *not* behave as a popover. assert_equals: A non-popover should start out visible: Expected this element to be visible expected true but got false
FAIL A <article popover> element should behave as a popover. Element has unexpected visibility state
PASS A <article> element should *not* behave as a popover.
FAIL A <aside popover> element should behave as a popover. Element has unexpected visibility state
PASS A <aside> element should *not* behave as a popover.
FAIL A <b popover> element should behave as a popover. Element has unexpected visibility state
PASS A <b> element should *not* behave as a popover.
FAIL A <bdi popover> element should behave as a popover. Element has unexpected visibility state
PASS A <bdi> element should *not* behave as a popover.
FAIL A <bdo popover> element should behave as a popover. Element has unexpected visibility state
PASS A <bdo> element should *not* behave as a popover.
FAIL A <blockquote popover> element should behave as a popover. Element has unexpected visibility state
PASS A <blockquote> element should *not* behave as a popover.
FAIL A <body popover> element should behave as a popover. Element has unexpected visibility state
PASS A <body> element should *not* behave as a popover.
FAIL A <button popover> element should behave as a popover. Element has unexpected visibility state
PASS A <button> element should *not* behave as a popover.
FAIL A <canvas popover> element should behave as a popover. Element has unexpected visibility state
PASS A <canvas> element should *not* behave as a popover.
FAIL A <caption popover> element should behave as a popover. Element has unexpected visibility state
PASS A <caption> element should *not* behave as a popover.
FAIL A <cite popover> element should behave as a popover. Element has unexpected visibility state
PASS A <cite> element should *not* behave as a popover.
FAIL A <code popover> element should behave as a popover. Element has unexpected visibility state
PASS A <code> element should *not* behave as a popover.
FAIL A <col popover> element should behave as a popover. Element has unexpected visibility state
PASS A <col> element should *not* behave as a popover.
FAIL A <colgroup popover> element should behave as a popover. Element has unexpected visibility state
PASS A <colgroup> element should *not* behave as a popover.
FAIL A <data popover> element should behave as a popover. Element has unexpected visibility state
PASS A <data> element should *not* behave as a popover.
FAIL A <dd popover> element should behave as a popover. Element has unexpected visibility state
PASS A <dd> element should *not* behave as a popover.
FAIL A <del popover> element should behave as a popover. Element has unexpected visibility state
PASS A <del> element should *not* behave as a popover.
FAIL A <details popover> element should behave as a popover. Element has unexpected visibility state
PASS A <details> element should *not* behave as a popover.
FAIL A <dfn popover> element should behave as a popover. Element has unexpected visibility state
PASS A <dfn> element should *not* behave as a popover.
FAIL A <div popover> element should behave as a popover. Element has unexpected visibility state
PASS A <div> element should *not* behave as a popover.
FAIL A <dl popover> element should behave as a popover. Element has unexpected visibility state
PASS A <dl> element should *not* behave as a popover.
FAIL A <dt popover> element should behave as a popover. Element has unexpected visibility state
PASS A <dt> element should *not* behave as a popover.
FAIL A <em popover> element should behave as a popover. Element has unexpected visibility state
PASS A <em> element should *not* behave as a popover.
FAIL A <fieldset popover> element should behave as a popover. Element has unexpected visibility state
PASS A <fieldset> element should *not* behave as a popover.
FAIL A <figcaption popover> element should behave as a popover. Element has unexpected visibility state
PASS A <figcaption> element should *not* behave as a popover.
FAIL A <figure popover> element should behave as a popover. Element has unexpected visibility state
PASS A <figure> element should *not* behave as a popover.
FAIL A <footer popover> element should behave as a popover. Element has unexpected visibility state
PASS A <footer> element should *not* behave as a popover.
FAIL A <form popover> element should behave as a popover. Element has unexpected visibility state
PASS A <form> element should *not* behave as a popover.
FAIL A <h1 popover> element should behave as a popover. Element has unexpected visibility state
PASS A <h1> element should *not* behave as a popover.
FAIL A <h2 popover> element should behave as a popover. Element has unexpected visibility state
PASS A <h2> element should *not* behave as a popover.
FAIL A <h3 popover> element should behave as a popover. Element has unexpected visibility state
PASS A <h3> element should *not* behave as a popover.
FAIL A <h4 popover> element should behave as a popover. Element has unexpected visibility state
PASS A <h4> element should *not* behave as a popover.
FAIL A <h5 popover> element should behave as a popover. Element has unexpected visibility state
PASS A <h5> element should *not* behave as a popover.
FAIL A <h6 popover> element should behave as a popover. Element has unexpected visibility state
PASS A <h6> element should *not* behave as a popover.
FAIL A <header popover> element should behave as a popover. Element has unexpected visibility state
PASS A <header> element should *not* behave as a popover.
FAIL A <hr popover> element should behave as a popover. Element has unexpected visibility state
PASS A <hr> element should *not* behave as a popover.
FAIL A <html popover> element should behave as a popover. Element has unexpected visibility state
PASS A <html> element should *not* behave as a popover.
FAIL A <i popover> element should behave as a popover. Element has unexpected visibility state
PASS A <i> element should *not* behave as a popover.
FAIL A <iframe popover> element should behave as a popover. Element has unexpected visibility state
PASS A <iframe> element should *not* behave as a popover.
FAIL A <img popover> element should behave as a popover. Element has unexpected visibility state
PASS A <img> element should *not* behave as a popover.
FAIL A <input popover> element should behave as a popover. Element has unexpected visibility state
PASS A <input> element should *not* behave as a popover.
FAIL A <ins popover> element should behave as a popover. Element has unexpected visibility state
PASS A <ins> element should *not* behave as a popover.
FAIL A <kbd popover> element should behave as a popover. Element has unexpected visibility state
PASS A <kbd> element should *not* behave as a popover.
FAIL A <label popover> element should behave as a popover. Element has unexpected visibility state
PASS A <label> element should *not* behave as a popover.
FAIL A <legend popover> element should behave as a popover. Element has unexpected visibility state
PASS A <legend> element should *not* behave as a popover.
FAIL A <li popover> element should behave as a popover. Element has unexpected visibility state
PASS A <li> element should *not* behave as a popover.
FAIL A <main popover> element should behave as a popover. Element has unexpected visibility state
PASS A <main> element should *not* behave as a popover.
FAIL A <map popover> element should behave as a popover. Element has unexpected visibility state
PASS A <map> element should *not* behave as a popover.
FAIL A <mark popover> element should behave as a popover. Element has unexpected visibility state
PASS A <mark> element should *not* behave as a popover.
FAIL A <menu popover> element should behave as a popover. Element has unexpected visibility state
PASS A <menu> element should *not* behave as a popover.
FAIL A <meter popover> element should behave as a popover. Element has unexpected visibility state
PASS A <meter> element should *not* behave as a popover.
FAIL A <nav popover> element should behave as a popover. Element has unexpected visibility state
PASS A <nav> element should *not* behave as a popover.
FAIL A <object popover> element should behave as a popover. Element has unexpected visibility state
PASS A <object> element should *not* behave as a popover.
FAIL A <ol popover> element should behave as a popover. Element has unexpected visibility state
PASS A <ol> element should *not* behave as a popover.
FAIL A <optgroup popover> element should behave as a popover. assert_equals: After showPopover(), a popover should be visible: Expected this element to be visible expected true but got false
FAIL A <optgroup> element should *not* behave as a popover. assert_equals: A non-popover should start out visible: Expected this element to be visible expected true but got false
FAIL A <option popover> element should behave as a popover. assert_equals: After showPopover(), a popover should be visible: Expected this element to be visible expected true but got false
FAIL A <option> element should *not* behave as a popover. assert_equals: A non-popover should start out visible: Expected this element to be visible expected true but got false
FAIL A <output popover> element should behave as a popover. Element has unexpected visibility state
PASS A <output> element should *not* behave as a popover.
FAIL A <p popover> element should behave as a popover. Element has unexpected visibility state
PASS A <p> element should *not* behave as a popover.
FAIL A <pre popover> element should behave as a popover. Element has unexpected visibility state
PASS A <pre> element should *not* behave as a popover.
FAIL A <progress popover> element should behave as a popover. Element has unexpected visibility state
PASS A <progress> element should *not* behave as a popover.
FAIL A <q popover> element should behave as a popover. Element has unexpected visibility state
PASS A <q> element should *not* behave as a popover.
FAIL A <rt popover> element should behave as a popover. Element has unexpected visibility state
PASS A <rt> element should *not* behave as a popover.
FAIL A <ruby popover> element should behave as a popover. Element has unexpected visibility state
PASS A <ruby> element should *not* behave as a popover.
FAIL A <s popover> element should behave as a popover. Element has unexpected visibility state
PASS A <s> element should *not* behave as a popover.
FAIL A <samp popover> element should behave as a popover. Element has unexpected visibility state
PASS A <samp> element should *not* behave as a popover.
FAIL A <section popover> element should behave as a popover. Element has unexpected visibility state
PASS A <section> element should *not* behave as a popover.
FAIL A <select popover> element should behave as a popover. Element has unexpected visibility state
PASS A <select> element should *not* behave as a popover.
FAIL A <small popover> element should behave as a popover. Element has unexpected visibility state
PASS A <small> element should *not* behave as a popover.
FAIL A <source popover> element should behave as a popover. Element has unexpected visibility state
PASS A <source> element should *not* behave as a popover.
FAIL A <span popover> element should behave as a popover. Element has unexpected visibility state
PASS A <span> element should *not* behave as a popover.
FAIL A <strong popover> element should behave as a popover. Element has unexpected visibility state
PASS A <strong> element should *not* behave as a popover.
FAIL A <sub popover> element should behave as a popover. Element has unexpected visibility state
PASS A <sub> element should *not* behave as a popover.
FAIL A <sup popover> element should behave as a popover. Element has unexpected visibility state
PASS A <sup> element should *not* behave as a popover.
FAIL A <summary popover> element should behave as a popover. Element has unexpected visibility state
PASS A <summary> element should *not* behave as a popover.
FAIL A <table popover> element should behave as a popover. Element has unexpected visibility state
PASS A <table> element should *not* behave as a popover.
FAIL A <tbody popover> element should behave as a popover. Element has unexpected visibility state
PASS A <tbody> element should *not* behave as a popover.
FAIL A <td popover> element should behave as a popover. Element has unexpected visibility state
PASS A <td> element should *not* behave as a popover.
FAIL A <textarea popover> element should behave as a popover. Element has unexpected visibility state
PASS A <textarea> element should *not* behave as a popover.
FAIL A <tfoot popover> element should behave as a popover. Element has unexpected visibility state
PASS A <tfoot> element should *not* behave as a popover.
FAIL A <th popover> element should behave as a popover. Element has unexpected visibility state
PASS A <th> element should *not* behave as a popover.
FAIL A <thead popover> element should behave as a popover. Element has unexpected visibility state
PASS A <thead> element should *not* behave as a popover.
FAIL A <time popover> element should behave as a popover. Element has unexpected visibility state
PASS A <time> element should *not* behave as a popover.
FAIL A <tr popover> element should behave as a popover. Element has unexpected visibility state
PASS A <tr> element should *not* behave as a popover.
FAIL A <track popover> element should behave as a popover. Element has unexpected visibility state
PASS A <track> element should *not* behave as a popover.
FAIL A <u popover> element should behave as a popover. Element has unexpected visibility state
PASS A <u> element should *not* behave as a popover.
FAIL A <ul popover> element should behave as a popover. Element has unexpected visibility state
PASS A <ul> element should *not* behave as a popover.
FAIL A <var popover> element should behave as a popover. Element has unexpected visibility state
PASS A <var> element should *not* behave as a popover.
FAIL A <video popover> element should behave as a popover. Element has unexpected visibility state
PASS A <video> element should *not* behave as a popover.
PASS IDL attribute reflection
FAIL Popover attribute value should be case insensitive Element has unexpected visibility state
FAIL Changing attribute values for popover should work Element has unexpected visibility state
PASS Changing attribute values should close open popovers
FAIL Removing a visible popover=auto element from the document should close the popover assert_false: expected false got true
PASS A showing popover=auto does not match :modal
FAIL Removing a visible popover=manual element from the document should close the popover assert_false: expected false got true
PASS A showing popover=manual does not match :modal
FAIL Changing the popover type in a "beforetoggle" event handler should throw an exception (during showPopover()) assert_throws_dom: function "() => popover.showPopover()" did not throw
FAIL Changing the popover type in a "beforetoggle" event handler should throw an exception (during hidePopover()) assert_throws_dom: function "() => popover.hidePopover()" did not throw

