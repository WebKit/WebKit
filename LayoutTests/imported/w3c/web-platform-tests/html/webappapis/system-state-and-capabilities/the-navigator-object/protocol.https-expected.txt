Note: If your browser limits the number of handler registration requests on a page, you might need to disable or significantly increase that limit for the tests below to run.


FAIL the registerProtocolHandler method should exist on the navigator object assert_idl_attribute: property "registerProtocolHandler" not found in prototype chain
FAIL the unregisterProtocolHandler method should exist on the navigator object assert_idl_attribute: property "unregisterProtocolHandler" not found in prototype chain
FAIL registerProtocolHandler: Valid URL "%s" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "%s" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Valid URL "foo/%s" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "foo/%s" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Valid URL "%shttps://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "%shttps://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Valid URL "h%sttps://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "h%sttps://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Valid URL "https:%s//web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "https:%s//web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html#%s" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html#%s" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html?foo=%s" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html?foo=%s" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html?foo=%s&bar" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html?foo=%s&bar" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s/bar/baz/" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s/bar/baz/" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s/bar/baz/?foo=1337&bar#baz" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s/bar/baz/?foo=1337&bar#baz" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s/foo/%s/" should work. navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('tel', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: Valid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s/foo/%s/" should work. navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('tel', url)', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: Invalid URL "" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "%S" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "%S" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "http://%s.com" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "http://%s.com" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "http://%s.example.com" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "http://%s.example.com" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "https://%sweb-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "https://%sweb-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "https://web-platform.test:%s9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "https://web-platform.test:%s9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%a" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "https://web-platform.test:9443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%a" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "http://example.com" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "http://example.com" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "http://[v8.:::]//url=%s" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "http://[v8.:::]//url=%s" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "https://test:test/" should throw (but after scheme) assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL unregisterProtocolHandler: Invalid URL "https://test:test/" should throw (but after scheme) assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SYNTAX_ERR: property "code" is equal to undefined, expected 12
FAIL registerProtocolHandler: Invalid URL "http://example.com/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Invalid URL "http://example.com/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Invalid URL "https://example.com/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Invalid URL "https://example.com/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Invalid URL "http://foobar.example.com/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Invalid URL "http://foobar.example.com/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Invalid URL "mailto:%s@example.com" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Invalid URL "mailto:%s@example.com" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Invalid URL "mailto:%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Invalid URL "mailto:%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Invalid URL "ftp://web-platform.test:9443/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Invalid URL "ftp://web-platform.test:9443/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Invalid URL "chrome://web-platform.test:9443/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Invalid URL "chrome://web-platform.test:9443/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Invalid URL "foo://web-platform.test:9443/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Invalid URL "foo://web-platform.test:9443/%s" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Invalid URL "blob: URL" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler('mailto', url, 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler('mailto', url, 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Invalid URL "blob: URL" should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler('mailto', url); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler('mailto', url)', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "about" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "about" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "attachment" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "attachment" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "blob" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "blob" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "chrome" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "chrome" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "cid" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "cid" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "data" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "data" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "file" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "file" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "ftp" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "ftp" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "http" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "http" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "https" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "https" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "javascript" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "javascript" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "livescript" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "livescript" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "mid" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "mid" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "mocha" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "mocha" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "moz-icon" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "moz-icon" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "opera" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "opera" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "operamail" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "operamail" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "res" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "res" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "resource" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "resource" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "shttp" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "shttp" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "tcl" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "tcl" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "vbscript" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "vbscript" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "view-source" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "view-source" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "ws" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "ws" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "wss" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "wss" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "wyciwyg" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "wyciwyg" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "unrecognized" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "unrecognized" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "mаilto" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "mаilto" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "mailto:" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "mailto:" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "mailto://" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "mailto://" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "mailto\0" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "mailto\0" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "mailtoo" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "mailtoo" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "mailto
" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "mailto
" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "http://" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "http://" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "ssh:/" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "ssh:/" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "magnet:+" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "magnet:+" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "tel:sip" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "tel:sip" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "foo" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "foo" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "fweb+oo" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "fweb+oo" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+1" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+1" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+namewithid123" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+namewithid123" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+namewithtrailingspace " protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+namewithtrailingspace " protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+préfixewithaccent" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+préfixewithaccent" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+Kelvinsign" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+Kelvinsign" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+latinsmallletterlongſ" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+latinsmallletterlongſ" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+dots.are.forbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+dots.are.forbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+dashes-are-forbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+dashes-are-forbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+underscores_are_forbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+underscores_are_forbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+spaces are forbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+spaces are forbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+non*alpha*are*forbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+non*alpha*are*forbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: Attempting to override the "web+digits123areforbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo'); }" threw object "TypeError: navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, 'https://test:test/', 'foo')', 'navigator.registerProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL unregisterProtocolHandler: Attempting to override the "web+digits123areforbidden" protocol should throw SECURITY_ERR. assert_throws_dom: function "() => { navigator.unregisterProtocolHandler(scheme, 'https://test:test/'); }" threw object "TypeError: navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, 'https://test:test/')', 'navigator.unregisterProtocolHandler' is undefined)" that is not a DOMException SECURITY_ERR: property "code" is equal to undefined, expected 18
FAIL registerProtocolHandler: overriding the "bitcoin" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "bitcoin" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "geo" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "geo" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "im" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "im" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "irc" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "irc" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "ircs" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "ircs" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "magnet" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "magnet" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "mailto" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "mailto" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "matrix" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "matrix" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "mms" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "mms" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "news" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "news" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "nntp" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "nntp" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "openpgp4fpr" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "openpgp4fpr" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "sip" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "sip" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "sms" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "sms" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "smsto" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "smsto" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "ssh" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "ssh" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "tel" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "tel" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "urn" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "urn" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "webcal" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "webcal" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "wtai" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "wtai" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "xmpp" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "xmpp" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "BitcoIn" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "BitcoIn" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "Irc" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "Irc" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "MagneT" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "MagneT" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "Matrix" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "Matrix" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "SmsTo" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "SmsTo" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "TEL" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "TEL" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "teL" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "teL" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "WebCAL" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "WebCAL" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "WTAI" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "WTAI" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "web+myprotocol" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "web+myprotocol" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "web+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "web+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "web+UpperCasedIsLowercased" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "web+UpperCasedIsLowercased" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "WEB+seeabove" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "WEB+seeabove" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)
FAIL registerProtocolHandler: overriding the "WeB+SeEaBoVe" protocol should work navigator.registerProtocolHandler is not a function. (In 'navigator.registerProtocolHandler(scheme, location.href + '/%s', "foo")', 'navigator.registerProtocolHandler' is undefined)
FAIL unregisterProtocolHandler: overriding the "WeB+SeEaBoVe" protocol should work navigator.unregisterProtocolHandler is not a function. (In 'navigator.unregisterProtocolHandler(scheme, location.href + '/%s')', 'navigator.unregisterProtocolHandler' is undefined)

