CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')
CONSOLE MESSAGE: TypeError: undefined is not an object (evaluating 'get_worklet(workletType).addModule')

FAIL Importing a same-origin script from a page that has "no-referrer" referrer policy should not send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a remote-origin script from a page that has "no-referrer" referrer policy should not send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a same-origin script from a page that has "origin" referrer policy should send only an origin as referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a remote-origin script from a page that has "origin" referrer policy should send only an origin as referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a same-origin script from a page that has "same-origin" referrer policy should send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a remote-origin script from a page that has "same-origin" referrer policy should not send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a same-origin script from a same-origin worklet script that has "no-referrer" referrer policy should not send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a remote-origin script from a same-origin worklet script that has "no-referrer" referrer policy should not send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a same-origin script from a remote-origin worklet script that has "no-referrer" referrer policy should not send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a remote-origin script from a remote-origin worklet script that has "no-referrer" referrer policy should not send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a same-origin script from a same-origin worklet script that has "origin" referrer policy should send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a remote-origin script from a same-origin worklet script that has "origin" referrer policy should send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a same-origin script from a remote-origin worklet script that has "origin" referrer policy should send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a remote-origin script from a remote-origin worklet script that has "origin" referrer policy should send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a same-origin script from a same-origin worklet script that has "same-origin" referrer policy should send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a remote-origin script from a same-origin worklet script that has "same-origin" referrer policy should not send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a same-origin script from a remote-origin worklet script that has "same-origin" referrer policy should not send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"
FAIL Importing a remote-origin script from a remote-origin worklet script that has "same-origin" referrer policy should send referrer. assert_equals: expected (string) "RESOLVED" but got (object) object "[object Object]"

