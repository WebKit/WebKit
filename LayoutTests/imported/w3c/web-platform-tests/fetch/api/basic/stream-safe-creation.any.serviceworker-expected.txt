
PASS throwing Object.prototype.start accessor should not affect stream creation by 'fetch'
PASS Object.prototype.start accessor returning invalid value should not affect stream creation by 'fetch'
PASS throwing Object.prototype.type accessor should not affect stream creation by 'fetch'
PASS Object.prototype.type accessor returning invalid value should not affect stream creation by 'fetch'
PASS throwing Object.prototype.size accessor should not affect stream creation by 'fetch'
PASS Object.prototype.size accessor returning invalid value should not affect stream creation by 'fetch'
PASS throwing Object.prototype.highWaterMark accessor should not affect stream creation by 'fetch'
PASS Object.prototype.highWaterMark accessor returning invalid value should not affect stream creation by 'fetch'
PASS Object.prototype.start function which errors the stream should not affect stream creation by 'fetch'
PASS throwing Object.prototype.start accessor should not affect stream creation by 'request'
PASS Object.prototype.start accessor returning invalid value should not affect stream creation by 'request'
PASS throwing Object.prototype.type accessor should not affect stream creation by 'request'
PASS Object.prototype.type accessor returning invalid value should not affect stream creation by 'request'
PASS throwing Object.prototype.size accessor should not affect stream creation by 'request'
PASS Object.prototype.size accessor returning invalid value should not affect stream creation by 'request'
PASS throwing Object.prototype.highWaterMark accessor should not affect stream creation by 'request'
PASS Object.prototype.highWaterMark accessor returning invalid value should not affect stream creation by 'request'
PASS Object.prototype.start function which errors the stream should not affect stream creation by 'request'
PASS throwing Object.prototype.start accessor should not affect stream creation by 'response'
PASS Object.prototype.start accessor returning invalid value should not affect stream creation by 'response'
PASS throwing Object.prototype.type accessor should not affect stream creation by 'response'
PASS Object.prototype.type accessor returning invalid value should not affect stream creation by 'response'
PASS throwing Object.prototype.size accessor should not affect stream creation by 'response'
PASS Object.prototype.size accessor returning invalid value should not affect stream creation by 'response'
PASS throwing Object.prototype.highWaterMark accessor should not affect stream creation by 'response'
PASS Object.prototype.highWaterMark accessor returning invalid value should not affect stream creation by 'response'
PASS Object.prototype.start function which errors the stream should not affect stream creation by 'response'
PASS throwing Object.prototype.start accessor should not affect stream creation by 'consumeEmptyResponse'
PASS Object.prototype.start accessor returning invalid value should not affect stream creation by 'consumeEmptyResponse'
PASS throwing Object.prototype.type accessor should not affect stream creation by 'consumeEmptyResponse'
PASS Object.prototype.type accessor returning invalid value should not affect stream creation by 'consumeEmptyResponse'
PASS throwing Object.prototype.size accessor should not affect stream creation by 'consumeEmptyResponse'
PASS Object.prototype.size accessor returning invalid value should not affect stream creation by 'consumeEmptyResponse'
PASS throwing Object.prototype.highWaterMark accessor should not affect stream creation by 'consumeEmptyResponse'
PASS Object.prototype.highWaterMark accessor returning invalid value should not affect stream creation by 'consumeEmptyResponse'
PASS Object.prototype.start function which errors the stream should not affect stream creation by 'consumeEmptyResponse'
PASS throwing Object.prototype.start accessor should not affect stream creation by 'consumeNonEmptyResponse'
PASS Object.prototype.start accessor returning invalid value should not affect stream creation by 'consumeNonEmptyResponse'
PASS throwing Object.prototype.type accessor should not affect stream creation by 'consumeNonEmptyResponse'
PASS Object.prototype.type accessor returning invalid value should not affect stream creation by 'consumeNonEmptyResponse'
PASS throwing Object.prototype.size accessor should not affect stream creation by 'consumeNonEmptyResponse'
PASS Object.prototype.size accessor returning invalid value should not affect stream creation by 'consumeNonEmptyResponse'
PASS throwing Object.prototype.highWaterMark accessor should not affect stream creation by 'consumeNonEmptyResponse'
PASS Object.prototype.highWaterMark accessor returning invalid value should not affect stream creation by 'consumeNonEmptyResponse'
PASS Object.prototype.start function which errors the stream should not affect stream creation by 'consumeNonEmptyResponse'
PASS throwing Object.prototype.start accessor should not affect stream creation by 'consumeEmptyRequest'
PASS Object.prototype.start accessor returning invalid value should not affect stream creation by 'consumeEmptyRequest'
PASS throwing Object.prototype.type accessor should not affect stream creation by 'consumeEmptyRequest'
PASS Object.prototype.type accessor returning invalid value should not affect stream creation by 'consumeEmptyRequest'
PASS throwing Object.prototype.size accessor should not affect stream creation by 'consumeEmptyRequest'
PASS Object.prototype.size accessor returning invalid value should not affect stream creation by 'consumeEmptyRequest'
PASS throwing Object.prototype.highWaterMark accessor should not affect stream creation by 'consumeEmptyRequest'
PASS Object.prototype.highWaterMark accessor returning invalid value should not affect stream creation by 'consumeEmptyRequest'
PASS Object.prototype.start function which errors the stream should not affect stream creation by 'consumeEmptyRequest'
PASS throwing Object.prototype.start accessor should not affect stream creation by 'consumeNonEmptyRequest'
PASS Object.prototype.start accessor returning invalid value should not affect stream creation by 'consumeNonEmptyRequest'
PASS throwing Object.prototype.type accessor should not affect stream creation by 'consumeNonEmptyRequest'
PASS Object.prototype.type accessor returning invalid value should not affect stream creation by 'consumeNonEmptyRequest'
PASS throwing Object.prototype.size accessor should not affect stream creation by 'consumeNonEmptyRequest'
PASS Object.prototype.size accessor returning invalid value should not affect stream creation by 'consumeNonEmptyRequest'
PASS throwing Object.prototype.highWaterMark accessor should not affect stream creation by 'consumeNonEmptyRequest'
PASS Object.prototype.highWaterMark accessor returning invalid value should not affect stream creation by 'consumeNonEmptyRequest'
PASS Object.prototype.start function which errors the stream should not affect stream creation by 'consumeNonEmptyRequest'

