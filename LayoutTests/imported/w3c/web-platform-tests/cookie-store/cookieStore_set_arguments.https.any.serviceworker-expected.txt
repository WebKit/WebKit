
FAIL cookieStore.set with positional name and value promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set with name and value in options promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set with empty name and an '=' in value promise_rejects_js: function "function() { throw e }" threw object "SecurityError: The operation is insecure." ("SecurityError") expected instance of function "function TypeError() {
    [native code]
}" ("TypeError")
FAIL cookieStore.set with normal name and an '=' in value promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set with expires set to a future Date promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set with expires set to a past Date promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set with expires set to a future timestamp promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set with expires set to a past timestamp promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set domain starts with "." promise_rejects_js: function "function() { throw e }" threw object "SecurityError: The operation is insecure." ("SecurityError") expected instance of function "function TypeError() {
    [native code]
}" ("TypeError")
FAIL cookieStore.set with domain that is not equal current host promise_rejects_js: function "function() { throw e }" threw object "SecurityError: The operation is insecure." ("SecurityError") expected instance of function "function TypeError() {
    [native code]
}" ("TypeError")
FAIL cookieStore.set with domain set to the current hostname promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set with domain set to a subdomain of the current hostname promise_rejects_js: function "function() { throw e }" threw object "SecurityError: The operation is insecure." ("SecurityError") expected instance of function "function TypeError() {
    [native code]
}" ("TypeError")
FAIL cookieStore.set with domain set to a non-domain-matching suffix of the current hostname promise_rejects_js: function "function() { throw e }" threw object "SecurityError: The operation is insecure." ("SecurityError") expected instance of function "function TypeError() {
    [native code]
}" ("TypeError")
FAIL cookieStore.set default domain is null and differs from current hostname promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set with path set to the current directory promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set with path set to a subdirectory of the current directory promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set default path is / promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set adds / to path that does not end with / promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set with path that does not start with / promise_rejects_js: function "function() { throw e }" threw object "SecurityError: The operation is insecure." ("SecurityError") expected instance of function "function TypeError() {
    [native code]
}" ("TypeError")
FAIL cookieStore.set with get result promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set checks if the path is too long promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."
FAIL cookieStore.set checks if the domain is too long promise_test: Unhandled rejection with value: object "SecurityError: The operation is insecure."

