
FAIL Verify a dedicated worker script request issued from a uncontrolled document is intercepted by worker's own service worker. promise_test: Unhandled rejection with value: undefined
FAIL Verify an out-of-scope dedicated worker script request issued from a controlled document should not be intercepted by document's service worker. assert_equals: expected "worker loading was not intercepted by service worker" but got "worker loading intercepted by service worker"
FAIL Verify a shared worker script request issued from a uncontrolled document is intercepted by worker's own service worker. promise_test: Unhandled rejection with value: undefined
FAIL Verify a same-origin worker script served by a service worker succeeds in starting a dedicated worker. promise_test: Unhandled rejection with value: undefined
FAIL Verify a same-origin worker script served by a service worker succeeds in starting a shared worker. promise_test: Unhandled rejection with value: undefined
PASS Verify a cors worker script served by a service worker fails dedicated worker start.
PASS Verify a cors worker script served by a service worker fails shared worker start.
PASS Verify a no-cors cross-origin worker script served by a service worker fails dedicated worker start.
PASS Verify a no-cors cross-origin worker script served by a service worker fails shared worker start.
PASS Register a service worker for worker subresource interception tests.
FAIL Requests on a dedicated worker controlled by a service worker. assert_equals: expected "This load was successfully intercepted." but got "{\"error\": {\"code\": 404, \"message\": \"404\"}}"
FAIL Requests on a shared worker controlled by a service worker. assert_equals: expected "This load was successfully intercepted." but got "{\"error\": {\"code\": 404, \"message\": \"404\"}}"
FAIL Requests on a dedicated worker nested in a dedicated worker and controlled by a service worker assert_equals: expected "This load was successfully intercepted." but got "Unexpected error! Can't find variable: Worker"
FAIL Requests on a dedicated worker nested in a shared worker and controlled by a service worker assert_equals: expected "This load was successfully intercepted." but got "Unexpected error! Can't find variable: Worker"
PASS Unregister a service worker for subresource interception tests.

