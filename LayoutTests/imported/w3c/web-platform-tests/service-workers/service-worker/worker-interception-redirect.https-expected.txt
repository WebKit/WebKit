
PASS initialize global state
PASS Case #1: network scope1->scope2 (classic DedicatedWorker)
PASS Case #1: network scope1->scope2 (module DedicatedWorker)
PASS Case #1: network scope1->scope2 (classic SharedWorker)
PASS Case #1: network scope1->scope2 (module SharedWorker)
PASS Case #2: network scope1->out-scope (classic DedicatedWorker)
PASS Case #2: network scope1->out-scope (module DedicatedWorker)
PASS Case #2: network scope1->out-scope (classic SharedWorker)
PASS Case #2: network scope1->out-scope (module SharedWorker)
PASS Case #3: sw scope1->scope2 (classic DedicatedWorker)
PASS Case #3: sw scope1->scope2 (module DedicatedWorker)
PASS Case #3: sw scope1->scope2 (classic SharedWorker)
PASS Case #3: sw scope1->scope2 (module SharedWorker)
PASS Case #4: sw scope1->out-scope (classic DedicatedWorker)
PASS Case #4: sw scope1->out-scope (module DedicatedWorker)
PASS Case #4: sw scope1->out-scope (classic SharedWorker)
PASS Case #4: sw scope1->out-scope (module SharedWorker)
PASS cleanup global state
PASS Case #1: network scope1->scope2 (classic DedicatedWorker, importScripts())
PASS Case #1: network scope1->scope2 (classic DedicatedWorker, fetch())
PASS Case #1: network scope1->scope2 (classic DedicatedWorker, location.href)
PASS Case #1: network scope1->scope2 (module DedicatedWorker, importScripts())
PASS Case #1: network scope1->scope2 (module DedicatedWorker, fetch())
PASS Case #1: network scope1->scope2 (module DedicatedWorker, location.href)
PASS Case #1: network scope1->scope2 (classic SharedWorker, importScripts())
PASS Case #1: network scope1->scope2 (classic SharedWorker, fetch())
PASS Case #1: network scope1->scope2 (classic SharedWorker, location.href)
PASS Case #1: network scope1->scope2 (module SharedWorker, importScripts())
PASS Case #1: network scope1->scope2 (module SharedWorker, fetch())
PASS Case #1: network scope1->scope2 (module SharedWorker, location.href)
PASS Case #2: network scope1->out-scope (classic DedicatedWorker, importScripts())
PASS Case #2: network scope1->out-scope (classic DedicatedWorker, fetch())
PASS Case #2: network scope1->out-scope (classic DedicatedWorker, location.href)
PASS Case #2: network scope1->out-scope (module DedicatedWorker, importScripts())
PASS Case #2: network scope1->out-scope (module DedicatedWorker, fetch())
PASS Case #2: network scope1->out-scope (module DedicatedWorker, location.href)
PASS Case #2: network scope1->out-scope (classic SharedWorker, importScripts())
PASS Case #2: network scope1->out-scope (classic SharedWorker, fetch())
PASS Case #2: network scope1->out-scope (classic SharedWorker, location.href)
PASS Case #2: network scope1->out-scope (module SharedWorker, importScripts())
PASS Case #2: network scope1->out-scope (module SharedWorker, fetch())
PASS Case #2: network scope1->out-scope (module SharedWorker, location.href)
PASS Case #3: sw scope1->scope2 (classic DedicatedWorker, importScripts())
PASS Case #3: sw scope1->scope2 (classic DedicatedWorker, fetch())
PASS Case #3: sw scope1->scope2 (classic DedicatedWorker, location.href)
PASS Case #3: sw scope1->scope2 (module DedicatedWorker, importScripts())
PASS Case #3: sw scope1->scope2 (module DedicatedWorker, fetch())
PASS Case #3: sw scope1->scope2 (module DedicatedWorker, location.href)
PASS Case #3: sw scope1->scope2 (classic SharedWorker, importScripts())
PASS Case #3: sw scope1->scope2 (classic SharedWorker, fetch())
PASS Case #3: sw scope1->scope2 (classic SharedWorker, location.href)
PASS Case #3: sw scope1->scope2 (module SharedWorker, importScripts())
PASS Case #3: sw scope1->scope2 (module SharedWorker, fetch())
PASS Case #3: sw scope1->scope2 (module SharedWorker, location.href)
PASS Case #4: sw scope1->out-scope (classic DedicatedWorker, importScripts())
PASS Case #4: sw scope1->out-scope (classic DedicatedWorker, fetch())
PASS Case #4: sw scope1->out-scope (classic DedicatedWorker, location.href)
PASS Case #4: sw scope1->out-scope (module DedicatedWorker, importScripts())
PASS Case #4: sw scope1->out-scope (module DedicatedWorker, fetch())
PASS Case #4: sw scope1->out-scope (module DedicatedWorker, location.href)
PASS Case #4: sw scope1->out-scope (classic SharedWorker, importScripts())
PASS Case #4: sw scope1->out-scope (classic SharedWorker, fetch())
PASS Case #4: sw scope1->out-scope (classic SharedWorker, location.href)
PASS Case #4: sw scope1->out-scope (module SharedWorker, importScripts())
PASS Case #4: sw scope1->out-scope (module SharedWorker, fetch())
PASS Case #4: sw scope1->out-scope (module SharedWorker, location.href)

