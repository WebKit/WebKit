
PASS Calling send() when data channel is in connecting state should throw InvalidStateError
PASS Datachannel should be able to send simple string and receive as string
PASS Datachannel should be able to send unicode string and receive as unicode string
PASS Datachannel should ignore binaryType and always receive string message as string
PASS Datachannel should be able to send an empty string and receive an empty string
PASS Datachannel should be able to send Uint8Array message and receive as ArrayBuffer
PASS Datachannel should be able to send ArrayBuffer message and receive as ArrayBuffer
PASS Datachannel should be able to send an empty ArrayBuffer message and receive as ArrayBuffer
PASS Datachannel should be able to send Blob message and receive as ArrayBuffer
PASS Datachannel should be able to send ArrayBuffer message and receive as Blob
FAIL Datachannel binaryType should receive message as Blob by default assert_equals: Expect initial binaryType value to be blob expected "blob" but got "arraybuffer"
PASS Datachannel sending multiple messages with different types should succeed and be received
FAIL Datachannel send() up to max size should succeed, above max size should fail assert_throws_js: function "() => channel1.send(message)" did not throw
PASS Negotiated datachannel should be able to send simple string and receive as string
PASS Negotiated datachannel should be able to send unicode string and receive as unicode string
PASS Negotiated datachannel should ignore binaryType and always receive string message as string
PASS Negotiated datachannel should be able to send an empty string and receive an empty string
PASS Negotiated datachannel should be able to send Uint8Array message and receive as ArrayBuffer
PASS Negotiated datachannel should be able to send ArrayBuffer message and receive as ArrayBuffer
PASS Negotiated datachannel should be able to send an empty ArrayBuffer message and receive as ArrayBuffer
PASS Negotiated datachannel should be able to send Blob message and receive as ArrayBuffer
PASS Negotiated datachannel should be able to send ArrayBuffer message and receive as Blob
FAIL Negotiated datachannel binaryType should receive message as Blob by default assert_equals: Expect initial binaryType value to be blob expected "blob" but got "arraybuffer"
PASS Negotiated datachannel sending multiple messages with different types should succeed and be received
FAIL Negotiated datachannel send() up to max size should succeed, above max size should fail assert_throws_js: function "() => channel1.send(message)" did not throw

