
PASS Blob interface object
PASS Blob constructor with no arguments
PASS Blob constructor with no arguments, without 'new'
PASS Blob constructor without brackets
PASS Blob constructor with undefined as first argument
PASS Passing non-objects, Dates and RegExps for blobParts should throw a TypeError.
PASS A plain object with @@iterator should be treated as a sequence for the blobParts argument.
PASS A plain object with custom @@iterator should be treated as a sequence for the blobParts argument.
PASS A plain object with @@iterator and a length property should be treated as a sequence for the blobParts argument.
PASS A String object should be treated as a sequence for the blobParts argument.
PASS A Uint8Array object should be treated as a sequence for the blobParts argument.
PASS The length getter should be invoked and any exceptions should be propagated.
PASS A platform object that supports indexed properties should be treated as a sequence for the blobParts argument (overwritten 'length'.)
PASS ToUint32 should be applied to the length and any exceptions should be propagated.
PASS Getters and value conversions should happen in order until an exception is thrown.
PASS ToString should be called on elements of the blobParts array and any exceptions should be propagated.
PASS Changes to the blobParts array should be reflected in the returned Blob (pop).
PASS Changes to the blobParts array should be reflected in the returned Blob (unshift).
PASS ToString should be called on elements of the blobParts array.
PASS ArrayBuffer elements of the blobParts array should be supported.
PASS Passing typed arrays as elements of the blobParts array should work.
PASS Passing a Float64Array as element of the blobParts array should work.
PASS Passing an platform object that supports indexed properties as the blobParts array should work (select).
PASS Passing an platform object that supports indexed properties as the blobParts array should work (attributes).
PASS Passing a FrozenArray as the blobParts array should work (FrozenArray<MessagePort>).
PASS Array with two blobs
PASS Array with two buffers
PASS Array with two bufferviews
PASS Array with mixed types
PASS options properties should be accessed in lexicographic order.
PASS Arguments should be evaluated from left to right.
PASS Passing null (index 0) for options should use the defaults.
PASS Passing null (index 0) for options should use the defaults (with newlines).
PASS Passing undefined (index 1) for options should use the defaults.
PASS Passing undefined (index 1) for options should use the defaults (with newlines).
PASS Passing object "[object Object]" (index 2) for options should use the defaults.
PASS Passing object "[object Object]" (index 2) for options should use the defaults (with newlines).
PASS Passing object "[object Object]" (index 3) for options should use the defaults.
PASS Passing object "[object Object]" (index 3) for options should use the defaults (with newlines).
PASS Passing object "/regex/" (index 4) for options should use the defaults.
PASS Passing object "/regex/" (index 4) for options should use the defaults (with newlines).
PASS Passing function "function () {}" (index 5) for options should use the defaults.
PASS Passing function "function () {}" (index 5) for options should use the defaults (with newlines).
PASS Passing 123 for options should throw
PASS Passing 123.4 for options should throw
PASS Passing true for options should throw
PASS Passing "abc" for options should throw
PASS Blob with type ""
PASS Blob with type "a"
PASS Blob with type "A"
PASS Blob with type "text/html"
PASS Blob with type "TEXT/HTML"
PASS Blob with type "text/plain;charset=utf-8"
PASS Blob with type "√•"
PASS Blob with type "êëæ"
PASS Blob with type " image/gif "
PASS Blob with type "\timage/gif\t"
PASS Blob with type "image/gif;"
PASS Blob with type "ƒ∞mage/gif"
PASS Blob with type "ƒ±mage/gif"
PASS Blob with type "image/gif\0"
PASS Blob with type "unknown/unknown"
PASS Blob with type "text/plain"
PASS Blob with type "image/png"

