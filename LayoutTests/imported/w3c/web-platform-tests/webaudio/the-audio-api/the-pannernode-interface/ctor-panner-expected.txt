
PASS # AUDIT TASK RUNNER STARTED.
PASS Executing "initialize"
PASS Executing "invalid constructor"
PASS Executing "default constructor"
PASS Executing "test AudioNodeOptions"
PASS Executing "constructor with options"
PASS Audit report
PASS > [initialize]
PASS   context = new OfflineAudioContext(...) did not throw an exception.
PASS < [initialize] All assertions passed. (total 1 assertions)
PASS > [invalid constructor]
PASS   new PannerNode() threw TypeError: "Not enough arguments".
PASS   new PannerNode(1) threw TypeError: "Argument 1 ('context') to the PannerNode constructor must be an instance of BaseAudioContext".
PASS   new PannerNode(context, 42) threw TypeError: "Type error".
PASS < [invalid constructor] All assertions passed. (total 3 assertions)
PASS > [default constructor]
PASS   node0 = new PannerNode(context) did not throw an exception.
PASS   node0 instanceof PannerNode is equal to true.
PASS   node0.numberOfInputs is equal to 1.
PASS   node0.numberOfOutputs is equal to 1.
PASS   node0.channelCount is equal to 2.
PASS   node0.channelCountMode is equal to clamped-max.
PASS   node0.channelInterpretation is equal to speakers.
PASS   node0.panningModel is equal to equalpower.
PASS   node0.positionX.value is equal to 0.
PASS   node0.positionY.value is equal to 0.
PASS   node0.positionZ.value is equal to 0.
PASS   node0.orientationX.value is equal to 1.
PASS   node0.orientationY.value is equal to 0.
PASS   node0.orientationZ.value is equal to 0.
PASS   node0.distanceModel is equal to inverse.
PASS   node0.refDistance is equal to 1.
PASS   node0.maxDistance is equal to 10000.
PASS   node0.rolloffFactor is equal to 1.
PASS   node0.coneInnerAngle is equal to 360.
PASS   node0.coneOuterAngle is equal to 360.
PASS   node0.coneOuterGain is equal to 0.
PASS   context.listener.positionX.value is equal to 0.
PASS   context.listener.positionY.value is equal to 0.
PASS   context.listener.positionZ.value is equal to 0.
PASS   context.listener.forwardX.value is equal to 0.
PASS   context.listener.forwardY.value is equal to 0.
PASS   context.listener.forwardZ.value is equal to -1.
PASS   context.listener.upX.value is equal to 0.
PASS   context.listener.upY.value is equal to 1.
PASS   context.listener.upZ.value is equal to 0.
PASS < [default constructor] All assertions passed. (total 30 assertions)
PASS > [test AudioNodeOptions]
PASS   node1 = new PannerNode(c, {"channelCount":1}) did not throw an exception.
PASS   node1.channelCount is equal to 1.
PASS   node2 = new PannerNode(c, {"channelCount":2}) did not throw an exception.
PASS   node2.channelCount is equal to 2.
PASS   new PannerNode(c, {"channelCount":0}) threw NotSupportedError: "Channel count cannot be 0".
PASS   node.channelCount = 0 threw NotSupportedError: "Channel count cannot be 0".
PASS   node.channelCount after setting to 0 is equal to 2.
PASS   new PannerNode(c, {"channelCount":3}) threw NotSupportedError: "PannerNode's channelCount cannot be greater than 2".
PASS   node.channelCount = 3 threw NotSupportedError: "PannerNode's channelCount cannot be greater than 2".
PASS   node.channelCount after setting to 3 is equal to 2.
PASS   new PannerNode(c, {"channelCount":99}) threw NotSupportedError: "PannerNode's channelCount cannot be greater than 2".
PASS   node.channelCount = 99 threw NotSupportedError: "PannerNode's channelCount cannot be greater than 2".
PASS   node.channelCount after setting to 99 is equal to 2.
PASS   node3 = new PannerNode(c, {"channelCountMode":"clamped-max"}) did not throw an exception.
PASS   node3.channelCountMode is equal to clamped-max.
PASS   node4 = new PannerNode(c, {"channelCountMode":"explicit"}) did not throw an exception.
PASS   node4.channelCountMode is equal to explicit.
PASS   new PannerNode(c, {"channelCountMode":"max"}) threw NotSupportedError: "PannerNode's channelCountMode cannot be max".
PASS   node.channelCountMode = max threw NotSupportedError: "PannerNode's channelCountMode cannot be max".
PASS   node.channelCountMode after setting to max is equal to clamped-max.
PASS   new PannerNode(c, " + JSON.stringify(options) + ") threw TypeError: "Type error".
PASS   node.channelCountMode = foobar did not throw an exception.
PASS   node.channelCountMode after setting to foobar is equal to clamped-max.
PASS   node5 = new PannerNode(c, {"channelInterpretation":"speakers"}) did not throw an exception.
PASS   node5.channelInterpretation is equal to speakers.
PASS   node6 = new PannerNode(c, {"channelInterpretation":"discrete"}) did not throw an exception.
PASS   node6.channelInterpretation is equal to discrete.
PASS   new PannerNode(c, {"channelInterpretation":"foobar"}) threw TypeError: "Type error".
PASS   new PannerNode(c, {"maxDistance":-1}) threw RangeError: "maxDistance cannot be set to a non-positive value".
PASS   node.maxDistance = -1 threw RangeError: "maxDistance cannot be set to a non-positive value".
PASS   node.maxDistance after setting to -1 is equal to 10000.
PASS   node7 = new PannerNode(c, {"maxDistance":100}) did not throw an exception.
PASS   node7.maxDistance is equal to 100.
PASS   new PannerNode(c, {"rolloffFactor":-1}) threw RangeError: "rolloffFactor cannot be set to a negative value".
PASS   node.rolloffFactor = -1 threw RangeError: "rolloffFactor cannot be set to a negative value".
PASS   node.rolloffFactor after setting to -1 is equal to 1.
PASS   node8 = new PannerNode(c, {"rolloffFactor":0}) did not throw an exception.
PASS   node8.rolloffFactor is equal to 0.
PASS   node8 = new PannerNode(c, {"rolloffFactor":0.5}) did not throw an exception.
PASS   node8.rolloffFactor is equal to 0.5.
PASS   node8 = new PannerNode(c, {"rolloffFactor":100}) did not throw an exception.
PASS   node8.rolloffFactor is equal to 100.
PASS   new PannerNode(c, {"coneOuterGain":-1}) threw InvalidStateError: "coneOuterGain must be in [0, 1]".
PASS   node.coneOuterGain = -1 threw InvalidStateError: "coneOuterGain must be in [0, 1]".
PASS   node.coneOuterGain after setting to -1 is equal to 0.
PASS   new PannerNode(c, {"coneOuterGain":1.1}) threw InvalidStateError: "coneOuterGain must be in [0, 1]".
PASS   node.coneOuterGain = 1.1 threw InvalidStateError: "coneOuterGain must be in [0, 1]".
PASS   node.coneOuterGain after setting to 1.1 is equal to 0.
PASS   node9 = new PannerNode(c, {"coneOuterGain":0}) did not throw an exception.
PASS   node9.coneOuterGain is equal to 0.
PASS   node9 = new PannerNode(c, {"coneOuterGain":0.5}) did not throw an exception.
PASS   node9.coneOuterGain is equal to 0.5.
PASS   node9 = new PannerNode(c, {"coneOuterGain":1}) did not throw an exception.
PASS   node9.coneOuterGain is equal to 1.
PASS < [test AudioNodeOptions] All assertions passed. (total 54 assertions)
PASS > [constructor with options]
PASS   node = new PannerNode(c, {"panningModel":"HRTF","positionX":1.414214,"positionY":2.828427,"positionZ":4.242641,"orientationX":-1.414214,"orientationY":-2.828427,"orientationZ":-4.242641,"distanceModel":"linear","refDistance":3.141593,"maxDistance":6.283185,"rolloffFactor":9.424778,"coneInnerAngle":12.566371,"coneOuterAngle":15.707963,"coneOuterGain":0.314159}) did not throw an exception.
PASS   node instanceof PannerNode is equal to true.
PASS   node.panningModel is equal to HRTF.
PASS   node.positionX.value is equal to 1.414214.
PASS   node.positionY.value is equal to 2.828427.
PASS   node.positionZ.value is equal to 4.242640.
PASS   node.orientationX.value is equal to -1.414214.
PASS   node.orientationY.value is equal to -2.828427.
PASS   node.orientationZ.value is equal to -4.242640.
PASS   node.distanceModel is equal to linear.
PASS   node.refDistance is equal to 3.141593.
PASS   node.maxDistance is equal to 6.283185.
PASS   node.rolloffFactor is equal to 9.424778.
PASS   node.coneInnerAngle is equal to 12.566371.
PASS   node.coneOuterAngle is equal to 15.707963.
PASS   node.coneOuterGain is equal to 0.314159.
PASS   node.channelCount is equal to 2.
PASS   node.channelCountMode is equal to clamped-max.
PASS   node.channelInterpretation is equal to speakers.
PASS < [constructor with options] All assertions passed. (total 19 assertions)
PASS # AUDIT TASK RUNNER FINISHED: 5 tasks ran successfully.

