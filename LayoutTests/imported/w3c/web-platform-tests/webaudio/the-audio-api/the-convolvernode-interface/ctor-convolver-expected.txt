
PASS # AUDIT TASK RUNNER STARTED.
PASS Executing "initialize"
PASS Executing "invalid constructor"
PASS Executing "default constructor"
PASS Executing "test AudioNodeOptions"
PASS Executing "nullable buffer"
PASS Executing "illegal sample-rate"
PASS Executing "construct with options"
PASS Audit report
PASS > [initialize]
PASS   context = new OfflineAudioContext(...) did not throw an exception.
PASS < [initialize] All assertions passed. (total 1 assertions)
PASS > [invalid constructor]
PASS   new ConvolverNode() threw TypeError: "Not enough arguments".
PASS   new ConvolverNode(1) threw TypeError: "Argument 1 ('context') to the ConvolverNode constructor must be an instance of BaseAudioContext".
PASS   new ConvolverNode(context, 42) threw TypeError: "Type error".
PASS < [invalid constructor] All assertions passed. (total 3 assertions)
PASS > [default constructor]
PASS   node0 = new ConvolverNode(context) did not throw an exception.
PASS   node0 instanceof ConvolverNode is equal to true.
PASS   node0.numberOfInputs is equal to 1.
PASS   node0.numberOfOutputs is equal to 1.
PASS   node0.channelCount is equal to 2.
PASS   node0.channelCountMode is equal to clamped-max.
PASS   node0.channelInterpretation is equal to speakers.
PASS   node0.normalize is equal to true.
PASS   node0.buffer is equal to null.
PASS < [default constructor] All assertions passed. (total 9 assertions)
PASS > [test AudioNodeOptions]
PASS   new ConvolverNode(c, {"channelCount":1}) did not throw an exception.
PASS   node.channelCount is equal to 1.
PASS   new ConvolverNode(c, {"channelCount":2}) did not throw an exception.
PASS   node.channelCount is equal to 2.
PASS   new ConvolverNode(c, {"channelCount":0}) threw NotSupportedError: "Channel count cannot be 0".
PASS   new ConvolverNode(c, {"channelCount":3}) threw NotSupportedError: "ConvolverNode's channel count cannot be greater than 2".
PASS   new ConvolverNode(c, {"channelCount":99}) threw NotSupportedError: "ConvolverNode's channel count cannot be greater than 2".
PASS   new ConvolverNode(c, {"channelCountMode":"clamped-max"}) did not throw an exception.
PASS   node.channelCountMode is equal to clamped-max.
PASS   new ConvolverNode(c, {"channelCountMode":"explicit"}) did not throw an exception.
PASS   node.channelCountMode is equal to explicit.
PASS   new ConvolverNode(c, {"channelCountMode":"max"}) threw NotSupportedError: "ConvolverNode's channel count mode cannot be 'max'".
PASS   new ConvolverNode(c, {"channelCountMode":"foobar"}) threw TypeError: "Type error".
PASS   new ConvolverNode(c, {"channelInterpretation":"speakers"}) did not throw an exception.
PASS   node.channelInterpretation is equal to speakers.
PASS   new ConvolverNode(c, {"channelInterpretation":"discrete"}) did not throw an exception.
PASS   node.channelInterpretation is equal to discrete.
PASS   new ConvolverNode(c, {"channelInterpretation":"foobar"}) threw TypeError: "Type error".
PASS < [test AudioNodeOptions] All assertions passed. (total 18 assertions)
PASS > [nullable buffer]
PASS   node1 = new ConvolverNode(c, {"buffer":null} did not throw an exception.
PASS   node1.buffer is equal to null.
PASS < [nullable buffer] All assertions passed. (total 2 assertions)
PASS > [illegal sample-rate]
PASS   node1 = new ConvolverNode(c, {"buffer":{}} threw NotSupportedError: "Buffer sample rate does not match the context's sample rate".
PASS < [illegal sample-rate] All assertions passed. (total 1 assertions)
PASS > [construct with options]
PASS   node = new ConvolverNode(c, {"buffer":{},"disableNormalization":false}) did not throw an exception.
PASS   node1 instanceOf ConvolverNode is equal to true.
PASS   node1.buffer === <buf> is equal to true.
PASS   node1.normalize is equal to true.
PASS   node2 = new ConvolverNode(, {"buffer":null,"disableNormalization":true}) did not throw an exception.
PASS   node2.buffer is equal to null.
PASS   node2.normalize is equal to false.
PASS   node3 = new ConvolverNode(context, {"buffer":null,"disableNormalization":false}) did not throw an exception.
PASS   node3.buffer is equal to null.
PASS   node3.normalize is equal to true.
PASS < [construct with options] All assertions passed. (total 10 assertions)
PASS # AUDIT TASK RUNNER FINISHED: 7 tasks ran successfully.

