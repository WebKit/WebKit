
PASS # AUDIT TASK RUNNER STARTED.
PASS Executing "setValueCurve"
PASS Executing "value setter"
PASS Executing "automations"
PASS Executing "catch-exception"
PASS Executing "start-end"
PASS Executing "curve overlap"
PASS Executing "curve lengths"
PASS Audit report
PASS > [setValueCurve]
PASS   setValueCurveAtTime(curve, 0.0125, 0.0125) did not throw an exception.
PASS   setValueAtTime(1, 0.018750) threw NotSupportedError: "Events are overlapping".
PASS   linearRampToValueAtTime(1, 0.018750) threw NotSupportedError: "Events are overlapping".
PASS   exponentialRampToValueAtTime(1, 0.018750) threw NotSupportedError: "Events are overlapping".
PASS   setTargetAtTime(1, 0.018750, 1) threw NotSupportedError: "Events are overlapping".
PASS   setValueAtTime(1, 0.026250) did not throw an exception.
PASS < [setValueCurve] All assertions passed. (total 6 assertions)
PASS > [value setter]
PASS   setValueCurveAtTime(curve, 0, 0.025) did not throw an exception.
PASS   value setter threw NotSupportedError: "Events are overlapping".
PASS < [value setter] All assertions passed. (total 2 assertions)
PASS > [automations]
PASS   linearRampToValueAtTime(1, 0.0125) did not throw an exception.
PASS   exponentialRampToValueAtTime(1, 0.025) did not throw an exception.
PASS   setTargetAtTime(1, 0.037500, 0.1) did not throw an exception.
PASS   setValueCurveAtTime(curve, 0.05, 0.1) did not throw an exception.
PASS   setValueCurveAtTime(curve, 0.00625, 0.01) threw NotSupportedError: "Events are overlapping".
PASS   setValueCurveAtTime(curve, 0.018750, 0.01) threw NotSupportedError: "Events are overlapping".
PASS   setValueCurveAtTime(curve, 0.03125, 0.01) threw NotSupportedError: "Events are overlapping".
PASS   setValueCurveAtTime(curve, 0.043750, 0.01) threw NotSupportedError: "Events are overlapping".
PASS   setValueCurveAtTime([NaN, NaN], 0.043750, 0.01) threw TypeError: "The provided value is non-finite".
PASS   setValueCurveAtTime([1, Infinity], 0.043750, 0.01) threw TypeError: "The provided value is non-finite".
PASS   delayTime.setValueCurveAtTime([1, 5], 0.043750, 0.01) did not throw an exception.
PASS   delayTime.setValueCurveAtTime([1, 5, Infinity], 0.043750, 0.01) threw TypeError: "The provided value is non-finite".
PASS   setValueCurveAtTime(curve, 0.031416, 0.01) threw NotSupportedError: "Events are overlapping".
PASS < [automations] All assertions passed. (total 13 assertions)
PASS > [catch-exception]
PASS   Handled setValueCurve exception so output contains only the constant 1.
PASS < [catch-exception] All assertions passed. (total 1 assertions)
PASS > [start-end]
PASS   setValueAtTime(1, 0) did not throw an exception.
PASS   linearRampToValueAtTime(0, 0.0025) did not throw an exception.
PASS   setValueCurveAtTime(..., 0.0025, 0.0025) did not throw an exception.
PASS   exponentialRampToValueAtTime(1, 0.0075) did not throw an exception.
PASS   setValueCurveAtTime(..., 0.0075, 0.0025) did not throw an exception.
PASS   setValueCurveAtTime(..., 0.01, 0.0025) did not throw an exception.
PASS   setValueAtTime(0, 0.0125) did not throw an exception.
PASS   setValueCurveAtTime(..., 0.0125, 0.0025) did not throw an exception.
PASS   setTargetAtTime(1, 0.015000, 1) did not throw an exception.
PASS < [start-end] All assertions passed. (total 9 assertions)
PASS > [curve overlap]
PASS   g.gain.setValueCurveAtTime([1,2,3], 5, 10) did not throw an exception.
PASS   second g.gain.setValueCurveAtTime([1,2,3], 5, 10) threw NotSupportedError: "Events are overlapping".
PASS   g.gain.setValueCurveAtTime([1,2,3], 5, 5) threw NotSupportedError: "Events are overlapping".
PASS   g.gain.setValueCurveAtTime([1,2,3], 2.5, 10) threw NotSupportedError: "Events are overlapping".
PASS   g.gain.setValueCurveAtTime([1,2,3], 10, 10) threw NotSupportedError: "Events are overlapping".
PASS   g.gain.setValueCurveAtTime([1,2,3], 6, 9) threw NotSupportedError: "Events are overlapping".
PASS   g.gain.setValueCurveAtTime([1,2,3], 4, 11) threw NotSupportedError: "Events are overlapping".
PASS   g.gain.setValueAtTime(1.0, 15) did not throw an exception.
PASS < [curve overlap] All assertions passed. (total 8 assertions)
PASS > [curve lengths]
PASS   setValueCurveAtTime([], 0, 0.01) threw InvalidStateError: "Array must have a length of at least 2".
PASS   setValueCurveAtTime([1], 0, 0.01) threw InvalidStateError: "Array must have a length of at least 2".
PASS   setValueCurveAtTime([1,2], 0, 0.01) did not throw an exception.
PASS < [curve lengths] All assertions passed. (total 3 assertions)
PASS # AUDIT TASK RUNNER FINISHED: 7 tasks ran successfully.

