
PASS ReadableStream teeing with byte source: rs.tee() returns an array of two ReadableStreams
FAIL ReadableStream teeing with byte source: should be able to read one branch to the end without affecting the other promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: chunks should be cloned for each branch assert_not_equals: chunks should have different buffers got disallowed value object "[object ArrayBuffer]"
FAIL ReadableStream teeing with byte source: chunks for BYOB requests from branch 1 should be cloned to branch 2 promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: errors in the source should propagate to both branches promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
PASS ReadableStream teeing with byte source: canceling branch1 should not impact branch2
PASS ReadableStream teeing with byte source: canceling branch2 should not impact branch1
PASS Running templatedRSTeeCancel with ReadableStream teeing with byte source
PASS ReadableStream teeing with byte source: canceling both branches should aggregate the cancel reasons into an array
PASS ReadableStream teeing with byte source: canceling both branches in reverse order should aggregate the cancel reasons into an array
PASS ReadableStream teeing with byte source: failing to cancel the original stream should cause cancel() to reject on branches
PASS ReadableStream teeing with byte source: erroring a teed stream should properly handle canceled branches
FAIL ReadableStream teeing with byte source: closing the original should close the branches promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: erroring the original should immediately error the branches promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
PASS ReadableStream teeing with byte source: erroring the original should error pending reads from default reader
FAIL ReadableStream teeing with byte source: erroring the original should error pending reads from BYOB reader promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: canceling branch1 should finish when branch2 reads until end of stream promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: canceling branch1 should finish when original stream errors promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: should not pull any chunks if no branches are reading assert_array_equals: pull should not be called lengths differ, expected array [] length 0, got ["pull"] length 1
FAIL ReadableStream teeing with byte source: should only pull enough to fill the emptiest queue promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: should not pull when original is already errored promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: stops pulling when original stream errors while branch 1 is reading promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: stops pulling when original stream errors while branch 2 is reading promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: stops pulling when original stream errors while both branches are reading promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: canceling both branches in sequence with delay promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: failing to cancel when canceling both branches in sequence with delay promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: read from branch1 and branch2, cancel branch1, cancel branch2 promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: read from branch1 and branch2, cancel branch2, cancel branch1 promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: read from branch1 and branch2, cancel branch2, enqueue to branch1 promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: read from branch1 and branch2, cancel branch1, respond to branch2 promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: pull with BYOB reader, then pull with default reader promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: pull with default reader, then pull with BYOB reader assert_equals: pull() should be called once expected 1 but got 2
FAIL ReadableStream teeing with byte source: read from branch2, then read from branch1 promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: read from branch1 with default reader, then close while branch2 has pending BYOB read promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: read from branch2 with default reader, then close while branch1 has pending BYOB read promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
FAIL ReadableStream teeing with byte source: close when both branches have pending BYOB reads promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"
PASS ReadableStream teeing with byte source: enqueue() and close() while both branches are pulling
FAIL ReadableStream teeing with byte source: respond() and close() while both branches are pulling promise_test: Unhandled rejection with value: object "TypeError: ReadableStreamBYOBReader needs a ReadableByteStreamController"

