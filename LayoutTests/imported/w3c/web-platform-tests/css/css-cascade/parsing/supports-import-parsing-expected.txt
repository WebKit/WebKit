
PASS @import url("nonexist.css") supports(); should be a valid supports() import rule
PASS @import url("nonexist.css") supports(display:block); should be a valid supports() import rule
PASS @import url("nonexist.css") supports((display:flex)); should be a valid supports() import rule
PASS @import url("nonexist.css") supports(not (display: flex)); should be a valid supports() import rule
PASS @import url("nonexist.css") supports((display: flex) and (display: block)); should be a valid supports() import rule
PASS @import url("nonexist.css") supports((display: flex) or (display: block)); should be a valid supports() import rule
PASS @import url("nonexist.css") supports((display: flex) or (foo: bar)); should be a valid supports() import rule
PASS @import url("nonexist.css") supports(display: block !important); should be a valid supports() import rule
PASS @import url("nonexist.css") layer supports(); should be a valid supports() import rule
PASS @import url("nonexist.css") layer(A) supports((display: flex) or (foo: bar)); should be a valid supports() import rule
PASS @import url("nonexist.css") layer(A.B) supports((display: flex) and (foo: bar)); should be a valid supports() import rule
PASS @import url("nonexist.css") supports(selector(a)); should be a valid supports() import rule
PASS @import url("nonexist.css") supports(selector(p a)); should be a valid supports() import rule
PASS @import url("nonexist.css") supports(selector(p > a)); should be a valid supports() import rule
PASS @import url("nonexist.css") supports(selector(p + a)); should be a valid supports() import rule
PASS @import url("nonexist.css") supports(font-tech(color-colrv1)); should be a valid supports() import rule
PASS @import url("nonexist.css") supports(font-format(opentype)); should be a valid supports() import rule
PASS @import url(nonexist.css) supports(display:block); should be a valid supports() import rule
PASS @import "nonexist.css" supports(display:block); should be a valid supports() import rule
PASS @import url("nonexist.css") supports; should still be a valid import rule with an invalid supports() declaration

