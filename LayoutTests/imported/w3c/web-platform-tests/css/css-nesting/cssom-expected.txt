
PASS Simple CSSOM manipulation of subrules
PASS Simple CSSOM manipulation of subrules 1
PASS Simple CSSOM manipulation of subrules 2
PASS Simple CSSOM manipulation of subrules 3
PASS Simple CSSOM manipulation of subrules 4
PASS Simple CSSOM manipulation of subrules 5
PASS Simple CSSOM manipulation of subrules 6
FAIL Simple CSSOM manipulation of subrules 7 assert_equals: @supports is added expected ".a {\n  color: red;\n  & .b { color: green; }\n  @supports selector(&) {\n  & div { font-size: 10px; }\n}\n  & .c { color: blue; }\n}" but got ".a {\n  color: red;\n  & .b { color: green; }\n  @supports selector(&) {\n}\n  & .c { color: blue; }\n}"
FAIL Simple CSSOM manipulation of subrules 8 assert_equals: color is changed, new rule is ignored expected ".a {\n  color: olivedrab;\n  & .b { color: green; }\n  & .c { color: blue; }\n}" but got ".a {\n  color: olivedrab;\n  & .b { color: green; }\n  @supports selector(&) {\n}\n  & .c { color: blue; }\n}"
FAIL Simple CSSOM manipulation of subrules 9 assert_equals: one rule is kept unchanged, the other is changed expected ".a {\n  color: red;\n  & .b { color: green; }\n  .c div.b &, div & { color: blue; }\n}" but got ".a {\n  color: olivedrab;\n  & .b { color: green; }\n  @supports selector(&) {\n}\n  & .c { color: blue; }\n}"
FAIL Simple CSSOM manipulation of subrules 10 assert_equals: invalid rule containing ampersand is kept in serialization expected ".a {\n  :is(!& .foo, .b) { color: green; }\n}" but got ".a {\n  :is(.b) { color: green; }\n}"

