
PASS Computed * is reified as CSSUnparsedValue
PASS Computed <angle> is reified as CSSUnitValue
PASS Computed <color> is reified as CSSStyleValue
PASS Computed <custom-ident> is reified as CSSKeywordValue
FAIL Computed <image> [url] is reified as CSSImageValue assert_false: expected false got true
PASS Computed <integer> is reified as CSSUnitValue
PASS Computed <length-percentage> [%] is reified as CSSUnitValue
PASS Computed <length-percentage> [px] is reified as CSSUnitValue
FAIL Computed <length-percentage> [px + %] is reified as CSSMathSum assert_false: expected false got true
PASS Computed <length> is reified as CSSUnitValue
PASS Computed <number> is reified as CSSUnitValue
PASS Computed <percentage> is reified as CSSUnitValue
PASS Computed <resolution> is reified as CSSUnitValue
PASS Computed <time> is reified as CSSUnitValue
PASS Computed <url> is reified as CSSStyleValue
PASS Computed ident is reified as CSSKeywordValue
PASS First computed value correctly reified in space-separated list
PASS First computed value correctly reified in comma-separated list
PASS All computed values correctly reified in space-separated list
PASS All computed values correctly reified in comma-separated list
PASS Specified * is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified * is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified foo is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified foo is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <angle> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <angle> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <color> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <color> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <custom-ident> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <custom-ident> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <image> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <image> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <integer> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <integer> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <length-percentage> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <length-percentage> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <length> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <length> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <number> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <number> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <percentage> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <percentage> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <resolution> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <resolution> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <time> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <time> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <transform-function> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <transform-function> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <transform-list> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <transform-list> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <url> is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <url> is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <length>+ is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <length>+ is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified <length># is reified as CSSUnparsedValue from get/getAll [attributeStyleMap]
PASS Specified <length># is reified as CSSUnparsedValue from get/getAll [styleMap]
PASS Specified string "foo" accepted by set() for syntax * [attributeStyleMap]
PASS Specified string "foo" accepted by set() for syntax * [styleMap]
PASS Specified string "foo" accepted by set() for syntax foo [attributeStyleMap]
PASS Specified string "foo" accepted by set() for syntax foo [styleMap]
PASS Specified string "10deg" accepted by set() for syntax <angle> [attributeStyleMap]
PASS Specified string "10deg" accepted by set() for syntax <angle> [styleMap]
PASS Specified string "green" accepted by set() for syntax <color> [attributeStyleMap]
PASS Specified string "green" accepted by set() for syntax <color> [styleMap]
PASS Specified string "foo" accepted by set() for syntax <custom-ident> [attributeStyleMap]
PASS Specified string "foo" accepted by set() for syntax <custom-ident> [styleMap]
PASS Specified string "url("a")" accepted by set() for syntax <image> [attributeStyleMap]
PASS Specified string "url("a")" accepted by set() for syntax <image> [styleMap]
PASS Specified string "1" accepted by set() for syntax <integer> [attributeStyleMap]
PASS Specified string "1" accepted by set() for syntax <integer> [styleMap]
PASS Specified string "calc(10% + 10px)" accepted by set() for syntax <length-percentage> [attributeStyleMap]
PASS Specified string "calc(10% + 10px)" accepted by set() for syntax <length-percentage> [styleMap]
PASS Specified string "10px" accepted by set() for syntax <length> [attributeStyleMap]
PASS Specified string "10px" accepted by set() for syntax <length> [styleMap]
PASS Specified string "1" accepted by set() for syntax <number> [attributeStyleMap]
PASS Specified string "1" accepted by set() for syntax <number> [styleMap]
PASS Specified string "10%" accepted by set() for syntax <percentage> [attributeStyleMap]
PASS Specified string "10%" accepted by set() for syntax <percentage> [styleMap]
PASS Specified string "10dpi" accepted by set() for syntax <resolution> [attributeStyleMap]
PASS Specified string "10dpi" accepted by set() for syntax <resolution> [styleMap]
PASS Specified string "1s" accepted by set() for syntax <time> [attributeStyleMap]
PASS Specified string "1s" accepted by set() for syntax <time> [styleMap]
PASS Specified string "matrix(0, 0, 0, 0, 0, 0)" accepted by set() for syntax <transform-function> [attributeStyleMap]
PASS Specified string "matrix(0, 0, 0, 0, 0, 0)" accepted by set() for syntax <transform-function> [styleMap]
PASS Specified string "matrix(0, 0, 0, 0, 0, 0)" accepted by set() for syntax <transform-list> [attributeStyleMap]
PASS Specified string "matrix(0, 0, 0, 0, 0, 0)" accepted by set() for syntax <transform-list> [styleMap]
PASS Specified string "url("a")" accepted by set() for syntax <url> [attributeStyleMap]
PASS Specified string "url("a")" accepted by set() for syntax <url> [styleMap]
PASS Specified string "10px 11px" accepted by set() for syntax <length>+ [attributeStyleMap]
PASS Specified string "10px 11px" accepted by set() for syntax <length>+ [styleMap]
PASS Specified string "10px, 11px" accepted by set() for syntax <length># [attributeStyleMap]
PASS Specified string "10px, 11px" accepted by set() for syntax <length># [styleMap]
PASS Specified string "bar" accepted by set() for syntax foo [attributeStyleMap]
PASS Specified string "bar" accepted by set() for syntax foo [styleMap]
PASS Specified string "10px" accepted by set() for syntax <angle> [attributeStyleMap]
PASS Specified string "10px" accepted by set() for syntax <angle> [styleMap]
PASS Specified string "10px" accepted by set() for syntax <color> [attributeStyleMap]
PASS Specified string "10px" accepted by set() for syntax <color> [styleMap]
PASS Specified string "10px" accepted by set() for syntax <custom-ident> [attributeStyleMap]
PASS Specified string "10px" accepted by set() for syntax <custom-ident> [styleMap]
PASS Specified string "a" accepted by set() for syntax <image> [attributeStyleMap]
PASS Specified string "a" accepted by set() for syntax <image> [styleMap]
PASS Specified string "float" accepted by set() for syntax <integer> [attributeStyleMap]
PASS Specified string "float" accepted by set() for syntax <integer> [styleMap]
PASS Specified string "red" accepted by set() for syntax <length-percentage> [attributeStyleMap]
PASS Specified string "red" accepted by set() for syntax <length-percentage> [styleMap]
PASS Specified string "red" accepted by set() for syntax <length> [attributeStyleMap]
PASS Specified string "red" accepted by set() for syntax <length> [styleMap]
PASS Specified string "red" accepted by set() for syntax <number> [attributeStyleMap]
PASS Specified string "red" accepted by set() for syntax <number> [styleMap]
PASS Specified string "var(--x)" accepted by set() for syntax <percentage> [attributeStyleMap]
PASS Specified string "var(--x)" accepted by set() for syntax <percentage> [styleMap]
PASS Specified string "blue" accepted by set() for syntax <resolution> [attributeStyleMap]
PASS Specified string "blue" accepted by set() for syntax <resolution> [styleMap]
PASS Specified string "1meter" accepted by set() for syntax <time> [attributeStyleMap]
PASS Specified string "1meter" accepted by set() for syntax <time> [styleMap]
PASS Specified string "foo(0)" accepted by set() for syntax <transform-function> [attributeStyleMap]
PASS Specified string "foo(0)" accepted by set() for syntax <transform-function> [styleMap]
PASS Specified string "bar(1)" accepted by set() for syntax <transform-list> [attributeStyleMap]
PASS Specified string "bar(1)" accepted by set() for syntax <transform-list> [styleMap]
PASS Specified string "a" accepted by set() for syntax <url> [attributeStyleMap]
PASS Specified string "a" accepted by set() for syntax <url> [styleMap]
PASS Specified string "a b" accepted by set() for syntax <length>+ [attributeStyleMap]
PASS Specified string "a b" accepted by set() for syntax <length>+ [styleMap]
PASS Specified string "a, b" accepted by set() for syntax <length># [attributeStyleMap]
PASS Specified string "a, b" accepted by set() for syntax <length># [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax * [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax * [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax foo [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax foo [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <angle> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <angle> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <color> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <color> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <custom-ident> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <custom-ident> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <image> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <image> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <integer> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <integer> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <length-percentage> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <length-percentage> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <length> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <length> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <number> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <number> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <percentage> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <percentage> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <resolution> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <resolution> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <time> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <time> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <transform-function> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <transform-function> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <transform-list> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <transform-list> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <url> [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <url> [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <length>+ [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <length>+ [styleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <length># [attributeStyleMap]
PASS CSSUnparsedValue is accepted via set() for syntax <length># [styleMap]
PASS CSSKeywordValue rejected by set() for syntax * [attributeStyleMap]
PASS CSSKeywordValue rejected by set() for syntax * [styleMap]
PASS CSSKeywordValue rejected by set() for syntax foo [attributeStyleMap]
PASS CSSKeywordValue rejected by set() for syntax foo [styleMap]
PASS CSSUnitValue rejected by set() for syntax <angle> [attributeStyleMap]
PASS CSSUnitValue rejected by set() for syntax <angle> [styleMap]
PASS CSSKeywordValue rejected by set() for syntax <custom-ident> [attributeStyleMap]
PASS CSSKeywordValue rejected by set() for syntax <custom-ident> [styleMap]
PASS CSSImageValue rejected by set() for syntax <image> [attributeStyleMap]
PASS CSSImageValue rejected by set() for syntax <image> [styleMap]
PASS CSSUnitValue rejected by set() for syntax <integer> [attributeStyleMap]
PASS CSSUnitValue rejected by set() for syntax <integer> [styleMap]
PASS CSSUnitValue rejected by set() for syntax <length-percentage> [attributeStyleMap]
PASS CSSUnitValue rejected by set() for syntax <length-percentage> [styleMap]
PASS CSSUnitValue rejected by set() for syntax <length> [attributeStyleMap]
PASS CSSUnitValue rejected by set() for syntax <length> [styleMap]
PASS CSSUnitValue rejected by set() for syntax <number> [attributeStyleMap]
PASS CSSUnitValue rejected by set() for syntax <number> [styleMap]
PASS CSSUnitValue rejected by set() for syntax <percentage> [attributeStyleMap]
PASS CSSUnitValue rejected by set() for syntax <percentage> [styleMap]
PASS CSSUnitValue rejected by set() for syntax <resolution> [attributeStyleMap]
PASS CSSUnitValue rejected by set() for syntax <resolution> [styleMap]
PASS CSSUnitValue rejected by set() for syntax <time> [attributeStyleMap]
PASS CSSUnitValue rejected by set() for syntax <time> [styleMap]
PASS CSSTransformValue rejected by set() for syntax <transform-list> [attributeStyleMap]
PASS CSSTransformValue rejected by set() for syntax <transform-list> [styleMap]
PASS CSSUnitValue rejected by set() for syntax <length>+ [attributeStyleMap]
PASS CSSUnitValue rejected by set() for syntax <length>+ [styleMap]
PASS CSSUnitValue rejected by set() for syntax <length># [attributeStyleMap]
PASS CSSUnitValue rejected by set() for syntax <length># [styleMap]
PASS Appending a string to * is not allowed [attributeStyleMap]
PASS Appending a string to * is not allowed [styleMap]
PASS Appending a string to foo+ is not allowed [attributeStyleMap]
PASS Appending a string to foo+ is not allowed [styleMap]
PASS Appending a string to <angle>+ is not allowed [attributeStyleMap]
PASS Appending a string to <angle>+ is not allowed [styleMap]
PASS Appending a string to <color>+ is not allowed [attributeStyleMap]
PASS Appending a string to <color>+ is not allowed [styleMap]
PASS Appending a string to <custom-ident>+ is not allowed [attributeStyleMap]
PASS Appending a string to <custom-ident>+ is not allowed [styleMap]
PASS Appending a string to <image>+ is not allowed [attributeStyleMap]
PASS Appending a string to <image>+ is not allowed [styleMap]
PASS Appending a string to <integer>+ is not allowed [attributeStyleMap]
PASS Appending a string to <integer>+ is not allowed [styleMap]
PASS Appending a string to <length-percentage>+ is not allowed [attributeStyleMap]
PASS Appending a string to <length-percentage>+ is not allowed [styleMap]
PASS Appending a string to <length>+ is not allowed [attributeStyleMap]
PASS Appending a string to <length>+ is not allowed [styleMap]
PASS Appending a string to <number>+ is not allowed [attributeStyleMap]
PASS Appending a string to <number>+ is not allowed [styleMap]
PASS Appending a string to <percentage>+ is not allowed [attributeStyleMap]
PASS Appending a string to <percentage>+ is not allowed [styleMap]
PASS Appending a string to <resolution>+ is not allowed [attributeStyleMap]
PASS Appending a string to <resolution>+ is not allowed [styleMap]
PASS Appending a string to <time>+ is not allowed [attributeStyleMap]
PASS Appending a string to <time>+ is not allowed [styleMap]
PASS Appending a string to <transform-function>+ is not allowed [attributeStyleMap]
PASS Appending a string to <transform-function>+ is not allowed [styleMap]
PASS Appending a string to <transform-list> is not allowed [attributeStyleMap]
PASS Appending a string to <transform-list> is not allowed [styleMap]
PASS Appending a string to <url>+ is not allowed [attributeStyleMap]
PASS Appending a string to <url>+ is not allowed [styleMap]
PASS Appending a string to <length># is not allowed [attributeStyleMap]
PASS Appending a string to <length># is not allowed [styleMap]
PASS Appending a CSSKeywordValue to * is not allowed [attributeStyleMap]
PASS Appending a CSSKeywordValue to * is not allowed [styleMap]
PASS Appending a CSSKeywordValue to foo+ is not allowed [attributeStyleMap]
PASS Appending a CSSKeywordValue to foo+ is not allowed [styleMap]
PASS Appending a CSSUnitValue to <angle>+ is not allowed [attributeStyleMap]
PASS Appending a CSSUnitValue to <angle>+ is not allowed [styleMap]
PASS Appending a CSSKeywordValue to <custom-ident>+ is not allowed [attributeStyleMap]
PASS Appending a CSSKeywordValue to <custom-ident>+ is not allowed [styleMap]
PASS Appending a CSSImageValue to <image>+ is not allowed [attributeStyleMap]
PASS Appending a CSSImageValue to <image>+ is not allowed [styleMap]
PASS Appending a CSSUnitValue to <integer>+ is not allowed [attributeStyleMap]
PASS Appending a CSSUnitValue to <integer>+ is not allowed [styleMap]
PASS Appending a CSSUnitValue to <length-percentage>+ is not allowed [attributeStyleMap]
PASS Appending a CSSUnitValue to <length-percentage>+ is not allowed [styleMap]
PASS Appending a CSSUnitValue to <length>+ is not allowed [attributeStyleMap]
PASS Appending a CSSUnitValue to <length>+ is not allowed [styleMap]
PASS Appending a CSSUnitValue to <number>+ is not allowed [attributeStyleMap]
PASS Appending a CSSUnitValue to <number>+ is not allowed [styleMap]
PASS Appending a CSSUnitValue to <percentage>+ is not allowed [attributeStyleMap]
PASS Appending a CSSUnitValue to <percentage>+ is not allowed [styleMap]
PASS Appending a CSSUnitValue to <resolution>+ is not allowed [attributeStyleMap]
PASS Appending a CSSUnitValue to <resolution>+ is not allowed [styleMap]
PASS Appending a CSSUnitValue to <time>+ is not allowed [attributeStyleMap]
PASS Appending a CSSUnitValue to <time>+ is not allowed [styleMap]
PASS Appending a CSSKeywordValue to <transform-list> is not allowed [attributeStyleMap]
PASS Appending a CSSKeywordValue to <transform-list> is not allowed [styleMap]
PASS Appending a CSSUnitValue to <length># is not allowed [attributeStyleMap]
PASS Appending a CSSUnitValue to <length># is not allowed [styleMap]
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax *
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <angle>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <color>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <custom-ident> | <length>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <image>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <integer>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <length-percentage> (10%)
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <length-percentage> (10px)
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <length-percentage> (calc(10px + 10%))
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <length>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <number>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <percentage>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <resolution>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <time>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <transform-function>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <transform-list>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <url>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax thing1 | THING2 | <url>
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <length>+
PASS CSSStyleValue.parse[All] returns CSSUnparsedValue for syntax <length>#
PASS Direct CSSStyleValue may not be set [attributeStyleMap]
PASS Direct CSSStyleValue may not be set [styleMap]
PASS Specified * is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified * is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified foo is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified foo is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <angle> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <angle> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <color> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <color> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <custom-ident> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <custom-ident> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <image> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <image> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <integer> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <integer> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <length-percentage> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <length-percentage> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <length> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <length> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <number> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <number> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <percentage> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <percentage> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <resolution> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <resolution> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <time> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <time> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <transform-function> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <transform-function> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <transform-list> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <transform-list> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <url> is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <url> is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <length>+ is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <length>+ is reified CSSUnparsedValue by iterator [styleMap]
PASS Specified <length># is reified CSSUnparsedValue by iterator [attributeStyleMap]
PASS Specified <length># is reified CSSUnparsedValue by iterator [styleMap]
PASS Registered property with initial value show up on iteration of computedStyleMap
PASS Computed * is reified as CSSUnparsedValue by iterator
PASS Computed <angle> is reified as CSSUnitValue by iterator
PASS Computed <custom-ident> is reified as CSSKeywordValue by iterator
FAIL Computed <image> is reified as CSSImageValue by iterator assert_true: expected true got false
PASS Computed <integer> is reified as CSSUnitValue by iterator
PASS Computed <length> is reified as CSSUnitValue by iterator
PASS Computed <number> is reified as CSSUnitValue by iterator
PASS Computed <percentage> is reified as CSSUnitValue by iterator
PASS Computed <resolution> is reified as CSSUnitValue by iterator
PASS Computed <time> is reified as CSSUnitValue by iterator
PASS Computed none | thing | THING is reified as CSSKeywordValue by iterator
PASS Computed <angle> | <length> is reified as CSSUnitValue by iterator

