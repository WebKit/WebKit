
PASS Attribute 'syntax' returns expected value for ["<color>"]
PASS Attribute 'syntax' returns expected value for ["<color> | none"]
PASS Attribute 'syntax' returns expected value for ["<color># | <image> | none"]
PASS Attribute 'syntax' returns expected value for ["foo | bar | baz"]
PASS Attribute 'syntax' returns expected value for ["*"]
PASS Attribute 'syntax' returns expected value for ["notasyntax"]
PASS Attribute 'syntax' returns expected value for [red]
PASS Attribute 'syntax' returns expected value for [rgb(255, 0, 0)]
PASS Attribute 'syntax' returns expected value for [<color>]
PASS Attribute 'syntax' returns expected value for [foo | bar]
PASS Attribute 'initial-value' returns expected value for [10px]
PASS Attribute 'initial-value' returns expected value for [rgb(1, 2, 3)]
PASS Attribute 'initial-value' returns expected value for [red]
PASS Attribute 'initial-value' returns expected value for [foo]
PASS Attribute 'initial-value' returns expected value for [if(){}]
PASS Attribute 'initial-value' returns expected value for [var(--x)]
PASS Attribute 'inherits' returns expected value for [true]
PASS Attribute 'inherits' returns expected value for [false]
PASS Attribute 'inherits' returns expected value for [none]
PASS Attribute 'inherits' returns expected value for [0]
PASS Attribute 'inherits' returns expected value for [1]
PASS Attribute 'inherits' returns expected value for ["true"]
PASS Attribute 'inherits' returns expected value for ["false"]
PASS Attribute 'inherits' returns expected value for [calc(0)]
PASS Invalid property name does not parse [foo]
PASS Invalid property name does not parse [-foo]
FAIL Rule applied [*, if(){}, false] assert_equals: expected "if(){}" but got ""
FAIL Rule applied [<angle>, 42deg, false] assert_equals: expected "42deg" but got ""
FAIL Rule applied [<angle>, 1turn, false] assert_equals: expected "360deg" but got ""
FAIL Rule applied [<color>, green, false] assert_equals: expected "rgb(0, 128, 0)" but got ""
FAIL Rule applied [<color>, rgb(1, 2, 3), false] assert_equals: expected "rgb(1, 2, 3)" but got ""
FAIL Rule applied [<image>, url("http://a/"), false] assert_equals: expected "url(\"http://a/\")" but got ""
FAIL Rule applied [<integer>, 5, false] assert_equals: expected "5" but got ""
FAIL Rule applied [<length-percentage>, 10px, false] assert_equals: expected "10px" but got ""
FAIL Rule applied [<length-percentage>, 10%, false] assert_equals: expected "10%" but got ""
FAIL Rule applied [<length-percentage>, calc(10% + 10px), false] assert_equals: expected "calc(10% + 10px)" but got ""
FAIL Rule applied [<length>, 10px, false] assert_equals: expected "10px" but got ""
FAIL Rule applied [<number>, 2.5, false] assert_equals: expected "2.5" but got ""
FAIL Rule applied [<percentage>, 10%, false] assert_equals: expected "10%" but got ""
FAIL Rule applied [<resolution>, 50dppx, false] assert_equals: expected "50dppx" but got ""
FAIL Rule applied [<resolution>, 96dpi, false] assert_equals: expected "1dppx" but got ""
FAIL Rule applied [<time>, 10s, false] assert_equals: expected "10s" but got ""
FAIL Rule applied [<time>, 1000ms, false] assert_equals: expected "1s" but got ""
FAIL Rule applied [<transform-function>, rotateX(0deg), false] assert_equals: expected "rotateX(0deg)" but got ""
FAIL Rule applied [<transform-list>, rotateX(0deg), false] assert_equals: expected "rotateX(0deg)" but got ""
FAIL Rule applied [<transform-list>, rotateX(0deg) translateX(10px), false] assert_equals: expected "rotateX(0deg) translateX(10px)" but got ""
FAIL Rule applied [<url>, url("http://a/"), false] assert_equals: expected "url(\"http://a/\")" but got ""
FAIL Rule applied [<color>, tomato, false] assert_equals: expected "rgb(255, 99, 71)" but got ""
FAIL Rule applied [<color>, tomato, true] assert_equals: expected "rgb(255, 99, 71)" but got ""
PASS Rule applied for "*", even with no initial value
PASS Rule not applied [undefined, green, false]
PASS Rule not applied [<color>, undefined, false]
PASS Rule not applied [<color>, green, undefined]
PASS Rule not applied [<gandalf>, grey, false]
PASS Rule not applied [gandalf, grey, false]
PASS Rule not applied [<color>, notacolor, false]
PASS Rule not applied [<length>, 10em, false]
FAIL Non-inherited properties do not inherit assert_equals: expected "0px" but got "40px"
PASS Inherited properties inherit
FAIL Initial values substituted as computed value assert_equals: expected "rgb(0, 128, 0)" but got ""
PASS Non-universal registration are invalid without an initial value
FAIL Initial value may be omitted for universal registration assert_equals: expected "" but got "calc(1px + 1px)"

