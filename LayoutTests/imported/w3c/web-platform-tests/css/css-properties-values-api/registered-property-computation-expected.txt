
PASS <length> values computed are correctly via var()-reference
PASS <length> values computed are correctly via var()-reference when font-size is inherited
PASS <length> values are computed correctly when font-size is inherited [14em]
PASS <length> values are computed correctly when font-size is inherited [calc(14em + 10px)]
PASS <length> values are computed correctly [12px]
PASS <length> values are computed correctly [13vw]
PASS <length> values are computed correctly [14em]
PASS <length> values are computed correctly [15vmin]
PASS <length> values are computed correctly [calc(16px - 7em + 10vh)]
PASS <length> values are computed correctly [1in]
PASS <length> values are computed correctly [2.54cm]
PASS <length> values are computed correctly [25.4mm]
PASS <length> values are computed correctly [6pc]
PASS <length> values are computed correctly [72pt]
PASS <length-percentage> values are computed correctly [17em]
FAIL <length-percentage> values are computed correctly [18%] assert_equals: expected "18%" but got "0px"
FAIL <length-percentage> values are computed correctly [calc(19em - 2%)] assert_equals: expected "calc(-2% + 190px)" but got "0px"
FAIL <length># values are computed correctly [10px, 3em] assert_equals: expected "10px, 30px" but got "0px"
FAIL <length># values are computed correctly [4em ,9px] assert_equals: expected "40px, 9px" but got "0px"
PASS <length># values are computed correctly [8em]
FAIL <length-percentage># values are computed correctly [3% , 10vmax  , 22px] assert_equals: expected "3%, 80px, 22px" but got "0px"
FAIL <length-percentage># values are computed correctly [calc(50% + 1em), 4px] assert_equals: expected "calc(50% + 10px), 4px" but got "0px"
FAIL <length-percentage># values are computed correctly [calc(13% + 37px)] assert_equals: expected "calc(13% + 37px)" but got "0px"
FAIL <length>+ values are computed correctly [10px 3em] assert_equals: expected "10px 30px" but got "0px"
FAIL <length>+ values are computed correctly [4em 9px] assert_equals: expected "40px 9px" but got "0px"
FAIL <length-percentage>+ values are computed correctly [3% 10vmax 22px] assert_equals: expected "3% 80px 22px" but got "0px"
FAIL <length-percentage>+ values are computed correctly [calc(50% + 1em) 4px] assert_equals: expected "calc(50% + 10px) 4px" but got "0px"
FAIL <transform-function> values are computed correctly [translateX(2px)] The given initial value does not parse for the given syntax.
FAIL <transform-function> values are computed correctly [translateX(10em)] The given initial value does not parse for the given syntax.
FAIL <transform-function> values are computed correctly [translateX(calc(11em + 10%))] The given initial value does not parse for the given syntax.
FAIL <transform-function>+ values are computed correctly [translateX(10%) scale(2)] The given initial value does not parse for the given syntax.
FAIL <integer> values are computed correctly [15] assert_equals: expected "15" but got "0px"
FAIL <integer> values are computed correctly [calc(15 + 15)] assert_equals: expected "30" but got "0px"
FAIL <integer> values are computed correctly [calc(2.4)] assert_equals: expected "2" but got "0px"
FAIL <integer> values are computed correctly [calc(2.6)] assert_equals: expected "3" but got "0px"
FAIL <integer> values are computed correctly [calc(2.6 + 3.1)] assert_equals: expected "6" but got "0px"
FAIL <integer>+ values are computed correctly [15 calc(2.4) calc(2.6)] assert_equals: expected "15 2 3" but got "0px"
FAIL <color> values are computed correctly [#ff0000] The given initial value does not parse for the given syntax.
FAIL <color> values are computed correctly [#000f00] The given initial value does not parse for the given syntax.
FAIL <color> values are computed correctly [#00000a] The given initial value does not parse for the given syntax.
FAIL <color> values are computed correctly [#badbee] The given initial value does not parse for the given syntax.
FAIL <color> values are computed correctly [#badbee33] The given initial value does not parse for the given syntax.
FAIL <color> values are computed correctly [tomato] The given initial value does not parse for the given syntax.
FAIL <color> values are computed correctly [plum] The given initial value does not parse for the given syntax.
FAIL <color> values are computed correctly [currentcolor] The given initial value does not parse for the given syntax.
PASS * values are computed correctly [tomato]
FAIL tomato | plum values are computed correctly [plum] The given initial value does not parse for the given syntax.
FAIL tomato | plum | <color> values are computed correctly [plum] The given initial value does not parse for the given syntax.
PASS * values are computed correctly [-50grad]
FAIL <angle> values are computed correctly [180deg] The given initial value does not parse for the given syntax.
FAIL <angle> values are computed correctly [400grad] The given initial value does not parse for the given syntax.
FAIL <angle> values are computed correctly [calc(360deg + 400grad)] The given initial value does not parse for the given syntax.
PASS * values are computed correctly [50s]
FAIL <time> values are computed correctly [1s] The given initial value does not parse for the given syntax.
FAIL <time> values are computed correctly [1000ms] The given initial value does not parse for the given syntax.
FAIL <time> values are computed correctly [calc(1000ms + 1s)] The given initial value does not parse for the given syntax.
PASS * values are computed correctly [50dpi]
FAIL <resolution> values are computed correctly [1dppx] The given initial value does not parse for the given syntax.
FAIL <resolution> values are computed correctly [96dpi] The given initial value does not parse for the given syntax.
FAIL <resolution> values are computed correctly [calc(1dppx + 96dpi)] The given initial value does not parse for the given syntax.

