
FAIL e.style['color'] = "rgb(from rebeccapurple r g b)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple r g b / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g b / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.8)
Expected: color(srgb 0.2 0.4 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from hsl(120deg 20% 50% / .5) r g b / alpha)" should set the property value Colors do not match.
Actual:   rgba(102, 153, 102, 0.5)
Expected: color(srgb 0.4 0.6 0.4 / 0.5).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rgb(from rebeccapurple r g b) r g b)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple 0 0 0)" should set the property value Colors do not match.
Actual:   rgb(0, 0, 0)
Expected: color(srgb 0 0 0).
Error: assert_equals: Color format is correct. expected "color(srgb   )" but got "rgb(, , )"
FAIL e.style['color'] = "rgb(from rebeccapurple 0 0 0 / 0)" should set the property value Colors do not match.
Actual:   rgba(0, 0, 0, 0)
Expected: color(srgb 0 0 0 / 0).
Error: assert_equals: Color format is correct. expected "color(srgb    / )" but got "rgba(, , , )"
FAIL e.style['color'] = "rgb(from rebeccapurple 0 g b / alpha)" should set the property value Colors do not match.
Actual:   rgb(0, 51, 153)
Expected: color(srgb 0 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rebeccapurple r 0 b / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 0, 153)
Expected: color(srgb 0.4 0 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple r g 0 / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 0)
Expected: color(srgb 0.4 0.2 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple r g b / 0)" should set the property value Colors do not match.
Actual:   rgba(102, 51, 153, 0)
Expected: color(srgb 0.4 0.2 0.6 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) 0 g b / alpha)" should set the property value Colors do not match.
Actual:   rgba(0, 102, 153, 0.8)
Expected: color(srgb 0 0.4 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 0 b / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 0, 153, 0.8)
Expected: color(srgb 0.2 0 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g 0 / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 0, 0.8)
Expected: color(srgb 0.2 0.4 0 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g b / 0)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0)
Expected: color(srgb 0.2 0.4 0.6 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rebeccapurple 25 g b / alpha)" should set the property value Colors do not match.
Actual:   rgb(25, 51, 153)
Expected: color(srgb 0.098 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.098 +/- 0.01, expected 0.098 but got 25
FAIL e.style['color'] = "rgb(from rebeccapurple r 25 b / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 25, 153)
Expected: color(srgb 0.4 0.098 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple r g 25 / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 25)
Expected: color(srgb 0.4 0.2 0.098).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple r g b / .25)" should set the property value Colors do not match.
Actual:   rgba(102, 51, 153, 0.25)
Expected: color(srgb 0.4 0.2 0.6 / 0.25).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) 25 g b / alpha)" should set the property value Colors do not match.
Actual:   rgba(25, 102, 153, 0.8)
Expected: color(srgb 0.098 0.4 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.098 +/- 0.01, expected 0.098 but got 25
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 25 b / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 25, 153, 0.8)
Expected: color(srgb 0.2 0.098 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g 25 / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 25, 0.8)
Expected: color(srgb 0.2 0.4 0.098 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g b / .20)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.2)
Expected: color(srgb 0.2 0.4 0.6 / 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rebeccapurple 20% g b / alpha)" should set the property value Colors do not match.
Actual:   rgb(51, 51, 153)
Expected: color(srgb 0.2 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rebeccapurple r 20% b / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple r g 20% / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 51)
Expected: color(srgb 0.4 0.2 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple r g b / 20%)" should set the property value Colors do not match.
Actual:   rgba(102, 51, 153, 0.2)
Expected: color(srgb 0.4 0.2 0.6 / 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) 20% g b / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.8)
Expected: color(srgb 0.2 0.4 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 20% b / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 51, 153, 0.8)
Expected: color(srgb 0.2 0.2 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g 20% / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 51, 0.8)
Expected: color(srgb 0.2 0.4 0.2 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g b / 20%)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.2)
Expected: color(srgb 0.2 0.4 0.6 / 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rebeccapurple 25 g b / 25%)" should set the property value Colors do not match.
Actual:   rgba(25, 51, 153, 0.25)
Expected: color(srgb 0.098 0.2 0.6 / 0.25).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.098 +/- 0.01, expected 0.098 but got 25
FAIL e.style['color'] = "rgb(from rebeccapurple r 25 b / 25%)" should set the property value Colors do not match.
Actual:   rgba(102, 25, 153, 0.25)
Expected: color(srgb 0.4 0.098 0.6 / 0.25).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple r g 25 / 25%)" should set the property value Colors do not match.
Actual:   rgba(102, 51, 25, 0.25)
Expected: color(srgb 0.4 0.2 0.098 / 0.25).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) 25 g b / 25%)" should set the property value Colors do not match.
Actual:   rgba(25, 102, 153, 0.25)
Expected: color(srgb 0.098 0.4 0.6 / 0.25).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.098 +/- 0.01, expected 0.098 but got 25
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 25 b / 25%)" should set the property value Colors do not match.
Actual:   rgba(51, 25, 153, 0.25)
Expected: color(srgb 0.2 0.098 0.6 / 0.25).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r g 25 / 25%)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 25, 0.25)
Expected: color(srgb 0.2 0.4 0.098 / 0.25).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rebeccapurple g b r)" should set the property value Colors do not match.
Actual:   rgb(51, 153, 102)
Expected: color(srgb 0.2 0.6 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rebeccapurple b alpha r / g)" should set the property value Colors do not match.
Actual:   rgba(153, 255, 102, 0.2)
Expected: color(srgb 0.6 0.004 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "rgb(from rebeccapurple r r r / r)" should set the property value Colors do not match.
Actual:   rgba(102, 102, 102, 0.4)
Expected: color(srgb 0.4 0.4 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "rgb(from rebeccapurple alpha alpha alpha / alpha)" should set the property value Colors do not match.
Actual:   rgb(255, 255, 255)
Expected: color(srgb 0.004 0.004 0.004).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.004 +/- 0.01, expected 0.004 but got 255
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) g b r)" should set the property value Colors do not match.
Actual:   rgb(102, 153, 51)
Expected: color(srgb 0.4 0.6 0.2 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) b alpha r / g)" should set the property value Colors do not match.
Actual:   rgba(153, 204, 51, 0.4)
Expected: color(srgb 0.6 0.003 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r r r / r)" should set the property value Colors do not match.
Actual:   rgba(51, 51, 51, 0.2)
Expected: color(srgb 0.2 0.2 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) alpha alpha alpha / alpha)" should set the property value Colors do not match.
Actual:   rgba(204, 204, 204, 0.8)
Expected: color(srgb 0.003 0.003 0.003 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.003 +/- 0.01, expected 0.003 but got 204
FAIL e.style['color'] = "rgb(from rebeccapurple r 20% 10)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 10)
Expected: color(srgb 0.4 0.2 0.0392).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple r 10 20%)" should set the property value Colors do not match.
Actual:   rgb(102, 10, 51)
Expected: color(srgb 0.4 0.0392 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple 0% 10 10)" should set the property value Colors do not match.
Actual:   rgb(0, 10, 10)
Expected: color(srgb 0 0.0392 0.0392).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 0.0392 +/- 0.01, expected 0.0392 but got 10
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 20% 10)" should set the property value Colors do not match.
Actual:   rgb(51, 51, 10)
Expected: color(srgb 0.2 0.2 0.0392 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) r 10 20%)" should set the property value Colors do not match.
Actual:   rgb(51, 10, 51)
Expected: color(srgb 0.2 0.0392 0.2 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) 0% 10 10)" should set the property value Colors do not match.
Actual:   rgb(0, 10, 10)
Expected: color(srgb 0 0.0392 0.0392 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
FAIL e.style['color'] = "rgb(from rebeccapurple calc(r) calc(g) calc(b))" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple r calc(g * 2) 10)" should set the property value Colors do not match.
Actual:   rgb(102, 102, 10)
Expected: color(srgb 0.4 0.4 0.0392).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple b calc(r * .5) 10)" should set the property value Colors do not match.
Actual:   rgb(153, 51, 10)
Expected: color(srgb 0.6 0.2 0.0392).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "rgb(from rebeccapurple r calc(g * .5 + g * .5) 10)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 10)
Expected: color(srgb 0.4 0.2 0.0392).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rebeccapurple r calc(b * .5 - g * .5) 10)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 10)
Expected: color(srgb 0.4 0.2 0.0392).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "rgb(from rgb(20%, 40%, 60%, 80%) calc(r) calc(g) calc(b) / calc(alpha))" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.8)
Expected: color(srgb 0.2 0.4 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rebeccapurple none none none)" should set the property value Colors do not match.
Actual:   rgb(0, 0, 0)
Expected: color(srgb none none none).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
FAIL e.style['color'] = "rgb(from rebeccapurple none none none / none)" should set the property value Colors do not match.
Actual:   rgba(0, 0, 0, 0)
Expected: color(srgb none none none / none).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 4
FAIL e.style['color'] = "rgb(from rebeccapurple r g none)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 0)
Expected: color(srgb 0.4 0.2 none).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
FAIL e.style['color'] = "rgb(from rebeccapurple r g none / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 0)
Expected: color(srgb 0.4 0.2 none).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
FAIL e.style['color'] = "rgb(from rebeccapurple r g b / none)" should set the property value Colors do not match.
Actual:   rgba(102, 51, 153, 0)
Expected: color(srgb 0.4 0.2 0.6 / none).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "rgb(from rgb(20% 40% 60% / 80%) r g none / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 0, 0.8)
Expected: color(srgb 0.2 0.4 none / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "rgb(from rgb(20% 40% 60% / 80%) r g b / none)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0)
Expected: color(srgb 0.2 0.4 0.6 / none).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "rgb(from rgb(none none none) r g b)" should set the property value Colors do not match.
Actual:   rgb(0, 0, 0)
Expected: color(srgb 0 0 0).
Error: assert_equals: Color format is correct. expected "color(srgb   )" but got "rgb(, , )"
FAIL e.style['color'] = "rgb(from rgb(none none none / none) r g b / alpha)" should set the property value Colors do not match.
Actual:   rgba(0, 0, 0, 0)
Expected: color(srgb 0 0 0 / 0).
Error: assert_equals: Color format is correct. expected "color(srgb    / )" but got "rgba(, , , )"
FAIL e.style['color'] = "rgb(from rgb(20% none 60%) r g b)" should set the property value Colors do not match.
Actual:   rgb(51, 0, 153)
Expected: color(srgb 0.2 0 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from rgb(20% 40% 60% / none) r g b / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0)
Expected: color(srgb 0.2 0.4 0.6 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "rgb(from currentColor r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgb(from color-mix(in srgb, red, red) r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from hsl(120deg 20% 50% / .5) r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(from rebeccapurple r g b) r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple 0 0 0)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple 0 0 0 / 0)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple 0 g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r 0 b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g 0 / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g b / 0)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) 0 g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 0 b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g 0 / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g b / 0)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple 25 g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r 25 b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g 25 / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g b / .25)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) 25 g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 25 b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g 25 / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g b / .20)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple 20% g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r 20% b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g 20% / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g b / 20%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) 20% g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 20% b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g 20% / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g b / 20%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple 25 g b / 25%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r 25 b / 25%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g 25 / 25%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) 25 g b / 25%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 25 b / 25%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r g 25 / 25%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple g b r)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple b alpha r / g)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r r r / r)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple alpha alpha alpha / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) g b r)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) b alpha r / g)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r r r / r)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) alpha alpha alpha / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r 20% 10)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r 10 20%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple 0% 10 10)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 20% 10)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) r 10 20%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) 0% 10 10)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple calc(r) calc(g) calc(b))" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r calc(g * 2) 10)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple b calc(r * .5) 10)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r calc(g * .5 + g * .5) 10)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r calc(b * .5 - g * .5) 10)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20%, 40%, 60%, 80%) calc(r) calc(g) calc(b) / calc(alpha))" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple none none none)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple none none none / none)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g none)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g none / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rebeccapurple r g b / none)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20% 40% 60% / 80%) r g none / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20% 40% 60% / 80%) r g b / none)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(none none none) r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(none none none / none) r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20% none 60%) r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from rgb(20% 40% 60% / none) r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from currentColor r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "rgba(from color-mix(in srgb, red, red) r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsl(from rebeccapurple h s l)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hsl(from rebeccapurple h s l / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h s l / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.8)
Expected: color(srgb 0.2 0.4 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hsl(from hsl(120deg 20% 50% / .5) h s l / alpha)" should set the property value Colors do not match.
Actual:   rgba(102, 153, 102, 0.5)
Expected: color(srgb 0.4 0.6 0.4 / 0.5).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hsl(from hsl(from rebeccapurple h s l) h s l)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hsl(from rebeccapurple 0 0% 0%)" should set the property value Colors do not match.
Actual:   rgb(0, 0, 0)
Expected: color(srgb 0 0 0).
Error: assert_equals: Color format is correct. expected "color(srgb   )" but got "rgb(, , )"
FAIL e.style['color'] = "hsl(from rebeccapurple 0deg 0% 0%)" should set the property value Colors do not match.
Actual:   rgb(0, 0, 0)
Expected: color(srgb 0 0 0).
Error: assert_equals: Color format is correct. expected "color(srgb   )" but got "rgb(, , )"
FAIL e.style['color'] = "hsl(from rebeccapurple 0 0% 0% / 0)" should set the property value Colors do not match.
Actual:   rgba(0, 0, 0, 0)
Expected: color(srgb 0 0 0 / 0).
Error: assert_equals: Color format is correct. expected "color(srgb    / )" but got "rgba(, , , )"
FAIL e.style['color'] = "hsl(from rebeccapurple 0deg 0% 0% / 0)" should set the property value Colors do not match.
Actual:   rgba(0, 0, 0, 0)
Expected: color(srgb 0 0 0 / 0).
Error: assert_equals: Color format is correct. expected "color(srgb    / )" but got "rgba(, , , )"
FAIL e.style['color'] = "hsl(from rebeccapurple 0 s l / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 51, 51)
Expected: color(srgb 0.6 0.2 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hsl(from rebeccapurple 0deg s l / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 51, 51)
Expected: color(srgb 0.6 0.2 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hsl(from rebeccapurple h 0% l / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 102, 102)
Expected: color(srgb 0.4 0.4 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hsl(from rebeccapurple h s 0% / alpha)" should set the property value Colors do not match.
Actual:   rgb(0, 0, 0)
Expected: color(srgb 0 0 0).
Error: assert_equals: Color format is correct. expected "color(srgb   )" but got "rgb(, , )"
FAIL e.style['color'] = "hsl(from rebeccapurple h s l / 0)" should set the property value Colors do not match.
Actual:   rgba(102, 51, 153, 0)
Expected: color(srgb 0.4 0.2 0.6 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) 0 s l / alpha)" should set the property value Colors do not match.
Actual:   rgba(153, 51, 51, 0.8)
Expected: color(srgb 0.6 0.2 0.2 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) 0deg s l / alpha)" should set the property value Colors do not match.
Actual:   rgba(153, 51, 51, 0.8)
Expected: color(srgb 0.6 0.2 0.2 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h 0% l / alpha)" should set the property value Colors do not match.
Actual:   rgba(102, 102, 102, 0.8)
Expected: color(srgb 0.4 0.4 0.4 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h s 0% / alpha)" should set the property value Colors do not match.
Actual:   rgba(0, 0, 0, 0.8)
Expected: color(srgb 0 0 0 / 0.8).
Error: assert_equals: Color format is correct. expected "color(srgb    / )" but got "rgba(, , , )"
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h s l / 0)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0)
Expected: color(srgb 0.2 0.4 0.6 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hsl(from rebeccapurple 25 s l / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 94, 51)
Expected: color(srgb 0.6 0.3667 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hsl(from rebeccapurple 25deg s l / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 94, 51)
Expected: color(srgb 0.6 0.3667 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hsl(from rebeccapurple h 20% l / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 82, 122)
Expected: color(srgb 0.4 0.32 0.48).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hsl(from rebeccapurple h s 20% / alpha)" should set the property value Colors do not match.
Actual:   rgb(51, 25, 77)
Expected: color(srgb 0.2 0.1 0.3).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hsl(from rebeccapurple h s l / .25)" should set the property value Colors do not match.
Actual:   rgba(102, 51, 153, 0.25)
Expected: color(srgb 0.4 0.2 0.6 / 0.25).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) 25 s l / alpha)" should set the property value Colors do not match.
Actual:   rgba(153, 94, 51, 0.8)
Expected: color(srgb 0.6 0.3667 0.2 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) 25deg s l / alpha)" should set the property value Colors do not match.
Actual:   rgba(153, 94, 51, 0.8)
Expected: color(srgb 0.6 0.3667 0.2 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h 20% l / alpha)" should set the property value Colors do not match.
Actual:   rgba(82, 102, 122, 0.8)
Expected: color(srgb 0.32 0.4 0.48 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.32 +/- 0.01, expected 0.32 but got 82
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h s 20% / alpha)" should set the property value Colors do not match.
Actual:   rgba(25, 51, 77, 0.8)
Expected: color(srgb 0.1 0.2 0.3 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.1 +/- 0.01, expected 0.1 but got 25
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h s l / .2)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.2)
Expected: color(srgb 0.2 0.4 0.6 / 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hsl(from rebeccapurple h l s)" should set the property value Colors do not match.
Actual:   rgb(128, 77, 179)
Expected: color(srgb 0.5 0.3 0.7).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.5 +/- 0.01, expected 0.5 but got 128
FAIL e.style['color'] = "hsl(from rebeccapurple h alpha l / s)" should set the property value Colors do not match.
Actual:   rgba(102, 0, 204, 0.5)
Expected: color(srgb 0.4  0.396 0.404).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hsl(from rebeccapurple h l l / l)" should set the property value Colors do not match.
Actual:   rgba(102, 61, 143, 0.4)
Expected: color(srgb 0.4 0.24 0.56).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hsl(from rebeccapurple h alpha alpha / alpha)" should set the property value Colors do not match.
Actual:   rgb(255, 255, 255)
Expected: color(srgb 0.01 0.01 0.01).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.01 +/- 0.01, expected 0.01 but got 255
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h l s)" should set the property value Colors do not match.
Actual:   rgb(77, 128, 179)
Expected: color(srgb 0.3 0.5 0.7 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h alpha l / s)" should set the property value Colors do not match.
Actual:   rgba(20, 102, 184, 0.5)
Expected: color(srgb 0.4 0.4 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h l l / l)" should set the property value Colors do not match.
Actual:   rgba(61, 102, 143, 0.4)
Expected: color(srgb 0.24 0.4 0.56).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) h alpha alpha / alpha)" should set the property value Colors do not match.
Actual:   rgba(163, 204, 245, 0.8)
Expected: color(srgb 0.01 0.01 0.01 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.01 +/- 0.01, expected 0.01 but got 163
FAIL e.style['color'] = "hsl(from rebeccapurple calc(h) calc(s) calc(l))" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hsl(from rgb(20%, 40%, 60%, 80%) calc(h) calc(s) calc(l) / calc(alpha))" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.8)
Expected: color(srgb 0.2 0.4 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hsl(from rebeccapurple none none none)" should set the property value Colors do not match.
Actual:   rgb(0, 0, 0)
Expected: color(srgb 0 0 0).
Error: assert_equals: Color format is correct. expected "color(srgb   )" but got "rgb(, , )"
FAIL e.style['color'] = "hsl(from rebeccapurple none none none / none)" should set the property value Colors do not match.
Actual:   rgba(0, 0, 0, 0)
Expected: color(srgb 0 0 0 / 0).
Error: assert_equals: Color format is correct. expected "color(srgb    / )" but got "rgba(, , , )"
FAIL e.style['color'] = "hsl(from rebeccapurple h s none)" should set the property value Colors do not match.
Actual:   rgb(0, 0, 0)
Expected: color(srgb 0 0 0).
Error: assert_equals: Color format is correct. expected "color(srgb   )" but got "rgb(, , )"
FAIL e.style['color'] = "hsl(from rebeccapurple h s none / alpha)" should set the property value Colors do not match.
Actual:   rgb(0, 0, 0)
Expected: color(srgb 0 0 0).
Error: assert_equals: Color format is correct. expected "color(srgb   )" but got "rgb(, , )"
FAIL e.style['color'] = "hsl(from rebeccapurple h s l / none)" should set the property value Colors do not match.
Actual:   rgba(102, 51, 153, 0)
Expected: color(srgb 0.4 0.2 0.6 / none).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hsl(from rebeccapurple none s l / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 51, 51)
Expected: color(srgb 0.6 0.2 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hsl(from hsl(120deg 20% 50% / .5) h s none / alpha)" should set the property value Colors do not match.
Actual:   rgba(0, 0, 0, 0.5)
Expected: color(srgb 0 0 0 / 0.5).
Error: assert_equals: Color format is correct. expected "color(srgb    / )" but got "rgba(, , , )"
FAIL e.style['color'] = "hsl(from hsl(120deg 20% 50% / .5) h s l / none)" should set the property value Colors do not match.
Actual:   rgba(102, 153, 102, 0)
Expected: color(srgb 0.4 0.6 0.4 / none).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hsl(from hsl(120deg 20% 50% / .5) none s l / alpha)" should set the property value Colors do not match.
Actual:   rgba(153, 102, 102, 0.5)
Expected: color(srgb 0.6 0.4 0.4 / 0.5).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hsl(from hsl(none none none) h s l)" should set the property value Colors do not match.
Actual:   rgb(0, 0, 0)
Expected: color(srgb 0 0 0).
Error: assert_equals: Color format is correct. expected "color(srgb   )" but got "rgb(, , )"
FAIL e.style['color'] = "hsl(from hsl(none none none / none) h s l / alpha)" should set the property value Colors do not match.
Actual:   rgba(0, 0, 0, 0)
Expected: color(srgb 0 0 0 / 0).
Error: assert_equals: Color format is correct. expected "color(srgb    / )" but got "rgba(, , , )"
FAIL e.style['color'] = "hsl(from hsl(120deg none 50% / .5) h s l)" should set the property value Colors do not match.
Actual:   rgb(128, 128, 128)
Expected: color(srgb 0.5 0.5 0.5 / 0.5).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
FAIL e.style['color'] = "hsl(from hsl(120deg 20% 50% / none) h s l / alpha)" should set the property value Colors do not match.
Actual:   rgba(102, 153, 102, 0)
Expected: color(srgb 0.4 0.6 0.4 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hsl(from hsl(none 20% 50% / .5) h s l / alpha)" should set the property value Colors do not match.
Actual:   rgba(153, 102, 102, 0.5)
Expected: color(srgb 0.6 0.4 0.4 / 0.5).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hsl(from currentColor h s l)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsl(from color-mix(in srgb, red, red) h s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h s l)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from hsl(120deg 20% 50% / .5) h s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from hsl(from rebeccapurple h s l) h s l)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple 0 0% 0%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple 0deg 0% 0%)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple 0 0% 0% / 0)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple 0deg 0% 0% / 0)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple 0 s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple 0deg s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h 0% l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h s 0% / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h s l / 0)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) 0 s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) 0deg s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h 0% l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h s 0% / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h s l / 0)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple 25 s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple 25deg s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h 20% l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h s 20% / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h s l / .25)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) 25 s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) 25deg s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h 20% l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h s 20% / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h s l / .2)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h l s)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h alpha l / s)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h l l / l)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h alpha alpha / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h l s)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h alpha l / s)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h l l / l)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) h alpha alpha / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple calc(h) calc(s) calc(l))" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rgb(20%, 40%, 60%, 80%) calc(h) calc(s) calc(l) / calc(alpha))" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple none none none)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple none none none / none)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h s none)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h s none / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple h s l / none)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from rebeccapurple none s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from hsl(120deg 20% 50% / .5) h s none / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from hsl(120deg 20% 50% / .5) h s l / none)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from hsl(120deg 20% 50% / .5) none s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from hsl(none none none) h s l)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from hsl(none none none / none) h s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from hsl(120deg none 50% / .5) h s l)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from hsl(120deg 20% 50% / none) h s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from hsl(none 20% 50% / .5) h s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from currentColor h s l)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hsla(from color-mix(in srgb, red, red) h s l / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hwb(from rebeccapurple h w b)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hwb(from rebeccapurple h w b / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w b / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.8)
Expected: color(srgb 0.2 0.4 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hwb(from hsl(120deg 20% 50% / .5) h w b / alpha)" should set the property value Colors do not match.
Actual:   rgba(102, 153, 102, 0.5)
Expected: color(srgb 0.4 0.6 0.4 / 0.5).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hwb(from hwb(from rebeccapurple h w b) h w b)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hwb(from rebeccapurple 0 0% 0%)" should set the property value Colors do not match.
Actual:   rgb(255, 0, 0)
Expected: color(srgb 1 0 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 1 +/- 0.01, expected 1 but got 255
FAIL e.style['color'] = "hwb(from rebeccapurple 0deg 0% 0%)" should set the property value Colors do not match.
Actual:   rgb(255, 0, 0)
Expected: color(srgb 1 0 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 1 +/- 0.01, expected 1 but got 255
FAIL e.style['color'] = "hwb(from rebeccapurple 0 0% 0% / 0)" should set the property value Colors do not match.
Actual:   rgba(255, 0, 0, 0)
Expected: color(srgb 1 0 0 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 1 +/- 0.01, expected 1 but got 255
FAIL e.style['color'] = "hwb(from rebeccapurple 0deg 0% 0% / 0)" should set the property value Colors do not match.
Actual:   rgba(255, 0, 0, 0)
Expected: color(srgb 1 0 0 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 1 +/- 0.01, expected 1 but got 255
FAIL e.style['color'] = "hwb(from rebeccapurple 0 w b / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 51, 51)
Expected: color(srgb 0.6 0.2 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rebeccapurple 0deg w b / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 51, 51)
Expected: color(srgb 0.6 0.2 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rebeccapurple h 0% b / alpha)" should set the property value Colors do not match.
Actual:   rgb(77, 0, 153)
Expected: color(srgb 0.3 0 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.3 +/- 0.01, expected 0.3 but got 77
FAIL e.style['color'] = "hwb(from rebeccapurple h w 0% / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 51, 255)
Expected: color(srgb 0.6 0.2 1).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rebeccapurple h w b / 0)" should set the property value Colors do not match.
Actual:   rgba(102, 51, 153, 0)
Expected: color(srgb 0.4 0.2 0.6 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) 0 w b / alpha)" should set the property value Colors do not match.
Actual:   rgba(153, 51, 51, 0.8)
Expected: color(srgb 0.6 0.2 0.2 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) 0deg w b / alpha)" should set the property value Colors do not match.
Actual:   rgba(153, 51, 51, 0.8)
Expected: color(srgb 0.6 0.2 0.2 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h 0% b / alpha)" should set the property value Colors do not match.
Actual:   rgba(0, 77, 153, 0.8)
Expected: color(srgb 0 0.3 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 1, expected 0.3 +/- 0.01, expected 0.3 but got 77
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w 0% / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 153, 255, 0.8)
Expected: color(srgb 0.2 0.6 1 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w b / 0)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0)
Expected: color(srgb 0.2 0.4 0.6 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hwb(from rebeccapurple 25 w b / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 94, 51)
Expected: color(srgb 0.6 0.3667 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rebeccapurple 25deg w b / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 94, 51)
Expected: color(srgb 0.6 0.3667 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rebeccapurple h 20% b / alpha)" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hwb(from rebeccapurple h w 20% / alpha)" should set the property value Colors do not match.
Actual:   rgb(128, 51, 204)
Expected: color(srgb 0.5 0.2 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.5 +/- 0.01, expected 0.5 but got 128
FAIL e.style['color'] = "hwb(from rebeccapurple h w b / .2)" should set the property value Colors do not match.
Actual:   rgba(102, 51, 153, 0.2)
Expected: color(srgb 0.4 0.2 0.6 / 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) 25 w b / alpha)" should set the property value Colors do not match.
Actual:   rgba(153, 94, 51, 0.8)
Expected: color(srgb 0.6 0.3667 0.2 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) 25deg w b / alpha)" should set the property value Colors do not match.
Actual:   rgba(153, 94, 51, 0.8)
Expected: color(srgb 0.6 0.3667 0.2 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h 20% b / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.8)
Expected: color(srgb 0.2 0.4 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w 20% / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 128, 204, 0.8)
Expected: color(srgb 0.2 0.5 0.8 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w b / .2)" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.2)
Expected: color(srgb 0.2 0.4 0.6 / 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hwb(from rebeccapurple h b w)" should set the property value Colors do not match.
Actual:   rgb(153, 102, 204)
Expected: color(srgb 0.6 0.4 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rebeccapurple h alpha w / b)" should set the property value Colors do not match.
Actual:   rgba(213, 213, 213, 0.4)
Expected: color(srgb 0.405 0.01 0.8 / 1).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.405 +/- 0.01, expected 0.405 but got 213
FAIL e.style['color'] = "hwb(from rebeccapurple h w w / w)" should set the property value Colors do not match.
Actual:   rgba(128, 51, 204, 0.2)
Expected: color(srgb 0.5 0.2 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hwb(from rebeccapurple h alpha alpha / alpha)" should set the property value Colors do not match.
Actual:   rgb(128, 128, 128)
Expected: color(srgb 0.5 0.01 0.99).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.5 +/- 0.01, expected 0.5 but got 128
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h b w)" should set the property value Colors do not match.
Actual:   rgb(102, 153, 204)
Expected: color(srgb 0.4 0.6 0.8 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h alpha w / b)" should set the property value Colors do not match.
Actual:   rgba(204, 204, 204, 0.4)
Expected: color(srgb 0.01 0.404 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h w w / w)" should set the property value Colors do not match.
Actual:   rgba(51, 128, 204, 0.2)
Expected: color(srgb 0.2 0.5 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) h alpha alpha / alpha)" should set the property value Colors do not match.
Actual:   rgba(128, 128, 128, 0.8)
Expected: color(srgb 0.01 0.5 0.99 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.01 +/- 0.01, expected 0.01 but got 128
FAIL e.style['color'] = "hwb(from rebeccapurple calc(h) calc(w) calc(b))" should set the property value Colors do not match.
Actual:   rgb(102, 51, 153)
Expected: color(srgb 0.4 0.2 0.6).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.4 +/- 0.01, expected 0.4 but got 102
FAIL e.style['color'] = "hwb(from rgb(20%, 40%, 60%, 80%) calc(h) calc(w) calc(b) / calc(alpha))" should set the property value Colors do not match.
Actual:   rgba(51, 102, 153, 0.8)
Expected: color(srgb 0.2 0.4 0.6 / 0.8).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hwb(from rebeccapurple none none none)" should set the property value Colors do not match.
Actual:   rgb(255, 0, 0)
Expected: color(srgb 1 0 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 1 +/- 0.01, expected 1 but got 255
FAIL e.style['color'] = "hwb(from rebeccapurple none none none / none)" should set the property value Colors do not match.
Actual:   rgba(255, 0, 0, 0)
Expected: color(srgb 1 0 0 / none).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hwb(from rebeccapurple h w none)" should set the property value Colors do not match.
Actual:   rgb(153, 51, 255)
Expected: color(srgb 0.6 0.2 1).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rebeccapurple h w none / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 51, 255)
Expected: color(srgb 0.6 0.2 1).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from rebeccapurple h w b / none)" should set the property value Colors do not match.
Actual:   rgba(102, 51, 153, 0)
Expected: color(srgb 0.4 0.2 0.6 / none).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hwb(from rebeccapurple none w b / alpha)" should set the property value Colors do not match.
Actual:   rgb(153, 51, 51)
Expected: color(srgb 0.6 0.2 0.2).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.6 +/- 0.01, expected 0.6 but got 153
FAIL e.style['color'] = "hwb(from hwb(120deg 20% 50% / .5) h w none / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 255, 51, 0.5)
Expected: color(srgb 0.2 1 0.2 / 0.5).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hwb(from hwb(120deg 20% 50% / .5) h w b / none)" should set the property value Colors do not match.
Actual:   rgba(51, 128, 51, 0)
Expected: color(srgb 0.2 0.5 0.2 / none).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
FAIL e.style['color'] = "hwb(from hwb(120deg 20% 50% / .5) none w b / alpha)" should set the property value Colors do not match.
Actual:   rgba(128, 51, 51, 0.5)
Expected: color(srgb 0.5 0.2 0.2 / 0.5).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.5 +/- 0.01, expected 0.5 but got 128
FAIL e.style['color'] = "hwb(from hwb(none none none) h w b)" should set the property value Colors do not match.
Actual:   rgb(255, 0, 0)
Expected: color(srgb 1 0 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 1 +/- 0.01, expected 1 but got 255
FAIL e.style['color'] = "hwb(from hwb(none none none / none) h w b / alpha)" should set the property value Colors do not match.
Actual:   rgba(255, 0, 0, 0)
Expected: color(srgb 1 0 0 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 1 +/- 0.01, expected 1 but got 255
FAIL e.style['color'] = "hwb(from hwb(120deg none 50% / .5) h w b)" should set the property value Colors do not match.
Actual:   rgb(0, 128, 0)
Expected: color(srgb 0 0.5 0 / 0.5).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
FAIL e.style['color'] = "hwb(from hwb(120deg 20% 50% / none) h w b / alpha)" should set the property value Colors do not match.
Actual:   rgba(51, 128, 51, 0)
Expected: color(srgb 0.2 0.5 0.2 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.2 +/- 0.01, expected 0.2 but got 51
FAIL e.style['color'] = "hwb(from hwb(none 20% 50% / .5) h w b / alpha)" should set the property value Colors do not match.
Actual:   rgba(128, 51, 51, 0.5)
Expected: color(srgb 0.5 0.2 0.2 / 0.5).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 0.5 +/- 0.01, expected 0.5 but got 128
FAIL e.style['color'] = "hwb(from currentColor h w b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "hwb(from color-mix(in srgb, red, red) h w b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "lab(from lab(25 20 50) l a b)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l a b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) l a b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(200 300 400 / 500%) l a b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(-200 -300 -400 / -500%) l a b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(from lab(25 20 50) l a b) l a b)" should set the property value
PASS e.style['color'] = "lab(from color(display-p3 0 0 0) l a b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) 0 0 0)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) 0 a b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l 0 b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l a 0 / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l a b / 0)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) 0 a b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) l 0 b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) l a 0 / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) l a b / 0)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) 35 a b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l 35 b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l a 35 / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l a b / .35)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) 35 a b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) l 35 b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) l a 35 / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) l a b / .35)" should set the property value
PASS e.style['color'] = "lab(from lab(0.7 45 30 / 40%) 200 300 400 / 500)" should set the property value
PASS e.style['color'] = "lab(from lab(0.7 45 30 / 40%) -200 -300 -400 / -500)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l b a)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l a a / a)" should set the property value
FAIL e.style['color'] = "lab(from lab(25 20 50 / 40%) l b a)" should set the property value Colors do not match.
Actual:   lab(25 50 20)
Expected: lab(25 50 20 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) l a a / a)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) calc(l) calc(a) calc(b))" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) calc(l) calc(a) calc(b) / calc(alpha))" should set the property value
PASS e.style['color'] = "lab(from lab(50 -30 40) calc(l - 20) a b)" should set the property value
PASS e.style['color'] = "lab(from lab(50 -30 40) l calc(a / 3) calc(b / 2))" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) none none none)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) none none none / none)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l a none)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l a none / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50) l a b / none)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) l a none / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / 40%) l a b / none)" should set the property value
PASS e.style['color'] = "lab(from lab(none none none) l a b)" should set the property value
PASS e.style['color'] = "lab(from lab(none none none / none) l a b / alpha)" should set the property value
PASS e.style['color'] = "lab(from lab(25 none 50) l a b)" should set the property value
PASS e.style['color'] = "lab(from lab(25 20 50 / none) l a b / alpha)" should set the property value
FAIL e.style['color'] = "lab(from currentColor l a b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "lab(from color-mix(in lab, lab(25 20 50), lab(25 20 50)) l a b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a b)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(2 3 4 / 500%) l a b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(-2 -3 -4 / -500%) l a b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(from oklab(0.25 0.2 0.5) l a b) l a b)" should set the property value
PASS e.style['color'] = "oklab(from color(display-p3 0 0 0) l a b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) 0 0 0)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) 0 a b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l 0 b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a 0 / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a b / 0)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) 0 a b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l 0 b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a 0 / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a b / 0)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) 0.35 a b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l 0.35 b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a 0.35 / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a b / .35)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) 0.35 a b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l 0.35 b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a 0.35 / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a b / .35)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.7 0.45 0.3 / 40%) 2 3 4 / 500)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.7 0.45 0.3 / 40%) -2 -3 -4 / -500)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l b a)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a a / a)" should set the property value
FAIL e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l b a)" should set the property value Colors do not match.
Actual:   oklab(0.25 0.5 0.2)
Expected: oklab(0.25 0.5 0.2 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a a / a)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) calc(l) calc(a) calc(b))" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) calc(l) calc(a) calc(b) / calc(alpha))" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.7 0.25 -0.15) calc(l - 0.2) a b)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.7 0.25 -0.15) l calc(a / 2) calc(b / 3))" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) none none none)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) none none none / none)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a none)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a none / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5) l a b / none)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a none / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / 40%) l a b / none)" should set the property value
PASS e.style['color'] = "oklab(from oklab(none none none) l a b)" should set the property value
PASS e.style['color'] = "oklab(from oklab(none none none / none) l a b / alpha)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 none 0.5) l a b)" should set the property value
PASS e.style['color'] = "oklab(from oklab(0.25 0.2 0.5 / none) l a b / alpha)" should set the property value
FAIL e.style['color'] = "oklab(from currentColor l a b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "oklab(from color-mix(in oklab, oklab(0.25 0.2 0.5), oklab(0.25 0.2 0.5)) l a b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "lch(from lch(0.7 45 30) l c h)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l c h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(200 300 400 / 500%) l c h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(-200 -300 -400 / -500%) l c h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(from lch(0.7 45 30) l c h) l c h)" should set the property value
PASS e.style['color'] = "lch(from color(display-p3 0 0 0) l c h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lab(0.7 45 30) l c h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) 0 0 0)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) 0 0 0deg)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) 0 0 0deg / 0)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) 0 c h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l 0 h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l c 0 / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l c 0deg / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l c h / 0)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) 0 c h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l 0 h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c 0 / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c 0deg / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c h / 0)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) 25 c h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l 25 h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l c 25 / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l c 25deg / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l c h / .25)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) 25 c h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l 25 h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c 25 / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c 25deg / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c h / .25)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) 200 300 400 / 500)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) -200 -300 -400 / -500)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) 50 120 400deg / 500)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) 50 120 -400deg / -500)" should set the property value
PASS e.style['color'] = "lch(from lch(.7 45 30) l c c / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(.7 45 30 / 40%) l c c / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) calc(l) calc(c) calc(h))" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) calc(l) calc(c) calc(h) / calc(alpha))" should set the property value
PASS e.style['color'] = "lch(from lch(50 100 300) calc(l - 20) c h)" should set the property value
PASS e.style['color'] = "lch(from lch(50 100 300) l calc(c / 2) h)" should set the property value
PASS e.style['color'] = "lch(from lch(50 100 300) l c calc(h * 2.5))" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) none none none)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) none none none / none)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l c none)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l c none / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30) l c h / none)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c none / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / 40%) l c h / none)" should set the property value
PASS e.style['color'] = "lch(from lch(none none none) l c h)" should set the property value
PASS e.style['color'] = "lch(from lch(none none none / none) l c h / alpha)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 none 30) l c h)" should set the property value
PASS e.style['color'] = "lch(from lch(0.7 45 30 / none) l c h / alpha)" should set the property value
FAIL e.style['color'] = "lch(from currentColor) l c h)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "lch(from color-mix(in lch, lch(70 45 30), lch(70 45 30)) l c h / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c h)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(2 3 400 / 500%) l c h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(-2 -3 -400 / -500%) l c h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(from oklch(0.7 0.45 30) l c h) l c h)" should set the property value
PASS e.style['color'] = "oklch(from color(display-p3 0 0 0) l c h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklab(0.7 45 30) l c h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0 0 0)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0 0 0deg)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0 0 0deg / 0)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0 c h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l 0 h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c 0 / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c 0deg / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c h / 0)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) 0 c h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l 0 h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c 0 / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c 0deg / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c h / 0)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) 0.25 c h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l 0.25 h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c 0.25 / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c 25deg / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c h / .25)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) 0.25 c h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l 0.25 h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c 0.25 / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c 25deg / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c h / .25)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) 2 3 400 / 500)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) -2 -3 -400 / -500)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) 0.5 1.2 400deg / 500)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) 0.5 1.2 -400deg / -500)" should set the property value
PASS e.style['color'] = "oklch(from oklch(.7 0.45 30) l c c / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(.7 0.45 30 / 40%) l c c / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) calc(l) calc(c) calc(h))" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) calc(l) calc(c) calc(h) / calc(alpha))" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.2 300) calc(l - 0.2) c h)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.2 300) l calc(c / 2) h)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.2 300) l c calc(h * 2.5))" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) none none none)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) none none none / none)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c none)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c none / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30) l c h / none)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c none / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / 40%) l c h / none)" should set the property value
PASS e.style['color'] = "oklch(from oklch(none none none) l c h)" should set the property value
PASS e.style['color'] = "oklch(from oklch(none none none / none) l c h / alpha)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 none 30) l c h)" should set the property value
PASS e.style['color'] = "oklch(from oklch(0.7 0.45 30 / none) l c h / alpha)" should set the property value
FAIL e.style['color'] = "oklch(from color-mix(in oklch, oklch(0.7 0.45 30), oklch(0.7 0.45 30)) l c h / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "oklch(from currentColor l c h)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b)" should set the property value Colors do not match.
Actual:   color(srgb 0.7 0.5 0.3)
Expected: color(srgb 0.7 0.5 0.3 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(from color(srgb 0.7 0.5 0.3) srgb r g b) srgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 0 0 0)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 2 3 4)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 2 3 4 / 5)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb -2 -3 -4)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb -2 -3 -4 / -5)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 200% 300% 400%)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb 200% 300% 400% / 500%)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb -200% -300% -400%)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb -200% -300% -400% / -500%)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb g b r)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb alpha alpha alpha / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb g b r)" should set the property value Colors do not match.
Actual:   color(srgb 0.5 0.3 0.7)
Expected: color(srgb 0.5 0.3 0.7 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb alpha alpha alpha / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 1.7 1.5 1.3) srgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb 1.7 1.5 1.3) srgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 1.7 1.5 1.3 / 140%) srgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb 1.7 1.5 1.3 / 140%) srgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb -0.7 -0.5 -0.3) srgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb -0.7 -0.5 -0.3) srgb r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(srgb -0.7 -0.5 -0.3 / -40%) srgb r g b)" should set the property value Colors do not match.
Actual:   color(srgb -0.7 -0.5 -0.3)
Expected: color(srgb -0.7 -0.5 -0.3 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(srgb -0.7 -0.5 -0.3 / -40%) srgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb calc(r) calc(g) calc(b))" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb none none none)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb none none none / none)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g none)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3) srgb r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / 40%) srgb r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(srgb none none none) srgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb none none none / none) srgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 none 0.3) srgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb 0.7 0.5 0.3 / none) srgb r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from currentColor srgb r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "color(from color-mix(in xyz, color(srgb 0.7 0.5 0.3), color(srgb 0.7 0.5 0.3)) srgb r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b)" should set the property value Colors do not match.
Actual:   color(srgb-linear 0.7 0.5 0.3)
Expected: color(srgb-linear 0.7 0.5 0.3 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b) srgb-linear r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0 0 0)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 2 3 4)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 2 3 4 / 5)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -2 -3 -4)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -2 -3 -4 / -5)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 200% 300% 400%)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear 200% 300% 400% / 500%)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -200% -300% -400%)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear -200% -300% -400% / -500%)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear g b r)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear alpha alpha alpha / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear g b r)" should set the property value Colors do not match.
Actual:   color(srgb-linear 0.5 0.3 0.7)
Expected: color(srgb-linear 0.5 0.3 0.7 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear alpha alpha alpha / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 1.7 1.5 1.3) srgb-linear r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 1.7 1.5 1.3) srgb-linear r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 1.7 1.5 1.3 / 140%) srgb-linear r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 1.7 1.5 1.3 / 140%) srgb-linear r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear -0.7 -0.5 -0.3) srgb-linear r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear -0.7 -0.5 -0.3) srgb-linear r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(srgb-linear -0.7 -0.5 -0.3 / -40%) srgb-linear r g b)" should set the property value Colors do not match.
Actual:   color(srgb-linear -0.7 -0.5 -0.3)
Expected: color(srgb-linear -0.7 -0.5 -0.3 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(srgb-linear -0.7 -0.5 -0.3 / -40%) srgb-linear r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear calc(r) calc(g) calc(b))" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear none none none)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear none none none / none)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g none)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3) srgb-linear r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / 40%) srgb-linear r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear none none none) srgb-linear r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear none none none / none) srgb-linear r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 none 0.3) srgb-linear r g b)" should set the property value
PASS e.style['color'] = "color(from color(srgb-linear 0.7 0.5 0.3 / none) srgb-linear r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from currentColor srgb-linear r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "color(from color-mix(in xyz, color(srgb-linear 0.7 0.5 0.3), color(srgb-linear 0.7 0.5 0.3)) srgb-linear r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b)" should set the property value Colors do not match.
Actual:   color(a98-rgb 0.7 0.5 0.3)
Expected: color(a98-rgb 0.7 0.5 0.3 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b) a98-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0 0 0)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 2 3 4)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 2 3 4 / 5)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -2 -3 -4)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -2 -3 -4 / -5)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 200% 300% 400%)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb 200% 300% 400% / 500%)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -200% -300% -400%)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb -200% -300% -400% / -500%)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb g b r)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb alpha alpha alpha / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb g b r)" should set the property value Colors do not match.
Actual:   color(a98-rgb 0.5 0.3 0.7)
Expected: color(a98-rgb 0.5 0.3 0.7 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb alpha alpha alpha / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 1.7 1.5 1.3) a98-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 1.7 1.5 1.3) a98-rgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 1.7 1.5 1.3 / 140%) a98-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 1.7 1.5 1.3 / 140%) a98-rgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb -0.7 -0.5 -0.3) a98-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb -0.7 -0.5 -0.3) a98-rgb r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(a98-rgb -0.7 -0.5 -0.3 / -40%) a98-rgb r g b)" should set the property value Colors do not match.
Actual:   color(a98-rgb -0.7 -0.5 -0.3)
Expected: color(a98-rgb -0.7 -0.5 -0.3 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(a98-rgb -0.7 -0.5 -0.3 / -40%) a98-rgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb calc(r) calc(g) calc(b))" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb none none none)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb none none none / none)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g none)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3) a98-rgb r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / 40%) a98-rgb r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb none none none) a98-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb none none none / none) a98-rgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 none 0.3) a98-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(a98-rgb 0.7 0.5 0.3 / none) a98-rgb r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from currentColor a98-rgb r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "color(from color-mix(in xyz, color(a98-rgb 0.7 0.5 0.3), color(a98-rgb 0.7 0.5 0.3)) a98-rgb r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b)" should set the property value Colors do not match.
Actual:   color(rec2020 0.7 0.5 0.3)
Expected: color(rec2020 0.7 0.5 0.3 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b) rec2020 r g b)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 0 0 0)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 2 3 4)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 2 3 4 / 5)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 -2 -3 -4)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 -2 -3 -4 / -5)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 200% 300% 400%)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 200% 300% 400% / 500%)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 -200% -300% -400%)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 -200% -300% -400% / -500%)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 g b r)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 alpha alpha alpha / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 g b r)" should set the property value Colors do not match.
Actual:   color(rec2020 0.5 0.3 0.7)
Expected: color(rec2020 0.5 0.3 0.7 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 alpha alpha alpha / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 1.7 1.5 1.3) rec2020 r g b)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 1.7 1.5 1.3) rec2020 r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 1.7 1.5 1.3 / 140%) rec2020 r g b)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 1.7 1.5 1.3 / 140%) rec2020 r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 -0.7 -0.5 -0.3) rec2020 r g b)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 -0.7 -0.5 -0.3) rec2020 r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(rec2020 -0.7 -0.5 -0.3 / -40%) rec2020 r g b)" should set the property value Colors do not match.
Actual:   color(rec2020 -0.7 -0.5 -0.3)
Expected: color(rec2020 -0.7 -0.5 -0.3 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(rec2020 -0.7 -0.5 -0.3 / -40%) rec2020 r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 calc(r) calc(g) calc(b))" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 none none none)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 none none none / none)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g none)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3) rec2020 r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / 40%) rec2020 r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 none none none) rec2020 r g b)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 none none none / none) rec2020 r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 none 0.3) rec2020 r g b)" should set the property value
PASS e.style['color'] = "color(from color(rec2020 0.7 0.5 0.3 / none) rec2020 r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from currentColor rec2020 r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "color(from color-mix(in xyz, color(rec2020 0.7 0.5 0.3), color(rec2020 0.7 0.5 0.3)) rec2020 r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b)" should set the property value Colors do not match.
Actual:   color(prophoto-rgb 0.7 0.5 0.3)
Expected: color(prophoto-rgb 0.7 0.5 0.3 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b) prophoto-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0 0 0)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 2 3 4)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 2 3 4 / 5)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -2 -3 -4)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -2 -3 -4 / -5)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 200% 300% 400%)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb 200% 300% 400% / 500%)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -200% -300% -400%)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb -200% -300% -400% / -500%)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb g b r)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb alpha alpha alpha / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb g b r)" should set the property value Colors do not match.
Actual:   color(prophoto-rgb 0.5 0.3 0.7)
Expected: color(prophoto-rgb 0.5 0.3 0.7 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb alpha alpha alpha / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 1.7 1.5 1.3) prophoto-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 1.7 1.5 1.3) prophoto-rgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 1.7 1.5 1.3 / 140%) prophoto-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 1.7 1.5 1.3 / 140%) prophoto-rgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb -0.7 -0.5 -0.3) prophoto-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb -0.7 -0.5 -0.3) prophoto-rgb r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(prophoto-rgb -0.7 -0.5 -0.3 / -40%) prophoto-rgb r g b)" should set the property value Colors do not match.
Actual:   color(prophoto-rgb -0.7 -0.5 -0.3)
Expected: color(prophoto-rgb -0.7 -0.5 -0.3 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(prophoto-rgb -0.7 -0.5 -0.3 / -40%) prophoto-rgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb calc(r) calc(g) calc(b))" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb none none none)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb none none none / none)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g none)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3) prophoto-rgb r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / 40%) prophoto-rgb r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb none none none) prophoto-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb none none none / none) prophoto-rgb r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 none 0.3) prophoto-rgb r g b)" should set the property value
PASS e.style['color'] = "color(from color(prophoto-rgb 0.7 0.5 0.3 / none) prophoto-rgb r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from currentColor prophoto-rgb r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "color(from color-mix(in xyz, color(prophoto-rgb 0.7 0.5 0.3), color(prophoto-rgb 0.7 0.5 0.3)) prophoto-rgb r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b)" should set the property value Colors do not match.
Actual:   color(display-p3 0.7 0.5 0.3)
Expected: color(display-p3 0.7 0.5 0.3 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b) display-p3 r g b)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 0 0 0)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 0 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r 0 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b / 0)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 0.2 g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 20% g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r 0.2 b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r 20% b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g 20% / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b / 20%)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 2 3 4)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 2 3 4 / 5)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 -2 -3 -4)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 -2 -3 -4 / -5)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 200% 300% 400%)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 200% 300% 400% / 500%)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 -200% -300% -400%)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 -200% -300% -400% / -500%)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 g b r)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 alpha alpha alpha / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 g b r)" should set the property value Colors do not match.
Actual:   color(display-p3 0.5 0.3 0.7)
Expected: color(display-p3 0.5 0.3 0.7 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 b alpha r / g)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r r r / r)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 alpha alpha alpha / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 1.7 1.5 1.3) display-p3 r g b)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 1.7 1.5 1.3) display-p3 r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 1.7 1.5 1.3 / 140%) display-p3 r g b)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 1.7 1.5 1.3 / 140%) display-p3 r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 -0.7 -0.5 -0.3) display-p3 r g b)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 -0.7 -0.5 -0.3) display-p3 r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(display-p3 -0.7 -0.5 -0.3 / -40%) display-p3 r g b)" should set the property value Colors do not match.
Actual:   color(display-p3 -0.7 -0.5 -0.3)
Expected: color(display-p3 -0.7 -0.5 -0.3 / 0).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(display-p3 -0.7 -0.5 -0.3 / -40%) display-p3 r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 calc(r) calc(g) calc(b))" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 calc(r) calc(g) calc(b) / calc(alpha))" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 none none none)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 none none none / none)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g none)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3) display-p3 r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / 40%) display-p3 r g b / none)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 none none none) display-p3 r g b)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 none none none / none) display-p3 r g b / alpha)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 none 0.3) display-p3 r g b)" should set the property value
PASS e.style['color'] = "color(from color(display-p3 0.7 0.5 0.3 / none) display-p3 r g b / alpha)" should set the property value
FAIL e.style['color'] = "color(from currentColor display-p3 r g b)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "color(from color-mix(in xyz, color(display-p3 0.7 0.5 0.3), color(display-p3 0.7 0.5 0.3)) display-p3 r g b / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y z)" should set the property value Colors do not match.
Actual:   color(xyz-d65 7 -20.5 100)
Expected: color(xyz-d65 7 -20.5 100 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(from color(xyz 7 -20.5 100) xyz x y z) xyz x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz 0 0 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz 0 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x 0 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z / 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz 0 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x 0 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y z / 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz 0.2 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x 0.2 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z / 20%)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz 0.2 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x 0.2 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y z / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz y z x)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x x x / x)" should set the property value
FAIL e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz y z x)" should set the property value Colors do not match.
Actual:   color(xyz-d65 -20.5 100 7)
Expected: color(xyz-d65 -20.5 100 7 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x x x / x)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz calc(x) calc(y) calc(z))" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz calc(x) calc(y) calc(z) / calc(alpha))" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz none none none)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz none none none / none)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y none)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100) xyz x y z / none)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / 40%) xyz x y z / none)" should set the property value
PASS e.style['color'] = "color(from color(xyz none none none) xyz x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz none none none / none) xyz x y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 none 100) xyz x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz 7 -20.5 100 / none) xyz x y z / alpha)" should set the property value
FAIL e.style['color'] = "color(from currentColor xyz x y z)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "color(from color-mix(in xyz, color(xyz 0.7 0.5 0.3), color(xyz 0.7 0.5 0.3)) xyz x y z / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y z)" should set the property value Colors do not match.
Actual:   color(xyz-d50 7 -20.5 100)
Expected: color(xyz-d50 7 -20.5 100 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z) xyz-d50 x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 0 0 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 0 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x 0 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 0 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x 0 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y z / 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 0.2 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x 0.2 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / 20%)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 0.2 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x 0.2 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y z / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 y z x)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x x x / x)" should set the property value
FAIL e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 y z x)" should set the property value Colors do not match.
Actual:   color(xyz-d50 -20.5 100 7)
Expected: color(xyz-d50 -20.5 100 7 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x x x / x)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 calc(x) calc(y) calc(z))" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 calc(x) calc(y) calc(z) / calc(alpha))" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 none none none)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 none none none / none)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y none)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100) xyz-d50 x y z / none)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / 40%) xyz-d50 x y z / none)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 none none none) xyz-d50 x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 none none none / none) xyz-d50 x y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 none 100) xyz-d50 x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d50 7 -20.5 100 / none) xyz-d50 x y z / alpha)" should set the property value
FAIL e.style['color'] = "color(from currentColor xyz-d50 x y z)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "color(from color-mix(in xyz, color(xyz-d50 0.7 0.5 0.3), color(xyz-d50 0.7 0.5 0.3)) xyz-d50 x y z / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / alpha)" should set the property value
FAIL e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y z)" should set the property value Colors do not match.
Actual:   color(xyz-d65 7 -20.5 100)
Expected: color(xyz-d65 7 -20.5 100 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z) xyz-d65 x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 0 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 0 0 / 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 0 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x 0 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 0 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x 0 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y 0 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y z / 0)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 0.2 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x 0.2 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / 20%)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 0.2 y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x 0.2 z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y 0.2 / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y z / 0.2)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 y z x)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x x x / x)" should set the property value
FAIL e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 y z x)" should set the property value Colors do not match.
Actual:   color(xyz-d65 -20.5 100 7)
Expected: color(xyz-d65 -20.5 100 7 / 0.4).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x x x / x)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 calc(x) calc(y) calc(z))" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 calc(x) calc(y) calc(z) / calc(alpha))" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 none none none)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 none none none / none)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y none)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100) xyz-d65 x y z / none)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y none / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / 40%) xyz-d65 x y z / none)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 none none none) xyz-d65 x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 none none none / none) xyz-d65 x y z / alpha)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 none 100) xyz-d65 x y z)" should set the property value
PASS e.style['color'] = "color(from color(xyz-d65 7 -20.5 100 / none) xyz-d65 x y z / alpha)" should set the property value
FAIL e.style['color'] = "color(from currentColor xyz-d65 x y z)" should set the property value assert_not_equals: property should be set got disallowed value ""
FAIL e.style['color'] = "color(from color-mix(in xyz, color(xyz-d65 0.7 0.5 0.3), color(xyz-d65 0.7 0.5 0.3)) xyz-d65 x y z / alpha)" should set the property value assert_not_equals: property should be set got disallowed value ""
PASS e.style['color'] = "rgb(from var(--bg-color) r g b / 80%)" should set the property value
PASS e.style['color'] = "lch(from var(--color) calc(l / 2) c h)" should set the property value
PASS e.style['color'] = "rgb(from var(--color) calc(r * .3 + g * .59 + b * .11) calc(r * .3 + g * .59 + b * .11) calc(r * .3 + g * .59 + b * .11))" should set the property value
PASS e.style['color'] = "lch(from var(--color) l 0 h)" should set the property value
FAIL e.style['color'] = "rgb(from indianred 255 g b)" should set the property value Colors do not match.
Actual:   rgb(255, 92, 92)
Expected: color(srgb 1 0.36 0.36).
Error: assert_array_approx_equals: Numeric parameters are approximately equal. property 0, expected 1 +/- 0.02, expected 1 but got 255
PASS e.style['color'] = "hsl(from var(--accent) calc(h + 180) s l)" should set the property value
PASS e.style['color'] = "lab(from var(--mycolor) l a b / 100%)" should set the property value
PASS e.style['color'] = "lab(from var(--mycolor) l a b / calc(alpha * 0.8))" should set the property value
PASS e.style['color'] = "lab(from var(--mycolor) l 0 0)" should set the property value
PASS e.style['color'] = "lch(from peru calc(l * 0.8) c h)" should set the property value
PASS e.style['color'] = "LCH(from var(--accent) l c calc(h + 180))" should set the property value
PASS e.style['color'] = "lch(from var(--mycolor) l 0 h)" should set the property value
PASS e.style['color'] = "var(--mygray)" should set the property value
PASS e.style['color'] = "lch(from var(--mygray) l 30 h)" should set the property value

