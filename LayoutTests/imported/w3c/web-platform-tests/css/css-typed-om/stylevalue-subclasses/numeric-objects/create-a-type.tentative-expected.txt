
FAIL Creating a type from "number" returns {} assert_equals: length expected (undefined) undefined but got (number) 0
FAIL Creating a type from "percent" returns { percent: 1 } assert_equals: length expected (undefined) undefined but got (number) 0
FAIL Creating a type from <length> returns { length: 1 } assert_equals: length expected 1 but got 0
FAIL Creating a type from <angle> returns { angle: 1 } assert_equals: length expected (undefined) undefined but got (number) 0
FAIL Creating a type from <time> returns { time: 1 } assert_equals: length expected (undefined) undefined but got (number) 0
FAIL Creating a type from <frequency> returns { frequency: 1 } assert_equals: length expected (undefined) undefined but got (number) 0
FAIL Creating a type from <resolution> returns { resolution: 1 } assert_equals: length expected (undefined) undefined but got (number) 0
FAIL Creating a type from <flex> returns { flex: 1 } assert_equals: length expected (undefined) undefined but got (number) 0

