
FAIL Converting a CSSUnitValue to an invalid unit throws SyntaxError assert_throws_dom: function "() => CSS.px(1).to('lemon')" did not throw
FAIL Converting a CSSNumericValue with invalid sum value throws TypeError assert_throws_js: function "() => new CSSMathMax(1, CSS.px(1)).to('number')" did not throw
FAIL Converting a CSSNumericValue with sum value containing more than one value throws TypeError assert_throws_js: function "() => new CSSMathProduct(CSS.px(1), CSS.s(1)).to('number')" did not throw
FAIL Converting a CSSUnitValue to an incompatible unit throws TypeError assert_throws_js: function "() => CSS.px(1).to('number')" did not throw
FAIL Converting a CSSUnitValue to its own unit returns itself assert_equals: expected "percent" but got "number"
FAIL Converting a CSSUnitValue to its canonical unit returns correct value assert_approx_equals: expected 37.7952755 +/- 0.000001 but got 1
FAIL Converting a CSSMathSum to a single unit adds the values assert_approx_equals: expected 2 +/- 0.000001 but got 1
FAIL Converting a CSSMathProduct to a single unit multiplies the values assert_approx_equals: expected 6 +/- 0.000001 but got 1
FAIL Converting a CSSMathMin to a single unit finds the min value assert_equals: expected "mm" but got "number"
FAIL Converting a CSSMathMin to a single unit with different units throws a TypeError assert_throws_js: function "() => new CSSMathMin(CSS.px(2), CSS.s(3)).to('px')" did not throw
FAIL Converting a CSSMathMax to a single unit finds the max value assert_approx_equals: expected 10 +/- 0.000001 but got 1
FAIL Converting a CSSMathMax to a single unit with different units throws a TypeError assert_throws_js: function "() => new CSSMathMax(CSS.px(2), CSS.s(3)).to('px')" did not throw
FAIL Converting a CSSMathNegate to a single unit negates its value assert_approx_equals: expected -1 +/- 0.000001 but got 1
FAIL Converting a CSSMathInvert to a single unit inverts its value and units assert_approx_equals: expected 2 +/- 0.000001 but got 1
FAIL Converting a complex expression to a single unit assert_approx_equals: expected 3500 +/- 0.000001 but got 1

