
PASS Can set 'margin-block-start' to CSS-wide keywords: initial
PASS Can set 'margin-block-start' to CSS-wide keywords: inherit
PASS Can set 'margin-block-start' to CSS-wide keywords: unset
PASS Can set 'margin-block-start' to CSS-wide keywords: revert
PASS Can set 'margin-block-start' to var() references:  var(--A)
PASS Can set 'margin-block-start' to a percent: 0%
PASS Can set 'margin-block-start' to a percent: -3.14%
PASS Can set 'margin-block-start' to a percent: 3.14%
PASS Can set 'margin-block-start' to a percent: calc(0% + 0%)
PASS Can set 'margin-block-start' to a length: 0px
PASS Can set 'margin-block-start' to a length: -3.14em
PASS Can set 'margin-block-start' to a length: 3.14cm
PASS Can set 'margin-block-start' to a length: calc(0px + 0em)
PASS Setting 'margin-block-start' to a time throws TypeError
PASS Setting 'margin-block-start' to an angle throws TypeError
PASS Setting 'margin-block-start' to a flexible length throws TypeError
FAIL Setting 'margin-block-start' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'margin-block-start' to a URL throws TypeError
PASS Setting 'margin-block-start' to a transform throws TypeError
PASS Can set 'margin-block-end' to CSS-wide keywords: initial
PASS Can set 'margin-block-end' to CSS-wide keywords: inherit
PASS Can set 'margin-block-end' to CSS-wide keywords: unset
PASS Can set 'margin-block-end' to CSS-wide keywords: revert
PASS Can set 'margin-block-end' to var() references:  var(--A)
PASS Can set 'margin-block-end' to a percent: 0%
PASS Can set 'margin-block-end' to a percent: -3.14%
PASS Can set 'margin-block-end' to a percent: 3.14%
PASS Can set 'margin-block-end' to a percent: calc(0% + 0%)
PASS Can set 'margin-block-end' to a length: 0px
PASS Can set 'margin-block-end' to a length: -3.14em
PASS Can set 'margin-block-end' to a length: 3.14cm
PASS Can set 'margin-block-end' to a length: calc(0px + 0em)
PASS Setting 'margin-block-end' to a time throws TypeError
PASS Setting 'margin-block-end' to an angle throws TypeError
PASS Setting 'margin-block-end' to a flexible length throws TypeError
FAIL Setting 'margin-block-end' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'margin-block-end' to a URL throws TypeError
PASS Setting 'margin-block-end' to a transform throws TypeError
PASS Can set 'margin-inline-start' to CSS-wide keywords: initial
PASS Can set 'margin-inline-start' to CSS-wide keywords: inherit
PASS Can set 'margin-inline-start' to CSS-wide keywords: unset
PASS Can set 'margin-inline-start' to CSS-wide keywords: revert
PASS Can set 'margin-inline-start' to var() references:  var(--A)
PASS Can set 'margin-inline-start' to a percent: 0%
PASS Can set 'margin-inline-start' to a percent: -3.14%
PASS Can set 'margin-inline-start' to a percent: 3.14%
PASS Can set 'margin-inline-start' to a percent: calc(0% + 0%)
PASS Can set 'margin-inline-start' to a length: 0px
PASS Can set 'margin-inline-start' to a length: -3.14em
PASS Can set 'margin-inline-start' to a length: 3.14cm
PASS Can set 'margin-inline-start' to a length: calc(0px + 0em)
PASS Setting 'margin-inline-start' to a time throws TypeError
PASS Setting 'margin-inline-start' to an angle throws TypeError
PASS Setting 'margin-inline-start' to a flexible length throws TypeError
FAIL Setting 'margin-inline-start' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'margin-inline-start' to a URL throws TypeError
PASS Setting 'margin-inline-start' to a transform throws TypeError
PASS Can set 'margin-inline-end' to CSS-wide keywords: initial
PASS Can set 'margin-inline-end' to CSS-wide keywords: inherit
PASS Can set 'margin-inline-end' to CSS-wide keywords: unset
PASS Can set 'margin-inline-end' to CSS-wide keywords: revert
PASS Can set 'margin-inline-end' to var() references:  var(--A)
PASS Can set 'margin-inline-end' to a percent: 0%
PASS Can set 'margin-inline-end' to a percent: -3.14%
PASS Can set 'margin-inline-end' to a percent: 3.14%
PASS Can set 'margin-inline-end' to a percent: calc(0% + 0%)
PASS Can set 'margin-inline-end' to a length: 0px
PASS Can set 'margin-inline-end' to a length: -3.14em
PASS Can set 'margin-inline-end' to a length: 3.14cm
PASS Can set 'margin-inline-end' to a length: calc(0px + 0em)
PASS Setting 'margin-inline-end' to a time throws TypeError
PASS Setting 'margin-inline-end' to an angle throws TypeError
PASS Setting 'margin-inline-end' to a flexible length throws TypeError
FAIL Setting 'margin-inline-end' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'margin-inline-end' to a URL throws TypeError
PASS Setting 'margin-inline-end' to a transform throws TypeError
FAIL Can set 'margin-block' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'margin-block' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'margin-block' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'margin-block' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'margin-block' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'margin-block' to a percent: 0% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-block' to a percent: -3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-block' to a percent: 3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-block' to a percent: calc(0% + 0%) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
FAIL Can set 'margin-block' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-block' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-block' to a length: 3.14cm assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-block' to a length: calc(0px + 0em) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
PASS Setting 'margin-block' to a time throws TypeError
PASS Setting 'margin-block' to an angle throws TypeError
PASS Setting 'margin-block' to a flexible length throws TypeError
FAIL Setting 'margin-block' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'margin-block' to a URL throws TypeError
PASS Setting 'margin-block' to a transform throws TypeError
FAIL Can set 'margin-inline' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'margin-inline' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'margin-inline' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'margin-inline' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'margin-inline' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'margin-inline' to a percent: 0% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-inline' to a percent: -3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-inline' to a percent: 3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-inline' to a percent: calc(0% + 0%) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
FAIL Can set 'margin-inline' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-inline' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-inline' to a length: 3.14cm assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'margin-inline' to a length: calc(0px + 0em) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
PASS Setting 'margin-inline' to a time throws TypeError
PASS Setting 'margin-inline' to an angle throws TypeError
PASS Setting 'margin-inline' to a flexible length throws TypeError
FAIL Setting 'margin-inline' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'margin-inline' to a URL throws TypeError
PASS Setting 'margin-inline' to a transform throws TypeError
PASS Can set 'inset-block-start' to CSS-wide keywords: initial
PASS Can set 'inset-block-start' to CSS-wide keywords: inherit
PASS Can set 'inset-block-start' to CSS-wide keywords: unset
PASS Can set 'inset-block-start' to CSS-wide keywords: revert
PASS Can set 'inset-block-start' to var() references:  var(--A)
PASS Can set 'inset-block-start' to a percent: 0%
PASS Can set 'inset-block-start' to a percent: -3.14%
PASS Can set 'inset-block-start' to a percent: 3.14%
PASS Can set 'inset-block-start' to a percent: calc(0% + 0%)
PASS Can set 'inset-block-start' to a length: 0px
PASS Can set 'inset-block-start' to a length: -3.14em
PASS Can set 'inset-block-start' to a length: 3.14cm
PASS Can set 'inset-block-start' to a length: calc(0px + 0em)
PASS Setting 'inset-block-start' to a time throws TypeError
PASS Setting 'inset-block-start' to an angle throws TypeError
PASS Setting 'inset-block-start' to a flexible length throws TypeError
FAIL Setting 'inset-block-start' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'inset-block-start' to a URL throws TypeError
PASS Setting 'inset-block-start' to a transform throws TypeError
PASS Can set 'inset-block-end' to CSS-wide keywords: initial
PASS Can set 'inset-block-end' to CSS-wide keywords: inherit
PASS Can set 'inset-block-end' to CSS-wide keywords: unset
PASS Can set 'inset-block-end' to CSS-wide keywords: revert
PASS Can set 'inset-block-end' to var() references:  var(--A)
PASS Can set 'inset-block-end' to a percent: 0%
PASS Can set 'inset-block-end' to a percent: -3.14%
PASS Can set 'inset-block-end' to a percent: 3.14%
PASS Can set 'inset-block-end' to a percent: calc(0% + 0%)
PASS Can set 'inset-block-end' to a length: 0px
PASS Can set 'inset-block-end' to a length: -3.14em
PASS Can set 'inset-block-end' to a length: 3.14cm
PASS Can set 'inset-block-end' to a length: calc(0px + 0em)
PASS Setting 'inset-block-end' to a time throws TypeError
PASS Setting 'inset-block-end' to an angle throws TypeError
PASS Setting 'inset-block-end' to a flexible length throws TypeError
FAIL Setting 'inset-block-end' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'inset-block-end' to a URL throws TypeError
PASS Setting 'inset-block-end' to a transform throws TypeError
PASS Can set 'inset-inline-start' to CSS-wide keywords: initial
PASS Can set 'inset-inline-start' to CSS-wide keywords: inherit
PASS Can set 'inset-inline-start' to CSS-wide keywords: unset
PASS Can set 'inset-inline-start' to CSS-wide keywords: revert
PASS Can set 'inset-inline-start' to var() references:  var(--A)
PASS Can set 'inset-inline-start' to a percent: 0%
PASS Can set 'inset-inline-start' to a percent: -3.14%
PASS Can set 'inset-inline-start' to a percent: 3.14%
PASS Can set 'inset-inline-start' to a percent: calc(0% + 0%)
PASS Can set 'inset-inline-start' to a length: 0px
PASS Can set 'inset-inline-start' to a length: -3.14em
PASS Can set 'inset-inline-start' to a length: 3.14cm
PASS Can set 'inset-inline-start' to a length: calc(0px + 0em)
PASS Setting 'inset-inline-start' to a time throws TypeError
PASS Setting 'inset-inline-start' to an angle throws TypeError
PASS Setting 'inset-inline-start' to a flexible length throws TypeError
FAIL Setting 'inset-inline-start' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'inset-inline-start' to a URL throws TypeError
PASS Setting 'inset-inline-start' to a transform throws TypeError
PASS Can set 'inset-inline-end' to CSS-wide keywords: initial
PASS Can set 'inset-inline-end' to CSS-wide keywords: inherit
PASS Can set 'inset-inline-end' to CSS-wide keywords: unset
PASS Can set 'inset-inline-end' to CSS-wide keywords: revert
PASS Can set 'inset-inline-end' to var() references:  var(--A)
PASS Can set 'inset-inline-end' to a percent: 0%
PASS Can set 'inset-inline-end' to a percent: -3.14%
PASS Can set 'inset-inline-end' to a percent: 3.14%
PASS Can set 'inset-inline-end' to a percent: calc(0% + 0%)
PASS Can set 'inset-inline-end' to a length: 0px
PASS Can set 'inset-inline-end' to a length: -3.14em
PASS Can set 'inset-inline-end' to a length: 3.14cm
PASS Can set 'inset-inline-end' to a length: calc(0px + 0em)
PASS Setting 'inset-inline-end' to a time throws TypeError
PASS Setting 'inset-inline-end' to an angle throws TypeError
PASS Setting 'inset-inline-end' to a flexible length throws TypeError
FAIL Setting 'inset-inline-end' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'inset-inline-end' to a URL throws TypeError
PASS Setting 'inset-inline-end' to a transform throws TypeError
FAIL Can set 'inset-block' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'inset-block' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'inset-block' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'inset-block' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'inset-block' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'inset-block' to a percent: 0% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-block' to a percent: -3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-block' to a percent: 3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-block' to a percent: calc(0% + 0%) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
FAIL Can set 'inset-block' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-block' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-block' to a length: 3.14cm assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-block' to a length: calc(0px + 0em) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
PASS Setting 'inset-block' to a time throws TypeError
PASS Setting 'inset-block' to an angle throws TypeError
PASS Setting 'inset-block' to a flexible length throws TypeError
FAIL Setting 'inset-block' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'inset-block' to a URL throws TypeError
PASS Setting 'inset-block' to a transform throws TypeError
FAIL Can set 'inset-inline' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'inset-inline' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'inset-inline' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'inset-inline' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'inset-inline' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'inset-inline' to a percent: 0% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-inline' to a percent: -3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-inline' to a percent: 3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-inline' to a percent: calc(0% + 0%) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
FAIL Can set 'inset-inline' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-inline' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-inline' to a length: 3.14cm assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'inset-inline' to a length: calc(0px + 0em) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
PASS Setting 'inset-inline' to a time throws TypeError
PASS Setting 'inset-inline' to an angle throws TypeError
PASS Setting 'inset-inline' to a flexible length throws TypeError
FAIL Setting 'inset-inline' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'inset-inline' to a URL throws TypeError
PASS Setting 'inset-inline' to a transform throws TypeError
PASS Can set 'padding-block-start' to CSS-wide keywords: initial
PASS Can set 'padding-block-start' to CSS-wide keywords: inherit
PASS Can set 'padding-block-start' to CSS-wide keywords: unset
PASS Can set 'padding-block-start' to CSS-wide keywords: revert
PASS Can set 'padding-block-start' to var() references:  var(--A)
PASS Can set 'padding-block-start' to a percent: 0%
FAIL Can set 'padding-block-start' to a percent: -3.14% assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'padding-block-start' to a percent: 3.14%
PASS Can set 'padding-block-start' to a percent: calc(0% + 0%)
PASS Can set 'padding-block-start' to a length: 0px
FAIL Can set 'padding-block-start' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'padding-block-start' to a length: 3.14cm
PASS Can set 'padding-block-start' to a length: calc(0px + 0em)
PASS Setting 'padding-block-start' to a time throws TypeError
PASS Setting 'padding-block-start' to an angle throws TypeError
PASS Setting 'padding-block-start' to a flexible length throws TypeError
FAIL Setting 'padding-block-start' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'padding-block-start' to a URL throws TypeError
PASS Setting 'padding-block-start' to a transform throws TypeError
PASS Can set 'padding-block-end' to CSS-wide keywords: initial
PASS Can set 'padding-block-end' to CSS-wide keywords: inherit
PASS Can set 'padding-block-end' to CSS-wide keywords: unset
PASS Can set 'padding-block-end' to CSS-wide keywords: revert
PASS Can set 'padding-block-end' to var() references:  var(--A)
PASS Can set 'padding-block-end' to a percent: 0%
FAIL Can set 'padding-block-end' to a percent: -3.14% assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'padding-block-end' to a percent: 3.14%
PASS Can set 'padding-block-end' to a percent: calc(0% + 0%)
PASS Can set 'padding-block-end' to a length: 0px
FAIL Can set 'padding-block-end' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'padding-block-end' to a length: 3.14cm
PASS Can set 'padding-block-end' to a length: calc(0px + 0em)
PASS Setting 'padding-block-end' to a time throws TypeError
PASS Setting 'padding-block-end' to an angle throws TypeError
PASS Setting 'padding-block-end' to a flexible length throws TypeError
FAIL Setting 'padding-block-end' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'padding-block-end' to a URL throws TypeError
PASS Setting 'padding-block-end' to a transform throws TypeError
PASS Can set 'padding-inline-start' to CSS-wide keywords: initial
PASS Can set 'padding-inline-start' to CSS-wide keywords: inherit
PASS Can set 'padding-inline-start' to CSS-wide keywords: unset
PASS Can set 'padding-inline-start' to CSS-wide keywords: revert
PASS Can set 'padding-inline-start' to var() references:  var(--A)
PASS Can set 'padding-inline-start' to a percent: 0%
FAIL Can set 'padding-inline-start' to a percent: -3.14% assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'padding-inline-start' to a percent: 3.14%
PASS Can set 'padding-inline-start' to a percent: calc(0% + 0%)
PASS Can set 'padding-inline-start' to a length: 0px
FAIL Can set 'padding-inline-start' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'padding-inline-start' to a length: 3.14cm
PASS Can set 'padding-inline-start' to a length: calc(0px + 0em)
PASS Setting 'padding-inline-start' to a time throws TypeError
PASS Setting 'padding-inline-start' to an angle throws TypeError
PASS Setting 'padding-inline-start' to a flexible length throws TypeError
FAIL Setting 'padding-inline-start' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'padding-inline-start' to a URL throws TypeError
PASS Setting 'padding-inline-start' to a transform throws TypeError
PASS Can set 'padding-inline-end' to CSS-wide keywords: initial
PASS Can set 'padding-inline-end' to CSS-wide keywords: inherit
PASS Can set 'padding-inline-end' to CSS-wide keywords: unset
PASS Can set 'padding-inline-end' to CSS-wide keywords: revert
PASS Can set 'padding-inline-end' to var() references:  var(--A)
PASS Can set 'padding-inline-end' to a percent: 0%
FAIL Can set 'padding-inline-end' to a percent: -3.14% assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'padding-inline-end' to a percent: 3.14%
PASS Can set 'padding-inline-end' to a percent: calc(0% + 0%)
PASS Can set 'padding-inline-end' to a length: 0px
FAIL Can set 'padding-inline-end' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'padding-inline-end' to a length: 3.14cm
PASS Can set 'padding-inline-end' to a length: calc(0px + 0em)
PASS Setting 'padding-inline-end' to a time throws TypeError
PASS Setting 'padding-inline-end' to an angle throws TypeError
PASS Setting 'padding-inline-end' to a flexible length throws TypeError
FAIL Setting 'padding-inline-end' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'padding-inline-end' to a URL throws TypeError
PASS Setting 'padding-inline-end' to a transform throws TypeError
FAIL Can set 'padding-block' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'padding-block' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'padding-block' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'padding-block' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'padding-block' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'padding-block' to a percent: 0% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'padding-block' to a percent: -3.14% Bad value for shorthand CSS property
FAIL Can set 'padding-block' to a percent: 3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'padding-block' to a percent: calc(0% + 0%) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
FAIL Can set 'padding-block' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'padding-block' to a length: -3.14em Bad value for shorthand CSS property
FAIL Can set 'padding-block' to a length: 3.14cm assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'padding-block' to a length: calc(0px + 0em) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
PASS Setting 'padding-block' to a time throws TypeError
PASS Setting 'padding-block' to an angle throws TypeError
PASS Setting 'padding-block' to a flexible length throws TypeError
FAIL Setting 'padding-block' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'padding-block' to a URL throws TypeError
PASS Setting 'padding-block' to a transform throws TypeError
FAIL Can set 'padding-inline' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'padding-inline' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'padding-inline' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'padding-inline' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'padding-inline' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'padding-inline' to a percent: 0% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'padding-inline' to a percent: -3.14% Bad value for shorthand CSS property
FAIL Can set 'padding-inline' to a percent: 3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'padding-inline' to a percent: calc(0% + 0%) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
FAIL Can set 'padding-inline' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'padding-inline' to a length: -3.14em Bad value for shorthand CSS property
FAIL Can set 'padding-inline' to a length: 3.14cm assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'padding-inline' to a length: calc(0px + 0em) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
PASS Setting 'padding-inline' to a time throws TypeError
PASS Setting 'padding-inline' to an angle throws TypeError
PASS Setting 'padding-inline' to a flexible length throws TypeError
FAIL Setting 'padding-inline' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'padding-inline' to a URL throws TypeError
PASS Setting 'padding-inline' to a transform throws TypeError
FAIL Can set 'border-block-start' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-start' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-start' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-start' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-start' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-block-start' to the 'none' keyword: none assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Setting 'border-block-start' to a length throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-block-start' to a percent throws TypeError
PASS Setting 'border-block-start' to a time throws TypeError
PASS Setting 'border-block-start' to an angle throws TypeError
PASS Setting 'border-block-start' to a flexible length throws TypeError
FAIL Setting 'border-block-start' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-block-start' to a URL throws TypeError
PASS Setting 'border-block-start' to a transform throws TypeError
PASS Can set 'border-block-start-width' to CSS-wide keywords: initial
PASS Can set 'border-block-start-width' to CSS-wide keywords: inherit
PASS Can set 'border-block-start-width' to CSS-wide keywords: unset
PASS Can set 'border-block-start-width' to CSS-wide keywords: revert
PASS Can set 'border-block-start-width' to var() references:  var(--A)
FAIL Can set 'border-block-start-width' to the 'thin' keyword: thin assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
FAIL Can set 'border-block-start-width' to the 'medium' keyword: medium assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
FAIL Can set 'border-block-start-width' to the 'thick' keyword: thick assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
PASS Can set 'border-block-start-width' to a length: 0px
FAIL Can set 'border-block-start-width' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'border-block-start-width' to a length: 3.14cm
PASS Can set 'border-block-start-width' to a length: calc(0px + 0em)
PASS Setting 'border-block-start-width' to a percent throws TypeError
PASS Setting 'border-block-start-width' to a time throws TypeError
PASS Setting 'border-block-start-width' to an angle throws TypeError
PASS Setting 'border-block-start-width' to a flexible length throws TypeError
FAIL Setting 'border-block-start-width' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-block-start-width' to a URL throws TypeError
PASS Setting 'border-block-start-width' to a transform throws TypeError
PASS Can set 'border-block-start-color' to CSS-wide keywords: initial
PASS Can set 'border-block-start-color' to CSS-wide keywords: inherit
PASS Can set 'border-block-start-color' to CSS-wide keywords: unset
PASS Can set 'border-block-start-color' to CSS-wide keywords: revert
PASS Can set 'border-block-start-color' to var() references:  var(--A)
FAIL Can set 'border-block-start-color' to the 'currentcolor' keyword: currentcolor assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
PASS Setting 'border-block-start-color' to a length throws TypeError
PASS Setting 'border-block-start-color' to a percent throws TypeError
PASS Setting 'border-block-start-color' to a time throws TypeError
PASS Setting 'border-block-start-color' to an angle throws TypeError
PASS Setting 'border-block-start-color' to a flexible length throws TypeError
PASS Setting 'border-block-start-color' to a number throws TypeError
PASS Setting 'border-block-start-color' to a URL throws TypeError
PASS Setting 'border-block-start-color' to a transform throws TypeError
PASS Can set 'border-block-start-style' to CSS-wide keywords: initial
PASS Can set 'border-block-start-style' to CSS-wide keywords: inherit
PASS Can set 'border-block-start-style' to CSS-wide keywords: unset
PASS Can set 'border-block-start-style' to CSS-wide keywords: revert
PASS Can set 'border-block-start-style' to var() references:  var(--A)
PASS Can set 'border-block-start-style' to the 'none' keyword: none
PASS Can set 'border-block-start-style' to the 'solid' keyword: solid
PASS Setting 'border-block-start-style' to a length throws TypeError
PASS Setting 'border-block-start-style' to a percent throws TypeError
PASS Setting 'border-block-start-style' to a time throws TypeError
PASS Setting 'border-block-start-style' to an angle throws TypeError
PASS Setting 'border-block-start-style' to a flexible length throws TypeError
PASS Setting 'border-block-start-style' to a number throws TypeError
PASS Setting 'border-block-start-style' to a URL throws TypeError
PASS Setting 'border-block-start-style' to a transform throws TypeError
FAIL Can set 'border-block-end' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-end' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-end' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-end' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-end' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-block-end' to the 'none' keyword: none assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Setting 'border-block-end' to a length throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-block-end' to a percent throws TypeError
PASS Setting 'border-block-end' to a time throws TypeError
PASS Setting 'border-block-end' to an angle throws TypeError
PASS Setting 'border-block-end' to a flexible length throws TypeError
FAIL Setting 'border-block-end' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-block-end' to a URL throws TypeError
PASS Setting 'border-block-end' to a transform throws TypeError
PASS Can set 'border-block-end-width' to CSS-wide keywords: initial
PASS Can set 'border-block-end-width' to CSS-wide keywords: inherit
PASS Can set 'border-block-end-width' to CSS-wide keywords: unset
PASS Can set 'border-block-end-width' to CSS-wide keywords: revert
PASS Can set 'border-block-end-width' to var() references:  var(--A)
FAIL Can set 'border-block-end-width' to the 'thin' keyword: thin assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
FAIL Can set 'border-block-end-width' to the 'medium' keyword: medium assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
FAIL Can set 'border-block-end-width' to the 'thick' keyword: thick assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
PASS Can set 'border-block-end-width' to a length: 0px
FAIL Can set 'border-block-end-width' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'border-block-end-width' to a length: 3.14cm
PASS Can set 'border-block-end-width' to a length: calc(0px + 0em)
PASS Setting 'border-block-end-width' to a percent throws TypeError
PASS Setting 'border-block-end-width' to a time throws TypeError
PASS Setting 'border-block-end-width' to an angle throws TypeError
PASS Setting 'border-block-end-width' to a flexible length throws TypeError
FAIL Setting 'border-block-end-width' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-block-end-width' to a URL throws TypeError
PASS Setting 'border-block-end-width' to a transform throws TypeError
PASS Can set 'border-block-end-color' to CSS-wide keywords: initial
PASS Can set 'border-block-end-color' to CSS-wide keywords: inherit
PASS Can set 'border-block-end-color' to CSS-wide keywords: unset
PASS Can set 'border-block-end-color' to CSS-wide keywords: revert
PASS Can set 'border-block-end-color' to var() references:  var(--A)
FAIL Can set 'border-block-end-color' to the 'currentcolor' keyword: currentcolor assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
PASS Setting 'border-block-end-color' to a length throws TypeError
PASS Setting 'border-block-end-color' to a percent throws TypeError
PASS Setting 'border-block-end-color' to a time throws TypeError
PASS Setting 'border-block-end-color' to an angle throws TypeError
PASS Setting 'border-block-end-color' to a flexible length throws TypeError
PASS Setting 'border-block-end-color' to a number throws TypeError
PASS Setting 'border-block-end-color' to a URL throws TypeError
PASS Setting 'border-block-end-color' to a transform throws TypeError
PASS Can set 'border-block-end-style' to CSS-wide keywords: initial
PASS Can set 'border-block-end-style' to CSS-wide keywords: inherit
PASS Can set 'border-block-end-style' to CSS-wide keywords: unset
PASS Can set 'border-block-end-style' to CSS-wide keywords: revert
PASS Can set 'border-block-end-style' to var() references:  var(--A)
PASS Can set 'border-block-end-style' to the 'none' keyword: none
PASS Can set 'border-block-end-style' to the 'solid' keyword: solid
PASS Setting 'border-block-end-style' to a length throws TypeError
PASS Setting 'border-block-end-style' to a percent throws TypeError
PASS Setting 'border-block-end-style' to a time throws TypeError
PASS Setting 'border-block-end-style' to an angle throws TypeError
PASS Setting 'border-block-end-style' to a flexible length throws TypeError
PASS Setting 'border-block-end-style' to a number throws TypeError
PASS Setting 'border-block-end-style' to a URL throws TypeError
PASS Setting 'border-block-end-style' to a transform throws TypeError
FAIL Can set 'border-inline-start' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-start' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-start' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-start' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-start' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-inline-start' to the 'none' keyword: none assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Setting 'border-inline-start' to a length throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-inline-start' to a percent throws TypeError
PASS Setting 'border-inline-start' to a time throws TypeError
PASS Setting 'border-inline-start' to an angle throws TypeError
PASS Setting 'border-inline-start' to a flexible length throws TypeError
FAIL Setting 'border-inline-start' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-inline-start' to a URL throws TypeError
PASS Setting 'border-inline-start' to a transform throws TypeError
PASS Can set 'border-inline-start-width' to CSS-wide keywords: initial
PASS Can set 'border-inline-start-width' to CSS-wide keywords: inherit
PASS Can set 'border-inline-start-width' to CSS-wide keywords: unset
PASS Can set 'border-inline-start-width' to CSS-wide keywords: revert
PASS Can set 'border-inline-start-width' to var() references:  var(--A)
FAIL Can set 'border-inline-start-width' to the 'thin' keyword: thin assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
FAIL Can set 'border-inline-start-width' to the 'medium' keyword: medium assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
FAIL Can set 'border-inline-start-width' to the 'thick' keyword: thick assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
PASS Can set 'border-inline-start-width' to a length: 0px
FAIL Can set 'border-inline-start-width' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'border-inline-start-width' to a length: 3.14cm
PASS Can set 'border-inline-start-width' to a length: calc(0px + 0em)
PASS Setting 'border-inline-start-width' to a percent throws TypeError
PASS Setting 'border-inline-start-width' to a time throws TypeError
PASS Setting 'border-inline-start-width' to an angle throws TypeError
PASS Setting 'border-inline-start-width' to a flexible length throws TypeError
FAIL Setting 'border-inline-start-width' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-inline-start-width' to a URL throws TypeError
PASS Setting 'border-inline-start-width' to a transform throws TypeError
PASS Can set 'border-inline-start-color' to CSS-wide keywords: initial
PASS Can set 'border-inline-start-color' to CSS-wide keywords: inherit
PASS Can set 'border-inline-start-color' to CSS-wide keywords: unset
PASS Can set 'border-inline-start-color' to CSS-wide keywords: revert
PASS Can set 'border-inline-start-color' to var() references:  var(--A)
FAIL Can set 'border-inline-start-color' to the 'currentcolor' keyword: currentcolor assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
PASS Setting 'border-inline-start-color' to a length throws TypeError
PASS Setting 'border-inline-start-color' to a percent throws TypeError
PASS Setting 'border-inline-start-color' to a time throws TypeError
PASS Setting 'border-inline-start-color' to an angle throws TypeError
PASS Setting 'border-inline-start-color' to a flexible length throws TypeError
PASS Setting 'border-inline-start-color' to a number throws TypeError
PASS Setting 'border-inline-start-color' to a URL throws TypeError
PASS Setting 'border-inline-start-color' to a transform throws TypeError
PASS Can set 'border-inline-start-style' to CSS-wide keywords: initial
PASS Can set 'border-inline-start-style' to CSS-wide keywords: inherit
PASS Can set 'border-inline-start-style' to CSS-wide keywords: unset
PASS Can set 'border-inline-start-style' to CSS-wide keywords: revert
PASS Can set 'border-inline-start-style' to var() references:  var(--A)
PASS Can set 'border-inline-start-style' to the 'none' keyword: none
PASS Can set 'border-inline-start-style' to the 'solid' keyword: solid
PASS Setting 'border-inline-start-style' to a length throws TypeError
PASS Setting 'border-inline-start-style' to a percent throws TypeError
PASS Setting 'border-inline-start-style' to a time throws TypeError
PASS Setting 'border-inline-start-style' to an angle throws TypeError
PASS Setting 'border-inline-start-style' to a flexible length throws TypeError
PASS Setting 'border-inline-start-style' to a number throws TypeError
PASS Setting 'border-inline-start-style' to a URL throws TypeError
PASS Setting 'border-inline-start-style' to a transform throws TypeError
FAIL Can set 'border-inline-end' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-end' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-end' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-end' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-end' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-inline-end' to the 'none' keyword: none assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Setting 'border-inline-end' to a length throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-inline-end' to a percent throws TypeError
PASS Setting 'border-inline-end' to a time throws TypeError
PASS Setting 'border-inline-end' to an angle throws TypeError
PASS Setting 'border-inline-end' to a flexible length throws TypeError
FAIL Setting 'border-inline-end' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-inline-end' to a URL throws TypeError
PASS Setting 'border-inline-end' to a transform throws TypeError
PASS Can set 'border-inline-end-width' to CSS-wide keywords: initial
PASS Can set 'border-inline-end-width' to CSS-wide keywords: inherit
PASS Can set 'border-inline-end-width' to CSS-wide keywords: unset
PASS Can set 'border-inline-end-width' to CSS-wide keywords: revert
PASS Can set 'border-inline-end-width' to var() references:  var(--A)
FAIL Can set 'border-inline-end-width' to the 'thin' keyword: thin assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
FAIL Can set 'border-inline-end-width' to the 'medium' keyword: medium assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
FAIL Can set 'border-inline-end-width' to the 'thick' keyword: thick assert_equals: expected "CSSKeywordValue" but got "CSSUnitValue"
PASS Can set 'border-inline-end-width' to a length: 0px
FAIL Can set 'border-inline-end-width' to a length: -3.14em assert_equals: expected "CSSUnitValue" but got "CSSMathSum"
PASS Can set 'border-inline-end-width' to a length: 3.14cm
PASS Can set 'border-inline-end-width' to a length: calc(0px + 0em)
PASS Setting 'border-inline-end-width' to a percent throws TypeError
PASS Setting 'border-inline-end-width' to a time throws TypeError
PASS Setting 'border-inline-end-width' to an angle throws TypeError
PASS Setting 'border-inline-end-width' to a flexible length throws TypeError
FAIL Setting 'border-inline-end-width' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-inline-end-width' to a URL throws TypeError
PASS Setting 'border-inline-end-width' to a transform throws TypeError
PASS Can set 'border-inline-end-color' to CSS-wide keywords: initial
PASS Can set 'border-inline-end-color' to CSS-wide keywords: inherit
PASS Can set 'border-inline-end-color' to CSS-wide keywords: unset
PASS Can set 'border-inline-end-color' to CSS-wide keywords: revert
PASS Can set 'border-inline-end-color' to var() references:  var(--A)
FAIL Can set 'border-inline-end-color' to the 'currentcolor' keyword: currentcolor assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
PASS Setting 'border-inline-end-color' to a length throws TypeError
PASS Setting 'border-inline-end-color' to a percent throws TypeError
PASS Setting 'border-inline-end-color' to a time throws TypeError
PASS Setting 'border-inline-end-color' to an angle throws TypeError
PASS Setting 'border-inline-end-color' to a flexible length throws TypeError
PASS Setting 'border-inline-end-color' to a number throws TypeError
PASS Setting 'border-inline-end-color' to a URL throws TypeError
PASS Setting 'border-inline-end-color' to a transform throws TypeError
PASS Can set 'border-inline-end-style' to CSS-wide keywords: initial
PASS Can set 'border-inline-end-style' to CSS-wide keywords: inherit
PASS Can set 'border-inline-end-style' to CSS-wide keywords: unset
PASS Can set 'border-inline-end-style' to CSS-wide keywords: revert
PASS Can set 'border-inline-end-style' to var() references:  var(--A)
PASS Can set 'border-inline-end-style' to the 'none' keyword: none
PASS Can set 'border-inline-end-style' to the 'solid' keyword: solid
PASS Setting 'border-inline-end-style' to a length throws TypeError
PASS Setting 'border-inline-end-style' to a percent throws TypeError
PASS Setting 'border-inline-end-style' to a time throws TypeError
PASS Setting 'border-inline-end-style' to an angle throws TypeError
PASS Setting 'border-inline-end-style' to a flexible length throws TypeError
PASS Setting 'border-inline-end-style' to a number throws TypeError
PASS Setting 'border-inline-end-style' to a URL throws TypeError
PASS Setting 'border-inline-end-style' to a transform throws TypeError
FAIL Can set 'border-block' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-block' to the 'none' keyword: none assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Setting 'border-block' to a length throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-block' to a percent throws TypeError
PASS Setting 'border-block' to a time throws TypeError
PASS Setting 'border-block' to an angle throws TypeError
PASS Setting 'border-block' to a flexible length throws TypeError
FAIL Setting 'border-block' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-block' to a URL throws TypeError
PASS Setting 'border-block' to a transform throws TypeError
FAIL Can set 'border-block-width' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-width' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-width' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-width' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-width' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-block-width' to the 'thin' keyword: thin assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-width' to the 'medium' keyword: medium assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-width' to the 'thick' keyword: thick assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-width' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-block-width' to a length: -3.14em Bad value for shorthand CSS property
FAIL Can set 'border-block-width' to a length: 3.14cm assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-block-width' to a length: calc(0px + 0em) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
PASS Setting 'border-block-width' to a percent throws TypeError
PASS Setting 'border-block-width' to a time throws TypeError
PASS Setting 'border-block-width' to an angle throws TypeError
PASS Setting 'border-block-width' to a flexible length throws TypeError
FAIL Setting 'border-block-width' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-block-width' to a URL throws TypeError
PASS Setting 'border-block-width' to a transform throws TypeError
FAIL Can set 'border-block-color' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-color' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-color' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-color' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-color' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-block-color' to the 'currentcolor' keyword: currentcolor assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
PASS Setting 'border-block-color' to a length throws TypeError
PASS Setting 'border-block-color' to a percent throws TypeError
PASS Setting 'border-block-color' to a time throws TypeError
PASS Setting 'border-block-color' to an angle throws TypeError
PASS Setting 'border-block-color' to a flexible length throws TypeError
PASS Setting 'border-block-color' to a number throws TypeError
PASS Setting 'border-block-color' to a URL throws TypeError
PASS Setting 'border-block-color' to a transform throws TypeError
FAIL Can set 'border-block-style' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-style' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-style' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-style' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-style' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-block-style' to the 'none' keyword: none assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-block-style' to the 'solid' keyword: solid assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
PASS Setting 'border-block-style' to a length throws TypeError
PASS Setting 'border-block-style' to a percent throws TypeError
PASS Setting 'border-block-style' to a time throws TypeError
PASS Setting 'border-block-style' to an angle throws TypeError
PASS Setting 'border-block-style' to a flexible length throws TypeError
PASS Setting 'border-block-style' to a number throws TypeError
PASS Setting 'border-block-style' to a URL throws TypeError
PASS Setting 'border-block-style' to a transform throws TypeError
FAIL Can set 'border-inline' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-inline' to the 'none' keyword: none assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Setting 'border-inline' to a length throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-inline' to a percent throws TypeError
PASS Setting 'border-inline' to a time throws TypeError
PASS Setting 'border-inline' to an angle throws TypeError
PASS Setting 'border-inline' to a flexible length throws TypeError
FAIL Setting 'border-inline' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-inline' to a URL throws TypeError
PASS Setting 'border-inline' to a transform throws TypeError
FAIL Can set 'border-inline-width' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-width' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-width' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-width' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-width' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-inline-width' to the 'thin' keyword: thin assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-width' to the 'medium' keyword: medium assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-width' to the 'thick' keyword: thick assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-width' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-width' to a length: -3.14em Bad value for shorthand CSS property
FAIL Can set 'border-inline-width' to a length: 3.14cm assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-width' to a length: calc(0px + 0em) assert_class_string: specified calc must be a CSSMathSum expected "[object CSSMathSum]" but got "[object CSSStyleValue]"
PASS Setting 'border-inline-width' to a percent throws TypeError
PASS Setting 'border-inline-width' to a time throws TypeError
PASS Setting 'border-inline-width' to an angle throws TypeError
PASS Setting 'border-inline-width' to a flexible length throws TypeError
FAIL Setting 'border-inline-width' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-inline-width' to a URL throws TypeError
PASS Setting 'border-inline-width' to a transform throws TypeError
FAIL Can set 'border-inline-color' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-color' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-color' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-color' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-color' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-inline-color' to the 'currentcolor' keyword: currentcolor assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
PASS Setting 'border-inline-color' to a length throws TypeError
PASS Setting 'border-inline-color' to a percent throws TypeError
PASS Setting 'border-inline-color' to a time throws TypeError
PASS Setting 'border-inline-color' to an angle throws TypeError
PASS Setting 'border-inline-color' to a flexible length throws TypeError
PASS Setting 'border-inline-color' to a number throws TypeError
PASS Setting 'border-inline-color' to a URL throws TypeError
PASS Setting 'border-inline-color' to a transform throws TypeError
FAIL Can set 'border-inline-style' to CSS-wide keywords: initial assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-style' to CSS-wide keywords: inherit assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-style' to CSS-wide keywords: unset assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-style' to CSS-wide keywords: revert assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-style' to var() references:  var(--A) assert_equals: expected 2 but got 1
FAIL Can set 'border-inline-style' to the 'none' keyword: none assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
FAIL Can set 'border-inline-style' to the 'solid' keyword: solid assert_equals: expected "CSSKeywordValue" but got "CSSStyleValue"
PASS Setting 'border-inline-style' to a length throws TypeError
PASS Setting 'border-inline-style' to a percent throws TypeError
PASS Setting 'border-inline-style' to a time throws TypeError
PASS Setting 'border-inline-style' to an angle throws TypeError
PASS Setting 'border-inline-style' to a flexible length throws TypeError
PASS Setting 'border-inline-style' to a number throws TypeError
PASS Setting 'border-inline-style' to a URL throws TypeError
PASS Setting 'border-inline-style' to a transform throws TypeError
PASS Can set 'border-start-start-radius' to CSS-wide keywords: initial
PASS Can set 'border-start-start-radius' to CSS-wide keywords: inherit
PASS Can set 'border-start-start-radius' to CSS-wide keywords: unset
PASS Can set 'border-start-start-radius' to CSS-wide keywords: revert
PASS Can set 'border-start-start-radius' to var() references:  var(--A)
FAIL Can set 'border-start-start-radius' to a percent: 0% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-start-start-radius' to a percent: -3.14% Invalid values
FAIL Can set 'border-start-start-radius' to a percent: 3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-start-start-radius' to a percent: calc(0% + 0%) assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
FAIL Can set 'border-start-start-radius' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-start-start-radius' to a length: -3.14em Invalid values
FAIL Can set 'border-start-start-radius' to a length: 3.14cm assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
FAIL Can set 'border-start-start-radius' to a length: calc(0px + 0em) assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
PASS Setting 'border-start-start-radius' to a time throws TypeError
PASS Setting 'border-start-start-radius' to an angle throws TypeError
PASS Setting 'border-start-start-radius' to a flexible length throws TypeError
FAIL Setting 'border-start-start-radius' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-start-start-radius' to a URL throws TypeError
PASS Setting 'border-start-start-radius' to a transform throws TypeError
PASS Can set 'border-start-end-radius' to CSS-wide keywords: initial
PASS Can set 'border-start-end-radius' to CSS-wide keywords: inherit
PASS Can set 'border-start-end-radius' to CSS-wide keywords: unset
PASS Can set 'border-start-end-radius' to CSS-wide keywords: revert
PASS Can set 'border-start-end-radius' to var() references:  var(--A)
FAIL Can set 'border-start-end-radius' to a percent: 0% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-start-end-radius' to a percent: -3.14% Invalid values
FAIL Can set 'border-start-end-radius' to a percent: 3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-start-end-radius' to a percent: calc(0% + 0%) assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
FAIL Can set 'border-start-end-radius' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-start-end-radius' to a length: -3.14em Invalid values
FAIL Can set 'border-start-end-radius' to a length: 3.14cm assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
FAIL Can set 'border-start-end-radius' to a length: calc(0px + 0em) assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
PASS Setting 'border-start-end-radius' to a time throws TypeError
PASS Setting 'border-start-end-radius' to an angle throws TypeError
PASS Setting 'border-start-end-radius' to a flexible length throws TypeError
FAIL Setting 'border-start-end-radius' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-start-end-radius' to a URL throws TypeError
PASS Setting 'border-start-end-radius' to a transform throws TypeError
PASS Can set 'border-end-start-radius' to CSS-wide keywords: initial
PASS Can set 'border-end-start-radius' to CSS-wide keywords: inherit
PASS Can set 'border-end-start-radius' to CSS-wide keywords: unset
PASS Can set 'border-end-start-radius' to CSS-wide keywords: revert
PASS Can set 'border-end-start-radius' to var() references:  var(--A)
FAIL Can set 'border-end-start-radius' to a percent: 0% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-end-start-radius' to a percent: -3.14% Invalid values
FAIL Can set 'border-end-start-radius' to a percent: 3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-end-start-radius' to a percent: calc(0% + 0%) assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
FAIL Can set 'border-end-start-radius' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-end-start-radius' to a length: -3.14em Invalid values
FAIL Can set 'border-end-start-radius' to a length: 3.14cm assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
FAIL Can set 'border-end-start-radius' to a length: calc(0px + 0em) assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
PASS Setting 'border-end-start-radius' to a time throws TypeError
PASS Setting 'border-end-start-radius' to an angle throws TypeError
PASS Setting 'border-end-start-radius' to a flexible length throws TypeError
FAIL Setting 'border-end-start-radius' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-end-start-radius' to a URL throws TypeError
PASS Setting 'border-end-start-radius' to a transform throws TypeError
PASS Can set 'border-end-end-radius' to CSS-wide keywords: initial
PASS Can set 'border-end-end-radius' to CSS-wide keywords: inherit
PASS Can set 'border-end-end-radius' to CSS-wide keywords: unset
PASS Can set 'border-end-end-radius' to CSS-wide keywords: revert
PASS Can set 'border-end-end-radius' to var() references:  var(--A)
FAIL Can set 'border-end-end-radius' to a percent: 0% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-end-end-radius' to a percent: -3.14% Invalid values
FAIL Can set 'border-end-end-radius' to a percent: 3.14% assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-end-end-radius' to a percent: calc(0% + 0%) assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
FAIL Can set 'border-end-end-radius' to a length: 0px assert_equals: expected "CSSUnitValue" but got "CSSStyleValue"
FAIL Can set 'border-end-end-radius' to a length: -3.14em Invalid values
FAIL Can set 'border-end-end-radius' to a length: 3.14cm assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
FAIL Can set 'border-end-end-radius' to a length: calc(0px + 0em) assert_class_string: relative lengths must compute to a CSSUnitValue expected "[object CSSUnitValue]" but got "[object CSSStyleValue]"
PASS Setting 'border-end-end-radius' to a time throws TypeError
PASS Setting 'border-end-end-radius' to an angle throws TypeError
PASS Setting 'border-end-end-radius' to a flexible length throws TypeError
FAIL Setting 'border-end-end-radius' to a number throws TypeError assert_throws_js: function "() => styleMap.set(propertyName, example.input)" did not throw
PASS Setting 'border-end-end-radius' to a URL throws TypeError
PASS Setting 'border-end-end-radius' to a transform throws TypeError

