
PASS Can set 'lighting-color' to CSS-wide keywords: initial
PASS Can set 'lighting-color' to CSS-wide keywords: inherit
PASS Can set 'lighting-color' to CSS-wide keywords: unset
PASS Can set 'lighting-color' to CSS-wide keywords: revert
FAIL Can set 'lighting-color' to var() references:  var(--A) assert_equals: expected 2 but got 1
PASS Can set 'lighting-color' to the 'currentcolor' keyword: currentcolor
PASS Setting 'lighting-color' to a length throws TypeError
PASS Setting 'lighting-color' to a percent throws TypeError
PASS Setting 'lighting-color' to a time throws TypeError
PASS Setting 'lighting-color' to an angle throws TypeError
PASS Setting 'lighting-color' to a flexible length throws TypeError
PASS Setting 'lighting-color' to a number throws TypeError
PASS Setting 'lighting-color' to a URL throws TypeError
PASS Setting 'lighting-color' to a transform throws TypeError
FAIL 'lighting-color' does not supported 'red' assert_class_string: Unsupported value must be a CSSStyleValue and not one of its subclasses expected "[object CSSStyleValue]" but got "[object CSSKeywordValue]"
PASS 'lighting-color' does not supported '#bbff00'
PASS 'lighting-color' does not supported 'rgb(255, 255, 128)'
PASS 'lighting-color' does not supported 'hsl(50, 33%, 25%)'
FAIL 'lighting-color' does not supported 'transparent' assert_class_string: Unsupported value must be a CSSStyleValue and not one of its subclasses expected "[object CSSStyleValue]" but got "[object CSSKeywordValue]"

