
PASS Setup
PASS align-content (type: discrete) has testAccumulation function
PASS align-content: "flex-end" onto "flex-start"
PASS align-content: "flex-start" onto "flex-end"
PASS align-items (type: discrete) has testAccumulation function
PASS align-items: "flex-end" onto "flex-start"
PASS align-items: "flex-start" onto "flex-end"
PASS align-self (type: discrete) has testAccumulation function
PASS align-self: "flex-end" onto "flex-start"
PASS align-self: "flex-start" onto "flex-end"
PASS background-attachment (type: discrete) has testAccumulation function
PASS background-attachment: "local" onto "fixed"
PASS background-attachment: "fixed" onto "local"
PASS background-color (type: color) has testAccumulation function
FAIL background-color supports animating as color of rgb() with overflowed  from and to values assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL background-color supports animating as color of #RGB assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL background-color supports animating as color of hsl() assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL background-color supports animating as color of #RGBa assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL background-color supports animating as color of rgba() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL background-color supports animating as color of hsla() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
PASS background-clip (type: discrete) has testAccumulation function
PASS background-clip: "content-box" onto "padding-box"
PASS background-clip: "padding-box" onto "content-box"
PASS background-image (type: discrete) has testAccumulation function
PASS background-image: "url("http://localhost/test-2")" onto "url("http://localhost/test-1")"
PASS background-image: "url("http://localhost/test-1")" onto "url("http://localhost/test-2")"
PASS background-origin (type: discrete) has testAccumulation function
PASS background-origin: "content-box" onto "padding-box"
PASS background-origin: "padding-box" onto "content-box"
PASS background-repeat (type: discrete) has testAccumulation function
PASS background-repeat: "round" onto "space"
PASS background-repeat: "space" onto "round"
PASS border-bottom-color (type: color) has testAccumulation function
FAIL border-bottom-color supports animating as color of rgb() with overflowed  from and to values assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-bottom-color supports animating as color of #RGB assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-bottom-color supports animating as color of hsl() assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-bottom-color supports animating as color of #RGBa assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL border-bottom-color supports animating as color of rgba() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL border-bottom-color supports animating as color of hsla() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
PASS border-bottom-style (type: discrete) has testAccumulation function
PASS border-bottom-style: "solid" onto "dotted"
PASS border-bottom-style: "dotted" onto "solid"
PASS border-bottom-width (type: length) has testAccumulation function
FAIL border-bottom-width: length assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
FAIL border-bottom-width: length of rem assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
PASS border-collapse (type: discrete) has testAccumulation function
PASS border-collapse: "separate" onto "collapse"
PASS border-collapse: "collapse" onto "separate"
PASS border-image-repeat (type: discrete) has testAccumulation function
PASS border-image-repeat: "round space" onto "stretch repeat"
PASS border-image-repeat: "stretch repeat" onto "round space"
PASS border-image-source (type: discrete) has testAccumulation function
PASS border-image-source: "url("http://localhost/test-2")" onto "url("http://localhost/test-1")"
PASS border-image-source: "url("http://localhost/test-1")" onto "url("http://localhost/test-2")"
PASS border-left-color (type: color) has testAccumulation function
FAIL border-left-color supports animating as color of rgb() with overflowed  from and to values assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-left-color supports animating as color of #RGB assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-left-color supports animating as color of hsl() assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-left-color supports animating as color of #RGBa assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL border-left-color supports animating as color of rgba() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL border-left-color supports animating as color of hsla() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
PASS border-left-style (type: discrete) has testAccumulation function
PASS border-left-style: "solid" onto "dotted"
PASS border-left-style: "dotted" onto "solid"
PASS border-left-width (type: length) has testAccumulation function
FAIL border-left-width: length assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
FAIL border-left-width: length of rem assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
PASS border-right-color (type: color) has testAccumulation function
FAIL border-right-color supports animating as color of rgb() with overflowed  from and to values assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-right-color supports animating as color of #RGB assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-right-color supports animating as color of hsl() assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-right-color supports animating as color of #RGBa assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL border-right-color supports animating as color of rgba() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL border-right-color supports animating as color of hsla() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
PASS border-right-style (type: discrete) has testAccumulation function
PASS border-right-style: "solid" onto "dotted"
PASS border-right-style: "dotted" onto "solid"
PASS border-right-width (type: length) has testAccumulation function
FAIL border-right-width: length assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
FAIL border-right-width: length of rem assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
PASS border-spacing (type: lengthPair) has testAccumulation function
FAIL border-spacing: length pair assert_equals: The value should be 20px 20px at 0ms expected "20px 20px" but got "10px 10px"
FAIL border-spacing: length pair of rem assert_equals: The value should be 20px 20px at 0ms expected "20px 20px" but got "10px 10px"
PASS border-top-color (type: color) has testAccumulation function
FAIL border-top-color supports animating as color of rgb() with overflowed  from and to values assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-top-color supports animating as color of #RGB assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-top-color supports animating as color of hsl() assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL border-top-color supports animating as color of #RGBa assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL border-top-color supports animating as color of rgba() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL border-top-color supports animating as color of hsla() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
PASS border-top-style (type: discrete) has testAccumulation function
PASS border-top-style: "solid" onto "dotted"
PASS border-top-style: "dotted" onto "solid"
PASS border-top-width (type: length) has testAccumulation function
FAIL border-top-width: length assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
FAIL border-top-width: length of rem assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
PASS box-shadow (type: boxShadowList) has testAccumulation function
FAIL box-shadow: shadow assert_equals: The value should be rgb(240, 240, 240) 20px 20px 20px 20px at 0ms expected "rgb(240, 240, 240) 20px 20px 20px 20px" but got "rgb(120, 120, 120) 10px 10px 10px 10px"
PASS box-sizing (type: discrete) has testAccumulation function
PASS box-sizing: "border-box" onto "content-box"
PASS box-sizing: "content-box" onto "border-box"
PASS caption-side (type: discrete) has testAccumulation function
PASS caption-side: "bottom" onto "top"
PASS caption-side: "top" onto "bottom"
PASS caret-color (type: color) has testAccumulation function
FAIL caret-color supports animating as color of rgb() with overflowed  from and to values assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL caret-color supports animating as color of #RGB assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL caret-color supports animating as color of hsl() assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL caret-color supports animating as color of #RGBa assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL caret-color supports animating as color of rgba() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL caret-color supports animating as color of hsla() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
PASS clear (type: discrete) has testAccumulation function
PASS clear: "right" onto "left"
PASS clear: "left" onto "right"
PASS clip (type: rect) has testAccumulation function
FAIL clip: rect assert_equals: The value should be rect(110px, 110px, 110px, 110px) at 0ms expected "rect(110px, 110px, 110px, 110px)" but got "rect(10px, 10px, 10px, 10px)"
PASS clip (type: discrete) has testAccumulation function
PASS clip: "auto" onto "rect(10px, 10px, 10px, 10px)"
PASS clip: "rect(10px, 10px, 10px, 10px)" onto "auto"
PASS clip: "rect(10px, 10px, 10px, auto)" onto "rect(10px, 10px, 10px, 10px)"
PASS clip: "rect(10px, 10px, 10px, 10px)" onto "rect(10px, 10px, 10px, auto)"
PASS color (type: color) has testAccumulation function
FAIL color supports animating as color of rgb() with overflowed  from and to values assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL color supports animating as color of #RGB assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL color supports animating as color of hsl() assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL color supports animating as color of #RGBa assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL color supports animating as color of rgba() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL color supports animating as color of hsla() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
PASS column-count (type: positiveInteger) has testAccumulation function
FAIL column-count: positive integer assert_equals: The value should be 3 at 0ms expected "3" but got "2"
PASS column-count (type: discrete) has testAccumulation function
PASS column-count: "10" onto "auto"
PASS column-count: "auto" onto "10"
PASS column-gap (type: length) has testAccumulation function
FAIL column-gap: length assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
FAIL column-gap: length of rem assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
PASS column-gap (type: discrete) has testAccumulation function
PASS column-gap: "200px" onto "normal"
PASS column-gap: "normal" onto "200px"
PASS column-rule-color (type: color) has testAccumulation function
FAIL column-rule-color supports animating as color of rgb() with overflowed  from and to values assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL column-rule-color supports animating as color of #RGB assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL column-rule-color supports animating as color of hsl() assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL column-rule-color supports animating as color of #RGBa assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL column-rule-color supports animating as color of rgba() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL column-rule-color supports animating as color of hsla() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
PASS column-fill (type: discrete) has testAccumulation function
PASS column-fill: "balance" onto "auto"
PASS column-fill: "auto" onto "balance"
PASS column-rule-style (type: discrete) has testAccumulation function
PASS column-rule-style: "dotted" onto "none"
PASS column-rule-style: "none" onto "dotted"
PASS column-rule-width (type: length) has testAccumulation function
FAIL column-rule-width: length assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
FAIL column-rule-width: length of rem assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
PASS column-width (type: length) has testAccumulation function
FAIL column-width: length assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
FAIL column-width: length of rem assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
PASS column-width (type: discrete) has testAccumulation function
PASS column-width: "1px" onto "auto"
PASS column-width: "auto" onto "1px"
PASS cursor (type: discrete) has testAccumulation function
PASS cursor: "wait" onto "pointer"
PASS cursor: "pointer" onto "wait"
PASS empty-cells (type: discrete) has testAccumulation function
PASS empty-cells: "hide" onto "show"
PASS empty-cells: "show" onto "hide"
PASS fill-opacity (type: opacity) has testAccumulation function
FAIL fill-opacity: [0, 1] number assert_equals: The value should be 0.6 at 0ms expected "0.6" but got "0.30000001192092896"
FAIL fill-opacity: [0, 1] number (clamped) assert_equals: The value should be 1 at 0ms expected "1" but got "0.30000001192092896"
PASS filter (type: filterList) has testAccumulation function
FAIL filter: same ordered filter functions assert_equals: The value should be blur(30px) brightness(0) at 0ms expected "blur(30px) brightness(0)" but got "blur(20px) brightness(0.1)"
PASS filter: mismatched ordered filter functions
PASS flex-basis (type: lengthPercentageOrCalc) has testAccumulation function
FAIL flex-basis: length assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
FAIL flex-basis: length of rem assert_equals: The value should be 20px at 0ms expected "20px" but got "10px"
FAIL flex-basis: percentage assert_equals: The value should be 130% at 0ms expected "130%" but got "70%"
FAIL flex-basis: units "%" onto "px" assert_equals: The value should be calc(10% + 10px) at 0ms expected "calc(10% + 10px)" but got "10%"
FAIL flex-basis: units "px" onto "%" assert_equals: The value should be calc(10% + 10px) at 0ms expected "calc(10% + 10px)" but got "10px"
FAIL flex-basis: units "rem" onto "%" assert_equals: The value should be calc(10% + 20px) at 0ms expected "calc(10% + 20px)" but got "20px"
FAIL flex-basis: units "%" onto "rem" assert_equals: The value should be calc(10% + 20px) at 0ms expected "calc(10% + 20px)" but got "10%"
FAIL flex-basis: units "rem" onto "em" assert_equals: The value should be 40px at 0ms expected "40px" but got "20px"
FAIL flex-basis: units "em" onto "rem" assert_equals: The value should be 40px at 0ms expected "40px" but got "20px"
FAIL flex-basis: units "calc" onto "px" assert_equals: The value should be calc(20% + 30px) at 0ms expected "calc(20% + 30px)" but got "calc(20% + 20px)"
FAIL flex-basis: calc assert_equals: The value should be calc(30% + 30px) at 0ms expected "calc(30% + 30px)" but got "calc(20% + 20px)"
PASS flex-basis (type: discrete) has testAccumulation function
PASS flex-basis: "10px" onto "auto"
PASS flex-basis: "auto" onto "10px"
PASS flex-direction (type: discrete) has testAccumulation function
PASS flex-direction: "row-reverse" onto "row"
PASS flex-direction: "row" onto "row-reverse"
PASS flex-grow (type: positiveNumber) has testAccumulation function
FAIL flex-grow: positive number assert_equals: The value should be 2.2 at 0ms expected "2.2" but got "1.100000023841858"
PASS flex-shrink (type: positiveNumber) has testAccumulation function
FAIL flex-shrink: positive number assert_equals: The value should be 2.2 at 0ms expected "2.2" but got "1.100000023841858"
PASS flex-wrap (type: discrete) has testAccumulation function
PASS flex-wrap: "wrap" onto "nowrap"
PASS flex-wrap: "nowrap" onto "wrap"
PASS flood-color (type: color) has testAccumulation function
FAIL flood-color supports animating as color of rgb() with overflowed  from and to values assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL flood-color supports animating as color of #RGB assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL flood-color supports animating as color of hsl() assert_equals: The value should be rgb(255, 128, 128) at 0ms expected "rgb(255, 128, 128)" but got "rgb(255, 0, 0)"
FAIL flood-color supports animating as color of #RGBa assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL flood-color supports animating as color of rgba() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
FAIL flood-color supports animating as color of hsla() assert_equals: The value should be rgb(230, 128, 128) at 0ms expected "rgb(230, 128, 128)" but got "rgba(255, 0, 0, 0.4)"
PASS flood-opacity (type: opacity) has testAccumulation function
FAIL flood-opacity: [0, 1] number assert_equals: The value should be 0.6 at 0ms expected "0.6" but got "0.30000001192092896"
FAIL flood-opacity: [0, 1] number (clamped) assert_equals: The value should be 1 at 0ms expected "1" but got "0.30000001192092896"
PASS font-stretch (type: percentage) has testAccumulation function
FAIL font-stretch: percentage assert_equals: The value should be 130% at 0ms expected "130%" but got "70%"
PASS font-style (type: discrete) has testAccumulation function
PASS font-style: "oblique" onto "italic"
PASS font-style: "italic" onto "oblique"
PASS float (type: discrete) has testAccumulation function
PASS float: "right" onto "left"
PASS float: "left" onto "right"
PASS font-variation-settings (type: fontVariationSettings) has testAccumulation function
FAIL font-variation-settings with composite type accumulate assert_equals: The value should be "wght" 2.2 at 250ms expected "\"wght\" 2.2" but got "\"wght\" 1.2"
PASS font-variation-settings (type: discrete) has testAccumulation function
PASS font-variation-settings: ""wdth" 5" onto ""wdth" 1, "wght" 1.1"
FAIL font-variation-settings: ""wdth" 1, "wght" 1.1" onto ""wdth" 5" assert_equals: The value should be "wdth" 1, "wght" 1.1 at 0ms expected "\"wdth\" 1, \"wght\" 1.1" but got "\"wght\" 1.1, \"wdth\" 1"
PASS font-variation-settings: "normal" onto ""wdth" 5"
PASS font-variation-settings: ""wdth" 5" onto "normal"
PASS grid-auto-columns (type: discrete) has testAccumulation function
PASS grid-auto-columns: "5px" onto "1px"
PASS grid-auto-columns: "1px" onto "5px"
PASS grid-auto-flow (type: discrete) has testAccumulation function
PASS grid-auto-flow: "column" onto "row"
PASS grid-auto-flow: "row" onto "column"
PASS grid-auto-rows (type: discrete) has testAccumulation function
PASS grid-auto-rows: "5px" onto "1px"
PASS grid-auto-rows: "1px" onto "5px"
PASS grid-column-end (type: discrete) has testAccumulation function
PASS grid-column-end: "5" onto "1"
PASS grid-column-end: "1" onto "5"
PASS grid-column-start (type: discrete) has testAccumulation function
PASS grid-column-start: "5" onto "1"
PASS grid-column-start: "1" onto "5"
PASS grid-row-end (type: discrete) has testAccumulation function
PASS grid-row-end: "5" onto "1"
PASS grid-row-end: "1" onto "5"
PASS grid-row-start (type: discrete) has testAccumulation function
PASS grid-row-start: "5" onto "1"
PASS grid-row-start: "1" onto "5"
PASS image-orientation (type: discrete) has testAccumulation function
PASS image-orientation: "from-image" onto "none"
PASS image-orientation: "none" onto "from-image"

