
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><font size=\"4\">a</font>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"font-size:large\"><br></span>bar"
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><font size=\"4\">a</font>bar" but got "foo<span style=\"font-size:large\"><br>a</span>bar"
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["fontsize","4"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<font size=\"4\">a</font>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><font size=\"4\">a</font>bar</p>" but got "foo<div><span style=\"font-size:large\">a</span>bar</div>"
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["fontsize","4"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<font size=\"4\">a</font>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["fontsize","4"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<font size=\"4\">a</font>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["fontsize","4"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<font size=\"4\">a</font>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["fontsize","4"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font size=\"4\">a</font>bar" but got "fooabar"
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["fontsize","4"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<font size=\"4\">a</font>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
FAIL [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after assert_equals: Wrong result returned expected "4" but got "3"
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["fontsize","4"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("fontsize", false, "4") return value
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font size=\"4\">a</font>bar" but got "foo<span style=\"font-size:large\">a</span>bar"
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("fontsize") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("fontsize") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("fontsize") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["fontsize","4"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"#0000ff\">a</font>bar" but got "foo<span style=\"color:rgb(0, 0, 255)\">a</span>bar"
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["forecolor","#0000FF"],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<font color=\"#0000ff\">a</font>bar" but got "foabar"
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<font color=\"#0000ff\">a</font>bar</div>" but got "<div>fooabar</div>"
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"#0000ff\">a</font>ar" but got "fooaar"
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["forecolor","#0000FF"],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<font color=\"#0000ff\">a</font>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><font color=\"#0000ff\">a</font>bar" but got "foo<hr>abar"
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<font color=\"#0000ff\">a</font>bar" but got "fooab<b>c</b>dabar"
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><font color=\"#0000ff\">a</font>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"color:rgb(0, 0, 255)\"><br></span>bar"
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><font color=\"#0000ff\">a</font>bar" but got "foo<span style=\"color:rgb(0, 0, 255)\"><br>a</span>bar"
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["forecolor","#0000FF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<font color=\"#0000ff\">a</font>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><font color=\"#0000ff\">a</font>bar</p>" but got "foo<div><span style=\"color:rgb(0, 0, 255)\">a</span>bar</div>"
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<font color=\"#0000ff\">a</font>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["forecolor","#0000FF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<font color=\"#0000ff\">a</font>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["forecolor","#0000FF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<font color=\"#0000ff\">a</font>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["forecolor","#0000FF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"#0000ff\">a</font>bar" but got "fooabar"
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["forecolor","#0000FF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<font color=\"#0000ff\">a</font>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 255)" but got "rgb(0, 0, 0)"
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after

