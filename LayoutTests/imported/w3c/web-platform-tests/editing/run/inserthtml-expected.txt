
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("stylewithcss") before
FAIL [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("stylewithcss") before assert_equals: Wrong result returned expected false but got true
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar]</span>baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar}</span>baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo{<span style=color:#aBcDeF>bar</span>}baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "[foo<span style=color:#aBcDeF>bar]</span>baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "{foo<span style=color:#aBcDeF>bar}</span>baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span>baz]" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>{bar</span>baz}" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","ab<b>c</b>d"]] "foo<span style=color:#aBcDeF>[bar</span><span style=color:#fEdCbA>baz]</span>quz" queryCommandValue("inserthtml") after
PASS [["inserthtml",""]] "foo[bar]baz": execCommand("inserthtml", false, "") return value
PASS [["inserthtml",""]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["inserthtml",""]] "foo[bar]baz" compare innerHTML
PASS [["inserthtml",""]] "foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml",""]] "foo[bar]baz" queryCommandState("inserthtml") before
PASS [["inserthtml",""]] "foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["inserthtml",""]] "foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml",""]] "foo[bar]baz" queryCommandState("inserthtml") after
PASS [["inserthtml",""]] "foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["inserthtml","\u0000"]] "foo[bar]baz": execCommand("inserthtml", false, "\0") return value
PASS [["inserthtml","\u0000"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["inserthtml","\u0000"]] "foo[bar]baz" compare innerHTML
PASS [["inserthtml","\u0000"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","\u0000"]] "foo[bar]baz" queryCommandState("inserthtml") before
PASS [["inserthtml","\u0000"]] "foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["inserthtml","\u0000"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","\u0000"]] "foo[bar]baz" queryCommandState("inserthtml") after
PASS [["inserthtml","\u0000"]] "foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["inserthtml","\u0007"]] "foo[bar]baz": execCommand("inserthtml", false, "\x07") return value
PASS [["inserthtml","\u0007"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["inserthtml","\u0007"]] "foo[bar]baz" compare innerHTML
PASS [["inserthtml","\u0007"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","\u0007"]] "foo[bar]baz" queryCommandState("inserthtml") before
PASS [["inserthtml","\u0007"]] "foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["inserthtml","\u0007"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","\u0007"]] "foo[bar]baz" queryCommandState("inserthtml") after
PASS [["inserthtml","\u0007"]] "foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz": execCommand("inserthtml", false, "<b>") return value
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz": execCommand("inserthtml", false, "<b>") return value
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>"]] "foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz": execCommand("inserthtml", false, "<b>abc") return value
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz": execCommand("inserthtml", false, "<b>abc") return value
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc"]] "foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz": execCommand("inserthtml", false, "<p>abc") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>abc</p><p>baz</p>" but got "<p>fooabcbaz</p>"
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz": execCommand("inserthtml", false, "<p>abc") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>abc</p><p>baz</p>" but got "<p>fooabcbaz</p>"
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<p>foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz": execCommand("inserthtml", false, "<li>abc") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><div>abc</div><p>baz</p>" but got "<p>foo</p><li>abc</li><p>baz</p>"
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz": execCommand("inserthtml", false, "<li>abc") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>abc</p><p>baz</p>" but got "<p>foo</p><li>abc</li><p>baz</p>"
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc"]] "<p>foo[bar]baz" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>abc</p><ol><li>bar</li></ol>" but got "<ol><li>abcbar<br></li></ol>"
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>abc</p><ol><li>bar</li></ol>" but got "<ol><li>abcbar<br></li></ol>"
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol>{<li>foo</li>}<li>bar</ol>" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><p>abc</p><ol><li>baz</li></ol>" but got "<ol><li>foo</li><li>abcbaz<br></li></ol>"
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><p>abc</p><ol><li>baz</li></ol>" but got "<ol><li>foo</li><li>abcbaz<br></li></ol>"
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>foo</li>{<li>bar</li>}<li>baz</ol>" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" checks for modifications to non-editable content
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" compare innerHTML
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" checks for modifications to non-editable content
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" compare innerHTML
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<ol><li>[foo]</li><li>bar</ol>" queryCommandValue("inserthtml") after
PASS [["inserthtml","abc"]] "<xmp>f[o]o</xmp>": execCommand("inserthtml", false, "abc") return value
PASS [["inserthtml","abc"]] "<xmp>f[o]o</xmp>" checks for modifications to non-editable content
PASS [["inserthtml","abc"]] "<xmp>f[o]o</xmp>" compare innerHTML
PASS [["inserthtml","abc"]] "<xmp>f[o]o</xmp>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","abc"]] "<xmp>f[o]o</xmp>" queryCommandState("inserthtml") before
PASS [["inserthtml","abc"]] "<xmp>f[o]o</xmp>" queryCommandValue("inserthtml") before
PASS [["inserthtml","abc"]] "<xmp>f[o]o</xmp>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","abc"]] "<xmp>f[o]o</xmp>" queryCommandState("inserthtml") after
PASS [["inserthtml","abc"]] "<xmp>f[o]o</xmp>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>": execCommand("inserthtml", false, "<b>abc</b>") return value
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>": execCommand("inserthtml", false, "<b>abc</b>") return value
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<xmp>f[o]o</xmp>" queryCommandValue("inserthtml") after
PASS [["inserthtml","abc"]] "<script>f[o]o</script>bar": execCommand("inserthtml", false, "abc") return value
PASS [["inserthtml","abc"]] "<script>f[o]o</script>bar" checks for modifications to non-editable content
FAIL [["inserthtml","abc"]] "<script>f[o]o</script>bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<script>fabco</script>bar" but got "<script>foo</script>abcbar"
PASS [["inserthtml","abc"]] "<script>f[o]o</script>bar" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","abc"]] "<script>f[o]o</script>bar" queryCommandState("inserthtml") before
PASS [["inserthtml","abc"]] "<script>f[o]o</script>bar" queryCommandValue("inserthtml") before
PASS [["inserthtml","abc"]] "<script>f[o]o</script>bar" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","abc"]] "<script>f[o]o</script>bar" queryCommandState("inserthtml") after
PASS [["inserthtml","abc"]] "<script>f[o]o</script>bar" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar": execCommand("inserthtml", false, "<b>abc</b>") return value
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<script>f<b>abc</b>o</script>bar" but got "<script>foo</script><b>abc</b>bar"
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar": execCommand("inserthtml", false, "<b>abc</b>") return value
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<script>f<b>abc</b>o</script>bar" but got "<script>foo</script><b>abc</b>bar"
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<b>abc</b>"]] "<script>f[o]o</script>bar" queryCommandValue("inserthtml") after
PASS [["inserthtml","<a>abc</a>"]] "<a>f[o]o</a>": execCommand("inserthtml", false, "<a>abc</a>") return value
PASS [["inserthtml","<a>abc</a>"]] "<a>f[o]o</a>" checks for modifications to non-editable content
FAIL [["inserthtml","<a>abc</a>"]] "<a>f[o]o</a>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<a>f</a><a>abc</a><a>o</a>" but got "<a>f<a>abc</a>o</a>"
PASS [["inserthtml","<a>abc</a>"]] "<a>f[o]o</a>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<a>abc</a>"]] "<a>f[o]o</a>" queryCommandState("inserthtml") before
PASS [["inserthtml","<a>abc</a>"]] "<a>f[o]o</a>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<a>abc</a>"]] "<a>f[o]o</a>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<a>abc</a>"]] "<a>f[o]o</a>" queryCommandState("inserthtml") after
PASS [["inserthtml","<a>abc</a>"]] "<a>f[o]o</a>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<a href=/>abc</a>"]] "<a href=.>f[o]o</a>": execCommand("inserthtml", false, "<a href=/>abc</a>") return value
PASS [["inserthtml","<a href=/>abc</a>"]] "<a href=.>f[o]o</a>" checks for modifications to non-editable content
FAIL [["inserthtml","<a href=/>abc</a>"]] "<a href=.>f[o]o</a>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<a href=\".\">f</a><a href=\"/\">abc</a><a href=\".\">o</a>" but got "<a href=\".\">f<a href=\"/\">abc</a>o</a>"
PASS [["inserthtml","<a href=/>abc</a>"]] "<a href=.>f[o]o</a>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<a href=/>abc</a>"]] "<a href=.>f[o]o</a>" queryCommandState("inserthtml") before
PASS [["inserthtml","<a href=/>abc</a>"]] "<a href=.>f[o]o</a>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<a href=/>abc</a>"]] "<a href=.>f[o]o</a>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<a href=/>abc</a>"]] "<a href=.>f[o]o</a>" queryCommandState("inserthtml") after
PASS [["inserthtml","<a href=/>abc</a>"]] "<a href=.>f[o]o</a>" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o": execCommand("inserthtml", false, "<hr>") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" checks for modifications to non-editable content
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" compare innerHTML
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o": execCommand("inserthtml", false, "<hr>") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" checks for modifications to non-editable content
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" compare innerHTML
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<hr>"]] "<p>f[o]o" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>": execCommand("inserthtml", false, "<hr>") return value
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>": execCommand("inserthtml", false, "<hr>") return value
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<hr>"]] "<b>f[o]o</b>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<h2>abc</h2>"]] "<h1>f[o]o</h1>": execCommand("inserthtml", false, "<h2>abc</h2>") return value
PASS [["inserthtml","<h2>abc</h2>"]] "<h1>f[o]o</h1>" checks for modifications to non-editable content
PASS [["inserthtml","<h2>abc</h2>"]] "<h1>f[o]o</h1>" compare innerHTML
PASS [["inserthtml","<h2>abc</h2>"]] "<h1>f[o]o</h1>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<h2>abc</h2>"]] "<h1>f[o]o</h1>" queryCommandState("inserthtml") before
PASS [["inserthtml","<h2>abc</h2>"]] "<h1>f[o]o</h1>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<h2>abc</h2>"]] "<h1>f[o]o</h1>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<h2>abc</h2>"]] "<h1>f[o]o</h1>" queryCommandState("inserthtml") after
PASS [["inserthtml","<h2>abc</h2>"]] "<h1>f[o]o</h1>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<td>abc</td>"]] "<table><tr><td>f[o]o</table>": execCommand("inserthtml", false, "<td>abc</td>") return value
PASS [["inserthtml","<td>abc</td>"]] "<table><tr><td>f[o]o</table>" checks for modifications to non-editable content
PASS [["inserthtml","<td>abc</td>"]] "<table><tr><td>f[o]o</table>" compare innerHTML
PASS [["inserthtml","<td>abc</td>"]] "<table><tr><td>f[o]o</table>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<td>abc</td>"]] "<table><tr><td>f[o]o</table>" queryCommandState("inserthtml") before
PASS [["inserthtml","<td>abc</td>"]] "<table><tr><td>f[o]o</table>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<td>abc</td>"]] "<table><tr><td>f[o]o</table>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<td>abc</td>"]] "<table><tr><td>f[o]o</table>" queryCommandState("inserthtml") after
PASS [["inserthtml","<td>abc</td>"]] "<table><tr><td>f[o]o</table>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<td>abc</td>"]] "f[o]o": execCommand("inserthtml", false, "<td>abc</td>") return value
PASS [["inserthtml","<td>abc</td>"]] "f[o]o" checks for modifications to non-editable content
PASS [["inserthtml","<td>abc</td>"]] "f[o]o" compare innerHTML
PASS [["inserthtml","<td>abc</td>"]] "f[o]o" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<td>abc</td>"]] "f[o]o" queryCommandState("inserthtml") before
PASS [["inserthtml","<td>abc</td>"]] "f[o]o" queryCommandValue("inserthtml") before
PASS [["inserthtml","<td>abc</td>"]] "f[o]o" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<td>abc</td>"]] "f[o]o" queryCommandState("inserthtml") after
PASS [["inserthtml","<td>abc</td>"]] "f[o]o" queryCommandValue("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>f[o]o<dd>bar</dl>": execCommand("inserthtml", false, "<dt>abc</dt>") return value
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>f[o]o<dd>bar</dl>" checks for modifications to non-editable content
FAIL [["inserthtml","<dt>abc</dt>"]] "<dl><dt>f[o]o<dd>bar</dl>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<dl><dt>f</dt><dt>abc</dt><dt>o</dt><dd>bar</dd></dl>" but got "<dl><dt>fabco<br></dt><dd>bar</dd></dl>"
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandState("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandState("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>foo<dd>b[a]r</dl>": execCommand("inserthtml", false, "<dt>abc</dt>") return value
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>foo<dd>b[a]r</dl>" checks for modifications to non-editable content
FAIL [["inserthtml","<dt>abc</dt>"]] "<dl><dt>foo<dd>b[a]r</dl>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<dl><dt>foo</dt><dd>b</dd><dt>abc</dt><dd>r</dd></dl>" but got "<dl><dt>foo</dt><dd>babcr<br></dd></dl>"
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandState("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandState("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>f[o]o<dd>bar</dl>": execCommand("inserthtml", false, "<dd>abc</dd>") return value
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>f[o]o<dd>bar</dl>" checks for modifications to non-editable content
FAIL [["inserthtml","<dd>abc</dd>"]] "<dl><dt>f[o]o<dd>bar</dl>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<dl><dt>f</dt><dd>abc</dd><dt>o</dt><dd>bar</dd></dl>" but got "<dl><dt>fabco<br></dt><dd>bar</dd></dl>"
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandState("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandState("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>f[o]o<dd>bar</dl>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>foo<dd>b[a]r</dl>": execCommand("inserthtml", false, "<dd>abc</dd>") return value
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>foo<dd>b[a]r</dl>" checks for modifications to non-editable content
FAIL [["inserthtml","<dd>abc</dd>"]] "<dl><dt>foo<dd>b[a]r</dl>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<dl><dt>foo</dt><dd>b</dd><dd>abc</dd><dd>r</dd></dl>" but got "<dl><dt>foo</dt><dd>babcr<br></dd></dl>"
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandState("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandState("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "<dl><dt>foo<dd>b[a]r</dl>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "f[o]o": execCommand("inserthtml", false, "<dt>abc</dt>") return value
PASS [["inserthtml","<dt>abc</dt>"]] "f[o]o" checks for modifications to non-editable content
FAIL [["inserthtml","<dt>abc</dt>"]] "f[o]o" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "f<dl><dt>abc</dt></dl>o" but got "fabco<br>"
PASS [["inserthtml","<dt>abc</dt>"]] "f[o]o" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "f[o]o" queryCommandState("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "f[o]o" queryCommandValue("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "f[o]o" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "f[o]o" queryCommandState("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "f[o]o" queryCommandValue("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "<ol><li>f[o]o</ol>": execCommand("inserthtml", false, "<dt>abc</dt>") return value
PASS [["inserthtml","<dt>abc</dt>"]] "<ol><li>f[o]o</ol>" checks for modifications to non-editable content
FAIL [["inserthtml","<dt>abc</dt>"]] "<ol><li>f[o]o</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>f<dl><dt>abc</dt></dl>o</li></ol>" but got "<ol><li>fabco<br></li></ol>"
PASS [["inserthtml","<dt>abc</dt>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<dt>abc</dt>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") after
PASS [["inserthtml","<dt>abc</dt>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "f[o]o": execCommand("inserthtml", false, "<dd>abc</dd>") return value
PASS [["inserthtml","<dd>abc</dd>"]] "f[o]o" checks for modifications to non-editable content
FAIL [["inserthtml","<dd>abc</dd>"]] "f[o]o" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "f<dl><dd>abc</dd></dl>o" but got "fabco<br>"
PASS [["inserthtml","<dd>abc</dd>"]] "f[o]o" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "f[o]o" queryCommandState("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "f[o]o" queryCommandValue("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "f[o]o" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "f[o]o" queryCommandState("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "f[o]o" queryCommandValue("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "<ol><li>f[o]o</ol>": execCommand("inserthtml", false, "<dd>abc</dd>") return value
PASS [["inserthtml","<dd>abc</dd>"]] "<ol><li>f[o]o</ol>" checks for modifications to non-editable content
FAIL [["inserthtml","<dd>abc</dd>"]] "<ol><li>f[o]o</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>f<dl><dd>abc</dd></dl>o</li></ol>" but got "<ol><li>fabco<br></li></ol>"
PASS [["inserthtml","<dd>abc</dd>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<dd>abc</dd>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") after
PASS [["inserthtml","<dd>abc</dd>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<li>abc</li>"]] "<dir><li>f[o]o</dir>": execCommand("inserthtml", false, "<li>abc</li>") return value
PASS [["inserthtml","<li>abc</li>"]] "<dir><li>f[o]o</dir>" checks for modifications to non-editable content
FAIL [["inserthtml","<li>abc</li>"]] "<dir><li>f[o]o</dir>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<dir><li>f</li><li>abc</li><li>o</li></dir>" but got "<dir><li>f<li>abc</li>o</li></dir>"
PASS [["inserthtml","<li>abc</li>"]] "<dir><li>f[o]o</dir>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<li>abc</li>"]] "<dir><li>f[o]o</dir>" queryCommandState("inserthtml") before
PASS [["inserthtml","<li>abc</li>"]] "<dir><li>f[o]o</dir>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<li>abc</li>"]] "<dir><li>f[o]o</dir>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<li>abc</li>"]] "<dir><li>f[o]o</dir>" queryCommandState("inserthtml") after
PASS [["inserthtml","<li>abc</li>"]] "<dir><li>f[o]o</dir>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<li>abc</li>"]] "<ol><li>f[o]o</ol>": execCommand("inserthtml", false, "<li>abc</li>") return value
PASS [["inserthtml","<li>abc</li>"]] "<ol><li>f[o]o</ol>" checks for modifications to non-editable content
FAIL [["inserthtml","<li>abc</li>"]] "<ol><li>f[o]o</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>f</li><li>abc</li><li>o</li></ol>" but got "<ol><li>f<li>abc</li>o</li></ol>"
PASS [["inserthtml","<li>abc</li>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<li>abc</li>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") before
PASS [["inserthtml","<li>abc</li>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<li>abc</li>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<li>abc</li>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") after
PASS [["inserthtml","<li>abc</li>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<li>abc</li>"]] "<ul><li>f[o]o</ul>": execCommand("inserthtml", false, "<li>abc</li>") return value
PASS [["inserthtml","<li>abc</li>"]] "<ul><li>f[o]o</ul>" checks for modifications to non-editable content
FAIL [["inserthtml","<li>abc</li>"]] "<ul><li>f[o]o</ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>f</li><li>abc</li><li>o</li></ul>" but got "<ul><li>f<li>abc</li>o</li></ul>"
PASS [["inserthtml","<li>abc</li>"]] "<ul><li>f[o]o</ul>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<li>abc</li>"]] "<ul><li>f[o]o</ul>" queryCommandState("inserthtml") before
PASS [["inserthtml","<li>abc</li>"]] "<ul><li>f[o]o</ul>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<li>abc</li>"]] "<ul><li>f[o]o</ul>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<li>abc</li>"]] "<ul><li>f[o]o</ul>" queryCommandState("inserthtml") after
PASS [["inserthtml","<li>abc</li>"]] "<ul><li>f[o]o</ul>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<dir><li>abc</dir>"]] "<dir><li>f[o]o</dir>": execCommand("inserthtml", false, "<dir><li>abc</dir>") return value
PASS [["inserthtml","<dir><li>abc</dir>"]] "<dir><li>f[o]o</dir>" checks for modifications to non-editable content
PASS [["inserthtml","<dir><li>abc</dir>"]] "<dir><li>f[o]o</dir>" compare innerHTML
PASS [["inserthtml","<dir><li>abc</dir>"]] "<dir><li>f[o]o</dir>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<dir><li>abc</dir>"]] "<dir><li>f[o]o</dir>" queryCommandState("inserthtml") before
PASS [["inserthtml","<dir><li>abc</dir>"]] "<dir><li>f[o]o</dir>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<dir><li>abc</dir>"]] "<dir><li>f[o]o</dir>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<dir><li>abc</dir>"]] "<dir><li>f[o]o</dir>" queryCommandState("inserthtml") after
PASS [["inserthtml","<dir><li>abc</dir>"]] "<dir><li>f[o]o</dir>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ol><li>f[o]o</ol>": execCommand("inserthtml", false, "<dir><li>abc</dir>") return value
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ol><li>f[o]o</ol>" checks for modifications to non-editable content
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ol><li>f[o]o</ol>" compare innerHTML
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") before
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") after
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ul><li>f[o]o</ul>": execCommand("inserthtml", false, "<dir><li>abc</dir>") return value
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ul><li>f[o]o</ul>" checks for modifications to non-editable content
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ul><li>f[o]o</ul>" compare innerHTML
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ul><li>f[o]o</ul>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ul><li>f[o]o</ul>" queryCommandState("inserthtml") before
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ul><li>f[o]o</ul>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ul><li>f[o]o</ul>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ul><li>f[o]o</ul>" queryCommandState("inserthtml") after
PASS [["inserthtml","<dir><li>abc</dir>"]] "<ul><li>f[o]o</ul>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<ol><li>abc</ol>"]] "<dir><li>f[o]o</dir>": execCommand("inserthtml", false, "<ol><li>abc</ol>") return value
PASS [["inserthtml","<ol><li>abc</ol>"]] "<dir><li>f[o]o</dir>" checks for modifications to non-editable content
FAIL [["inserthtml","<ol><li>abc</ol>"]] "<dir><li>f[o]o</dir>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<dir><li>f<ol><li>abc</li></ol>o</li></dir>" but got "<dir><li>f</li><li>abc</li><li>o</li></dir>"
PASS [["inserthtml","<ol><li>abc</ol>"]] "<dir><li>f[o]o</dir>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<ol><li>abc</ol>"]] "<dir><li>f[o]o</dir>" queryCommandState("inserthtml") before
PASS [["inserthtml","<ol><li>abc</ol>"]] "<dir><li>f[o]o</dir>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<ol><li>abc</ol>"]] "<dir><li>f[o]o</dir>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<ol><li>abc</ol>"]] "<dir><li>f[o]o</dir>" queryCommandState("inserthtml") after
PASS [["inserthtml","<ol><li>abc</ol>"]] "<dir><li>f[o]o</dir>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ol><li>f[o]o</ol>": execCommand("inserthtml", false, "<ol><li>abc</ol>") return value
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ol><li>f[o]o</ol>" checks for modifications to non-editable content
FAIL [["inserthtml","<ol><li>abc</ol>"]] "<ol><li>f[o]o</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>f<ol><li>abc</li></ol>o</li></ol>" but got "<ol><li>f</li><li>abc</li><li>o</li></ol>"
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") before
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") after
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ul><li>f[o]o</ul>": execCommand("inserthtml", false, "<ol><li>abc</ol>") return value
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ul><li>f[o]o</ul>" checks for modifications to non-editable content
FAIL [["inserthtml","<ol><li>abc</ol>"]] "<ul><li>f[o]o</ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>f<ol><li>abc</li></ol>o</li></ul>" but got "<ul><li>f</li><li>abc</li><li>o</li></ul>"
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ul><li>f[o]o</ul>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ul><li>f[o]o</ul>" queryCommandState("inserthtml") before
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ul><li>f[o]o</ul>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ul><li>f[o]o</ul>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ul><li>f[o]o</ul>" queryCommandState("inserthtml") after
PASS [["inserthtml","<ol><li>abc</ol>"]] "<ul><li>f[o]o</ul>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<ul><li>abc</ul>"]] "<dir><li>f[o]o</dir>": execCommand("inserthtml", false, "<ul><li>abc</ul>") return value
PASS [["inserthtml","<ul><li>abc</ul>"]] "<dir><li>f[o]o</dir>" checks for modifications to non-editable content
FAIL [["inserthtml","<ul><li>abc</ul>"]] "<dir><li>f[o]o</dir>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<dir><li>f<ul><li>abc</li></ul>o</li></dir>" but got "<dir><li>f</li><li>abc</li><li>o</li></dir>"
PASS [["inserthtml","<ul><li>abc</ul>"]] "<dir><li>f[o]o</dir>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<ul><li>abc</ul>"]] "<dir><li>f[o]o</dir>" queryCommandState("inserthtml") before
PASS [["inserthtml","<ul><li>abc</ul>"]] "<dir><li>f[o]o</dir>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<ul><li>abc</ul>"]] "<dir><li>f[o]o</dir>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<ul><li>abc</ul>"]] "<dir><li>f[o]o</dir>" queryCommandState("inserthtml") after
PASS [["inserthtml","<ul><li>abc</ul>"]] "<dir><li>f[o]o</dir>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ol><li>f[o]o</ol>": execCommand("inserthtml", false, "<ul><li>abc</ul>") return value
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ol><li>f[o]o</ol>" checks for modifications to non-editable content
FAIL [["inserthtml","<ul><li>abc</ul>"]] "<ol><li>f[o]o</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>f<ul><li>abc</li></ul>o</li></ol>" but got "<ol><li>f</li><li>abc</li><li>o</li></ol>"
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") before
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ol><li>f[o]o</ol>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ol><li>f[o]o</ol>" queryCommandState("inserthtml") after
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ol><li>f[o]o</ol>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ul><li>f[o]o</ul>": execCommand("inserthtml", false, "<ul><li>abc</ul>") return value
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ul><li>f[o]o</ul>" checks for modifications to non-editable content
FAIL [["inserthtml","<ul><li>abc</ul>"]] "<ul><li>f[o]o</ul>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>f<ul><li>abc</li></ul>o</li></ul>" but got "<ul><li>f</li><li>abc</li><li>o</li></ul>"
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ul><li>f[o]o</ul>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ul><li>f[o]o</ul>" queryCommandState("inserthtml") before
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ul><li>f[o]o</ul>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ul><li>f[o]o</ul>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ul><li>f[o]o</ul>" queryCommandState("inserthtml") after
PASS [["inserthtml","<ul><li>abc</ul>"]] "<ul><li>f[o]o</ul>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>": execCommand("inserthtml", false, "<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>") return value
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" checks for modifications to non-editable content
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" compare innerHTML
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandState("inserthtml") before
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandState("inserthtml") after
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>": execCommand("inserthtml", false, "<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>") return value
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" checks for modifications to non-editable content
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" compare innerHTML
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandState("inserthtml") before
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandState("inserthtml") after
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>": execCommand("inserthtml", false, "<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>") return value
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" checks for modifications to non-editable content
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" compare innerHTML
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandState("inserthtml") before
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandState("inserthtml") after
PASS [["inserthtml","<ol id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ol>"]] "<ul id=\"old\"><li id=\"li0\">{}<br></ul>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>": execCommand("inserthtml", false, "<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>") return value
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" checks for modifications to non-editable content
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" compare innerHTML
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandState("inserthtml") before
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandState("inserthtml") after
PASS [["inserthtml","<ul id=\"new\"><li id=\"li1\">abc</li><li id=\"li2\">def</li></ul>"]] "<ol id=\"old\"><li id=\"li0\">{}<br></ol>" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o": execCommand("inserthtml", false, "<li>abc</li>") return value
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "f<div>abc</div>o" but got "f<li>abc</li>o"
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","div"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandValue("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o": execCommand("inserthtml", false, "<li>abc</li>") return value
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "f<p>abc</p>o" but got "f<li>abc</li>o"
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandIndeterm("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandState("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandValue("inserthtml") before
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandIndeterm("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandState("inserthtml") after
PASS [["defaultparagraphseparator","p"],["inserthtml","<li>abc</li>"]] "f[o]o" queryCommandValue("inserthtml") after
PASS [["inserthtml","<nobr>abc</nobr>"]] "<nobr>f[o]o</nobr>": execCommand("inserthtml", false, "<nobr>abc</nobr>") return value
PASS [["inserthtml","<nobr>abc</nobr>"]] "<nobr>f[o]o</nobr>" checks for modifications to non-editable content
FAIL [["inserthtml","<nobr>abc</nobr>"]] "<nobr>f[o]o</nobr>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<nobr>f</nobr><nobr>abc</nobr><nobr>o</nobr>" but got "<nobr>f<nobr>abc</nobr>o</nobr>"
PASS [["inserthtml","<nobr>abc</nobr>"]] "<nobr>f[o]o</nobr>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<nobr>abc</nobr>"]] "<nobr>f[o]o</nobr>" queryCommandState("inserthtml") before
PASS [["inserthtml","<nobr>abc</nobr>"]] "<nobr>f[o]o</nobr>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<nobr>abc</nobr>"]] "<nobr>f[o]o</nobr>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<nobr>abc</nobr>"]] "<nobr>f[o]o</nobr>" queryCommandState("inserthtml") after
PASS [["inserthtml","<nobr>abc</nobr>"]] "<nobr>f[o]o</nobr>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<nobr>abc</nobr>"]] "f[o]o": execCommand("inserthtml", false, "<nobr>abc</nobr>") return value
PASS [["inserthtml","<nobr>abc</nobr>"]] "f[o]o" checks for modifications to non-editable content
PASS [["inserthtml","<nobr>abc</nobr>"]] "f[o]o" compare innerHTML
PASS [["inserthtml","<nobr>abc</nobr>"]] "f[o]o" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<nobr>abc</nobr>"]] "f[o]o" queryCommandState("inserthtml") before
PASS [["inserthtml","<nobr>abc</nobr>"]] "f[o]o" queryCommandValue("inserthtml") before
PASS [["inserthtml","<nobr>abc</nobr>"]] "f[o]o" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<nobr>abc</nobr>"]] "f[o]o" queryCommandState("inserthtml") after
PASS [["inserthtml","<nobr>abc</nobr>"]] "f[o]o" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<font color=\"blue\">foo</font><p><span style=\"color:rgb(0, 0, 255)\">abc</span></p><font color=\"blue\">bar</font>" but got "<font color=\"blue\">foo</font>abc<span style=\"color:rgb(0, 0, 255)\">bar</span><br>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<font color=\"blue\">foo</font><p><font color=\"#0000ff\">abc</font></p><font color=\"blue\">bar</font>" but got "<font color=\"blue\">foo</font>abc<span style=\"color:rgb(0, 0, 255)\">bar</span><br>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<font color=\"blue\">foo</font><p><span style=\"color:rgb(0, 0, 255)\">abc</span></p><font color=\"blue\">bar</font>" but got "<font color=\"blue\">foo</font>abc<span style=\"color:rgb(0, 0, 255)\">bar</span><br>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<font color=\"blue\">foo</font><p><font color=\"#0000ff\">abc</font></p><font color=\"blue\">bar</font>" but got "<font color=\"blue\">foo</font>abc<span style=\"color:rgb(0, 0, 255)\">bar</span><br>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<font color=blue>foo[]bar</font>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foo</span><p><span style=\"color:rgb(0, 0, 255)\">abc</span></p><span style=\"color:rgb(0, 0, 255)\">bar</span>" but got "<span style=\"color:rgb(0, 0, 255)\">foo</span>abc<span style=\"color:rgb(0, 0, 255)\">bar</span><br>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foo</span><p><font color=\"#0000ff\">abc</font></p><span style=\"color:rgb(0, 0, 255)\">bar</span>" but got "<span style=\"color:rgb(0, 0, 255)\">foo</span>abc<span style=\"color:rgb(0, 0, 255)\">bar</span><br>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foo</span><p><span style=\"color:rgb(0, 0, 255)\">abc</span></p><span style=\"color:rgb(0, 0, 255)\">bar</span>" but got "<span style=\"color:rgb(0, 0, 255)\">foo</span>abc<span style=\"color:rgb(0, 0, 255)\">bar</span><br>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"color:rgb(0, 0, 255)\">foo</span><p><font color=\"#0000ff\">abc</font></p><span style=\"color:rgb(0, 0, 255)\">bar</span>" but got "<span style=\"color:rgb(0, 0, 255)\">foo</span>abc<span style=\"color:rgb(0, 0, 255)\">bar</span><br>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=color:blue>foo[]bar</span>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"font-variant:small-caps\">foo</span><p>abc</p><span style=\"font-variant:small-caps\">bar</span>" but got "<span style=\"font-variant:small-caps\">fooabcbar<br></span>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"font-variant:small-caps\">foo</span><p>abc</p><span style=\"font-variant:small-caps\">bar</span>" but got "<span style=\"font-variant:small-caps\">fooabcbar<br></span>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"font-variant:small-caps\">foo</span><p>abc</p><span style=\"font-variant:small-caps\">bar</span>" but got "<span style=\"font-variant:small-caps\">fooabcbar<br></span>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>": execCommand("inserthtml", false, "<p>abc") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"font-variant:small-caps\">foo</span><p>abc</p><span style=\"font-variant:small-caps\">bar</span>" but got "<span style=\"font-variant:small-caps\">fooabcbar<br></span>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["inserthtml","<p>abc"]] "<span style=font-variant:small-caps>foo[]bar</span>" queryCommandValue("inserthtml") after
PASS [["inserthtml"," "]] "<p>[foo]</p>": execCommand("inserthtml", false, " ") return value
PASS [["inserthtml"," "]] "<p>[foo]</p>" checks for modifications to non-editable content
FAIL [["inserthtml"," "]] "<p>[foo]</p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p> <br></p>" but got "<p> </p>"
PASS [["inserthtml"," "]] "<p>[foo]</p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml"," "]] "<p>[foo]</p>" queryCommandState("inserthtml") before
PASS [["inserthtml"," "]] "<p>[foo]</p>" queryCommandValue("inserthtml") before
PASS [["inserthtml"," "]] "<p>[foo]</p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml"," "]] "<p>[foo]</p>" queryCommandState("inserthtml") after
PASS [["inserthtml"," "]] "<p>[foo]</p>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>": execCommand("inserthtml", false, "<span style=display:none></span>") return value
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" compare innerHTML
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandState("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandState("inserthtml") after
PASS [["stylewithcss","true"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandValue("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>": execCommand("inserthtml", false, "<span style=display:none></span>") return value
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" compare innerHTML
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandIndeterm("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandState("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandValue("inserthtml") before
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandIndeterm("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandState("inserthtml") after
PASS [["stylewithcss","false"],["inserthtml","<span style=display:none></span>"]] "<p>[foo]</p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p>[foo]</p>": execCommand("inserthtml", false, "<!--abc-->") return value
PASS [["inserthtml","<!--abc-->"]] "<p>[foo]</p>" checks for modifications to non-editable content
PASS [["inserthtml","<!--abc-->"]] "<p>[foo]</p>" compare innerHTML
PASS [["inserthtml","<!--abc-->"]] "<p>[foo]</p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p>[foo]</p>" queryCommandState("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p>[foo]</p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p>[foo]</p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p>[foo]</p>" queryCommandState("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p>[foo]</p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","abc"]] "<p>{}<br></p>": execCommand("inserthtml", false, "abc") return value
PASS [["inserthtml","abc"]] "<p>{}<br></p>" checks for modifications to non-editable content
FAIL [["inserthtml","abc"]] "<p>{}<br></p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>abc</p>" but got "<p>abc<br></p>"
PASS [["inserthtml","abc"]] "<p>{}<br></p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","abc"]] "<p>{}<br></p>" queryCommandState("inserthtml") before
PASS [["inserthtml","abc"]] "<p>{}<br></p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","abc"]] "<p>{}<br></p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","abc"]] "<p>{}<br></p>" queryCommandState("inserthtml") after
PASS [["inserthtml","abc"]] "<p>{}<br></p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p>{}<br></p>": execCommand("inserthtml", false, "<!--abc-->") return value
PASS [["inserthtml","<!--abc-->"]] "<p>{}<br></p>" checks for modifications to non-editable content
PASS [["inserthtml","<!--abc-->"]] "<p>{}<br></p>" compare innerHTML
PASS [["inserthtml","<!--abc-->"]] "<p>{}<br></p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p>{}<br></p>" queryCommandState("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p>{}<br></p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p>{}<br></p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p>{}<br></p>" queryCommandState("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p>{}<br></p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","abc"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>": execCommand("inserthtml", false, "abc") return value
PASS [["inserthtml","abc"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" checks for modifications to non-editable content
FAIL [["inserthtml","abc"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><!--foo-->abc<!--bar--></p>" but got "<p><!--foo-->abc<span><br></span><!--bar--></p>"
PASS [["inserthtml","abc"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","abc"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandState("inserthtml") before
PASS [["inserthtml","abc"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","abc"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","abc"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandState("inserthtml") after
PASS [["inserthtml","abc"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>": execCommand("inserthtml", false, "<!--abc-->") return value
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" checks for modifications to non-editable content
FAIL [["inserthtml","<!--abc-->"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><!--foo--><!--abc--><!--bar--><br></p>" but got "<p><!--foo--><!--abc--><span><br></span><!--bar--></p>"
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandState("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandState("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo-->{}<span><br></span><!--bar--></p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","abc"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>": execCommand("inserthtml", false, "abc") return value
PASS [["inserthtml","abc"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" checks for modifications to non-editable content
FAIL [["inserthtml","abc"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>abc</p>" but got "<p>abc<span><!--foo--><br><!--bar--></span></p>"
PASS [["inserthtml","abc"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","abc"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandState("inserthtml") before
PASS [["inserthtml","abc"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","abc"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","abc"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandState("inserthtml") after
PASS [["inserthtml","abc"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>": execCommand("inserthtml", false, "<!--abc-->") return value
PASS [["inserthtml","<!--abc-->"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" checks for modifications to non-editable content
FAIL [["inserthtml","<!--abc-->"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><!--abc--><br></p>" but got "<p><!--abc--><span><!--foo--><br><!--bar--></span></p>"
PASS [["inserthtml","<!--abc-->"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandState("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandState("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p>{}<span><!--foo--><br><!--bar--></span></p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","abc"]] "<p><br>{}</p>": execCommand("inserthtml", false, "abc") return value
PASS [["inserthtml","abc"]] "<p><br>{}</p>" checks for modifications to non-editable content
PASS [["inserthtml","abc"]] "<p><br>{}</p>" compare innerHTML
PASS [["inserthtml","abc"]] "<p><br>{}</p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","abc"]] "<p><br>{}</p>" queryCommandState("inserthtml") before
PASS [["inserthtml","abc"]] "<p><br>{}</p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","abc"]] "<p><br>{}</p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","abc"]] "<p><br>{}</p>" queryCommandState("inserthtml") after
PASS [["inserthtml","abc"]] "<p><br>{}</p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><br>{}</p>": execCommand("inserthtml", false, "<!--abc-->") return value
PASS [["inserthtml","<!--abc-->"]] "<p><br>{}</p>" checks for modifications to non-editable content
PASS [["inserthtml","<!--abc-->"]] "<p><br>{}</p>" compare innerHTML
PASS [["inserthtml","<!--abc-->"]] "<p><br>{}</p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><br>{}</p>" queryCommandState("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><br>{}</p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><br>{}</p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><br>{}</p>" queryCommandState("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><br>{}</p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","abc"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>": execCommand("inserthtml", false, "abc") return value
PASS [["inserthtml","abc"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" checks for modifications to non-editable content
PASS [["inserthtml","abc"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" compare innerHTML
PASS [["inserthtml","abc"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","abc"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandState("inserthtml") before
PASS [["inserthtml","abc"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","abc"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","abc"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandState("inserthtml") after
PASS [["inserthtml","abc"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>": execCommand("inserthtml", false, "<!--abc-->") return value
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" checks for modifications to non-editable content
FAIL [["inserthtml","<!--abc-->"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><!--foo--><span><!--abc--><br></span><!--bar--></p>" but got "<p><!--foo--><!--abc--><span><br></span><!--bar--></p>"
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandState("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandState("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><!--foo--><span><br></span>{}<!--bar--></p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","abc"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>": execCommand("inserthtml", false, "abc") return value
PASS [["inserthtml","abc"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" checks for modifications to non-editable content
PASS [["inserthtml","abc"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" compare innerHTML
PASS [["inserthtml","abc"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","abc"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandState("inserthtml") before
PASS [["inserthtml","abc"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","abc"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","abc"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandState("inserthtml") after
PASS [["inserthtml","abc"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>": execCommand("inserthtml", false, "<!--abc-->") return value
PASS [["inserthtml","<!--abc-->"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" checks for modifications to non-editable content
PASS [["inserthtml","<!--abc-->"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" compare innerHTML
PASS [["inserthtml","<!--abc-->"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandState("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<!--abc-->"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandState("inserthtml") after
PASS [["inserthtml","<!--abc-->"]] "<p><span><!--foo--><br><!--bar--></span>{}</p>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>12[]34</pre>": execCommand("inserthtml", false, "<pre>abc</pre>") return value
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>12[]34</pre>" checks for modifications to non-editable content
FAIL [["inserthtml","<pre>abc</pre>"]] "<pre>12[]34</pre>" compare innerHTML assert_in_array: Unexpected innerHTML (after normalizing inline style) value "<pre>12<span style=\"font-family:serif\">abc</span><span style=\"font-family:serif\">34</span></pre>" not in array ["<pre>12abc34</pre>", "<pre>12abc34<br></pre>"]
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>12[]34</pre>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>12[]34</pre>" queryCommandState("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>12[]34</pre>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>12[]34</pre>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>12[]34</pre>" queryCommandState("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>12[]34</pre>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>1[23]4</pre>": execCommand("inserthtml", false, "<pre>abc</pre>") return value
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>1[23]4</pre>" checks for modifications to non-editable content
FAIL [["inserthtml","<pre>abc</pre>"]] "<pre>1[23]4</pre>" compare innerHTML assert_in_array: Unexpected innerHTML (after normalizing inline style) value "<pre>1<span style=\"font-family:serif\">abc</span><span style=\"font-family:serif\">4</span><br></pre>" not in array ["<pre>1abc4</pre>", "<pre>1abc4<br></pre>"]
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>1[23]4</pre>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>1[23]4</pre>" queryCommandState("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>1[23]4</pre>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>1[23]4</pre>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>1[23]4</pre>" queryCommandState("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>1[23]4</pre>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>[1234]</pre>": execCommand("inserthtml", false, "<pre>abc</pre>") return value
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>[1234]</pre>" checks for modifications to non-editable content
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>[1234]</pre>" compare innerHTML
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>[1234]</pre>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>[1234]</pre>" queryCommandState("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>[1234]</pre>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>[1234]</pre>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>[1234]</pre>" queryCommandState("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre>[1234]</pre>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre contenteditable=\"false\"><span contenteditable>[1234]</span></pre>": execCommand("inserthtml", false, "<pre>abc</pre>") return value
PASS [["inserthtml","<pre>abc</pre>"]] "<pre contenteditable=\"false\"><span contenteditable>[1234]</span></pre>" checks for modifications to non-editable content
FAIL [["inserthtml","<pre>abc</pre>"]] "<pre contenteditable=\"false\"><span contenteditable>[1234]</span></pre>" compare innerHTML assert_in_array: Unexpected innerHTML (after normalizing inline style) value "<pre contenteditable=\"false\"><span contenteditable=\"\"><pre>abc</pre></span></pre>" not in array ["<pre contenteditable=\"false\"><span contenteditable=\"\">abc</span></pre>", "<pre contenteditable=\"false\"><span contenteditable=\"\">abc<br></span></pre>"]
PASS [["inserthtml","<pre>abc</pre>"]] "<pre contenteditable=\"false\"><span contenteditable>[1234]</span></pre>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre contenteditable=\"false\"><span contenteditable>[1234]</span></pre>" queryCommandState("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre contenteditable=\"false\"><span contenteditable>[1234]</span></pre>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<pre>abc</pre>"]] "<pre contenteditable=\"false\"><span contenteditable>[1234]</span></pre>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre contenteditable=\"false\"><span contenteditable>[1234]</span></pre>" queryCommandState("inserthtml") after
PASS [["inserthtml","<pre>abc</pre>"]] "<pre contenteditable=\"false\"><span contenteditable>[1234]</span></pre>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<span></span>"]] "<div>a[]b</div>": execCommand("inserthtml", false, "<span></span>") return value
PASS [["inserthtml","<span></span>"]] "<div>a[]b</div>" checks for modifications to non-editable content
FAIL [["inserthtml","<span></span>"]] "<div>a[]b</div>" compare innerHTML assert_in_array: Unexpected innerHTML (after normalizing inline style) value "<div>ab</div>" not in array ["<div>a<span></span>b</div>", "<div>a<span></span>b<br></div>"]
PASS [["inserthtml","<span></span>"]] "<div>a[]b</div>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<span></span>"]] "<div>a[]b</div>" queryCommandState("inserthtml") before
PASS [["inserthtml","<span></span>"]] "<div>a[]b</div>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<span></span>"]] "<div>a[]b</div>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<span></span>"]] "<div>a[]b</div>" queryCommandState("inserthtml") after
PASS [["inserthtml","<span></span>"]] "<div>a[]b</div>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<span class=\"s1\"></span>b<span class=\"s2\"></span>"]] "<div>a[]c</div>": execCommand("inserthtml", false, "<span class=\"s1\"></span>b<span class=\"s2\"></span>") return value
PASS [["inserthtml","<span class=\"s1\"></span>b<span class=\"s2\"></span>"]] "<div>a[]c</div>" checks for modifications to non-editable content
FAIL [["inserthtml","<span class=\"s1\"></span>b<span class=\"s2\"></span>"]] "<div>a[]c</div>" compare innerHTML assert_in_array: Unexpected innerHTML (after normalizing inline style) value "<div>ab</div><span class=\"s1\"></span><span class=\"s2\"></span><div>c<br></div>" not in array ["<div>a<span class=\"s1\"></span>b<span class=\"s2\"></span>c</div>", "<div>a<span class=\"s1\"></span>b<span class=\"s2\"></span>c<br></div>"]
PASS [["inserthtml","<span class=\"s1\"></span>b<span class=\"s2\"></span>"]] "<div>a[]c</div>" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<span class=\"s1\"></span>b<span class=\"s2\"></span>"]] "<div>a[]c</div>" queryCommandState("inserthtml") before
PASS [["inserthtml","<span class=\"s1\"></span>b<span class=\"s2\"></span>"]] "<div>a[]c</div>" queryCommandValue("inserthtml") before
PASS [["inserthtml","<span class=\"s1\"></span>b<span class=\"s2\"></span>"]] "<div>a[]c</div>" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<span class=\"s1\"></span>b<span class=\"s2\"></span>"]] "<div>a[]c</div>" queryCommandState("inserthtml") after
PASS [["inserthtml","<span class=\"s1\"></span>b<span class=\"s2\"></span>"]] "<div>a[]c</div>" queryCommandValue("inserthtml") after
PASS [["inserthtml","<div class=\"d1\"></div><div class=\"d2\"><span class=\"s1\">some text</span><a href=\"foo.html\"></a></div>"]] "{}": execCommand("inserthtml", false, "<div class=\"d1\"></div><div class=\"d2\"><span class=\"s1\">some text</span><a href=\"foo.html\"></a></div>") return value
PASS [["inserthtml","<div class=\"d1\"></div><div class=\"d2\"><span class=\"s1\">some text</span><a href=\"foo.html\"></a></div>"]] "{}" checks for modifications to non-editable content
PASS [["inserthtml","<div class=\"d1\"></div><div class=\"d2\"><span class=\"s1\">some text</span><a href=\"foo.html\"></a></div>"]] "{}" compare innerHTML
PASS [["inserthtml","<div class=\"d1\"></div><div class=\"d2\"><span class=\"s1\">some text</span><a href=\"foo.html\"></a></div>"]] "{}" queryCommandIndeterm("inserthtml") before
PASS [["inserthtml","<div class=\"d1\"></div><div class=\"d2\"><span class=\"s1\">some text</span><a href=\"foo.html\"></a></div>"]] "{}" queryCommandState("inserthtml") before
PASS [["inserthtml","<div class=\"d1\"></div><div class=\"d2\"><span class=\"s1\">some text</span><a href=\"foo.html\"></a></div>"]] "{}" queryCommandValue("inserthtml") before
PASS [["inserthtml","<div class=\"d1\"></div><div class=\"d2\"><span class=\"s1\">some text</span><a href=\"foo.html\"></a></div>"]] "{}" queryCommandIndeterm("inserthtml") after
PASS [["inserthtml","<div class=\"d1\"></div><div class=\"d2\"><span class=\"s1\">some text</span><a href=\"foo.html\"></a></div>"]] "{}" queryCommandState("inserthtml") after
PASS [["inserthtml","<div class=\"d1\"></div><div class=\"d2\"><span class=\"s1\">some text</span><a href=\"foo.html\"></a></div>"]] "{}" queryCommandValue("inserthtml") after

