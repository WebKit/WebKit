
FAIL [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<listing>b]ar</listing>" queryCommandValue("fontname") after assert_equals: Wrong result returned expected "sans-serif" but got "serif"
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" compare innerHTML
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandIndeterm("stylewithcss") before
FAIL [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandState("stylewithcss") before assert_equals: Wrong result returned expected false but got true
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandIndeterm("fontname") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandState("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandValue("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandState("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandValue("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" compare innerHTML
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandIndeterm("fontname") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandState("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandValue("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandState("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<pre>b]ar</pre>" queryCommandValue("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" compare innerHTML
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandIndeterm("fontname") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandState("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandValue("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandState("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandValue("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" compare innerHTML
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandIndeterm("fontname") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandState("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandValue("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandState("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<samp>b]ar</samp>" queryCommandValue("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" compare innerHTML
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandIndeterm("fontname") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandState("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandValue("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandState("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandValue("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" compare innerHTML
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandIndeterm("fontname") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandState("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandValue("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandState("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "fo[o<tt>b]ar</tt>" queryCommandValue("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" compare innerHTML
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandIndeterm("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandState("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandValue("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandState("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandValue("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" compare innerHTML
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandIndeterm("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandState("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandValue("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandState("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<tt>fo[o</tt><code>b]ar</code>" queryCommandValue("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" compare innerHTML
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandIndeterm("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandState("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandValue("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandState("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandValue("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" compare innerHTML
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandIndeterm("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandState("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandValue("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandState("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<pre>fo[o</pre><samp>b]ar</samp>" queryCommandValue("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" compare innerHTML
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandIndeterm("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandState("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandValue("fontname") before
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandState("fontname") after
PASS [["stylewithcss","true"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandValue("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>": execCommand("fontname", false, "sans-serif") return value
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" compare innerHTML
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandIndeterm("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandState("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandValue("fontname") before
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandIndeterm("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandState("fontname") after
PASS [["stylewithcss","false"],["fontname","sans-serif"]] "<span style=font-family:monospace>fo[o</span><kbd>b]ar</kbd>" queryCommandValue("fontname") after
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>[abc]</font>": execCommand("styleWithCSS", false, "false") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>[abc]</font>": execCommand("fontName", false, "monospace") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>[abc]</font>" checks for modifications to non-editable content
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>[abc]</font>" compare innerHTML
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>[abc]</font>": execCommand("styleWithCSS", false, "false") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>[abc]</font>": execCommand("fontName", false, "monospace") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>[abc]</font>" checks for modifications to non-editable content
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>[abc]</font>" compare innerHTML
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=\"7\" color=#ff0000>[abc]</font>": execCommand("styleWithCSS", false, "false") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=\"7\" color=#ff0000>[abc]</font>": execCommand("fontName", false, "monospace") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=\"7\" color=#ff0000>[abc]</font>" checks for modifications to non-editable content
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=\"7\" color=#ff0000>[abc]</font>" compare innerHTML
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>[a]bc</font>": execCommand("styleWithCSS", false, "false") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>[a]bc</font>": execCommand("fontName", false, "monospace") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>[a]bc</font>" checks for modifications to non-editable content
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>[a]bc</font>" compare innerHTML
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>ab[c]</font>": execCommand("styleWithCSS", false, "false") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>ab[c]</font>": execCommand("fontName", false, "monospace") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>ab[c]</font>" checks for modifications to non-editable content
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font size=7>ab[c]</font>" compare innerHTML
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>[a]bc</font>": execCommand("styleWithCSS", false, "false") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>[a]bc</font>": execCommand("fontName", false, "monospace") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>[a]bc</font>" checks for modifications to non-editable content
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>[a]bc</font>" compare innerHTML
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>ab[c]</font>": execCommand("styleWithCSS", false, "false") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>ab[c]</font>": execCommand("fontName", false, "monospace") return value
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>ab[c]</font>" checks for modifications to non-editable content
PASS [["styleWithCSS","false"],["fontName","monospace"]] "<font color=#ff0000>ab[c]</font>" compare innerHTML

