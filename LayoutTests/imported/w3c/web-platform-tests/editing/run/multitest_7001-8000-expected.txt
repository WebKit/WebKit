
PASS [["forecolor","#0000FF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<font color=\"#0000ff\">a</font>bar" but got "foo<span style=\"color:rgb(0, 0, 255)\">a</span>bar"
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandState("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""]] "foo[]bar" queryCommandValue("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("delete", false, "") return value
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foabar"
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("delete") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["delete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("formatblock", false, "<div>") return value
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div>fooabar</div>"
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("formatblock") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["formatblock","<div>"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("forwarddelete", false, "") return value
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>ar" but got "fooaar"
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("forwarddelete") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["forwarddelete",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foobar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">foobar</blockquote>"
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandState("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""]] "foo[]bar" queryCommandValue("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("indent", false, "") return value
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</blockquote>" but got "<blockquote style=\"margin:0 0 0 40px; border:none; padding:0px\">fooabar</blockquote>"
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("indent") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["indent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserthorizontalrule", false, "") return value
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<hr><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foo<hr>abar"
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthorizontalrule") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthorizontalrule",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserthtml", false, "ab<b>c</b>d") return value
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fooab<b>c</b>d<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "fooab<b>c</b>dabar"
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserthtml") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["inserthtml","ab<b>c</b>d"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("insertimage", false, "/img/lion.svg") return value
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<img src=\"/img/lion.svg\"><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foo<img src=\"/img/lion.svg\">abar"
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("insertimage") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertimage","/img/lion.svg"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar" but got "foo<span style=\"background-color:rgb(0, 255, 255)\"><br></span>bar"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("insertlinebreak", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "foo<span style=\"background-color:rgb(0, 255, 255)\"><br>a</span>bar"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertlinebreak") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertlinebreak",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foobar</li></ol>" but got "<ol><li>foobar<br></li></ol>"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertorderedlist", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</li></ol>" but got "<ol><li>fooabar<br></li></ol>"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") before
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertorderedlist") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertorderedlist") after
FAIL [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p>" but got "foo<div>bar</div>"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("insertparagraph", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</p>" but got "foo<div><span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertparagraph") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertparagraph",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foobar</li></ul>" but got "<ul><li>foobar<br></li></ul>"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("insertunorderedlist", false, "") return value
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ul><li>foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</li></ul>" but got "<ul><li>fooabar<br></li></ul>"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") before
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("insertunorderedlist") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("insertunorderedlist") after
FAIL [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("insertunorderedlist") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["insertunorderedlist",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("justifycenter", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:center\">foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div style=\"text-align:center\">fooabar</div>"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") before
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifycenter") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifycenter") after
FAIL [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifycenter") after assert_equals: Wrong result returned expected "center" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifycenter",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("justifyfull", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:justify\">foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div style=\"text-align:justify\">fooabar</div>"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") before
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyfull") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyfull") after
FAIL [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyfull") after assert_equals: Wrong result returned expected "justify" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyfull",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("justifyleft", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar" but got "fooabar"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") before
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyleft") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyleft") after
FAIL [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyleft",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["hilitecolor","#00FFFF"],["justifyright",""]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("justifyright", false, "") return value
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\">foo<span style=\"background-color:rgb(0, 255, 255)\">a</span>bar</div>" but got "<div style=\"text-align:right\">fooabar</div>"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") before
FAIL [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") before assert_equals: Wrong result returned expected "left" but got "false"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("justifyright") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("justifyright") after
FAIL [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("justifyright") after assert_equals: Wrong result returned expected "right" but got "true"
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["justifyright",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandState("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""]] "foo[]bar" queryCommandValue("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("outdent", false, "") return value
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("outdent") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["hilitecolor","#00FFFF"],["outdent",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sub>a</sub>bar" but got "foo<span style=\"vertical-align:sub\">a</span>bar"
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after
FAIL [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["superscript",""],["subscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar": execCommand("subscript", false, "") return value
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar": execCommand("superscript", false, "") return value
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<sup>a</sup>bar" but got "foo<span style=\"vertical-align:super\">a</span>bar"
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") before
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") before
FAIL [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("subscript") after
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("subscript") after
FAIL [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("subscript") after assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") before
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") before
FAIL [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("superscript") after
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("superscript") after
FAIL [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("superscript") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["subscript",""],["superscript",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","#0000FF"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "#0000FF") return value
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","#0000FF"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "blue") return value
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","blue"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "blue") return value
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","blue"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "brown") return value
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com/\"><font color=\"#a52a2a\">a</font></a>bar" but got "foo<a href=\"http://www.google.com/\" style=\"color:rgb(165, 42, 42)\">a</a>bar"
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","brown"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "brown") return value
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com/\"><font color=\"#a52a2a\">a</font></a>bar" but got "foo<a href=\"http://www.google.com/\">a</a>bar"
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(165, 42, 42)" but got "rgb(0, 0, 255)"
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","brown"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "black") return value
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com/\"><font color=\"#000000\">a</font></a>bar" but got "foo<a href=\"http://www.google.com/\" style=\"color:rgb(0, 0, 0)\">a</a>bar"
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["forecolor","black"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("forecolor", false, "black") return value
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
FAIL [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<a href=\"http://www.google.com/\"><font color=\"#000000\">a</font></a>bar" but got "foo<a href=\"http://www.google.com/\">a</a>bar"
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("forecolor") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("forecolor") after
FAIL [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("forecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 0, 0)" but got "rgb(0, 0, 255)"
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["forecolor","black"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline",""],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") return value
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["underline",""],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") first application return value
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") second application return value
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") before
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") after
PASS [["createlink","http://www.google.com/"],["underline","","first application"],["underline","","second application"],["inserttext","a"]] "foo[]bar" queryCommandValue("inserttext") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") first application return value
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("underline", false, "") second application return value
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("createlink", false, "http://www.google.com/") return value
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar": execCommand("inserttext", false, "a") return value
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" checks for modifications to non-editable content
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" compare innerHTML
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") before
FAIL [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") before assert_equals: Wrong result returned expected "" but got "false"
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("underline") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("underline") after
FAIL [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("underline") after assert_equals: Wrong result returned expected "" but got "true"
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("createlink") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("createlink") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandValue("createlink") after
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandIndeterm("inserttext") before
PASS [["underline","","first application"],["underline","","second application"],["createlink","http://www.google.com/"],["inserttext","a"]] "foo[]bar" queryCommandState("inserttext") before

