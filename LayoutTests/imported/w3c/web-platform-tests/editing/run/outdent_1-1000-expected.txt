
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><blockquote><p>baz</p></blockquote><p>extra</p>" but got "foobar<br><blockquote><p>baz</p></blockquote><p>extra</p>"
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><p>baz</p><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><blockquote><p>baz</p></blockquote><p>extra</p>" but got "foobar<br><blockquote style=\"margin-right:0px\" dir=\"ltr\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
FAIL [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before assert_equals: Wrong result returned expected false but got true
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><blockquote><p>baz</p></blockquote><p>extra</p>" but got "foobar<br><blockquote style=\"margin-right:0px\" dir=\"ltr\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><p>baz</p><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foobar</p><p>baz</p><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["outdent",""]] "<blockquote style=\"margin-right: 0px;\" dir=\"ltr\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p style=\"margin-left: 40px\">baz</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p style=\"margin-left: 40px\">b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar]</p><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" checks for modifications to non-editable content
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" compare innerHTML
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["outdent",""]] "<p style=\"margin-left: 40px\">foo[bar</p><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><blockquote><p>baz</p></blockquote></div><p>extra</p>" but got "foobar<br><blockquote class=\"webkit-indent-blockquote\" style=\"margin:0 0 0 40px; border:none; padding:0px\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><blockquote><p>baz</p></blockquote></div><p>extra</p>" but got "foobar<br><blockquote class=\"webkit-indent-blockquote\" style=\"margin:0 0 0 40px; border:none; padding:0px\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><blockquote><p>baz</p></blockquote></div><p>extra</p>" but got "foobar<br><blockquote class=\"webkit-indent-blockquote\" style=\"margin:0 0 0 40px; border:none; padding:0px\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><blockquote><p>baz</p></blockquote></div><p>extra</p>" but got "foobar<br><blockquote class=\"webkit-indent-blockquote\" style=\"margin:0 0 0 40px; border:none; padding:0px\"><p>baz</p></blockquote><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p><p>baz</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><p>baz</p></div><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><p>baz</p></div><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><p>baz</p></div><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p><p>baz</p></div><p>extra</p>" but got "foobar<br><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p><p>b]az</p></blockquote><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar]</p></blockquote><p>baz</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra": execCommand("outdent", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div class=\"webkit-indent-blockquote\"><p>foobar</p></div><p>baz</p><p>extra</p>" but got "<p>foobar</p><p>baz</p><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandIndeterm("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandState("outdent") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["outdent",""]] "<blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><p>foo[bar</p></blockquote><p>b]az</p><p>extra" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" compare innerHTML
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote data-abc=\"def\">foobarbaz</blockquote>" but got "<blockquote>foobarbaz</blockquote>"
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" compare innerHTML
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote>foo[bar]baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" compare innerHTML
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><div>foo[bar]baz</div></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" checks for modifications to non-editable content
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" compare innerHTML
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc>foo[bar]baz</div></blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div id=\"abc\">foobarbaz</div>" but got "foobarbaz"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div id=\"abc\">foobarbaz</div>" but got "foobarbaz"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc>foo[bar]baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"color:rgb(0, 0, 255)\">foobarbaz</div>" but got "foobarbaz"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"color:rgb(0, 0, 255)\">foobarbaz</div>" but got "foobarbaz"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\">foo[bar]baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote><p>foobar</p><blockquote><p>baz</p></blockquote></blockquote>" but got "<blockquote>foobar<br><blockquote><p>baz</p></blockquote></blockquote>"
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote data-abc=\"def\"><p>foobar</p><blockquote><p>baz</p></blockquote></blockquote>" but got "<blockquote>foobar<br><blockquote data-abc=\"def\"><p>baz</p></blockquote></blockquote>"
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote data-abc=def><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote data-abc=\"def\"><p>foobar</p><blockquote><p>baz</p></blockquote></blockquote>" but got "<blockquote data-abc=\"def\">foobar<br><blockquote><p>baz</p></blockquote></blockquote>"
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote data-abc=def><blockquote><p>foo[bar]<p>baz</blockquote></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "foobar<br><blockquote><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><div><p>foo[bar]<p>baz</div></blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div id=\"abc\"><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "foobar<br><blockquote><div id=\"abc\"><p>baz</p></div></blockquote>"
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><div id=abc><p>foo[bar]<p>baz</div></blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div id=\"abc\"><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "foobar<br><blockquote id=\"abc\"><p>baz</p></blockquote>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div id=\"abc\"><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "foobar<br><blockquote id=\"abc\"><p>baz</p></blockquote>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote id=abc><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"color:rgb(0, 0, 255)\"><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "<span style=\"color:rgb(0, 0, 255)\">foobar</span><br><blockquote style=\"color:rgb(0, 0, 255)\"><p>baz</p></blockquote>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"color:rgb(0, 0, 255)\"><p>foobar</p><blockquote><p>baz</p></blockquote></div>" but got "<span style=\"color:rgb(0, 0, 255)\">foobar</span><br><blockquote style=\"color:rgb(0, 0, 255)\"><p>baz</p></blockquote>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<blockquote style=\"color: blue\"><p>foo[bar]<p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><b>foobar</b></p><blockquote><p>baz</p></blockquote>" but got "<b>foobar</b><br><blockquote><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p><b>foo[bar]</b><p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><strong>foobar</strong></p><blockquote><p>baz</p></blockquote>" but got "<strong>foobar</strong><br><blockquote><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p><strong>foo[bar]</strong><p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><span>foobar</span></p><blockquote><p>baz</p></blockquote>" but got "foobar<br><blockquote><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><p><span>foo[bar]</span><p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote style=\"color:rgb(0, 0, 255)\"><p>foobar</p></blockquote><blockquote><p>baz</p></blockquote>" but got "<blockquote><p>foobar</p></blockquote><blockquote><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote><blockquote style=\"color: blue\"><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" checks for modifications to non-editable content
FAIL [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<blockquote style=\"color:rgb(0, 0, 255)\"><p>foobar</p><p>baz</p></blockquote>" but got "<blockquote style=\"color:rgb(0, 0, 255)\"><p>foobar</p></blockquote><blockquote style=\"color:rgb(0, 0, 255)\"><p>baz</p></blockquote>"
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandState("outdent") before
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandValue("outdent") before
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandState("outdent") after
PASS [["outdent",""]] "<blockquote style=\"color: blue\"><blockquote><p>foo[bar]</blockquote><p>baz</blockquote>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><div>bar</div><ol><li>baz</li></ol>" but got "<ol><li>foo</li></ol>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><p>bar</p><ol><li>baz</li></ol>" but got "<ol><li>foo</li></ol>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<li>[bar]<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><div>bar</div><ol><li>baz</li></ol>" but got "<ol><li>foo</li></ol>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<ol><li>foo</li></ol><p>bar</p><ol><li>baz</li></ol>" but got "<ol><li>foo</li></ol>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol data-start=1 data-end=2><li>foo<li>bar<li>baz</ol>" queryCommandValue("outdent") after
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]": execCommand("outdent", false, "") return value
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" checks for modifications to non-editable content
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" compare innerHTML
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandIndeterm("outdent") before
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandState("outdent") before
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandValue("outdent") before
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandIndeterm("outdent") after
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandState("outdent") after
PASS [["outdent",""]] "<ol><li>foo</ol>[bar]" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<br>bar</div><ol><li>baz</li></ol>" but got "foo<br>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo<br>bar</p><ol><li>baz</li></ol>" but got "foo<br>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>[foo]<br>bar<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo<br>bar</div><ol><li>baz</li></ol>" but got "foo<br>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo<br>bar</p><ol><li>baz</li></ol>" but got "foo<br>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li>foo<br>[bar]<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><div>bar</div><ol><li>baz</li></ol>" but got "<div>foo</div>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","div"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>": execCommand("outdent", false, "") return value
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div>foo</div><p>bar</p><ol><li>baz</li></ol>" but got "<div>foo</div>bar<br><ol><li>baz</li></ol>"
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("outdent") before
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandIndeterm("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandState("outdent") after
PASS [["defaultparagraphseparator","p"],["outdent",""]] "<ol><li><div>[foo]</div>bar<li>baz</ol>" queryCommandValue("outdent") after

