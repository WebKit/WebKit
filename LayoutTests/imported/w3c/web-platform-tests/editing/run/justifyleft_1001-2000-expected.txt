
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:justify\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before assert_equals: Wrong result returned expected "p" but got "div"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "justify" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:justify><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:left\"><p>foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div align=\"right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div align=\"right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=right><p>[foo<p>bar}</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"text-align:right\"><div style=\"text-align:left\"><p>foo</p></div><p>bar</p></div><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p>bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo]<p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p>foo</p><p>bar</p><p>extra</p>" but got "<div style=\"text-align:right\"><p style=\"text-align:left\">foo</p><p style=\"text-align:left\">bar</p></div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "right" but got "false"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:right><p>[foo<p>bar]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left>foo</div>[bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "[foo]<div align=left>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left>foo</div>[bar]<div align=left>baz</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p>[foo]<div align=left><p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div align=left><p>foo</div><p>[bar]<div align=left><p>baz</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "[foo]<div style=text-align:left>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left>foo</div>[bar]<div style=text-align:left>baz</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p>[foo]<div style=text-align:left><p>bar</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" compare innerHTML
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<div style=text-align:left><p>foo</div><p>[bar]<div style=text-align:left><p>baz</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p align=left>foo<p>[bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p>[foo]<p align=left>bar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra": execCommand("justifyleft", false, "") return value
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" checks for modifications to non-editable content
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" compare innerHTML
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandState("justifyleft") before
FAIL [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandState("justifyleft") after
FAIL [["justifyleft",""]] "<p align=left>foo<p>[bar]<p align=left>baz<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div align=\"left\">foo</div>bar<p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div align=\"left\">foo</div>bar<p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div align=\"left\">foo</div>bar<p>extra</p>"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","div"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div align=\"left\">foo</div>bar<p>extra</p>"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["defaultparagraphseparator","p"],["justifyleft",""]] "<div align=left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo</div>bar]<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<br>bar<p>extra</p>" but got "<div style=\"text-align:left\">foo</div>bar<p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>fo[o</div>b]ar<p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<span style=\"text-align:left\">foo</span><p>extra</p>"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<span style=\"text-align:left\">foo</span><p>extra</p>"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>[foo]</span><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<span style=\"text-align:left\">foo</span><p>extra</p>"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<p>extra</p>" but got "<span style=\"text-align:left\">foo</span><p>extra</p>"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["justifyleft",""]] "<span style=text-align:left>f[o]o</span><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz<p>extra</p>" but got "<div style=\"text-align:left\">foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz</div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("defaultparagraphseparator", false, "div") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz<p>extra</p>" but got "<div style=\"text-align:left\">foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz</div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","false"],["defaultparagraphseparator","div"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz<p>extra</p>" but got "<div style=\"text-align:left\">foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz</div><p>extra</p>"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("defaultparagraphseparator") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") before
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") before
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") before assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("justifyleft") after
PASS [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("justifyleft") after
FAIL [["stylewithcss","true"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("justifyleft") after assert_equals: Wrong result returned expected "left" but got "true"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("defaultparagraphseparator", false, "p") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra": execCommand("justifyleft", false, "") return value
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz<p>extra</p>" but got "<div style=\"text-align:left\">foo<div style=\"text-align:left\" contenteditable=\"false\">bar</div>baz</div><p>extra</p>"
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["defaultparagraphseparator","p"],["justifyleft",""]] "<div style=text-align:left>[foo<div style=text-align:left contenteditable=false>bar</div>baz]</div><p>extra" queryCommandValue("stylewithcss") after

