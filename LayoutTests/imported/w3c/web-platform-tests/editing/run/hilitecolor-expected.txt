
PASS [["hilitecolor","#00FFFF"]] "foo[]bar": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "foo[]bar" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"]] "foo[]bar" compare innerHTML
PASS [["hilitecolor","#00FFFF"]] "foo[]bar" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "foo[]bar" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "foo[]bar" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "foo[]bar" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "foo[]bar" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "foo[]bar" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("stylewithcss") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("stylewithcss") before assert_equals: Wrong result returned expected false but got true
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p> <p>bar]</p>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span>[foo</span> <span>bar]</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><span style=\"background-color:rgb(0, 255, 255)\">foo</span></p><p> <span style=\"background-color:rgb(0, 255, 255)\"><span>bar</span></span> </p><p><span style=\"background-color:rgb(0, 255, 255)\">baz</span></p>" but got "<p><span style=\"background-color:rgb(0, 255, 255)\">foo</span></p><p> <span style=\"background-color:rgb(0, 255, 255)\"><span>bar</span> </span></p><p><span style=\"background-color:rgb(0, 255, 255)\">baz</span></p>"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p><span style=\"background-color:rgb(0, 255, 255)\">foo</span></p><p> <span style=\"background-color:rgb(0, 255, 255)\"><span>bar</span></span> </p><p><span style=\"background-color:rgb(0, 255, 255)\">baz</span></p>" but got "<p><span style=\"background-color:rgb(0, 255, 255)\">foo</span></p><p> <span style=\"background-color:rgb(0, 255, 255)\"><span>bar</span> </span></p><p><span style=\"background-color:rgb(0, 255, 255)\">baz</span></p>"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo</p><p> <span>bar</span> </p><p>baz]</p>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<p>[foo<p><br><p>bar]" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<b>foo[]bar</b>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "<b>foo[]bar</b>" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"]] "<b>foo[]bar</b>" compare innerHTML
PASS [["hilitecolor","#00FFFF"]] "<b>foo[]bar</b>" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "<b>foo[]bar</b>" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "<b>foo[]bar</b>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<b>foo[]bar</b>" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "<b>foo[]bar</b>" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "<b>foo[]bar</b>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<i>foo[]bar</i>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "<i>foo[]bar</i>" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"]] "<i>foo[]bar</i>" compare innerHTML
PASS [["hilitecolor","#00FFFF"]] "<i>foo[]bar</i>" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "<i>foo[]bar</i>" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "<i>foo[]bar</i>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<i>foo[]bar</i>" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "<i>foo[]bar</i>" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "<i>foo[]bar</i>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<span>foo</span>{}<span>bar</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "<span>foo</span>{}<span>bar</span>" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"]] "<span>foo</span>{}<span>bar</span>" compare innerHTML
PASS [["hilitecolor","#00FFFF"]] "<span>foo</span>{}<span>bar</span>" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "<span>foo</span>{}<span>bar</span>" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "<span>foo</span>{}<span>bar</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<span>foo</span>{}<span>bar</span>" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "<span>foo</span>{}<span>bar</span>" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "<span>foo</span>{}<span>bar</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<span>foo[</span><span>]bar</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "<span>foo[</span><span>]bar</span>" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"]] "<span>foo[</span><span>]bar</span>" compare innerHTML
PASS [["hilitecolor","#00FFFF"]] "<span>foo[</span><span>]bar</span>" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "<span>foo[</span><span>]bar</span>" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "<span>foo[</span><span>]bar</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<span>foo[</span><span>]bar</span>" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "<span>foo[</span><span>]bar</span>" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "<span>foo[</span><span>]bar</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar]baz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<b>baz]qoz</b>quz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[bar<i>baz]qoz</i>quz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p><p> <p>foo</p>}" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr><td>foo<td>b[a]r<td>baz</table>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=1 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody><tr data-start=0 data-end=2><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table><tbody data-start=0 data-end=1><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<table data-start=0 data-end=1><tbody><tr><td>foo<td>bar<td>baz</table>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<table><tr><td>foo<td>bar<td>baz</table>}" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: rgb(0, 255, 255)\">foo[bar]baz</p>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: rgb(0, 255, 255)\">foo[bar]baz</p>" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: rgb(0, 255, 255)\">foo[bar]baz</p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\"background-color:rgb(0, 255, 255)\">foobarbaz</p>" but got "<p><span style=\"background-color:rgb(0, 255, 255)\">foobarbaz</span></p>"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: rgb(0, 255, 255)\">foo[bar]baz</p>" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: rgb(0, 255, 255)\">foo[bar]baz</p>" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: rgb(0, 255, 255)\">foo[bar]baz</p>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: rgb(0, 255, 255)\">foo[bar]baz</p>" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: rgb(0, 255, 255)\">foo[bar]baz</p>" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: rgb(0, 255, 255)\">foo[bar]baz</p>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: #00ffff\">foo[bar]baz</p>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: #00ffff\">foo[bar]baz</p>" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: #00ffff\">foo[bar]baz</p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\"background-color:rgb(0, 255, 255)\">foobarbaz</p>" but got "<p><span style=\"background-color:rgb(0, 255, 255)\">foobarbaz</span></p>"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: #00ffff\">foo[bar]baz</p>" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: #00ffff\">foo[bar]baz</p>" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: #00ffff\">foo[bar]baz</p>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: #00ffff\">foo[bar]baz</p>" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: #00ffff\">foo[bar]baz</p>" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: #00ffff\">foo[bar]baz</p>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo[bar]baz</p>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo[bar]baz</p>" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo[bar]baz</p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\"background-color:rgb(0, 255, 255)\">foobarbaz</p>" but got "<p><span style=\"background-color:rgb(0, 255, 255)\">foo</span><span style=\"background-color:rgb(0, 255, 255)\">bar</span><span style=\"background-color:rgb(0, 255, 255)\">baz</span></p>"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo[bar]baz</p>" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo[bar]baz</p>" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo[bar]baz</p>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo[bar]baz</p>" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo[bar]baz</p>" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo[bar]baz</p>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\"background-color:rgb(0, 255, 255)\">foo</p><p><span style=\"background-color:rgb(0, 255, 255)\">bar</span></p>" but got "<p><span style=\"background-color:rgb(0, 255, 255)\">foo</span></p><p><span style=\"background-color:rgb(0, 255, 255)\">bar</span></p>"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandIndeterm("hilitecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\"background-color:rgb(0, 255, 255)\">foo</p><p><span style=\"background-color:rgb(0, 255, 255)\">bar</span></p>" but got "<p><span style=\"background-color:rgb(0, 255, 255)\">foo</span></p><p><span style=\"background-color:rgb(0, 255, 255)\">bar</span></p>"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandIndeterm("hilitecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "{<p style=\"background-color: aqua\">foo</p><p>bar</p>}" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"background-color:rgb(0, 255, 255)\">foobarbaz</span>" but got "<span style=\"background-color:rgb(0, 255, 255)\">foo</span><span style=\"background-color:rgb(0, 255, 255)\">bar</span><span style=\"background-color:rgb(0, 255, 255)\">baz</span>"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"background-color:rgb(0, 255, 255)\">foobarbaz</span>" but got "<span style=\"background-color:rgb(0, 255, 255)\">foo</span><span style=\"background-color:rgb(0, 255, 255)\">bar</span><span style=\"background-color:rgb(0, 255, 255)\">baz</span>"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #00ffff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: #0ff\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"background-color: rgb(0, 255, 255)\">foo<span style=\"background-color: tan\">[bar]</span>baz</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</span>" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"background-color:rgb(0, 255, 255)\">foo<span style=\"background-color:rgb(210, 180, 140)\">b</span>arbaz</span>" but got "<span style=\"background-color:rgb(0, 255, 255)\">foo</span><span style=\"background-color:rgb(210, 180, 140)\">b</span><span style=\"background-color:rgb(0, 255, 255)\">ar</span><span style=\"background-color:rgb(0, 255, 255)\">baz</span>"
PASS [["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</span>" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</span>" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</span>" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</span>" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "<span style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</p>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</p>" checks for modifications to non-editable content
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</p>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<p style=\"background-color:rgb(0, 255, 255)\">foo<span style=\"background-color:rgb(210, 180, 140)\">b</span>arbaz</p>" but got "<p><span style=\"background-color:rgb(0, 255, 255)\">foo</span><span style=\"background-color:rgb(210, 180, 140)\">b</span><span style=\"background-color:rgb(0, 255, 255)\">ar</span><span style=\"background-color:rgb(0, 255, 255)\">baz</span></p>"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</p>" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</p>" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</p>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</p>" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</p>" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "<p style=\"background-color: aqua\">foo<span style=\"background-color: tan\">b[ar]</span>baz</p>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"background-color:rgb(0, 255, 255)\"><p style=\"background-color:rgb(210, 180, 140)\">b<span style=\"background-color:rgb(0, 255, 255)\">ar</span></p></div>" but got "<div><p><span style=\"background-color:rgb(210, 180, 140)\">b</span><span style=\"background-color:rgb(0, 255, 255)\">ar</span></p></div>"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<div style=\"background-color:rgb(0, 255, 255)\"><p style=\"background-color:rgb(210, 180, 140)\">b<span style=\"background-color:rgb(0, 255, 255)\">ar</span></p></div>" but got "<div><p><span style=\"background-color:rgb(210, 180, 140)\">b</span><span style=\"background-color:rgb(0, 255, 255)\">ar</span></p></div>"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<div style=\"background-color: aqua\"><p style=\"background-color: tan\">b[ar]</p></div>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"display:block; background-color:rgb(0, 255, 255)\"><span style=\"display:block; background-color:rgb(210, 180, 140)\">b<span style=\"background-color:rgb(0, 255, 255)\">ar</span></span></span>" but got "<span style=\"display:block\"><span style=\"display:block\"><span style=\"background-color:rgb(210, 180, 140)\">b</span><span style=\"background-color:rgb(0, 255, 255)\">ar</span></span></span>"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"display:block; background-color:rgb(0, 255, 255)\"><span style=\"display:block; background-color:rgb(210, 180, 140)\">b<span style=\"background-color:rgb(0, 255, 255)\">ar</span></span></span>" but got "<span style=\"display:block\"><span style=\"display:block\"><span style=\"background-color:rgb(210, 180, 140)\">b</span><span style=\"background-color:rgb(0, 255, 255)\">ar</span></span></span>"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=\"display: block; background-color: aqua\"><span style=\"display: block; background-color: tan\">b[ar]</span></span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<span style=\"background-color:rgb(0, 255, 255)\">o</span><span style=\"background-color:rgb(210, 180, 140)\"><span style=\"background-color:rgb(0, 255, 255)\">b</span>ar</span>baz" but got "fo<span style=\"background-color:rgb(0, 255, 255)\">ob</span><span style=\"background-color:rgb(210, 180, 140)\">ar</span>baz"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("hilitecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "fo<span style=\"background-color:rgb(0, 255, 255)\">o</span><span style=\"background-color:rgb(210, 180, 140)\"><span style=\"background-color:rgb(0, 255, 255)\">b</span>ar</span>baz" but got "fo<span style=\"background-color:rgb(0, 255, 255)\">ob</span><span style=\"background-color:rgb(210, 180, 140)\">ar</span>baz"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("hilitecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(210, 180, 140)\">ba<span style=\"background-color:rgb(0, 255, 255)\">r</span></span><span style=\"background-color:rgb(0, 255, 255)\">b</span>az" but got "foo<span style=\"background-color:rgb(210, 180, 140)\">ba</span><span style=\"background-color:rgb(0, 255, 255)\">rb</span>az"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandIndeterm("hilitecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(210, 180, 140)\">ba<span style=\"background-color:rgb(0, 255, 255)\">r</span></span><span style=\"background-color:rgb(0, 255, 255)\">b</span>az" but got "foo<span style=\"background-color:rgb(210, 180, 140)\">ba</span><span style=\"background-color:rgb(0, 255, 255)\">rb</span>az"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandIndeterm("hilitecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>b]az" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az" compare innerHTML
FAIL [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az" queryCommandIndeterm("hilitecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "fo[o<span style=background-color:tan>bar</span>b]az" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(210, 180, 140)\"><span style=\"background-color:rgb(0, 255, 255)\">b</span>ar</span>baz" but got "foo<span style=\"background-color:rgb(0, 255, 255)\">b</span><span style=\"background-color:rgb(210, 180, 140)\">ar</span>baz"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(210, 180, 140)\"><span style=\"background-color:rgb(0, 255, 255)\">b</span>ar</span>baz" but got "foo<span style=\"background-color:rgb(0, 255, 255)\">b</span><span style=\"background-color:rgb(210, 180, 140)\">ar</span>baz"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>b]ar</span>baz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(210, 180, 140)\">ba<span style=\"background-color:rgb(0, 255, 255)\">r</span></span>baz" but got "foo<span style=\"background-color:rgb(210, 180, 140)\">ba</span><span style=\"background-color:rgb(0, 255, 255)\">r</span>baz"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "foo<span style=\"background-color:rgb(210, 180, 140)\">ba<span style=\"background-color:rgb(0, 255, 255)\">r</span></span>baz" but got "foo<span style=\"background-color:rgb(210, 180, 140)\">ba</span><span style=\"background-color:rgb(0, 255, 255)\">r</span>baz"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>ba[r</span>]baz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>bar</span>]baz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>bar</span>]baz" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>bar</span>]baz" compare innerHTML
PASS [["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>bar</span>]baz" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>bar</span>]baz" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>bar</span>]baz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>bar</span>]baz" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>bar</span>]baz" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "foo[<span style=background-color:tan>bar</span>]baz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>[bar]</span>baz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>[bar]</span>baz" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>[bar]</span>baz" compare innerHTML
PASS [["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>[bar]</span>baz" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>[bar]</span>baz" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>[bar]</span>baz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>[bar]</span>baz" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>[bar]</span>baz" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "foo<span style=background-color:tan>[bar]</span>baz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "foo{<span style=background-color:tan>bar</span>}baz": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["hilitecolor","#00FFFF"]] "foo{<span style=background-color:tan>bar</span>}baz" checks for modifications to non-editable content
PASS [["hilitecolor","#00FFFF"]] "foo{<span style=background-color:tan>bar</span>}baz" compare innerHTML
PASS [["hilitecolor","#00FFFF"]] "foo{<span style=background-color:tan>bar</span>}baz" queryCommandIndeterm("hilitecolor") before
PASS [["hilitecolor","#00FFFF"]] "foo{<span style=background-color:tan>bar</span>}baz" queryCommandState("hilitecolor") before
FAIL [["hilitecolor","#00FFFF"]] "foo{<span style=background-color:tan>bar</span>}baz" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["hilitecolor","#00FFFF"]] "foo{<span style=background-color:tan>bar</span>}baz" queryCommandIndeterm("hilitecolor") after
PASS [["hilitecolor","#00FFFF"]] "foo{<span style=background-color:tan>bar</span>}baz" queryCommandState("hilitecolor") after
FAIL [["hilitecolor","#00FFFF"]] "foo{<span style=background-color:tan>bar</span>}baz" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"background-color:rgb(210, 180, 140)\">fo<span style=\"background-color:rgb(0, 255, 255)\">o</span></span><span style=\"background-color:rgb(255, 255, 0)\"><span style=\"background-color:rgb(0, 255, 255)\">b</span>ar</span>" but got "<span style=\"background-color:rgb(210, 180, 140)\">fo</span><span style=\"background-color:rgb(0, 255, 255)\">ob</span><span style=\"background-color:rgb(255, 255, 0)\">ar</span>"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandIndeterm("hilitecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"background-color:rgb(210, 180, 140)\">fo<span style=\"background-color:rgb(0, 255, 255)\">o</span></span><span style=\"background-color:rgb(255, 255, 0)\"><span style=\"background-color:rgb(0, 255, 255)\">b</span>ar</span>" but got "<span style=\"background-color:rgb(210, 180, 140)\">fo</span><span style=\"background-color:rgb(0, 255, 255)\">ob</span><span style=\"background-color:rgb(255, 255, 0)\">ar</span>"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("stylewithcss") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandIndeterm("hilitecolor") before assert_equals: Wrong result returned expected true but got false
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:yellow>b]ar</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"background-color:rgb(210, 180, 140)\">fo<span style=\"background-color:rgb(0, 255, 255)\">o</span></span><span style=\"background-color:rgb(210, 180, 140)\"><span style=\"background-color:rgb(0, 255, 255)\">b</span>ar</span>" but got "<span style=\"background-color:rgb(210, 180, 140)\">fo</span><span style=\"background-color:rgb(0, 255, 255)\">ob</span><span style=\"background-color:rgb(210, 180, 140)\">ar</span>"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"background-color:rgb(210, 180, 140)\">fo<span style=\"background-color:rgb(0, 255, 255)\">o</span></span><span style=\"background-color:rgb(210, 180, 140)\"><span style=\"background-color:rgb(0, 255, 255)\">b</span>ar</span>" but got "<span style=\"background-color:rgb(210, 180, 140)\">fo</span><span style=\"background-color:rgb(0, 255, 255)\">ob</span><span style=\"background-color:rgb(210, 180, 140)\">ar</span>"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o</span><span style=background-color:tan>b]ar</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" checks for modifications to non-editable content
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"background-color:rgb(210, 180, 140)\">fo<span style=\"background-color:rgb(0, 255, 255)\">o</span><span style=\"background-color:rgba(0, 0, 0, 0)\"><span style=\"background-color:rgb(0, 255, 255)\">b</span>ar</span></span>" but got "<span style=\"background-color:rgb(210, 180, 140)\">fo</span><span style=\"background-color:rgb(0, 255, 255)\">ob</span><span style=\"background-color:rgba(0, 0, 0, 0)\">ar</span>"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" checks for modifications to non-editable content
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" compare innerHTML assert_equals: Unexpected innerHTML (after normalizing inline style) expected "<span style=\"background-color:rgb(210, 180, 140)\">fo<span style=\"background-color:rgb(0, 255, 255)\">o</span><span style=\"background-color:rgba(0, 0, 0, 0)\"><span style=\"background-color:rgb(0, 255, 255)\">b</span>ar</span></span>" but got "<span style=\"background-color:rgb(210, 180, 140)\">fo</span><span style=\"background-color:rgb(0, 255, 255)\">ob</span><span style=\"background-color:rgba(0, 0, 0, 0)\">ar</span>"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgb(210, 180, 140)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=background-color:tan>fo[o<span style=background-color:transparent>b]ar</span></span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>[foo]</font>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>[foo]</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<font size=6>foo[bar]baz</font>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "<span style=font-size:xx-large>foo[bar]baz</span>" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<font size=6>bar</font>baz]" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]": execCommand("stylewithcss", false, "true") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" checks for modifications to non-editable content
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" compare innerHTML
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandState("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandState("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","true"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]": execCommand("stylewithcss", false, "false") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]": execCommand("hilitecolor", false, "#00FFFF") return value
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" checks for modifications to non-editable content
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" compare innerHTML
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandIndeterm("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandState("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("stylewithcss") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandIndeterm("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandState("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("stylewithcss") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandIndeterm("hilitecolor") before
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandState("hilitecolor") before
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("hilitecolor") before assert_equals: Wrong result returned (after color normalization) expected "rgba(0, 0, 0, 0)" but got "rgb(0, 0, 0)"
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandIndeterm("hilitecolor") after
PASS [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandState("hilitecolor") after
FAIL [["stylewithcss","false"],["hilitecolor","#00FFFF"]] "[foo<span style=font-size:xx-large>bar</span>baz]" queryCommandValue("hilitecolor") after assert_equals: Wrong result returned (after color normalization) expected "rgb(0, 255, 255)" but got "rgb(0, 0, 0)"

