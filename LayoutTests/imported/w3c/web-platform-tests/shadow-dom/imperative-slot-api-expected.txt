
FAIL attachShadow can take slotAssignment parameter. assert_throws_js: others should throw exception function "() => {
    tTree.host3.attachShadow({ mode: 'open', slotAssignment: 'exceptional' })}" did not throw
FAIL Imperative slot API can assign nodes in manual slot assignment. assert_equals: expected null but got Element node <slot id="s1"></slot>
FAIL Order of slottables is preserved in manual slot assignment. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c2, tTree.c3, tTree.c1])', 'tTree.s1.assign' is undefined)
FAIL Previously assigned slottable is moved to new slot when it's reassigned. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c2, tTree.c3, tTree.c1])', 'tTree.s1.assign' is undefined)
FAIL Order and assignment of nodes are preserved during multiple assignment in a row. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c1])', 'tTree.s1.assign' is undefined)
FAIL Assigning invalid nodes should be allowed. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c1, tTree.c4, tTree.c2])', 'tTree.s1.assign' is undefined)
FAIL Moving a slot to a new host, the slot loses its previously assigned slottables. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c1, tTree.c2, tTree.c3])', 'tTree.s1.assign' is undefined)
FAIL Moving a slot's tree order position within a shadow host has no impact on its assigned slottables. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c1, tTree.c2, tTree.c3])', 'tTree.s1.assign' is undefined)
FAIL Appending slottable to different host, it loses slot assignment. It can be re-assigned within a new host. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c1, tTree.c2, tTree.c3])', 'tTree.s1.assign' is undefined)
FAIL Previously assigned node should not be assigned if slot moved to a new shadow root. The slot remains empty when moved back, trigger recalc. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c1])', 'tTree.s1.assign' is undefined)
FAIL Assignment with the same node in parameters should be ignored, first one wins. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c1, tTree.c1, tTree.c1])', 'tTree.s1.assign' is undefined)
FAIL Removing a slot from DOM resets its slottable's slot assignment. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c1, tTree.c2, tTree.c3])', 'tTree.s1.assign' is undefined)
FAIL Nodes can be assigned even if slots or nodes aren't in the same tree. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c1, tTree.c2])', 'tTree.s1.assign' is undefined)
FAIL Removing a node from the document does not break manually assigned slot linkage. tTree.s1.assign is not a function. (In 'tTree.s1.assign([tTree.c1, tTree.c2])', 'tTree.s1.assign' is undefined)

