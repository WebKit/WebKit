
PASS Invalid <mfrac> should fallback to mrow behaviour when computing preferred logical widths (count == 0)
PASS Invalid <mfrac> should fallback to mrow behaviour when computing preferred logical widths (count == 1)
PASS Invalid <mfrac> should fallback to mrow behaviour when computing preferred logical widths (count == 3)
PASS Invalid <mfrac> should fallback to mrow behaviour when computing preferred logical widths (count == 4)
PASS Invalid <mfrac> should fallback to mrow behaviour when computing preferred logical widths (count == 5)
PASS Invalid <mroot> should fallback to mrow behaviour when computing preferred logical widths (count == 0)
PASS Invalid <mroot> should fallback to mrow behaviour when computing preferred logical widths (count == 1)
PASS Invalid <mroot> should fallback to mrow behaviour when computing preferred logical widths (count == 3)
PASS Invalid <mroot> should fallback to mrow behaviour when computing preferred logical widths (count == 4)
PASS Invalid <mroot> should fallback to mrow behaviour when computing preferred logical widths (count == 5)
PASS Invalid <munder> should fallback to mrow behaviour when computing preferred logical widths (count == 0)
PASS Invalid <munder> should fallback to mrow behaviour when computing preferred logical widths (count == 1)
PASS Invalid <munder> should fallback to mrow behaviour when computing preferred logical widths (count == 3)
PASS Invalid <munder> should fallback to mrow behaviour when computing preferred logical widths (count == 4)
PASS Invalid <munder> should fallback to mrow behaviour when computing preferred logical widths (count == 5)
PASS Invalid <mover> should fallback to mrow behaviour when computing preferred logical widths (count == 0)
PASS Invalid <mover> should fallback to mrow behaviour when computing preferred logical widths (count == 1)
PASS Invalid <mover> should fallback to mrow behaviour when computing preferred logical widths (count == 3)
PASS Invalid <mover> should fallback to mrow behaviour when computing preferred logical widths (count == 4)
PASS Invalid <mover> should fallback to mrow behaviour when computing preferred logical widths (count == 5)
PASS Invalid <munderover> should fallback to mrow behaviour when computing preferred logical widths (count == 0)
PASS Invalid <munderover> should fallback to mrow behaviour when computing preferred logical widths (count == 1)
PASS Invalid <munderover> should fallback to mrow behaviour when computing preferred logical widths (count == 2)
PASS Invalid <munderover> should fallback to mrow behaviour when computing preferred logical widths (count == 4)
PASS Invalid <munderover> should fallback to mrow behaviour when computing preferred logical widths (count == 5)
PASS Invalid <msub> should fallback to mrow behaviour when computing preferred logical widths (count == 0)
PASS Invalid <msub> should fallback to mrow behaviour when computing preferred logical widths (count == 1)
PASS Invalid <msub> should fallback to mrow behaviour when computing preferred logical widths (count == 3)
PASS Invalid <msub> should fallback to mrow behaviour when computing preferred logical widths (count == 4)
PASS Invalid <msub> should fallback to mrow behaviour when computing preferred logical widths (count == 5)
PASS Invalid <msup> should fallback to mrow behaviour when computing preferred logical widths (count == 0)
PASS Invalid <msup> should fallback to mrow behaviour when computing preferred logical widths (count == 1)
PASS Invalid <msup> should fallback to mrow behaviour when computing preferred logical widths (count == 3)
PASS Invalid <msup> should fallback to mrow behaviour when computing preferred logical widths (count == 4)
PASS Invalid <msup> should fallback to mrow behaviour when computing preferred logical widths (count == 5)
PASS Invalid <msubsup> should fallback to mrow behaviour when computing preferred logical widths (count == 0)
PASS Invalid <msubsup> should fallback to mrow behaviour when computing preferred logical widths (count == 1)
PASS Invalid <msubsup> should fallback to mrow behaviour when computing preferred logical widths (count == 2)
PASS Invalid <msubsup> should fallback to mrow behaviour when computing preferred logical widths (count == 4)
PASS Invalid <msubsup> should fallback to mrow behaviour when computing preferred logical widths (count == 5)
PASS Invalid <mmultiscripts> should fallback to mrow behaviour when computing preferred logical widths (count == 0)
PASS Invalid <mmultiscripts> should fallback to mrow behaviour when computing preferred logical widths (count == 2)
PASS Invalid <mmultiscripts> should fallback to mrow behaviour when computing preferred logical widths (count == 4)
PASS Invalid <mmultiscripts> should fallback to mrow behaviour when computing preferred logical widths (count == 7)
PASS Invalid <mmultiscripts> should fallback to mrow behaviour when computing preferred logical widths (count == 9)
PASS Invalid <mmultiscripts> should fallback to mrow behaviour when computing preferred logical widths (first in-flow child is an <mprescripts>)
PASS Invalid <mmultiscripts> should fallback to mrow behaviour when computing preferred logical widths (one of the even number of children after the first <mprescripts> is an <mprescripts>)

