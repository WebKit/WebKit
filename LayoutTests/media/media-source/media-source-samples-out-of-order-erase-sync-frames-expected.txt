
RUN(video.src = URL.createObjectURL(source))
EVENT(sourceopen)
RUN(sourceBuffer = source.addSourceBuffer("video/mock; codecs=mock"))
First segment has normal, monotonically increasing samples, and ends with two key frames.
RUN(sourceBuffer.appendBuffer(mediaSegment))
EVENT(updateend)
EXPECTED (bufferedSamples.length == '4') OK
{PTS({0/1 = 0.000000}), DTS({0/1 = 0.000000}), duration({2/1 = 2.000000}), flags(1), generation(0)}
{PTS({2/1 = 2.000000}), DTS({2/1 = 2.000000}), duration({2/1 = 2.000000}), flags(0), generation(0)}
{PTS({4/1 = 4.000000}), DTS({4/1 = 4.000000}), duration({2/1 = 2.000000}), flags(1), generation(0)}
{PTS({6/1 = 6.000000}), DTS({6/1 = 6.000000}), duration({2/1 = 2.000000}), flags(1), generation(0)}
Second, overlapping segment has out-of-display-order samples. This append should replace the last two samples from the previous append.
RUN(sourceBuffer.appendBuffer(mediaSegment))
EVENT(updateend)
EXPECTED (bufferedSamples.length == '4') OK
{PTS({0/1 = 0.000000}), DTS({0/1 = 0.000000}), duration({2/1 = 2.000000}), flags(1), generation(0)}
{PTS({2/1 = 2.000000}), DTS({2/1 = 2.000000}), duration({2/1 = 2.000000}), flags(0), generation(0)}
{PTS({8/1 = 8.000000}), DTS({3/1 = 3.000000}), duration({2/1 = 2.000000}), flags(1), generation(1)}
{PTS({10/1 = 10.000000}), DTS({5/1 = 5.000000}), duration({2/1 = 2.000000}), flags(0), generation(1)}
END OF TEST

