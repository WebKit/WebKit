Test to make sure -webkit-text-decoration property is backwards compatible with CSS 2.1 and CSS 3 shorthand.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


Initial values:
PASS e.style.getPropertyCSSValue('-webkit-text-decoration') is null
PASS computedStyle.getPropertyValue('-webkit-text-decoration') is 'none solid rgb(0, 0, 0)'
PASS checkComputedStyleValue('webkitTextDecoration', '-webkit-text-decoration') is true

CSS2.1 backwards compatibility ("-webkit-text-decoration: underline overline line-through blink;"):
PASS e.style.getPropertyValue('-webkit-text-decoration-line') is 'underline overline line-through blink'
PASS computedStyle.getPropertyValue('-webkit-text-decoration-line') is 'underline overline line-through'
PASS computedStyle.getPropertyValue('-webkit-text-decoration') is 'underline overline line-through solid rgb(0, 0, 0)'
PASS checkComputedStyleValue('webkitTextDecoration', '-webkit-text-decoration') is true

CSS3 Shorthand ("-webkit-text-decoration: underline overline line-through blink dashed red;"):
PASS computedStyle.getPropertyValue('-webkit-text-decoration') is 'underline overline line-through dashed rgb(255, 0, 0)'
PASS computedStyle.getPropertyValue('-webkit-text-decoration-line') is 'underline overline line-through'
PASS computedStyle.getPropertyValue('-webkit-text-decoration-style') is 'dashed'
PASS computedStyle.getPropertyValue('-webkit-text-decoration-color') is 'rgb(255, 0, 0)'
PASS checkComputedStyleValue('webkitTextDecoration', '-webkit-text-decoration') is true

Omitting text decoration line resets to its initial value "none" ("-webkit-text-decoration: navy dotted;"):
PASS computedStyle.getPropertyValue('-webkit-text-decoration') is 'none dotted rgb(0, 0, 128)'
PASS computedStyle.getPropertyValue('-webkit-text-decoration-line') is 'none'
PASS computedStyle.getPropertyValue('-webkit-text-decoration-style') is 'dotted'
PASS computedStyle.getPropertyValue('-webkit-text-decoration-color') is 'rgb(0, 0, 128)'
PASS checkComputedStyleValue('webkitTextDecoration', '-webkit-text-decoration') is true

CSS2.1 backwards compatibility of non-prefixed shorthand ("text-decoration: underline overline line-through blink;"):
PASS e.style.getPropertyValue('text-decoration') is 'underline overline line-through blink'
PASS e.style.getPropertyValue('text-decoration-line') is 'underline overline line-through blink'
PASS e.style.getPropertyValue('text-decoration-thickness') is ''
PASS e.style.getPropertyValue('text-decoration-style') is ''
PASS e.style.getPropertyValue('text-decoration-color') is ''
PASS computedStyle.getPropertyValue('text-decoration') is 'underline overline line-through'
PASS computedStyle.getPropertyValue('text-decoration-line') is 'underline overline line-through'
PASS computedStyle.getPropertyValue('text-decoration-thickness') is 'auto'
PASS computedStyle.getPropertyValue('text-decoration-style') is 'solid'
PASS computedStyle.getPropertyValue('text-decoration-color') is 'rgb(0, 0, 0)'
PASS checkComputedStyleValue('textDecoration', 'text-decoration') is true

Setting CSS3 longhands to initial values ("text-decoration-line: none; text-decoration-thickness: auto; text-decoration-style: solid; text-decoration-color: currentcolor;"):
PASS e.style.getPropertyValue('text-decoration') is 'none'
PASS e.style.getPropertyValue('text-decoration-line') is 'none'
PASS e.style.getPropertyValue('text-decoration-thickness') is 'auto'
PASS e.style.getPropertyValue('text-decoration-style') is 'solid'
PASS e.style.getPropertyValue('text-decoration-color') is 'currentcolor'
PASS computedStyle.getPropertyValue('text-decoration') is 'none'
PASS computedStyle.getPropertyValue('text-decoration-line') is 'none'
PASS computedStyle.getPropertyValue('text-decoration-thickness') is 'auto'
PASS computedStyle.getPropertyValue('text-decoration-style') is 'solid'
PASS computedStyle.getPropertyValue('text-decoration-color') is 'rgb(0, 0, 0)'
PASS checkComputedStyleValue('textDecoration', 'text-decoration') is true

Setting CSS3 longhands to values backwards compatibile with CSS2.1 ("text-decoration-line: underline overline line-through blink; text-decoration-thickness: auto; text-decoration-style: solid; text-decoration-color: currentcolor;"):
PASS e.style.getPropertyValue('text-decoration') is 'underline overline line-through blink'
PASS e.style.getPropertyValue('text-decoration-line') is 'underline overline line-through blink'
PASS e.style.getPropertyValue('text-decoration-thickness') is 'auto'
PASS e.style.getPropertyValue('text-decoration-style') is 'solid'
PASS e.style.getPropertyValue('text-decoration-color') is 'currentcolor'
PASS computedStyle.getPropertyValue('text-decoration') is 'underline overline line-through'
PASS computedStyle.getPropertyValue('text-decoration-line') is 'underline overline line-through'
PASS computedStyle.getPropertyValue('text-decoration-thickness') is 'auto'
PASS computedStyle.getPropertyValue('text-decoration-style') is 'solid'
PASS computedStyle.getPropertyValue('text-decoration-color') is 'rgb(0, 0, 0)'
PASS checkComputedStyleValue('textDecoration', 'text-decoration') is true

Setting CSS3 longhands to values not backwards compatibile with CSS2.1 ("text-decoration-line: underline overline line-through blink; text-decoration-thickness: 16px; text-decoration-style: dotted; text-decoration-color: blue;"):
PASS e.style.getPropertyValue('text-decoration') is 'underline overline line-through blink'
PASS e.style.getPropertyValue('text-decoration-line') is 'underline overline line-through blink'
PASS e.style.getPropertyValue('text-decoration-thickness') is '16px'
PASS e.style.getPropertyValue('text-decoration-style') is 'dotted'
PASS e.style.getPropertyValue('text-decoration-color') is 'blue'
PASS computedStyle.getPropertyValue('text-decoration') is 'underline overline line-through'
PASS computedStyle.getPropertyValue('text-decoration-line') is 'underline overline line-through'
PASS computedStyle.getPropertyValue('text-decoration-thickness') is '16px'
PASS computedStyle.getPropertyValue('text-decoration-style') is 'dotted'
PASS computedStyle.getPropertyValue('text-decoration-color') is 'rgb(0, 0, 255)'
PASS checkComputedStyleValue('textDecoration', 'text-decoration') is true

PASS successfullyParsed is true

TEST COMPLETE

