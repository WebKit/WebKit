Test to make sure text-decoration-line is computed properly.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


Initial value:
PASS e.style.textDecorationLine is ""
PASS computedStyle.textDecorationLine is "none"

Initial value (explicit):
PASS e.style.textDecorationLine is "initial"
PASS computedStyle.textDecorationLine is "none"

Value 'none':
PASS e.style.textDecorationLine is "none"
PASS computedStyle.textDecorationLine is "none"

Value 'underline':
PASS e.style.textDecorationLine is "underline"
PASS computedStyle.textDecorationLine is "underline"

Value 'overline':
PASS e.style.textDecorationLine is "overline"
PASS computedStyle.textDecorationLine is "overline"

Value 'line-through':
PASS e.style.textDecorationLine is "line-through"
PASS computedStyle.textDecorationLine is "line-through"

Value 'blink' (valid but ignored):
PASS e.style.textDecorationLine is "blink"
PASS computedStyle.textDecorationLine is "none"

Value 'underline overline line-through blink':
PASS e.style.textDecorationLine is "underline overline line-through blink"
PASS computedStyle.textDecorationLine is "underline overline line-through"

Value '':
PASS e.style.textDecorationLine is ""
PASS computedStyle.textDecorationLine is "none"

Parent gets 'underline' value:
PASS e.style.textDecorationLine is "underline"
PASS computedStyle.textDecorationLine is "underline"

Ancestor should explicitly inherit value from parent when 'inherit' value is used:
PASS e.style.textDecorationLine is "inherit"
PASS computedStyle.textDecorationLine is "underline"

Ancestor should not implicitly inherit value from parent (i.e. when value is void):
PASS e.style.textDecorationLine is ""
PASS computedStyle.textDecorationLine is "none"

PASS successfullyParsed is true

TEST COMPLETE

