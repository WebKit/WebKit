Type=number field should not accept invalid numbers though a user can type such strings

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".



No restriction
enter "512" for noRange
PASS input.value is "512"
enter "+++" for typeMismatch
PASS input.value is ""
enter "" for empty
PASS input.value is ""

min/max/step
enter "-1" for randerUnderflow
PASS input.value is "-1"
enter "0" for minimum
PASS input.value is "0"
enter "25" for inRange
PASS input.value is "25"
enter "50" for inRange
PASS input.value is "50"
enter "10.5" for stepMismatch
PASS input.value is "10.5"
enter "100" for maximum
PASS input.value is "100"
enter "200" for rangeOverflow
PASS input.value is "200"
enter "abc" for typeMismatch
PASS input.value is ""
enter "" for empty
PASS input.value is ""
PASS successfullyParsed is true

TEST COMPLETE

