Test tree ordering algorithm for boundary points.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS internals.treeOrderBoundaryPoints(document, 0, document, 0, 'ComposedTree') is "equivalent"
PASS internals.treeOrderBoundaryPoints(document, 0, document, 1, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(document, 1, document, 0, 'ComposedTree') is "greater"
PASS body.childNodes.length is 4
PASS internals.treeOrderBoundaryPoints(body, 0, body, 0, 'ComposedTree') is "equivalent"
PASS internals.treeOrderBoundaryPoints(document, 0, body, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(body, 0, document, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 0, document, 1, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(document, 1, body, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 4, document, 1, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(document, 1, body, 4, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(a, 0, a, 0, 'ComposedTree') is "equivalent"
PASS internals.treeOrderBoundaryPoints(body, 0, a, 0, 'ComposedTree') is "unordered"
PASS internals.treeOrderBoundaryPoints(a, 0, body, 0, 'ComposedTree') is "unordered"
PASS internals.treeOrderBoundaryPoints(body, 0, a, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(a, 0, body, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(a, 0, a, 0, 'ComposedTree') is "equivalent"
PASS internals.treeOrderBoundaryPoints(a, 0, body, 5, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(body, 5, a, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 0, b, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(b, 0, body, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(a, 0, b, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(b, 0, a, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 5, b, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(b, 0, body, 5, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(b, 0, body, 6, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(body, 6, b, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 0, c, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 0, body, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(a, 0, c, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 0, a, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(b, 0, c, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 0, b, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 4, c, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 0, body, 4, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(c, 0, body, 6, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(body, 6, c, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(a, 1, c, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 0, a, 1, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(c, 0, b, 1, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(b, 1, c, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 0, d, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(d, 0, body, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 0, d, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(d, 0, body, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(a, 0, d, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(d, 0, a, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(d, 0, b, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(b, 0, d, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(d, 0, c, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 0, d, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(a, 0, d, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(d, 0, a, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(d, 0, b, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(b, 0, d, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(d, 0, c, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 0, d, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(d, 0, body, 5, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(body, 5, d, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(d, 0, a, 1, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(a, 1, d, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(d, 0, b, 1, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(b, 1, d, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(d, 0, c, 1, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 1, d, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 0, f, 0, 'ComposedTree') is "unordered"
PASS internals.treeOrderBoundaryPoints(f, 0, body, 0, 'ComposedTree') is "unordered"
PASS internals.treeOrderBoundaryPoints(f, 0, body, 0, 'ComposedTree') is "unordered"
PASS internals.treeOrderBoundaryPoints(body, 0, f, 0, 'ComposedTree') is "unordered"
PASS internals.treeOrderBoundaryPoints(body, 4, f, 0, 'ComposedTree') is "unordered"
PASS internals.treeOrderBoundaryPoints(f, 0, body, 4, 'ComposedTree') is "unordered"
PASS internals.treeOrderBoundaryPoints(body, 0, g, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(g, 0, body, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 4, g, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(g, 0, body, 4, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(c, 0, c, 1, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 1, c, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(c, 1, c, 2, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 2, c, 1, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(c, 0, c, 2, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 2, c, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(c, 0, g, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(g, 0, c, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(g, 0, c, 1, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 1, g, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(g, 0, c, 2, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 2, g, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 0, h, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(h, 0, body, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 4, h, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(h, 0, body, 4, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(c, 0, h, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(h, 0, c, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(h, 0, c, 1, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 1, h, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(h, 0, c, 2, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(c, 2, h, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(body, 0, i, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(i, 0, body, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(i, 0, d, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(d, 0, i, 0, 'ComposedTree') is "greater"
PASS internals.treeOrderBoundaryPoints(i, 0, b, 0, 'ComposedTree') is "less"
PASS internals.treeOrderBoundaryPoints(b, 0, i, 0, 'ComposedTree') is "greater"
PASS successfullyParsed is true

TEST COMPLETE

