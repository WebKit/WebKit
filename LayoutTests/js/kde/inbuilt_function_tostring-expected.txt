KDE JS Test

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS StripSpaces(eval.toString()) is "functioneval(){[nativecode]}"
PASS StripSpaces(parseInt.toString()) is "functionparseInt(){[nativecode]}"
PASS StripSpaces(parseFloat.toString()) is "functionparseFloat(){[nativecode]}"
PASS StripSpaces(isNaN.toString()) is "functionisNaN(){[nativecode]}"
PASS StripSpaces(isFinite.toString()) is "functionisFinite(){[nativecode]}"
PASS StripSpaces(escape.toString()) is "functionescape(){[nativecode]}"
PASS StripSpaces(unescape.toString()) is "functionunescape(){[nativecode]}"
PASS StripSpaces(Object.prototype.toString.toString()) is "functiontoString(){[nativecode]}"
PASS StripSpaces(Object.prototype.toLocaleString.toString()) is "functiontoLocaleString(){[nativecode]}"
PASS StripSpaces(Object.prototype.valueOf.toString()) is "functionvalueOf(){[nativecode]}"
PASS StripSpaces(Object.prototype.hasOwnProperty.toString()) is "functionhasOwnProperty(){[nativecode]}"
PASS StripSpaces(Object.prototype.isPrototypeOf.toString()) is "functionisPrototypeOf(){[nativecode]}"
PASS StripSpaces(Object.prototype.propertyIsEnumerable.toString()) is "functionpropertyIsEnumerable(){[nativecode]}"
PASS StripSpaces(Function.prototype.toString.toString()) is "functiontoString(){[nativecode]}"
PASS StripSpaces(Function.prototype.apply.toString()) is "functionapply(){[nativecode]}"
PASS StripSpaces(Function.prototype.call.toString()) is "functioncall(){[nativecode]}"
PASS StripSpaces(Array.prototype.toString.toString()) is "functiontoString(){[nativecode]}"
PASS StripSpaces(Array.prototype.toLocaleString.toString()) is "functiontoLocaleString(){[nativecode]}"
PASS StripSpaces(Array.prototype.concat.toString()) is "functionconcat(){[nativecode]}"
PASS StripSpaces(Array.prototype.join.toString()) is "functionjoin(){[nativecode]}"
PASS StripSpaces(Array.prototype.pop.toString()) is "functionpop(){[nativecode]}"
PASS StripSpaces(Array.prototype.push.toString()) is "functionpush(){[nativecode]}"
PASS StripSpaces(Array.prototype.reverse.toString()) is "functionreverse(){[nativecode]}"
PASS StripSpaces(Array.prototype.shift.toString()) is "functionshift(){[nativecode]}"
PASS StripSpaces(Array.prototype.slice.toString()) is "functionslice(){[nativecode]}"
PASS StripSpaces(Array.prototype.sort.toString()) is "functionsort(){[nativecode]}"
PASS StripSpaces(Array.prototype.splice.toString()) is "functionsplice(){[nativecode]}"
PASS StripSpaces(Array.prototype.unshift.toString()) is "functionunshift(){[nativecode]}"
PASS StripSpaces(String.prototype.toString.toString()) is "functiontoString(){[nativecode]}"
PASS StripSpaces(String.prototype.valueOf.toString()) is "functionvalueOf(){[nativecode]}"
PASS StripSpaces(String.prototype.charAt.toString()) is "functioncharAt(){[nativecode]}"
PASS StripSpaces(String.prototype.charCodeAt.toString()) is "functioncharCodeAt(){[nativecode]}"
PASS StripSpaces(String.prototype.concat.toString()) is "functionconcat(){[nativecode]}"
PASS StripSpaces(String.prototype.indexOf.toString()) is "functionindexOf(){[nativecode]}"
PASS StripSpaces(String.prototype.lastIndexOf.toString()) is "functionlastIndexOf(){[nativecode]}"
PASS StripSpaces(String.prototype.match.toString()) is "functionmatch(){[nativecode]}"
PASS StripSpaces(String.prototype.replace.toString()) is "functionreplace(){[nativecode]}"
PASS StripSpaces(String.prototype.search.toString()) is "functionsearch(){[nativecode]}"
PASS StripSpaces(String.prototype.slice.toString()) is "functionslice(){[nativecode]}"
PASS StripSpaces(String.prototype.split.toString()) is "functionsplit(){[nativecode]}"
PASS StripSpaces(String.prototype.substr.toString()) is "functionsubstr(){[nativecode]}"
PASS StripSpaces(String.prototype.substring.toString()) is "functionsubstring(){[nativecode]}"
PASS StripSpaces(String.prototype.toLowerCase.toString()) is "functiontoLowerCase(){[nativecode]}"
PASS StripSpaces(String.prototype.toUpperCase.toString()) is "functiontoUpperCase(){[nativecode]}"
PASS StripSpaces(String.prototype.big.toString()) is "functionbig(){[nativecode]}"
PASS StripSpaces(String.prototype.small.toString()) is "functionsmall(){[nativecode]}"
PASS StripSpaces(String.prototype.blink.toString()) is "functionblink(){[nativecode]}"
PASS StripSpaces(String.prototype.bold.toString()) is "functionbold(){[nativecode]}"
PASS StripSpaces(String.prototype.fixed.toString()) is "functionfixed(){[nativecode]}"
PASS StripSpaces(String.prototype.italics.toString()) is "functionitalics(){[nativecode]}"
PASS StripSpaces(String.prototype.strike.toString()) is "functionstrike(){[nativecode]}"
PASS StripSpaces(String.prototype.sub.toString()) is "functionsub(){[nativecode]}"
PASS StripSpaces(String.prototype.sup.toString()) is "functionsup(){[nativecode]}"
PASS StripSpaces(String.prototype.fontcolor.toString()) is "functionfontcolor(){[nativecode]}"
PASS StripSpaces(String.prototype.fontsize.toString()) is "functionfontsize(){[nativecode]}"
PASS StripSpaces(String.prototype.anchor.toString()) is "functionanchor(){[nativecode]}"
PASS StripSpaces(String.prototype.link.toString()) is "functionlink(){[nativecode]}"
PASS StripSpaces(Boolean.prototype.toString.toString()) is "functiontoString(){[nativecode]}"
PASS StripSpaces(Boolean.prototype.valueOf.toString()) is "functionvalueOf(){[nativecode]}"
PASS StripSpaces(Number.prototype.toString.toString()) is "functiontoString(){[nativecode]}"
PASS StripSpaces(Number.prototype.toLocaleString.toString()) is "functiontoLocaleString(){[nativecode]}"
PASS StripSpaces(Number.prototype.valueOf.toString()) is "functionvalueOf(){[nativecode]}"
PASS StripSpaces(Number.prototype.toFixed.toString()) is "functiontoFixed(){[nativecode]}"
PASS StripSpaces(Number.prototype.toExponential.toString()) is "functiontoExponential(){[nativecode]}"
PASS StripSpaces(Number.prototype.toPrecision.toString()) is "functiontoPrecision(){[nativecode]}"
PASS StripSpaces(Math.abs.toString()) is "functionabs(){[nativecode]}"
PASS StripSpaces(Math.acos.toString()) is "functionacos(){[nativecode]}"
PASS StripSpaces(Math.asin.toString()) is "functionasin(){[nativecode]}"
PASS StripSpaces(Math.atan.toString()) is "functionatan(){[nativecode]}"
PASS StripSpaces(Math.atan2.toString()) is "functionatan2(){[nativecode]}"
PASS StripSpaces(Math.ceil.toString()) is "functionceil(){[nativecode]}"
PASS StripSpaces(Math.cos.toString()) is "functioncos(){[nativecode]}"
PASS StripSpaces(Math.exp.toString()) is "functionexp(){[nativecode]}"
PASS StripSpaces(Math.floor.toString()) is "functionfloor(){[nativecode]}"
PASS StripSpaces(Math.log.toString()) is "functionlog(){[nativecode]}"
PASS StripSpaces(Math.max.toString()) is "functionmax(){[nativecode]}"
PASS StripSpaces(Math.min.toString()) is "functionmin(){[nativecode]}"
PASS StripSpaces(Math.pow.toString()) is "functionpow(){[nativecode]}"
PASS StripSpaces(Math.random.toString()) is "functionrandom(){[nativecode]}"
PASS StripSpaces(Math.round.toString()) is "functionround(){[nativecode]}"
PASS StripSpaces(Math.sin.toString()) is "functionsin(){[nativecode]}"
PASS StripSpaces(Math.sqrt.toString()) is "functionsqrt(){[nativecode]}"
PASS StripSpaces(Math.tan.toString()) is "functiontan(){[nativecode]}"
PASS StripSpaces(Date.prototype.toString.toString()) is "functiontoString(){[nativecode]}"
PASS StripSpaces(Date.prototype.toUTCString.toString()) is "functiontoUTCString(){[nativecode]}"
PASS StripSpaces(Date.prototype.toDateString.toString()) is "functiontoDateString(){[nativecode]}"
PASS StripSpaces(Date.prototype.toTimeString.toString()) is "functiontoTimeString(){[nativecode]}"
PASS StripSpaces(Date.prototype.toLocaleString.toString()) is "functiontoLocaleString(){[nativecode]}"
PASS StripSpaces(Date.prototype.toLocaleDateString.toString()) is "functiontoLocaleDateString(){[nativecode]}"
PASS StripSpaces(Date.prototype.toLocaleTimeString.toString()) is "functiontoLocaleTimeString(){[nativecode]}"
PASS StripSpaces(Date.prototype.valueOf.toString()) is "functionvalueOf(){[nativecode]}"
PASS StripSpaces(Date.prototype.getTime.toString()) is "functiongetTime(){[nativecode]}"
PASS StripSpaces(Date.prototype.getFullYear.toString()) is "functiongetFullYear(){[nativecode]}"
PASS StripSpaces(Date.prototype.getUTCFullYear.toString()) is "functiongetUTCFullYear(){[nativecode]}"
PASS StripSpaces(Date.prototype.toGMTString.toString()) is "functiontoUTCString(){[nativecode]}"
PASS StripSpaces(Date.prototype.getMonth.toString()) is "functiongetMonth(){[nativecode]}"
PASS StripSpaces(Date.prototype.getUTCMonth.toString()) is "functiongetUTCMonth(){[nativecode]}"
PASS StripSpaces(Date.prototype.getDate.toString()) is "functiongetDate(){[nativecode]}"
PASS StripSpaces(Date.prototype.getUTCDate.toString()) is "functiongetUTCDate(){[nativecode]}"
PASS StripSpaces(Date.prototype.getDay.toString()) is "functiongetDay(){[nativecode]}"
PASS StripSpaces(Date.prototype.getUTCDay.toString()) is "functiongetUTCDay(){[nativecode]}"
PASS StripSpaces(Date.prototype.getHours.toString()) is "functiongetHours(){[nativecode]}"
PASS StripSpaces(Date.prototype.getUTCHours.toString()) is "functiongetUTCHours(){[nativecode]}"
PASS StripSpaces(Date.prototype.getMinutes.toString()) is "functiongetMinutes(){[nativecode]}"
PASS StripSpaces(Date.prototype.getUTCMinutes.toString()) is "functiongetUTCMinutes(){[nativecode]}"
PASS StripSpaces(Date.prototype.getSeconds.toString()) is "functiongetSeconds(){[nativecode]}"
PASS StripSpaces(Date.prototype.getUTCSeconds.toString()) is "functiongetUTCSeconds(){[nativecode]}"
PASS StripSpaces(Date.prototype.getMilliseconds.toString()) is "functiongetMilliseconds(){[nativecode]}"
PASS StripSpaces(Date.prototype.getUTCMilliseconds.toString()) is "functiongetUTCMilliseconds(){[nativecode]}"
PASS StripSpaces(Date.prototype.getTimezoneOffset.toString()) is "functiongetTimezoneOffset(){[nativecode]}"
PASS StripSpaces(Date.prototype.setTime.toString()) is "functionsetTime(){[nativecode]}"
PASS StripSpaces(Date.prototype.setMilliseconds.toString()) is "functionsetMilliseconds(){[nativecode]}"
PASS StripSpaces(Date.prototype.setUTCMilliseconds.toString()) is "functionsetUTCMilliseconds(){[nativecode]}"
PASS StripSpaces(Date.prototype.setSeconds.toString()) is "functionsetSeconds(){[nativecode]}"
PASS StripSpaces(Date.prototype.setUTCSeconds.toString()) is "functionsetUTCSeconds(){[nativecode]}"
PASS StripSpaces(Date.prototype.setMinutes.toString()) is "functionsetMinutes(){[nativecode]}"
PASS StripSpaces(Date.prototype.setUTCMinutes.toString()) is "functionsetUTCMinutes(){[nativecode]}"
PASS StripSpaces(Date.prototype.setHours.toString()) is "functionsetHours(){[nativecode]}"
PASS StripSpaces(Date.prototype.setUTCHours.toString()) is "functionsetUTCHours(){[nativecode]}"
PASS StripSpaces(Date.prototype.setDate.toString()) is "functionsetDate(){[nativecode]}"
PASS StripSpaces(Date.prototype.setUTCDate.toString()) is "functionsetUTCDate(){[nativecode]}"
PASS StripSpaces(Date.prototype.setMonth.toString()) is "functionsetMonth(){[nativecode]}"
PASS StripSpaces(Date.prototype.setUTCMonth.toString()) is "functionsetUTCMonth(){[nativecode]}"
PASS StripSpaces(Date.prototype.setFullYear.toString()) is "functionsetFullYear(){[nativecode]}"
PASS StripSpaces(Date.prototype.setUTCFullYear.toString()) is "functionsetUTCFullYear(){[nativecode]}"
PASS StripSpaces(Date.prototype.setYear.toString()) is "functionsetYear(){[nativecode]}"
PASS StripSpaces(Date.prototype.getYear.toString()) is "functiongetYear(){[nativecode]}"
PASS StripSpaces(Date.prototype.toGMTString.toString()) is "functiontoUTCString(){[nativecode]}"
PASS StripSpaces(RegExp.prototype.exec.toString()) is "functionexec(){[nativecode]}"
PASS StripSpaces(RegExp.prototype.test.toString()) is "functiontest(){[nativecode]}"
PASS StripSpaces(RegExp.prototype.toString.toString()) is "functiontoString(){[nativecode]}"
PASS StripSpaces(Error.prototype.toString.toString()) is "functiontoString(){[nativecode]}"
PASS successfullyParsed is true

TEST COMPLETE

