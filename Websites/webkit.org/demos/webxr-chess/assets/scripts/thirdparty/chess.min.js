/**
 * Minified by jsDelivr using Terser v5.17.1.
 * Original file: /npm/chess.js@1.0.0-beta.6/dist/esm/chess.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
/**
 * @license
 * Copyright (c) 2023, Jeff Hlywa (jhlywa@gmail.com)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
export const WHITE="w";export const BLACK="b";export const PAWN="p";export const KNIGHT="n";export const BISHOP="b";export const ROOK="r";export const QUEEN="q";export const KING="k";export const DEFAULT_POSITION="rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";const EMPTY=-1,FLAGS={NORMAL:"n",CAPTURE:"c",BIG_PAWN:"b",EP_CAPTURE:"e",PROMOTION:"p",KSIDE_CASTLE:"k",QSIDE_CASTLE:"q"};export const SQUARES=["a8","b8","c8","d8","e8","f8","g8","h8","a7","b7","c7","d7","e7","f7","g7","h7","a6","b6","c6","d6","e6","f6","g6","h6","a5","b5","c5","d5","e5","f5","g5","h5","a4","b4","c4","d4","e4","f4","g4","h4","a3","b3","c3","d3","e3","f3","g3","h3","a2","b2","c2","d2","e2","f2","g2","h2","a1","b1","c1","d1","e1","f1","g1","h1"];const BITS={NORMAL:1,CAPTURE:2,BIG_PAWN:4,EP_CAPTURE:8,PROMOTION:16,KSIDE_CASTLE:32,QSIDE_CASTLE:64},Ox88={a8:0,b8:1,c8:2,d8:3,e8:4,f8:5,g8:6,h8:7,a7:16,b7:17,c7:18,d7:19,e7:20,f7:21,g7:22,h7:23,a6:32,b6:33,c6:34,d6:35,e6:36,f6:37,g6:38,h6:39,a5:48,b5:49,c5:50,d5:51,e5:52,f5:53,g5:54,h5:55,a4:64,b4:65,c4:66,d4:67,e4:68,f4:69,g4:70,h4:71,a3:80,b3:81,c3:82,d3:83,e3:84,f3:85,g3:86,h3:87,a2:96,b2:97,c2:98,d2:99,e2:100,f2:101,g2:102,h2:103,a1:112,b1:113,c1:114,d1:115,e1:116,f1:117,g1:118,h1:119},PAWN_OFFSETS={b:[16,32,17,15],w:[-16,-32,-17,-15]},PIECE_OFFSETS={n:[-18,-33,-31,-14,18,33,31,14],b:[-17,-15,17,15],r:[-16,1,16,-1],q:[-17,-16,-15,1,17,16,15,-1],k:[-17,-16,-15,1,17,16,15,-1]},ATTACKS=[20,0,0,0,0,0,0,24,0,0,0,0,0,0,20,0,0,20,0,0,0,0,0,24,0,0,0,0,0,20,0,0,0,0,20,0,0,0,0,24,0,0,0,0,20,0,0,0,0,0,0,20,0,0,0,24,0,0,0,20,0,0,0,0,0,0,0,0,20,0,0,24,0,0,20,0,0,0,0,0,0,0,0,0,0,20,2,24,2,20,0,0,0,0,0,0,0,0,0,0,0,2,53,56,53,2,0,0,0,0,0,0,24,24,24,24,24,24,56,0,56,24,24,24,24,24,24,0,0,0,0,0,0,2,53,56,53,2,0,0,0,0,0,0,0,0,0,0,0,20,2,24,2,20,0,0,0,0,0,0,0,0,0,0,20,0,0,24,0,0,20,0,0,0,0,0,0,0,0,20,0,0,0,24,0,0,0,20,0,0,0,0,0,0,20,0,0,0,0,24,0,0,0,0,20,0,0,0,0,20,0,0,0,0,0,24,0,0,0,0,0,20,0,0,20,0,0,0,0,0,0,24,0,0,0,0,0,0,20],RAYS=[17,0,0,0,0,0,0,16,0,0,0,0,0,0,15,0,0,17,0,0,0,0,0,16,0,0,0,0,0,15,0,0,0,0,17,0,0,0,0,16,0,0,0,0,15,0,0,0,0,0,0,17,0,0,0,16,0,0,0,15,0,0,0,0,0,0,0,0,17,0,0,16,0,0,15,0,0,0,0,0,0,0,0,0,0,17,0,16,0,15,0,0,0,0,0,0,0,0,0,0,0,0,17,16,15,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,-15,-16,-17,0,0,0,0,0,0,0,0,0,0,0,0,-15,0,-16,0,-17,0,0,0,0,0,0,0,0,0,0,-15,0,0,-16,0,0,-17,0,0,0,0,0,0,0,0,-15,0,0,0,-16,0,0,0,-17,0,0,0,0,0,0,-15,0,0,0,0,-16,0,0,0,0,-17,0,0,0,0,-15,0,0,0,0,0,-16,0,0,0,0,0,-17,0,0,-15,0,0,0,0,0,0,-16,0,0,0,0,0,0,-17],PIECE_MASKS={p:1,n:2,b:4,r:8,q:16,k:32},SYMBOLS="pnbrqkPNBRQK",PROMOTIONS=["n","b","r","q"],RANK_1=7,RANK_2=6,RANK_7=1,RANK_8=0,SIDES={[KING]:BITS.KSIDE_CASTLE,q:BITS.QSIDE_CASTLE},ROOKS={w:[{square:Ox88.a1,flag:BITS.QSIDE_CASTLE},{square:Ox88.h1,flag:BITS.KSIDE_CASTLE}],b:[{square:Ox88.a8,flag:BITS.QSIDE_CASTLE},{square:Ox88.h8,flag:BITS.KSIDE_CASTLE}]},SECOND_RANK={b:1,w:6},TERMINATION_MARKERS=["1-0","0-1","1/2-1/2","*"];function rank(t){return t>>4}function file(t){return 15&t}function isDigit(t){return-1!=="0123456789".indexOf(t)}function algebraic(t){const e=file(t),i=rank(t);return"abcdefgh".substring(e,e+1)+"87654321".substring(i,i+1)}function swapColor(t){return t===WHITE?BLACK:WHITE}export function validateFen(t){const e=t.split(/\s+/);if(6!==e.length)return{ok:!1,error:"Invalid FEN: must contain six space-delimited fields"};const i=parseInt(e[5],10);if(isNaN(i)||i<=0)return{ok:!1,error:"Invalid FEN: move number must be a positive integer"};const s=parseInt(e[4],10);if(isNaN(s)||s<0)return{ok:!1,error:"Invalid FEN: half move counter number must be a non-negative integer"};if(!/^(-|[abcdefgh][36])$/.test(e[3]))return{ok:!1,error:"Invalid FEN: en-passant square is invalid"};if(/[^kKqQ-]/.test(e[2]))return{ok:!1,error:"Invalid FEN: castling availability is invalid"};if(!/^(w|b)$/.test(e[1]))return{ok:!1,error:"Invalid FEN: side-to-move is invalid"};const r=e[0].split("/");if(8!==r.length)return{ok:!1,error:"Invalid FEN: piece data does not contain 8 '/'-delimited rows"};for(let t=0;t<r.length;t++){let e=0,i=!1;for(let s=0;s<r[t].length;s++)if(isDigit(r[t][s])){if(i)return{ok:!1,error:"Invalid FEN: piece data is invalid (consecutive number)"};e+=parseInt(r[t][s],10),i=!0}else{if(!/^[prnbqkPRNBQK]$/.test(r[t][s]))return{ok:!1,error:"Invalid FEN: piece data is invalid (invalid piece)"};e+=1,i=!1}if(8!==e)return{ok:!1,error:"Invalid FEN: piece data is invalid (too many squares in rank)"}}if("3"==e[3][1]&&"w"==e[1]||"6"==e[3][1]&&"b"==e[1])return{ok:!1,error:"Invalid FEN: illegal en-passant square"};const o=[{color:"white",regex:/K/g},{color:"black",regex:/k/g}];for(const{color:t,regex:i}of o){if(!i.test(e[0]))return{ok:!1,error:`Invalid FEN: missing ${t} king`};if((e[0].match(i)||[]).length>1)return{ok:!1,error:`Invalid FEN: too many ${t} kings`}}return{ok:!0}}function getDisambiguator(t,e){const i=t.from,s=t.to,r=t.piece;let o=0,n=0,a=0;for(let t=0,h=e.length;t<h;t++){const h=e[t].from,l=e[t].to;r===e[t].piece&&i!==h&&s===l&&(o++,rank(i)===rank(h)&&n++,file(i)===file(h)&&a++)}return o>0?n>0&&a>0?algebraic(i):a>0?algebraic(i).charAt(1):algebraic(i).charAt(0):""}function addMove(t,e,i,s,r,o=void 0,n=BITS.NORMAL){const a=rank(s);if(r!==PAWN||7!==a&&0!==a)t.push({color:e,from:i,to:s,piece:r,captured:o,flags:n});else for(let a=0;a<PROMOTIONS.length;a++){const h=PROMOTIONS[a];t.push({color:e,from:i,to:s,piece:r,captured:o,promotion:h,flags:n|BITS.PROMOTION})}}function inferPieceType(t){let e=t.charAt(0);if(e>="a"&&e<="h"){if(t.match(/[a-h]\d.*[a-h]\d/))return;return PAWN}return e=e.toLowerCase(),"o"===e?KING:e}function strippedSan(t){return t.replace(/=/,"").replace(/[+#]?[?!]*$/,"")}export class Chess{_board=new Array(128);_turn=WHITE;_header={};_kings={w:-1,b:-1};_epSquare=-1;_halfMoves=0;_moveNumber=0;_history=[];_comments={};_castling={w:0,b:0};constructor(t=DEFAULT_POSITION){this.load(t)}clear(t=!1){this._board=new Array(128),this._kings={w:-1,b:-1},this._turn=WHITE,this._castling={w:0,b:0},this._epSquare=-1,this._halfMoves=0,this._moveNumber=1,this._history=[],this._comments={},this._header=t?this._header:{},this._updateSetup(this.fen())}removeHeader(t){t in this._header&&delete this._header[t]}load(t,e=!1){let i=t.split(/\s+/);if(i.length>=2&&i.length<6){const e=["-","-","0","1"];t=i.concat(e.slice(-(6-i.length))).join(" ")}i=t.split(/\s+/);const{ok:s,error:r}=validateFen(t);if(!s)throw new Error(r);const o=i[0];let n=0;this.clear(e);for(let t=0;t<o.length;t++){const e=o.charAt(t);if("/"===e)n+=8;else if(isDigit(e))n+=parseInt(e,10);else{const t=e<"a"?WHITE:BLACK;this.put({type:e.toLowerCase(),color:t},algebraic(n)),n++}}this._turn=i[1],i[2].indexOf("K")>-1&&(this._castling.w|=BITS.KSIDE_CASTLE),i[2].indexOf("Q")>-1&&(this._castling.w|=BITS.QSIDE_CASTLE),i[2].indexOf("k")>-1&&(this._castling.b|=BITS.KSIDE_CASTLE),i[2].indexOf("q")>-1&&(this._castling.b|=BITS.QSIDE_CASTLE),this._epSquare="-"===i[3]?-1:Ox88[i[3]],this._halfMoves=parseInt(i[4],10),this._moveNumber=parseInt(i[5],10),this._updateSetup(this.fen())}fen(){let t=0,e="";for(let i=Ox88.a8;i<=Ox88.h1;i++){if(this._board[i]){t>0&&(e+=t,t=0);const{color:s,type:r}=this._board[i];e+=s===WHITE?r.toUpperCase():r.toLowerCase()}else t++;i+1&136&&(t>0&&(e+=t),i!==Ox88.h1&&(e+="/"),t=0,i+=8)}let i="";this._castling[WHITE]&BITS.KSIDE_CASTLE&&(i+="K"),this._castling[WHITE]&BITS.QSIDE_CASTLE&&(i+="Q"),this._castling[BLACK]&BITS.KSIDE_CASTLE&&(i+="k"),this._castling[BLACK]&BITS.QSIDE_CASTLE&&(i+="q"),i=i||"-";let s="-";if(-1!==this._epSquare){const t=this._epSquare+(this._turn===WHITE?16:-16),e=[t+1,t-1];for(const t of e){if(136&t)continue;const e=this._turn;if(this._board[t]?.color===e&&this._board[t]?.type===PAWN){this._makeMove({color:e,from:t,to:this._epSquare,piece:PAWN,captured:PAWN,flags:BITS.EP_CAPTURE});const i=!this._isKingAttacked(e);if(this._undoMove(),i){s=algebraic(this._epSquare);break}}}}return[e,this._turn,i,s,this._halfMoves,this._moveNumber].join(" ")}_updateSetup(t){this._history.length>0||(t!==DEFAULT_POSITION?(this._header.SetUp="1",this._header.FEN=t):(delete this._header.SetUp,delete this._header.FEN))}reset(){this.load(DEFAULT_POSITION)}get(t){return this._board[Ox88[t]]||!1}put({type:t,color:e},i){if(-1===SYMBOLS.indexOf(t.toLowerCase()))return!1;if(!(i in Ox88))return!1;const s=Ox88[i];return(t!=KING||-1==this._kings[e]||this._kings[e]==s)&&(this._board[s]={type:t,color:e},t===KING&&(this._kings[e]=s),this._updateCastlingRights(),this._updateEnPassantSquare(),this._updateSetup(this.fen()),!0)}remove(t){const e=this.get(t);return delete this._board[Ox88[t]],e&&e.type===KING&&(this._kings[e.color]=-1),this._updateCastlingRights(),this._updateEnPassantSquare(),this._updateSetup(this.fen()),e}_updateCastlingRights(){const t=this._board[Ox88.e1]?.type===KING&&this._board[Ox88.e1]?.color===WHITE,e=this._board[Ox88.e8]?.type===KING&&this._board[Ox88.e8]?.color===BLACK;t&&"r"===this._board[Ox88.a1]?.type&&this._board[Ox88.a1]?.color===WHITE||(this._castling.w&=~BITS.QSIDE_CASTLE),t&&"r"===this._board[Ox88.h1]?.type&&this._board[Ox88.h1]?.color===WHITE||(this._castling.w&=~BITS.KSIDE_CASTLE),e&&"r"===this._board[Ox88.a8]?.type&&this._board[Ox88.a8]?.color===BLACK||(this._castling.b&=~BITS.QSIDE_CASTLE),e&&"r"===this._board[Ox88.h8]?.type&&this._board[Ox88.h8]?.color===BLACK||(this._castling.b&=~BITS.KSIDE_CASTLE)}_updateEnPassantSquare(){if(-1===this._epSquare)return;const t=this._epSquare+(this._turn===WHITE?-16:16),e=this._epSquare+(this._turn===WHITE?16:-16),i=[e+1,e-1];if(null!==this._board[t]||null!==this._board[this._epSquare]||this._board[e]?.color!==swapColor(this._turn)||this._board[e]?.type!==PAWN)return void(this._epSquare=-1);i.some((t=>!(136&t)&&this._board[t]?.color===this._turn&&this._board[t]?.type===PAWN))||(this._epSquare=-1)}_attacked(t,e){for(let i=Ox88.a8;i<=Ox88.h1;i++){if(136&i){i+=7;continue}if(void 0===this._board[i]||this._board[i].color!==t)continue;const s=this._board[i],r=i-e;if(0===r)continue;const o=r+119;if(ATTACKS[o]&PIECE_MASKS[s.type]){if(s.type===PAWN){if(r>0){if(s.color===WHITE)return!0}else if(s.color===BLACK)return!0;continue}if("n"===s.type||"k"===s.type)return!0;const t=RAYS[o];let n=i+t,a=!1;for(;n!==e;){if(null!=this._board[n]){a=!0;break}n+=t}if(!a)return!0}}return!1}_isKingAttacked(t){const e=this._kings[t];return-1!==e&&this._attacked(swapColor(t),e)}isAttacked(t,e){return this._attacked(e,Ox88[t])}isCheck(){return this._isKingAttacked(this._turn)}inCheck(){return this.isCheck()}isCheckmate(){return this.isCheck()&&0===this._moves().length}isStalemate(){return!this.isCheck()&&0===this._moves().length}isInsufficientMaterial(){const t={b:0,n:0,r:0,q:0,k:0,p:0},e=[];let i=0,s=0;for(let r=Ox88.a8;r<=Ox88.h1;r++){if(s=(s+1)%2,136&r){r+=7;continue}const o=this._board[r];o&&(t[o.type]=o.type in t?t[o.type]+1:1,"b"===o.type&&e.push(s),i++)}if(2===i)return!0;if(3===i&&(1===t.b||1===t.n))return!0;if(i===t.b+2){let t=0;const i=e.length;for(let s=0;s<i;s++)t+=e[s];if(0===t||t===i)return!0}return!1}isThreefoldRepetition(){const t=[],e={};let i=!1;for(;;){const e=this._undoMove();if(!e)break;t.push(e)}for(;;){const s=this.fen().split(" ").slice(0,4).join(" ");e[s]=s in e?e[s]+1:1,e[s]>=3&&(i=!0);const r=t.pop();if(!r)break;this._makeMove(r)}return i}isDraw(){return this._halfMoves>=100||this.isStalemate()||this.isInsufficientMaterial()||this.isThreefoldRepetition()}isGameOver(){return this.isCheckmate()||this.isStalemate()||this.isDraw()}moves({verbose:t=!1,square:e,piece:i}={}){const s=this._moves({square:e,piece:i});return t?s.map((t=>this._makePretty(t))):s.map((t=>this._moveToSan(t,s)))}_moves({legal:t=!0,piece:e,square:i}={}){const s=i?i.toLowerCase():void 0,r=e?.toLowerCase(),o=[],n=this._turn,a=swapColor(n);let h=Ox88.a8,l=Ox88.h1,c=!1;if(s){if(!(s in Ox88))return[];h=l=Ox88[s],c=!0}for(let t=h;t<=l;t++){if(136&t){t+=7;continue}if(!this._board[t]||this._board[t].color===a)continue;const{type:e}=this._board[t];let i;if(e===PAWN){if(r&&r!==e)continue;i=t+PAWN_OFFSETS[n][0],this._board[i]||(addMove(o,n,t,i,PAWN),i=t+PAWN_OFFSETS[n][1],SECOND_RANK[n]!==rank(t)||this._board[i]||addMove(o,n,t,i,PAWN,void 0,BITS.BIG_PAWN));for(let e=2;e<4;e++)i=t+PAWN_OFFSETS[n][e],136&i||(this._board[i]?.color===a?addMove(o,n,t,i,PAWN,this._board[i].type,BITS.CAPTURE):i===this._epSquare&&addMove(o,n,t,i,PAWN,PAWN,BITS.EP_CAPTURE))}else{if(r&&r!==e)continue;for(let s=0,r=PIECE_OFFSETS[e].length;s<r;s++){const r=PIECE_OFFSETS[e][s];for(i=t;i+=r,!(136&i);){if(this._board[i]){if(this._board[i].color===n)break;addMove(o,n,t,i,e,this._board[i].type,BITS.CAPTURE);break}if(addMove(o,n,t,i,e),"n"===e||e===KING)break}}}}if(!(void 0!==r&&r!==KING||c&&l!==this._kings[n])){if(this._castling[n]&BITS.KSIDE_CASTLE){const t=this._kings[n],e=t+2;this._board[t+1]||this._board[e]||this._attacked(a,this._kings[n])||this._attacked(a,t+1)||this._attacked(a,e)||addMove(o,n,this._kings[n],e,KING,void 0,BITS.KSIDE_CASTLE)}if(this._castling[n]&BITS.QSIDE_CASTLE){const t=this._kings[n],e=t-2;this._board[t-1]||this._board[t-2]||this._board[t-3]||this._attacked(a,this._kings[n])||this._attacked(a,t-1)||this._attacked(a,e)||addMove(o,n,this._kings[n],e,KING,void 0,BITS.QSIDE_CASTLE)}}if(!t||-1===this._kings[n])return o;const _=[];for(let t=0,e=o.length;t<e;t++)this._makeMove(o[t]),this._isKingAttacked(n)||_.push(o[t]),this._undoMove();return _}move(t,{strict:e=!1}={}){let i=null;if("string"==typeof t)i=this._moveFromSan(t,e);else if("object"==typeof t){const e=this._moves();for(let s=0,r=e.length;s<r;s++)if(t.from===algebraic(e[s].from)&&t.to===algebraic(e[s].to)&&(!("promotion"in e[s])||t.promotion===e[s].promotion)){i=e[s];break}}if(!i)throw"string"==typeof t?new Error(`Invalid move: ${t}`):new Error(`Invalid move: ${JSON.stringify(t)}`);const s=this._makePretty(i);return this._makeMove(i),s}_push(t){this._history.push({move:t,kings:{b:this._kings.b,w:this._kings.w},turn:this._turn,castling:{b:this._castling.b,w:this._castling.w},epSquare:this._epSquare,halfMoves:this._halfMoves,moveNumber:this._moveNumber})}_makeMove(t){const e=this._turn,i=swapColor(e);if(this._push(t),this._board[t.to]=this._board[t.from],delete this._board[t.from],t.flags&BITS.EP_CAPTURE&&(this._turn===BLACK?delete this._board[t.to-16]:delete this._board[t.to+16]),t.promotion&&(this._board[t.to]={type:t.promotion,color:e}),this._board[t.to].type===KING){if(this._kings[e]=t.to,t.flags&BITS.KSIDE_CASTLE){const e=t.to-1,i=t.to+1;this._board[e]=this._board[i],delete this._board[i]}else if(t.flags&BITS.QSIDE_CASTLE){const e=t.to+1,i=t.to-2;this._board[e]=this._board[i],delete this._board[i]}this._castling[e]=0}if(this._castling[e])for(let i=0,s=ROOKS[e].length;i<s;i++)if(t.from===ROOKS[e][i].square&&this._castling[e]&ROOKS[e][i].flag){this._castling[e]^=ROOKS[e][i].flag;break}if(this._castling[i])for(let e=0,s=ROOKS[i].length;e<s;e++)if(t.to===ROOKS[i][e].square&&this._castling[i]&ROOKS[i][e].flag){this._castling[i]^=ROOKS[i][e].flag;break}t.flags&BITS.BIG_PAWN?this._epSquare=e===BLACK?t.to-16:t.to+16:this._epSquare=-1,t.piece===PAWN||t.flags&(BITS.CAPTURE|BITS.EP_CAPTURE)?this._halfMoves=0:this._halfMoves++,e===BLACK&&this._moveNumber++,this._turn=i}undo(){const t=this._undoMove();return t?this._makePretty(t):null}_undoMove(){const t=this._history.pop();if(void 0===t)return null;const e=t.move;this._kings=t.kings,this._turn=t.turn,this._castling=t.castling,this._epSquare=t.epSquare,this._halfMoves=t.halfMoves,this._moveNumber=t.moveNumber;const i=this._turn,s=swapColor(i);if(this._board[e.from]=this._board[e.to],this._board[e.from].type=e.piece,delete this._board[e.to],e.captured)if(e.flags&BITS.EP_CAPTURE){let t;t=i===BLACK?e.to-16:e.to+16,this._board[t]={type:PAWN,color:s}}else this._board[e.to]={type:e.captured,color:s};if(e.flags&(BITS.KSIDE_CASTLE|BITS.QSIDE_CASTLE)){let t,i;e.flags&BITS.KSIDE_CASTLE?(t=e.to+1,i=e.to-1):(t=e.to-2,i=e.to+1),this._board[t]=this._board[i],delete this._board[i]}return e}pgn({newline:t="\n",maxWidth:e=0}={}){const i=[];let s=!1;for(const e in this._header)i.push("["+e+' "'+this._header[e]+'"]'+t),s=!0;s&&this._history.length&&i.push(t);const r=t=>{const e=this._comments[this.fen()];if(void 0!==e){t=`${t}${t.length>0?" ":""}{${e}}`}return t},o=[];for(;this._history.length>0;)o.push(this._undoMove());const n=[];let a="";for(0===o.length&&n.push(r(""));o.length>0;){a=r(a);const t=o.pop();if(!t)break;if(this._history.length||"b"!==t.color)"w"===t.color&&(a.length&&n.push(a),a=this._moveNumber+".");else{const t=`${this._moveNumber}. ...`;a=a?`${a} ${t}`:t}a=a+" "+this._moveToSan(t,this._moves({legal:!0})),this._makeMove(t)}if(a.length&&n.push(r(a)),void 0!==this._header.Result&&n.push(this._header.Result),0===e)return i.join("")+n.join(" ");const h=function(){return i.length>0&&" "===i[i.length-1]&&(i.pop(),!0)},l=function(s,r){for(const o of r.split(" "))if(o){if(s+o.length>e){for(;h();)s--;i.push(t),s=0}i.push(o),s+=o.length,i.push(" "),s++}return h()&&s--,s};let c=0;for(let s=0;s<n.length;s++)c+n[s].length>e&&n[s].includes("{")?c=l(c,n[s]):(c+n[s].length>e&&0!==s?(" "===i[i.length-1]&&i.pop(),i.push(t),c=0):0!==s&&(i.push(" "),c++),i.push(n[s]),c+=n[s].length);return i.join("")}header(...t){for(let e=0;e<t.length;e+=2)"string"==typeof t[e]&&"string"==typeof t[e+1]&&(this._header[t[e]]=t[e+1]);return this._header}loadPgn(t,{strict:e=!1,newlineChar:i="\r?\n"}={}){function s(t){return t.replace(/\\/g,"\\")}t=t.trim();const r=new RegExp("^(\\[((?:"+s(i)+")|.)*\\])((?:\\s*"+s(i)+"){2}|(?:\\s*"+s(i)+")*$)").exec(t),o=r&&r.length>=2?r[1]:"";this.reset();const n=function(t){const e={},r=t.split(new RegExp(s(i)));let o="",n="";for(let t=0;t<r.length;t++){const i=/^\s*\[\s*([A-Za-z]+)\s*"(.*)"\s*\]\s*$/;o=r[t].replace(i,"$1"),n=r[t].replace(i,"$2"),o.trim().length>0&&(e[o]=n)}return e}(o);let a="";for(const t in n)"fen"===t.toLowerCase()&&(a=n[t]),this.header(t,n[t]);if(e){if("1"===n.SetUp){if(!("FEN"in n))throw new Error("Invalid PGN: FEN tag must be supplied with SetUp tag");this.load(n.FEN,!0)}}else a&&this.load(a,!0);const h=function(t){return`{${function(t){return Array.from(t).map((function(t){return t.charCodeAt(0)<128?t.charCodeAt(0).toString(16):encodeURIComponent(t).replace(/%/g,"").toLowerCase()})).join("")}((t=t.replace(new RegExp(s(i),"g")," ")).slice(1,t.length-1))}}`},l=function(t){if(t.startsWith("{")&&t.endsWith("}"))return function(t){return 0==t.length?"":decodeURIComponent("%"+(t.match(/.{1,2}/g)||[]).join("%"))}(t.slice(1,t.length-1))};let c=t.replace(o,"").replace(new RegExp(`({[^}]*})+?|;([^${s(i)}]*)`,"g"),(function(t,e,i){return void 0!==e?h(e):" "+h(`{${i.slice(1)}}`)})).replace(new RegExp(s(i),"g")," ");const _=/(\([^()]+\))+?/g;for(;_.test(c);)c=c.replace(_,"");c=c.replace(/\d+\.(\.\.)?/g,""),c=c.replace(/\.\.\./g,""),c=c.replace(/\$\d+/g,"");let u=c.trim().split(new RegExp(/\s+/));u=u.filter((t=>""!==t));let f="";for(let t=0;t<u.length;t++){const i=l(u[t]);if(void 0!==i){this._comments[this.fen()]=i;continue}const s=this._moveFromSan(u[t],e);if(null==s){if(!(TERMINATION_MARKERS.indexOf(u[t])>-1))throw new Error(`Invalid move in PGN: ${u[t]}`);f=u[t]}else f="",this._makeMove(s)}f&&Object.keys(this._header).length&&!this._header.Result&&this.header("Result",f)}_moveToSan(t,e){let i="";if(t.flags&BITS.KSIDE_CASTLE)i="O-O";else if(t.flags&BITS.QSIDE_CASTLE)i="O-O-O";else{if(t.piece!==PAWN){const s=getDisambiguator(t,e);i+=t.piece.toUpperCase()+s}t.flags&(BITS.CAPTURE|BITS.EP_CAPTURE)&&(t.piece===PAWN&&(i+=algebraic(t.from)[0]),i+="x"),i+=algebraic(t.to),t.promotion&&(i+="="+t.promotion.toUpperCase())}return this._makeMove(t),this.isCheck()&&(this.isCheckmate()?i+="#":i+="+"),this._undoMove(),i}_moveFromSan(t,e=!1){const i=strippedSan(t);let s,r,o,n,a,h=inferPieceType(i),l=this._moves({legal:!0,piece:h});for(let t=0,e=l.length;t<e;t++)if(i===strippedSan(this._moveToSan(l[t],l)))return l[t];if(e)return null;let c=!1;if(r=i.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/),r?(s=r[1],o=r[2],n=r[3],a=r[4],1==o.length&&(c=!0)):(r=i.match(/([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/),r&&(s=r[1],o=r[2],n=r[3],a=r[4],1==o.length&&(c=!0))),h=inferPieceType(i),l=this._moves({legal:!0,piece:s||h}),!n)return null;for(let t=0,e=l.length;t<e;t++)if(o){if(!(s&&s.toLowerCase()!=l[t].piece||Ox88[o]!=l[t].from||Ox88[n]!=l[t].to||a&&a.toLowerCase()!=l[t].promotion))return l[t];if(c){const e=algebraic(l[t].from);if(!(s&&s.toLowerCase()!=l[t].piece||Ox88[n]!=l[t].to||o!=e[0]&&o!=e[1]||a&&a.toLowerCase()!=l[t].promotion))return l[t]}}else if(i===strippedSan(this._moveToSan(l[t],l)).replace("x",""))return l[t];return null}ascii(){let t="   +------------------------+\n";for(let e=Ox88.a8;e<=Ox88.h1;e++){if(0===file(e)&&(t+=" "+"87654321"[rank(e)]+" |"),this._board[e]){const i=this._board[e].type;t+=" "+(this._board[e].color===WHITE?i.toUpperCase():i.toLowerCase())+" "}else t+=" . ";e+1&136&&(t+="|\n",e+=8)}return t+="   +------------------------+\n",t+="     a  b  c  d  e  f  g  h",t}perft(t){const e=this._moves({legal:!1});let i=0;const s=this._turn;for(let r=0,o=e.length;r<o;r++)this._makeMove(e[r]),this._isKingAttacked(s)||(t-1>0?i+=this.perft(t-1):i++),this._undoMove();return i}_makePretty(t){const{color:e,piece:i,from:s,to:r,flags:o,captured:n,promotion:a}=t;let h="";for(const t in BITS)BITS[t]&o&&(h+=FLAGS[t]);const l=algebraic(s),c=algebraic(r),_={color:e,piece:i,from:l,to:c,san:this._moveToSan(t,this._moves({legal:!0})),flags:h,lan:l+c,before:this.fen(),after:""};return this._makeMove(t),_.after=this.fen(),this._undoMove(),n&&(_.captured=n),a&&(_.promotion=a,_.lan+=a),_}turn(){return this._turn}board(){const t=[];let e=[];for(let i=Ox88.a8;i<=Ox88.h1;i++)null==this._board[i]?e.push(null):e.push({square:algebraic(i),type:this._board[i].type,color:this._board[i].color}),i+1&136&&(t.push(e),e=[],i+=8);return t}squareColor(t){if(t in Ox88){const e=Ox88[t];return(rank(e)+file(e))%2==0?"light":"dark"}return null}history({verbose:t=!1}={}){const e=[],i=[];for(;this._history.length>0;)e.push(this._undoMove());for(;;){const s=e.pop();if(!s)break;t?i.push(this._makePretty(s)):i.push(this._moveToSan(s,this._moves())),this._makeMove(s)}return i}_pruneComments(){const t=[],e={},i=t=>{t in this._comments&&(e[t]=this._comments[t])};for(;this._history.length>0;)t.push(this._undoMove());for(i(this.fen());;){const e=t.pop();if(!e)break;this._makeMove(e),i(this.fen())}this._comments=e}getComment(){return this._comments[this.fen()]}setComment(t){this._comments[this.fen()]=t.replace("{","[").replace("}","]")}deleteComment(){const t=this._comments[this.fen()];return delete this._comments[this.fen()],t}getComments(){return this._pruneComments(),Object.keys(this._comments).map((t=>({fen:t,comment:this._comments[t]})))}deleteComments(){return this._pruneComments(),Object.keys(this._comments).map((t=>{const e=this._comments[t];return delete this._comments[t],{fen:t,comment:e}}))}setCastlingRights(t,e){for(const i of[KING,"q"])void 0!==e[i]&&(e[i]?this._castling[t]|=SIDES[i]:this._castling[t]&=~SIDES[i]);this._updateCastlingRights();const i=this.getCastlingRights(t);return!(void 0!==e[KING]&&e[KING]!==i[KING]||void 0!==e.q&&e.q!==i.q)}getCastlingRights(t){return{[KING]:0!=(this._castling[t]&SIDES[KING]),q:0!=(this._castling[t]&SIDES.q)}}moveNumber(){return this._moveNumber}}
//# sourceMappingURL=/sm/26dc9077206a0ac7df534fe119d04a6f60cda9b81bde92105aada37f10922ca5.map